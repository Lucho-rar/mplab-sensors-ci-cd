

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 22 10:29:39 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     9                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    20                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    22                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	text51,local,class=CODE,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text58,local,class=CODE,merge=1,delta=2
    87                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text62,local,class=CODE,merge=1,delta=2
    91                           	psect	text63,local,class=CODE,merge=1,delta=2
    92                           	psect	text64,local,class=CODE,merge=1,delta=2
    93                           	psect	text65,local,class=CODE,merge=1,delta=2
    94                           	psect	text66,local,class=CODE,merge=1,delta=2
    95                           	psect	text67,local,class=CODE,merge=1,delta=2
    96                           	psect	text68,local,class=CODE,merge=1,delta=2
    97                           	psect	text69,local,class=CODE,merge=1,delta=2
    98                           	psect	text70,local,class=CODE,merge=1,delta=2
    99                           	psect	text71,local,class=CODE,merge=1,delta=2
   100                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text74,local,class=CODE,merge=1,delta=2
   103                           	psect	text75,local,class=CODE,merge=1,delta=2
   104                           	psect	text76,local,class=CODE,merge=1,delta=2
   105                           	psect	text77,local,class=CODE,merge=1,delta=2
   106                           	psect	text78,local,class=CODE,merge=1,delta=2
   107                           	psect	text79,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text80,local,class=CODE,merge=1,delta=2
   109                           	psect	text81,local,class=CODE,merge=1,delta=2
   110                           	psect	text82,local,class=CODE,merge=1,delta=2
   111                           	psect	text83,local,class=CODE,merge=1,delta=2
   112                           	psect	text84,local,class=CODE,merge=1,delta=2
   113                           	psect	text85,local,class=CODE,merge=1,delta=2
   114                           	psect	text86,local,class=CODE,merge=1,delta=2
   115                           	psect	text87,local,class=CODE,merge=1,delta=2
   116                           	psect	text88,local,class=CODE,merge=1,delta=2
   117                           	psect	text89,local,class=CODE,merge=1,delta=2
   118                           	psect	text90,local,class=CODE,merge=1,delta=2
   119                           	psect	text91,local,class=CODE,merge=1,delta=2
   120                           	psect	text92,local,class=CODE,merge=1,delta=2
   121                           	psect	text93,local,class=CODE,merge=1,delta=2
   122                           	psect	text94,local,class=CODE,merge=1,delta=2
   123                           	psect	text95,local,class=CODE,merge=1,delta=2
   124                           	psect	text96,local,class=CODE,merge=1,delta=2
   125                           	psect	text97,local,class=CODE,merge=1,delta=2
   126                           	psect	text98,local,class=CODE,merge=1,delta=2
   127                           	psect	text99,local,class=CODE,merge=1,delta=2
   128                           	psect	text100,local,class=CODE,merge=1,delta=2
   129                           	psect	text101,local,class=CODE,merge=1,delta=2
   130                           	psect	text102,local,class=CODE,merge=1,delta=2
   131                           	psect	intentry,global,class=CODE,delta=2
   132                           	psect	text104,local,class=CODE,merge=1,delta=2
   133                           	psect	text105,local,class=CODE,merge=1,delta=2
   134                           	psect	text106,local,class=CODE,merge=1,delta=2
   135                           	psect	text107,local,class=CODE,merge=1,delta=2
   136                           	psect	text108,local,class=CODE,merge=1,delta=2
   137                           	psect	text109,local,class=CODE,merge=1,delta=2
   138                           	psect	text110,local,class=CODE,merge=1,delta=2
   139                           	psect	text111,local,class=CODE,merge=1,delta=2
   140                           	psect	text112,local,class=CODE,merge=1,delta=2
   141                           	psect	text113,local,class=CODE,merge=1,delta=2
   142                           	psect	text114,local,class=CODE,merge=1,delta=2
   143                           	psect	text115,local,class=CODE,merge=1,delta=2
   144                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   145                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   146                           	dabs	1,0x7E,2
   147     0000                     
   148                           ; Generated 19/07/2022 GMT
   149                           ; 
   150                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   151                           ; All rights reserved.
   152                           ; 
   153                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   154                           ; 
   155                           ; Redistribution and use in source and binary forms, with or without modification, are
   156                           ; permitted provided that the following conditions are met:
   157                           ; 
   158                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   159                           ;        conditions and the following disclaimer.
   160                           ; 
   161                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   162                           ;        of conditions and the following disclaimer in the documentation and/or other
   163                           ;        materials provided with the distribution. Publication is not required when
   164                           ;        this file is used in an embedded application.
   165                           ; 
   166                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   167                           ;        software without specific prior written permission.
   168                           ; 
   169                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   170                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   171                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   172                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   173                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   174                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   175                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   176                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   177                           ; 
   178                           ; 
   179                           ; Code-generator required, PIC16F18425 Definitions
   180                           ; 
   181                           ; SFR Addresses
   182     0000                     	;# 
   183     0001                     	;# 
   184     0002                     	;# 
   185     0003                     	;# 
   186     0004                     	;# 
   187     0005                     	;# 
   188     0006                     	;# 
   189     0007                     	;# 
   190     0008                     	;# 
   191     0009                     	;# 
   192     000A                     	;# 
   193     000B                     	;# 
   194     000C                     	;# 
   195     000E                     	;# 
   196     0012                     	;# 
   197     0014                     	;# 
   198     0018                     	;# 
   199     001A                     	;# 
   200     008C                     	;# 
   201     008C                     	;# 
   202     008D                     	;# 
   203     008E                     	;# 
   204     008E                     	;# 
   205     008F                     	;# 
   206     0090                     	;# 
   207     0090                     	;# 
   208     0091                     	;# 
   209     0092                     	;# 
   210     0092                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0094                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0096                     	;# 
   217     0097                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009A                     	;# 
   221     009B                     	;# 
   222     009B                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010C                     	;# 
   230     010D                     	;# 
   231     010E                     	;# 
   232     010F                     	;# 
   233     010F                     	;# 
   234     0110                     	;# 
   235     0111                     	;# 
   236     0112                     	;# 
   237     0113                     	;# 
   238     0114                     	;# 
   239     0115                     	;# 
   240     0116                     	;# 
   241     0117                     	;# 
   242     0118                     	;# 
   243     0119                     	;# 
   244     0119                     	;# 
   245     0119                     	;# 
   246     011A                     	;# 
   247     011A                     	;# 
   248     011A                     	;# 
   249     011B                     	;# 
   250     011B                     	;# 
   251     011B                     	;# 
   252     011B                     	;# 
   253     011B                     	;# 
   254     011C                     	;# 
   255     011C                     	;# 
   256     011C                     	;# 
   257     011D                     	;# 
   258     011D                     	;# 
   259     011D                     	;# 
   260     011E                     	;# 
   261     011E                     	;# 
   262     011E                     	;# 
   263     011F                     	;# 
   264     011F                     	;# 
   265     011F                     	;# 
   266     011F                     	;# 
   267     011F                     	;# 
   268     018C                     	;# 
   269     018D                     	;# 
   270     018E                     	;# 
   271     018F                     	;# 
   272     0190                     	;# 
   273     0191                     	;# 
   274     0192                     	;# 
   275     0196                     	;# 
   276     0197                     	;# 
   277     0198                     	;# 
   278     0199                     	;# 
   279     019A                     	;# 
   280     019B                     	;# 
   281     019C                     	;# 
   282     020C                     	;# 
   283     020D                     	;# 
   284     020E                     	;# 
   285     020E                     	;# 
   286     020F                     	;# 
   287     020F                     	;# 
   288     0210                     	;# 
   289     0210                     	;# 
   290     0211                     	;# 
   291     0211                     	;# 
   292     0212                     	;# 
   293     0213                     	;# 
   294     0214                     	;# 
   295     0214                     	;# 
   296     0215                     	;# 
   297     0215                     	;# 
   298     0216                     	;# 
   299     0216                     	;# 
   300     0217                     	;# 
   301     0217                     	;# 
   302     0218                     	;# 
   303     0219                     	;# 
   304     021A                     	;# 
   305     021A                     	;# 
   306     021B                     	;# 
   307     021B                     	;# 
   308     021C                     	;# 
   309     021C                     	;# 
   310     021D                     	;# 
   311     021D                     	;# 
   312     021E                     	;# 
   313     021F                     	;# 
   314     028C                     	;# 
   315     028C                     	;# 
   316     028D                     	;# 
   317     028D                     	;# 
   318     028E                     	;# 
   319     028F                     	;# 
   320     0290                     	;# 
   321     0291                     	;# 
   322     0292                     	;# 
   323     0292                     	;# 
   324     0293                     	;# 
   325     0293                     	;# 
   326     0294                     	;# 
   327     0295                     	;# 
   328     0296                     	;# 
   329     0297                     	;# 
   330     0298                     	;# 
   331     0298                     	;# 
   332     0299                     	;# 
   333     0299                     	;# 
   334     029A                     	;# 
   335     029B                     	;# 
   336     029C                     	;# 
   337     029D                     	;# 
   338     029F                     	;# 
   339     030C                     	;# 
   340     030C                     	;# 
   341     030D                     	;# 
   342     030E                     	;# 
   343     030F                     	;# 
   344     0310                     	;# 
   345     0310                     	;# 
   346     0311                     	;# 
   347     0312                     	;# 
   348     0313                     	;# 
   349     0314                     	;# 
   350     0314                     	;# 
   351     0315                     	;# 
   352     0316                     	;# 
   353     0317                     	;# 
   354     0318                     	;# 
   355     0318                     	;# 
   356     0319                     	;# 
   357     031A                     	;# 
   358     031B                     	;# 
   359     038C                     	;# 
   360     038C                     	;# 
   361     038D                     	;# 
   362     038E                     	;# 
   363     0390                     	;# 
   364     0390                     	;# 
   365     0391                     	;# 
   366     0392                     	;# 
   367     048C                     	;# 
   368     048C                     	;# 
   369     048D                     	;# 
   370     048E                     	;# 
   371     048F                     	;# 
   372     048F                     	;# 
   373     0490                     	;# 
   374     0491                     	;# 
   375     0492                     	;# 
   376     0492                     	;# 
   377     0493                     	;# 
   378     0494                     	;# 
   379     0495                     	;# 
   380     0495                     	;# 
   381     0496                     	;# 
   382     0497                     	;# 
   383     0498                     	;# 
   384     0499                     	;# 
   385     049A                     	;# 
   386     049B                     	;# 
   387     049C                     	;# 
   388     049D                     	;# 
   389     058C                     	;# 
   390     058C                     	;# 
   391     058D                     	;# 
   392     058E                     	;# 
   393     058F                     	;# 
   394     058F                     	;# 
   395     0590                     	;# 
   396     0591                     	;# 
   397     0592                     	;# 
   398     0593                     	;# 
   399     059C                     	;# 
   400     059C                     	;# 
   401     059D                     	;# 
   402     059D                     	;# 
   403     059E                     	;# 
   404     059F                     	;# 
   405     060C                     	;# 
   406     060C                     	;# 
   407     060D                     	;# 
   408     060D                     	;# 
   409     060E                     	;# 
   410     060F                     	;# 
   411     0610                     	;# 
   412     0611                     	;# 
   413     0612                     	;# 
   414     0613                     	;# 
   415     0614                     	;# 
   416     0616                     	;# 
   417     0616                     	;# 
   418     0617                     	;# 
   419     0617                     	;# 
   420     0618                     	;# 
   421     0619                     	;# 
   422     061A                     	;# 
   423     061B                     	;# 
   424     061C                     	;# 
   425     061D                     	;# 
   426     061E                     	;# 
   427     070C                     	;# 
   428     070D                     	;# 
   429     070E                     	;# 
   430     070F                     	;# 
   431     0710                     	;# 
   432     0711                     	;# 
   433     0712                     	;# 
   434     0713                     	;# 
   435     0714                     	;# 
   436     0716                     	;# 
   437     0717                     	;# 
   438     0718                     	;# 
   439     0719                     	;# 
   440     071A                     	;# 
   441     071B                     	;# 
   442     071C                     	;# 
   443     071D                     	;# 
   444     071E                     	;# 
   445     0796                     	;# 
   446     0797                     	;# 
   447     0798                     	;# 
   448     0799                     	;# 
   449     079A                     	;# 
   450     079B                     	;# 
   451     079C                     	;# 
   452     079D                     	;# 
   453     080C                     	;# 
   454     080D                     	;# 
   455     080E                     	;# 
   456     080F                     	;# 
   457     0810                     	;# 
   458     0811                     	;# 
   459     0812                     	;# 
   460     0813                     	;# 
   461     0814                     	;# 
   462     081A                     	;# 
   463     081A                     	;# 
   464     081B                     	;# 
   465     081C                     	;# 
   466     081C                     	;# 
   467     081D                     	;# 
   468     081E                     	;# 
   469     081F                     	;# 
   470     088C                     	;# 
   471     088D                     	;# 
   472     088E                     	;# 
   473     088F                     	;# 
   474     0890                     	;# 
   475     0891                     	;# 
   476     0892                     	;# 
   477     0893                     	;# 
   478     0895                     	;# 
   479     0896                     	;# 
   480     0897                     	;# 
   481     0898                     	;# 
   482     0899                     	;# 
   483     089A                     	;# 
   484     089B                     	;# 
   485     090C                     	;# 
   486     090E                     	;# 
   487     090F                     	;# 
   488     091F                     	;# 
   489     098F                     	;# 
   490     098F                     	;# 
   491     0990                     	;# 
   492     0991                     	;# 
   493     0992                     	;# 
   494     0993                     	;# 
   495     0994                     	;# 
   496     0995                     	;# 
   497     0996                     	;# 
   498     0997                     	;# 
   499     1E0F                     	;# 
   500     1E10                     	;# 
   501     1E11                     	;# 
   502     1E12                     	;# 
   503     1E13                     	;# 
   504     1E14                     	;# 
   505     1E15                     	;# 
   506     1E16                     	;# 
   507     1E17                     	;# 
   508     1E18                     	;# 
   509     1E19                     	;# 
   510     1E1A                     	;# 
   511     1E1B                     	;# 
   512     1E1C                     	;# 
   513     1E1D                     	;# 
   514     1E1E                     	;# 
   515     1E1F                     	;# 
   516     1E20                     	;# 
   517     1E21                     	;# 
   518     1E22                     	;# 
   519     1E23                     	;# 
   520     1E24                     	;# 
   521     1E25                     	;# 
   522     1E26                     	;# 
   523     1E27                     	;# 
   524     1E28                     	;# 
   525     1E29                     	;# 
   526     1E2A                     	;# 
   527     1E2B                     	;# 
   528     1E2C                     	;# 
   529     1E2D                     	;# 
   530     1E2E                     	;# 
   531     1E2F                     	;# 
   532     1E30                     	;# 
   533     1E31                     	;# 
   534     1E32                     	;# 
   535     1E33                     	;# 
   536     1E34                     	;# 
   537     1E35                     	;# 
   538     1E36                     	;# 
   539     1E37                     	;# 
   540     1E8F                     	;# 
   541     1E90                     	;# 
   542     1E91                     	;# 
   543     1E92                     	;# 
   544     1E93                     	;# 
   545     1E94                     	;# 
   546     1E95                     	;# 
   547     1E96                     	;# 
   548     1E97                     	;# 
   549     1E9C                     	;# 
   550     1E9D                     	;# 
   551     1E9E                     	;# 
   552     1EA1                     	;# 
   553     1EA2                     	;# 
   554     1EA3                     	;# 
   555     1EA4                     	;# 
   556     1EA9                     	;# 
   557     1EAA                     	;# 
   558     1EB1                     	;# 
   559     1EB2                     	;# 
   560     1EB8                     	;# 
   561     1EB9                     	;# 
   562     1EBA                     	;# 
   563     1EBB                     	;# 
   564     1EBC                     	;# 
   565     1EBD                     	;# 
   566     1EBE                     	;# 
   567     1EC3                     	;# 
   568     1EC5                     	;# 
   569     1EC6                     	;# 
   570     1EC7                     	;# 
   571     1EC8                     	;# 
   572     1EC9                     	;# 
   573     1ECA                     	;# 
   574     1ECB                     	;# 
   575     1ECC                     	;# 
   576     1F10                     	;# 
   577     1F11                     	;# 
   578     1F12                     	;# 
   579     1F14                     	;# 
   580     1F15                     	;# 
   581     1F20                     	;# 
   582     1F21                     	;# 
   583     1F22                     	;# 
   584     1F23                     	;# 
   585     1F24                     	;# 
   586     1F25                     	;# 
   587     1F38                     	;# 
   588     1F39                     	;# 
   589     1F3A                     	;# 
   590     1F3B                     	;# 
   591     1F3C                     	;# 
   592     1F3D                     	;# 
   593     1F3E                     	;# 
   594     1F3F                     	;# 
   595     1F4E                     	;# 
   596     1F4F                     	;# 
   597     1F50                     	;# 
   598     1F51                     	;# 
   599     1F52                     	;# 
   600     1F53                     	;# 
   601     1F54                     	;# 
   602     1F55                     	;# 
   603     1FE4                     	;# 
   604     1FE5                     	;# 
   605     1FE6                     	;# 
   606     1FE7                     	;# 
   607     1FE8                     	;# 
   608     1FE8                     	;# 
   609     1FE9                     	;# 
   610     1FEA                     	;# 
   611     1FEB                     	;# 
   612     1FED                     	;# 
   613     1FEE                     	;# 
   614     1FEF                     	;# 
   615     0000                     	;# 
   616     0001                     	;# 
   617     0002                     	;# 
   618     0003                     	;# 
   619     0004                     	;# 
   620     0005                     	;# 
   621     0006                     	;# 
   622     0007                     	;# 
   623     0008                     	;# 
   624     0009                     	;# 
   625     000A                     	;# 
   626     000B                     	;# 
   627     000C                     	;# 
   628     000E                     	;# 
   629     0012                     	;# 
   630     0014                     	;# 
   631     0018                     	;# 
   632     001A                     	;# 
   633     008C                     	;# 
   634     008C                     	;# 
   635     008D                     	;# 
   636     008E                     	;# 
   637     008E                     	;# 
   638     008F                     	;# 
   639     0090                     	;# 
   640     0090                     	;# 
   641     0091                     	;# 
   642     0092                     	;# 
   643     0092                     	;# 
   644     0093                     	;# 
   645     0094                     	;# 
   646     0094                     	;# 
   647     0095                     	;# 
   648     0096                     	;# 
   649     0096                     	;# 
   650     0097                     	;# 
   651     0098                     	;# 
   652     0099                     	;# 
   653     009A                     	;# 
   654     009B                     	;# 
   655     009B                     	;# 
   656     009C                     	;# 
   657     009D                     	;# 
   658     009D                     	;# 
   659     009E                     	;# 
   660     009F                     	;# 
   661     010C                     	;# 
   662     010C                     	;# 
   663     010D                     	;# 
   664     010E                     	;# 
   665     010F                     	;# 
   666     010F                     	;# 
   667     0110                     	;# 
   668     0111                     	;# 
   669     0112                     	;# 
   670     0113                     	;# 
   671     0114                     	;# 
   672     0115                     	;# 
   673     0116                     	;# 
   674     0117                     	;# 
   675     0118                     	;# 
   676     0119                     	;# 
   677     0119                     	;# 
   678     0119                     	;# 
   679     011A                     	;# 
   680     011A                     	;# 
   681     011A                     	;# 
   682     011B                     	;# 
   683     011B                     	;# 
   684     011B                     	;# 
   685     011B                     	;# 
   686     011B                     	;# 
   687     011C                     	;# 
   688     011C                     	;# 
   689     011C                     	;# 
   690     011D                     	;# 
   691     011D                     	;# 
   692     011D                     	;# 
   693     011E                     	;# 
   694     011E                     	;# 
   695     011E                     	;# 
   696     011F                     	;# 
   697     011F                     	;# 
   698     011F                     	;# 
   699     011F                     	;# 
   700     011F                     	;# 
   701     018C                     	;# 
   702     018D                     	;# 
   703     018E                     	;# 
   704     018F                     	;# 
   705     0190                     	;# 
   706     0191                     	;# 
   707     0192                     	;# 
   708     0196                     	;# 
   709     0197                     	;# 
   710     0198                     	;# 
   711     0199                     	;# 
   712     019A                     	;# 
   713     019B                     	;# 
   714     019C                     	;# 
   715     020C                     	;# 
   716     020D                     	;# 
   717     020E                     	;# 
   718     020E                     	;# 
   719     020F                     	;# 
   720     020F                     	;# 
   721     0210                     	;# 
   722     0210                     	;# 
   723     0211                     	;# 
   724     0211                     	;# 
   725     0212                     	;# 
   726     0213                     	;# 
   727     0214                     	;# 
   728     0214                     	;# 
   729     0215                     	;# 
   730     0215                     	;# 
   731     0216                     	;# 
   732     0216                     	;# 
   733     0217                     	;# 
   734     0217                     	;# 
   735     0218                     	;# 
   736     0219                     	;# 
   737     021A                     	;# 
   738     021A                     	;# 
   739     021B                     	;# 
   740     021B                     	;# 
   741     021C                     	;# 
   742     021C                     	;# 
   743     021D                     	;# 
   744     021D                     	;# 
   745     021E                     	;# 
   746     021F                     	;# 
   747     028C                     	;# 
   748     028C                     	;# 
   749     028D                     	;# 
   750     028D                     	;# 
   751     028E                     	;# 
   752     028F                     	;# 
   753     0290                     	;# 
   754     0291                     	;# 
   755     0292                     	;# 
   756     0292                     	;# 
   757     0293                     	;# 
   758     0293                     	;# 
   759     0294                     	;# 
   760     0295                     	;# 
   761     0296                     	;# 
   762     0297                     	;# 
   763     0298                     	;# 
   764     0298                     	;# 
   765     0299                     	;# 
   766     0299                     	;# 
   767     029A                     	;# 
   768     029B                     	;# 
   769     029C                     	;# 
   770     029D                     	;# 
   771     029F                     	;# 
   772     030C                     	;# 
   773     030C                     	;# 
   774     030D                     	;# 
   775     030E                     	;# 
   776     030F                     	;# 
   777     0310                     	;# 
   778     0310                     	;# 
   779     0311                     	;# 
   780     0312                     	;# 
   781     0313                     	;# 
   782     0314                     	;# 
   783     0314                     	;# 
   784     0315                     	;# 
   785     0316                     	;# 
   786     0317                     	;# 
   787     0318                     	;# 
   788     0318                     	;# 
   789     0319                     	;# 
   790     031A                     	;# 
   791     031B                     	;# 
   792     038C                     	;# 
   793     038C                     	;# 
   794     038D                     	;# 
   795     038E                     	;# 
   796     0390                     	;# 
   797     0390                     	;# 
   798     0391                     	;# 
   799     0392                     	;# 
   800     048C                     	;# 
   801     048C                     	;# 
   802     048D                     	;# 
   803     048E                     	;# 
   804     048F                     	;# 
   805     048F                     	;# 
   806     0490                     	;# 
   807     0491                     	;# 
   808     0492                     	;# 
   809     0492                     	;# 
   810     0493                     	;# 
   811     0494                     	;# 
   812     0495                     	;# 
   813     0495                     	;# 
   814     0496                     	;# 
   815     0497                     	;# 
   816     0498                     	;# 
   817     0499                     	;# 
   818     049A                     	;# 
   819     049B                     	;# 
   820     049C                     	;# 
   821     049D                     	;# 
   822     058C                     	;# 
   823     058C                     	;# 
   824     058D                     	;# 
   825     058E                     	;# 
   826     058F                     	;# 
   827     058F                     	;# 
   828     0590                     	;# 
   829     0591                     	;# 
   830     0592                     	;# 
   831     0593                     	;# 
   832     059C                     	;# 
   833     059C                     	;# 
   834     059D                     	;# 
   835     059D                     	;# 
   836     059E                     	;# 
   837     059F                     	;# 
   838     060C                     	;# 
   839     060C                     	;# 
   840     060D                     	;# 
   841     060D                     	;# 
   842     060E                     	;# 
   843     060F                     	;# 
   844     0610                     	;# 
   845     0611                     	;# 
   846     0612                     	;# 
   847     0613                     	;# 
   848     0614                     	;# 
   849     0616                     	;# 
   850     0616                     	;# 
   851     0617                     	;# 
   852     0617                     	;# 
   853     0618                     	;# 
   854     0619                     	;# 
   855     061A                     	;# 
   856     061B                     	;# 
   857     061C                     	;# 
   858     061D                     	;# 
   859     061E                     	;# 
   860     070C                     	;# 
   861     070D                     	;# 
   862     070E                     	;# 
   863     070F                     	;# 
   864     0710                     	;# 
   865     0711                     	;# 
   866     0712                     	;# 
   867     0713                     	;# 
   868     0714                     	;# 
   869     0716                     	;# 
   870     0717                     	;# 
   871     0718                     	;# 
   872     0719                     	;# 
   873     071A                     	;# 
   874     071B                     	;# 
   875     071C                     	;# 
   876     071D                     	;# 
   877     071E                     	;# 
   878     0796                     	;# 
   879     0797                     	;# 
   880     0798                     	;# 
   881     0799                     	;# 
   882     079A                     	;# 
   883     079B                     	;# 
   884     079C                     	;# 
   885     079D                     	;# 
   886     080C                     	;# 
   887     080D                     	;# 
   888     080E                     	;# 
   889     080F                     	;# 
   890     0810                     	;# 
   891     0811                     	;# 
   892     0812                     	;# 
   893     0813                     	;# 
   894     0814                     	;# 
   895     081A                     	;# 
   896     081A                     	;# 
   897     081B                     	;# 
   898     081C                     	;# 
   899     081C                     	;# 
   900     081D                     	;# 
   901     081E                     	;# 
   902     081F                     	;# 
   903     088C                     	;# 
   904     088D                     	;# 
   905     088E                     	;# 
   906     088F                     	;# 
   907     0890                     	;# 
   908     0891                     	;# 
   909     0892                     	;# 
   910     0893                     	;# 
   911     0895                     	;# 
   912     0896                     	;# 
   913     0897                     	;# 
   914     0898                     	;# 
   915     0899                     	;# 
   916     089A                     	;# 
   917     089B                     	;# 
   918     090C                     	;# 
   919     090E                     	;# 
   920     090F                     	;# 
   921     091F                     	;# 
   922     098F                     	;# 
   923     098F                     	;# 
   924     0990                     	;# 
   925     0991                     	;# 
   926     0992                     	;# 
   927     0993                     	;# 
   928     0994                     	;# 
   929     0995                     	;# 
   930     0996                     	;# 
   931     0997                     	;# 
   932     1E0F                     	;# 
   933     1E10                     	;# 
   934     1E11                     	;# 
   935     1E12                     	;# 
   936     1E13                     	;# 
   937     1E14                     	;# 
   938     1E15                     	;# 
   939     1E16                     	;# 
   940     1E17                     	;# 
   941     1E18                     	;# 
   942     1E19                     	;# 
   943     1E1A                     	;# 
   944     1E1B                     	;# 
   945     1E1C                     	;# 
   946     1E1D                     	;# 
   947     1E1E                     	;# 
   948     1E1F                     	;# 
   949     1E20                     	;# 
   950     1E21                     	;# 
   951     1E22                     	;# 
   952     1E23                     	;# 
   953     1E24                     	;# 
   954     1E25                     	;# 
   955     1E26                     	;# 
   956     1E27                     	;# 
   957     1E28                     	;# 
   958     1E29                     	;# 
   959     1E2A                     	;# 
   960     1E2B                     	;# 
   961     1E2C                     	;# 
   962     1E2D                     	;# 
   963     1E2E                     	;# 
   964     1E2F                     	;# 
   965     1E30                     	;# 
   966     1E31                     	;# 
   967     1E32                     	;# 
   968     1E33                     	;# 
   969     1E34                     	;# 
   970     1E35                     	;# 
   971     1E36                     	;# 
   972     1E37                     	;# 
   973     1E8F                     	;# 
   974     1E90                     	;# 
   975     1E91                     	;# 
   976     1E92                     	;# 
   977     1E93                     	;# 
   978     1E94                     	;# 
   979     1E95                     	;# 
   980     1E96                     	;# 
   981     1E97                     	;# 
   982     1E9C                     	;# 
   983     1E9D                     	;# 
   984     1E9E                     	;# 
   985     1EA1                     	;# 
   986     1EA2                     	;# 
   987     1EA3                     	;# 
   988     1EA4                     	;# 
   989     1EA9                     	;# 
   990     1EAA                     	;# 
   991     1EB1                     	;# 
   992     1EB2                     	;# 
   993     1EB8                     	;# 
   994     1EB9                     	;# 
   995     1EBA                     	;# 
   996     1EBB                     	;# 
   997     1EBC                     	;# 
   998     1EBD                     	;# 
   999     1EBE                     	;# 
  1000     1EC3                     	;# 
  1001     1EC5                     	;# 
  1002     1EC6                     	;# 
  1003     1EC7                     	;# 
  1004     1EC8                     	;# 
  1005     1EC9                     	;# 
  1006     1ECA                     	;# 
  1007     1ECB                     	;# 
  1008     1ECC                     	;# 
  1009     1F10                     	;# 
  1010     1F11                     	;# 
  1011     1F12                     	;# 
  1012     1F14                     	;# 
  1013     1F15                     	;# 
  1014     1F20                     	;# 
  1015     1F21                     	;# 
  1016     1F22                     	;# 
  1017     1F23                     	;# 
  1018     1F24                     	;# 
  1019     1F25                     	;# 
  1020     1F38                     	;# 
  1021     1F39                     	;# 
  1022     1F3A                     	;# 
  1023     1F3B                     	;# 
  1024     1F3C                     	;# 
  1025     1F3D                     	;# 
  1026     1F3E                     	;# 
  1027     1F3F                     	;# 
  1028     1F4E                     	;# 
  1029     1F4F                     	;# 
  1030     1F50                     	;# 
  1031     1F51                     	;# 
  1032     1F52                     	;# 
  1033     1F53                     	;# 
  1034     1F54                     	;# 
  1035     1F55                     	;# 
  1036     1FE4                     	;# 
  1037     1FE5                     	;# 
  1038     1FE6                     	;# 
  1039     1FE7                     	;# 
  1040     1FE8                     	;# 
  1041     1FE8                     	;# 
  1042     1FE9                     	;# 
  1043     1FEA                     	;# 
  1044     1FEB                     	;# 
  1045     1FED                     	;# 
  1046     1FEE                     	;# 
  1047     1FEF                     	;# 
  1048     0000                     	;# 
  1049     0001                     	;# 
  1050     0002                     	;# 
  1051     0003                     	;# 
  1052     0004                     	;# 
  1053     0005                     	;# 
  1054     0006                     	;# 
  1055     0007                     	;# 
  1056     0008                     	;# 
  1057     0009                     	;# 
  1058     000A                     	;# 
  1059     000B                     	;# 
  1060     000C                     	;# 
  1061     000E                     	;# 
  1062     0012                     	;# 
  1063     0014                     	;# 
  1064     0018                     	;# 
  1065     001A                     	;# 
  1066     008C                     	;# 
  1067     008C                     	;# 
  1068     008D                     	;# 
  1069     008E                     	;# 
  1070     008E                     	;# 
  1071     008F                     	;# 
  1072     0090                     	;# 
  1073     0090                     	;# 
  1074     0091                     	;# 
  1075     0092                     	;# 
  1076     0092                     	;# 
  1077     0093                     	;# 
  1078     0094                     	;# 
  1079     0094                     	;# 
  1080     0095                     	;# 
  1081     0096                     	;# 
  1082     0096                     	;# 
  1083     0097                     	;# 
  1084     0098                     	;# 
  1085     0099                     	;# 
  1086     009A                     	;# 
  1087     009B                     	;# 
  1088     009B                     	;# 
  1089     009C                     	;# 
  1090     009D                     	;# 
  1091     009D                     	;# 
  1092     009E                     	;# 
  1093     009F                     	;# 
  1094     010C                     	;# 
  1095     010C                     	;# 
  1096     010D                     	;# 
  1097     010E                     	;# 
  1098     010F                     	;# 
  1099     010F                     	;# 
  1100     0110                     	;# 
  1101     0111                     	;# 
  1102     0112                     	;# 
  1103     0113                     	;# 
  1104     0114                     	;# 
  1105     0115                     	;# 
  1106     0116                     	;# 
  1107     0117                     	;# 
  1108     0118                     	;# 
  1109     0119                     	;# 
  1110     0119                     	;# 
  1111     0119                     	;# 
  1112     011A                     	;# 
  1113     011A                     	;# 
  1114     011A                     	;# 
  1115     011B                     	;# 
  1116     011B                     	;# 
  1117     011B                     	;# 
  1118     011B                     	;# 
  1119     011B                     	;# 
  1120     011C                     	;# 
  1121     011C                     	;# 
  1122     011C                     	;# 
  1123     011D                     	;# 
  1124     011D                     	;# 
  1125     011D                     	;# 
  1126     011E                     	;# 
  1127     011E                     	;# 
  1128     011E                     	;# 
  1129     011F                     	;# 
  1130     011F                     	;# 
  1131     011F                     	;# 
  1132     011F                     	;# 
  1133     011F                     	;# 
  1134     018C                     	;# 
  1135     018D                     	;# 
  1136     018E                     	;# 
  1137     018F                     	;# 
  1138     0190                     	;# 
  1139     0191                     	;# 
  1140     0192                     	;# 
  1141     0196                     	;# 
  1142     0197                     	;# 
  1143     0198                     	;# 
  1144     0199                     	;# 
  1145     019A                     	;# 
  1146     019B                     	;# 
  1147     019C                     	;# 
  1148     020C                     	;# 
  1149     020D                     	;# 
  1150     020E                     	;# 
  1151     020E                     	;# 
  1152     020F                     	;# 
  1153     020F                     	;# 
  1154     0210                     	;# 
  1155     0210                     	;# 
  1156     0211                     	;# 
  1157     0211                     	;# 
  1158     0212                     	;# 
  1159     0213                     	;# 
  1160     0214                     	;# 
  1161     0214                     	;# 
  1162     0215                     	;# 
  1163     0215                     	;# 
  1164     0216                     	;# 
  1165     0216                     	;# 
  1166     0217                     	;# 
  1167     0217                     	;# 
  1168     0218                     	;# 
  1169     0219                     	;# 
  1170     021A                     	;# 
  1171     021A                     	;# 
  1172     021B                     	;# 
  1173     021B                     	;# 
  1174     021C                     	;# 
  1175     021C                     	;# 
  1176     021D                     	;# 
  1177     021D                     	;# 
  1178     021E                     	;# 
  1179     021F                     	;# 
  1180     028C                     	;# 
  1181     028C                     	;# 
  1182     028D                     	;# 
  1183     028D                     	;# 
  1184     028E                     	;# 
  1185     028F                     	;# 
  1186     0290                     	;# 
  1187     0291                     	;# 
  1188     0292                     	;# 
  1189     0292                     	;# 
  1190     0293                     	;# 
  1191     0293                     	;# 
  1192     0294                     	;# 
  1193     0295                     	;# 
  1194     0296                     	;# 
  1195     0297                     	;# 
  1196     0298                     	;# 
  1197     0298                     	;# 
  1198     0299                     	;# 
  1199     0299                     	;# 
  1200     029A                     	;# 
  1201     029B                     	;# 
  1202     029C                     	;# 
  1203     029D                     	;# 
  1204     029F                     	;# 
  1205     030C                     	;# 
  1206     030C                     	;# 
  1207     030D                     	;# 
  1208     030E                     	;# 
  1209     030F                     	;# 
  1210     0310                     	;# 
  1211     0310                     	;# 
  1212     0311                     	;# 
  1213     0312                     	;# 
  1214     0313                     	;# 
  1215     0314                     	;# 
  1216     0314                     	;# 
  1217     0315                     	;# 
  1218     0316                     	;# 
  1219     0317                     	;# 
  1220     0318                     	;# 
  1221     0318                     	;# 
  1222     0319                     	;# 
  1223     031A                     	;# 
  1224     031B                     	;# 
  1225     038C                     	;# 
  1226     038C                     	;# 
  1227     038D                     	;# 
  1228     038E                     	;# 
  1229     0390                     	;# 
  1230     0390                     	;# 
  1231     0391                     	;# 
  1232     0392                     	;# 
  1233     048C                     	;# 
  1234     048C                     	;# 
  1235     048D                     	;# 
  1236     048E                     	;# 
  1237     048F                     	;# 
  1238     048F                     	;# 
  1239     0490                     	;# 
  1240     0491                     	;# 
  1241     0492                     	;# 
  1242     0492                     	;# 
  1243     0493                     	;# 
  1244     0494                     	;# 
  1245     0495                     	;# 
  1246     0495                     	;# 
  1247     0496                     	;# 
  1248     0497                     	;# 
  1249     0498                     	;# 
  1250     0499                     	;# 
  1251     049A                     	;# 
  1252     049B                     	;# 
  1253     049C                     	;# 
  1254     049D                     	;# 
  1255     058C                     	;# 
  1256     058C                     	;# 
  1257     058D                     	;# 
  1258     058E                     	;# 
  1259     058F                     	;# 
  1260     058F                     	;# 
  1261     0590                     	;# 
  1262     0591                     	;# 
  1263     0592                     	;# 
  1264     0593                     	;# 
  1265     059C                     	;# 
  1266     059C                     	;# 
  1267     059D                     	;# 
  1268     059D                     	;# 
  1269     059E                     	;# 
  1270     059F                     	;# 
  1271     060C                     	;# 
  1272     060C                     	;# 
  1273     060D                     	;# 
  1274     060D                     	;# 
  1275     060E                     	;# 
  1276     060F                     	;# 
  1277     0610                     	;# 
  1278     0611                     	;# 
  1279     0612                     	;# 
  1280     0613                     	;# 
  1281     0614                     	;# 
  1282     0616                     	;# 
  1283     0616                     	;# 
  1284     0617                     	;# 
  1285     0617                     	;# 
  1286     0618                     	;# 
  1287     0619                     	;# 
  1288     061A                     	;# 
  1289     061B                     	;# 
  1290     061C                     	;# 
  1291     061D                     	;# 
  1292     061E                     	;# 
  1293     070C                     	;# 
  1294     070D                     	;# 
  1295     070E                     	;# 
  1296     070F                     	;# 
  1297     0710                     	;# 
  1298     0711                     	;# 
  1299     0712                     	;# 
  1300     0713                     	;# 
  1301     0714                     	;# 
  1302     0716                     	;# 
  1303     0717                     	;# 
  1304     0718                     	;# 
  1305     0719                     	;# 
  1306     071A                     	;# 
  1307     071B                     	;# 
  1308     071C                     	;# 
  1309     071D                     	;# 
  1310     071E                     	;# 
  1311     0796                     	;# 
  1312     0797                     	;# 
  1313     0798                     	;# 
  1314     0799                     	;# 
  1315     079A                     	;# 
  1316     079B                     	;# 
  1317     079C                     	;# 
  1318     079D                     	;# 
  1319     080C                     	;# 
  1320     080D                     	;# 
  1321     080E                     	;# 
  1322     080F                     	;# 
  1323     0810                     	;# 
  1324     0811                     	;# 
  1325     0812                     	;# 
  1326     0813                     	;# 
  1327     0814                     	;# 
  1328     081A                     	;# 
  1329     081A                     	;# 
  1330     081B                     	;# 
  1331     081C                     	;# 
  1332     081C                     	;# 
  1333     081D                     	;# 
  1334     081E                     	;# 
  1335     081F                     	;# 
  1336     088C                     	;# 
  1337     088D                     	;# 
  1338     088E                     	;# 
  1339     088F                     	;# 
  1340     0890                     	;# 
  1341     0891                     	;# 
  1342     0892                     	;# 
  1343     0893                     	;# 
  1344     0895                     	;# 
  1345     0896                     	;# 
  1346     0897                     	;# 
  1347     0898                     	;# 
  1348     0899                     	;# 
  1349     089A                     	;# 
  1350     089B                     	;# 
  1351     090C                     	;# 
  1352     090E                     	;# 
  1353     090F                     	;# 
  1354     091F                     	;# 
  1355     098F                     	;# 
  1356     098F                     	;# 
  1357     0990                     	;# 
  1358     0991                     	;# 
  1359     0992                     	;# 
  1360     0993                     	;# 
  1361     0994                     	;# 
  1362     0995                     	;# 
  1363     0996                     	;# 
  1364     0997                     	;# 
  1365     1E0F                     	;# 
  1366     1E10                     	;# 
  1367     1E11                     	;# 
  1368     1E12                     	;# 
  1369     1E13                     	;# 
  1370     1E14                     	;# 
  1371     1E15                     	;# 
  1372     1E16                     	;# 
  1373     1E17                     	;# 
  1374     1E18                     	;# 
  1375     1E19                     	;# 
  1376     1E1A                     	;# 
  1377     1E1B                     	;# 
  1378     1E1C                     	;# 
  1379     1E1D                     	;# 
  1380     1E1E                     	;# 
  1381     1E1F                     	;# 
  1382     1E20                     	;# 
  1383     1E21                     	;# 
  1384     1E22                     	;# 
  1385     1E23                     	;# 
  1386     1E24                     	;# 
  1387     1E25                     	;# 
  1388     1E26                     	;# 
  1389     1E27                     	;# 
  1390     1E28                     	;# 
  1391     1E29                     	;# 
  1392     1E2A                     	;# 
  1393     1E2B                     	;# 
  1394     1E2C                     	;# 
  1395     1E2D                     	;# 
  1396     1E2E                     	;# 
  1397     1E2F                     	;# 
  1398     1E30                     	;# 
  1399     1E31                     	;# 
  1400     1E32                     	;# 
  1401     1E33                     	;# 
  1402     1E34                     	;# 
  1403     1E35                     	;# 
  1404     1E36                     	;# 
  1405     1E37                     	;# 
  1406     1E8F                     	;# 
  1407     1E90                     	;# 
  1408     1E91                     	;# 
  1409     1E92                     	;# 
  1410     1E93                     	;# 
  1411     1E94                     	;# 
  1412     1E95                     	;# 
  1413     1E96                     	;# 
  1414     1E97                     	;# 
  1415     1E9C                     	;# 
  1416     1E9D                     	;# 
  1417     1E9E                     	;# 
  1418     1EA1                     	;# 
  1419     1EA2                     	;# 
  1420     1EA3                     	;# 
  1421     1EA4                     	;# 
  1422     1EA9                     	;# 
  1423     1EAA                     	;# 
  1424     1EB1                     	;# 
  1425     1EB2                     	;# 
  1426     1EB8                     	;# 
  1427     1EB9                     	;# 
  1428     1EBA                     	;# 
  1429     1EBB                     	;# 
  1430     1EBC                     	;# 
  1431     1EBD                     	;# 
  1432     1EBE                     	;# 
  1433     1EC3                     	;# 
  1434     1EC5                     	;# 
  1435     1EC6                     	;# 
  1436     1EC7                     	;# 
  1437     1EC8                     	;# 
  1438     1EC9                     	;# 
  1439     1ECA                     	;# 
  1440     1ECB                     	;# 
  1441     1ECC                     	;# 
  1442     1F10                     	;# 
  1443     1F11                     	;# 
  1444     1F12                     	;# 
  1445     1F14                     	;# 
  1446     1F15                     	;# 
  1447     1F20                     	;# 
  1448     1F21                     	;# 
  1449     1F22                     	;# 
  1450     1F23                     	;# 
  1451     1F24                     	;# 
  1452     1F25                     	;# 
  1453     1F38                     	;# 
  1454     1F39                     	;# 
  1455     1F3A                     	;# 
  1456     1F3B                     	;# 
  1457     1F3C                     	;# 
  1458     1F3D                     	;# 
  1459     1F3E                     	;# 
  1460     1F3F                     	;# 
  1461     1F4E                     	;# 
  1462     1F4F                     	;# 
  1463     1F50                     	;# 
  1464     1F51                     	;# 
  1465     1F52                     	;# 
  1466     1F53                     	;# 
  1467     1F54                     	;# 
  1468     1F55                     	;# 
  1469     1FE4                     	;# 
  1470     1FE5                     	;# 
  1471     1FE6                     	;# 
  1472     1FE7                     	;# 
  1473     1FE8                     	;# 
  1474     1FE8                     	;# 
  1475     1FE9                     	;# 
  1476     1FEA                     	;# 
  1477     1FEB                     	;# 
  1478     1FED                     	;# 
  1479     1FEE                     	;# 
  1480     1FEF                     	;# 
  1481     0000                     	;# 
  1482     0001                     	;# 
  1483     0002                     	;# 
  1484     0003                     	;# 
  1485     0004                     	;# 
  1486     0005                     	;# 
  1487     0006                     	;# 
  1488     0007                     	;# 
  1489     0008                     	;# 
  1490     0009                     	;# 
  1491     000A                     	;# 
  1492     000B                     	;# 
  1493     000C                     	;# 
  1494     000E                     	;# 
  1495     0012                     	;# 
  1496     0014                     	;# 
  1497     0018                     	;# 
  1498     001A                     	;# 
  1499     008C                     	;# 
  1500     008C                     	;# 
  1501     008D                     	;# 
  1502     008E                     	;# 
  1503     008E                     	;# 
  1504     008F                     	;# 
  1505     0090                     	;# 
  1506     0090                     	;# 
  1507     0091                     	;# 
  1508     0092                     	;# 
  1509     0092                     	;# 
  1510     0093                     	;# 
  1511     0094                     	;# 
  1512     0094                     	;# 
  1513     0095                     	;# 
  1514     0096                     	;# 
  1515     0096                     	;# 
  1516     0097                     	;# 
  1517     0098                     	;# 
  1518     0099                     	;# 
  1519     009A                     	;# 
  1520     009B                     	;# 
  1521     009B                     	;# 
  1522     009C                     	;# 
  1523     009D                     	;# 
  1524     009D                     	;# 
  1525     009E                     	;# 
  1526     009F                     	;# 
  1527     010C                     	;# 
  1528     010C                     	;# 
  1529     010D                     	;# 
  1530     010E                     	;# 
  1531     010F                     	;# 
  1532     010F                     	;# 
  1533     0110                     	;# 
  1534     0111                     	;# 
  1535     0112                     	;# 
  1536     0113                     	;# 
  1537     0114                     	;# 
  1538     0115                     	;# 
  1539     0116                     	;# 
  1540     0117                     	;# 
  1541     0118                     	;# 
  1542     0119                     	;# 
  1543     0119                     	;# 
  1544     0119                     	;# 
  1545     011A                     	;# 
  1546     011A                     	;# 
  1547     011A                     	;# 
  1548     011B                     	;# 
  1549     011B                     	;# 
  1550     011B                     	;# 
  1551     011B                     	;# 
  1552     011B                     	;# 
  1553     011C                     	;# 
  1554     011C                     	;# 
  1555     011C                     	;# 
  1556     011D                     	;# 
  1557     011D                     	;# 
  1558     011D                     	;# 
  1559     011E                     	;# 
  1560     011E                     	;# 
  1561     011E                     	;# 
  1562     011F                     	;# 
  1563     011F                     	;# 
  1564     011F                     	;# 
  1565     011F                     	;# 
  1566     011F                     	;# 
  1567     018C                     	;# 
  1568     018D                     	;# 
  1569     018E                     	;# 
  1570     018F                     	;# 
  1571     0190                     	;# 
  1572     0191                     	;# 
  1573     0192                     	;# 
  1574     0196                     	;# 
  1575     0197                     	;# 
  1576     0198                     	;# 
  1577     0199                     	;# 
  1578     019A                     	;# 
  1579     019B                     	;# 
  1580     019C                     	;# 
  1581     020C                     	;# 
  1582     020D                     	;# 
  1583     020E                     	;# 
  1584     020E                     	;# 
  1585     020F                     	;# 
  1586     020F                     	;# 
  1587     0210                     	;# 
  1588     0210                     	;# 
  1589     0211                     	;# 
  1590     0211                     	;# 
  1591     0212                     	;# 
  1592     0213                     	;# 
  1593     0214                     	;# 
  1594     0214                     	;# 
  1595     0215                     	;# 
  1596     0215                     	;# 
  1597     0216                     	;# 
  1598     0216                     	;# 
  1599     0217                     	;# 
  1600     0217                     	;# 
  1601     0218                     	;# 
  1602     0219                     	;# 
  1603     021A                     	;# 
  1604     021A                     	;# 
  1605     021B                     	;# 
  1606     021B                     	;# 
  1607     021C                     	;# 
  1608     021C                     	;# 
  1609     021D                     	;# 
  1610     021D                     	;# 
  1611     021E                     	;# 
  1612     021F                     	;# 
  1613     028C                     	;# 
  1614     028C                     	;# 
  1615     028D                     	;# 
  1616     028D                     	;# 
  1617     028E                     	;# 
  1618     028F                     	;# 
  1619     0290                     	;# 
  1620     0291                     	;# 
  1621     0292                     	;# 
  1622     0292                     	;# 
  1623     0293                     	;# 
  1624     0293                     	;# 
  1625     0294                     	;# 
  1626     0295                     	;# 
  1627     0296                     	;# 
  1628     0297                     	;# 
  1629     0298                     	;# 
  1630     0298                     	;# 
  1631     0299                     	;# 
  1632     0299                     	;# 
  1633     029A                     	;# 
  1634     029B                     	;# 
  1635     029C                     	;# 
  1636     029D                     	;# 
  1637     029F                     	;# 
  1638     030C                     	;# 
  1639     030C                     	;# 
  1640     030D                     	;# 
  1641     030E                     	;# 
  1642     030F                     	;# 
  1643     0310                     	;# 
  1644     0310                     	;# 
  1645     0311                     	;# 
  1646     0312                     	;# 
  1647     0313                     	;# 
  1648     0314                     	;# 
  1649     0314                     	;# 
  1650     0315                     	;# 
  1651     0316                     	;# 
  1652     0317                     	;# 
  1653     0318                     	;# 
  1654     0318                     	;# 
  1655     0319                     	;# 
  1656     031A                     	;# 
  1657     031B                     	;# 
  1658     038C                     	;# 
  1659     038C                     	;# 
  1660     038D                     	;# 
  1661     038E                     	;# 
  1662     0390                     	;# 
  1663     0390                     	;# 
  1664     0391                     	;# 
  1665     0392                     	;# 
  1666     048C                     	;# 
  1667     048C                     	;# 
  1668     048D                     	;# 
  1669     048E                     	;# 
  1670     048F                     	;# 
  1671     048F                     	;# 
  1672     0490                     	;# 
  1673     0491                     	;# 
  1674     0492                     	;# 
  1675     0492                     	;# 
  1676     0493                     	;# 
  1677     0494                     	;# 
  1678     0495                     	;# 
  1679     0495                     	;# 
  1680     0496                     	;# 
  1681     0497                     	;# 
  1682     0498                     	;# 
  1683     0499                     	;# 
  1684     049A                     	;# 
  1685     049B                     	;# 
  1686     049C                     	;# 
  1687     049D                     	;# 
  1688     058C                     	;# 
  1689     058C                     	;# 
  1690     058D                     	;# 
  1691     058E                     	;# 
  1692     058F                     	;# 
  1693     058F                     	;# 
  1694     0590                     	;# 
  1695     0591                     	;# 
  1696     0592                     	;# 
  1697     0593                     	;# 
  1698     059C                     	;# 
  1699     059C                     	;# 
  1700     059D                     	;# 
  1701     059D                     	;# 
  1702     059E                     	;# 
  1703     059F                     	;# 
  1704     060C                     	;# 
  1705     060C                     	;# 
  1706     060D                     	;# 
  1707     060D                     	;# 
  1708     060E                     	;# 
  1709     060F                     	;# 
  1710     0610                     	;# 
  1711     0611                     	;# 
  1712     0612                     	;# 
  1713     0613                     	;# 
  1714     0614                     	;# 
  1715     0616                     	;# 
  1716     0616                     	;# 
  1717     0617                     	;# 
  1718     0617                     	;# 
  1719     0618                     	;# 
  1720     0619                     	;# 
  1721     061A                     	;# 
  1722     061B                     	;# 
  1723     061C                     	;# 
  1724     061D                     	;# 
  1725     061E                     	;# 
  1726     070C                     	;# 
  1727     070D                     	;# 
  1728     070E                     	;# 
  1729     070F                     	;# 
  1730     0710                     	;# 
  1731     0711                     	;# 
  1732     0712                     	;# 
  1733     0713                     	;# 
  1734     0714                     	;# 
  1735     0716                     	;# 
  1736     0717                     	;# 
  1737     0718                     	;# 
  1738     0719                     	;# 
  1739     071A                     	;# 
  1740     071B                     	;# 
  1741     071C                     	;# 
  1742     071D                     	;# 
  1743     071E                     	;# 
  1744     0796                     	;# 
  1745     0797                     	;# 
  1746     0798                     	;# 
  1747     0799                     	;# 
  1748     079A                     	;# 
  1749     079B                     	;# 
  1750     079C                     	;# 
  1751     079D                     	;# 
  1752     080C                     	;# 
  1753     080D                     	;# 
  1754     080E                     	;# 
  1755     080F                     	;# 
  1756     0810                     	;# 
  1757     0811                     	;# 
  1758     0812                     	;# 
  1759     0813                     	;# 
  1760     0814                     	;# 
  1761     081A                     	;# 
  1762     081A                     	;# 
  1763     081B                     	;# 
  1764     081C                     	;# 
  1765     081C                     	;# 
  1766     081D                     	;# 
  1767     081E                     	;# 
  1768     081F                     	;# 
  1769     088C                     	;# 
  1770     088D                     	;# 
  1771     088E                     	;# 
  1772     088F                     	;# 
  1773     0890                     	;# 
  1774     0891                     	;# 
  1775     0892                     	;# 
  1776     0893                     	;# 
  1777     0895                     	;# 
  1778     0896                     	;# 
  1779     0897                     	;# 
  1780     0898                     	;# 
  1781     0899                     	;# 
  1782     089A                     	;# 
  1783     089B                     	;# 
  1784     090C                     	;# 
  1785     090E                     	;# 
  1786     090F                     	;# 
  1787     091F                     	;# 
  1788     098F                     	;# 
  1789     098F                     	;# 
  1790     0990                     	;# 
  1791     0991                     	;# 
  1792     0992                     	;# 
  1793     0993                     	;# 
  1794     0994                     	;# 
  1795     0995                     	;# 
  1796     0996                     	;# 
  1797     0997                     	;# 
  1798     1E0F                     	;# 
  1799     1E10                     	;# 
  1800     1E11                     	;# 
  1801     1E12                     	;# 
  1802     1E13                     	;# 
  1803     1E14                     	;# 
  1804     1E15                     	;# 
  1805     1E16                     	;# 
  1806     1E17                     	;# 
  1807     1E18                     	;# 
  1808     1E19                     	;# 
  1809     1E1A                     	;# 
  1810     1E1B                     	;# 
  1811     1E1C                     	;# 
  1812     1E1D                     	;# 
  1813     1E1E                     	;# 
  1814     1E1F                     	;# 
  1815     1E20                     	;# 
  1816     1E21                     	;# 
  1817     1E22                     	;# 
  1818     1E23                     	;# 
  1819     1E24                     	;# 
  1820     1E25                     	;# 
  1821     1E26                     	;# 
  1822     1E27                     	;# 
  1823     1E28                     	;# 
  1824     1E29                     	;# 
  1825     1E2A                     	;# 
  1826     1E2B                     	;# 
  1827     1E2C                     	;# 
  1828     1E2D                     	;# 
  1829     1E2E                     	;# 
  1830     1E2F                     	;# 
  1831     1E30                     	;# 
  1832     1E31                     	;# 
  1833     1E32                     	;# 
  1834     1E33                     	;# 
  1835     1E34                     	;# 
  1836     1E35                     	;# 
  1837     1E36                     	;# 
  1838     1E37                     	;# 
  1839     1E8F                     	;# 
  1840     1E90                     	;# 
  1841     1E91                     	;# 
  1842     1E92                     	;# 
  1843     1E93                     	;# 
  1844     1E94                     	;# 
  1845     1E95                     	;# 
  1846     1E96                     	;# 
  1847     1E97                     	;# 
  1848     1E9C                     	;# 
  1849     1E9D                     	;# 
  1850     1E9E                     	;# 
  1851     1EA1                     	;# 
  1852     1EA2                     	;# 
  1853     1EA3                     	;# 
  1854     1EA4                     	;# 
  1855     1EA9                     	;# 
  1856     1EAA                     	;# 
  1857     1EB1                     	;# 
  1858     1EB2                     	;# 
  1859     1EB8                     	;# 
  1860     1EB9                     	;# 
  1861     1EBA                     	;# 
  1862     1EBB                     	;# 
  1863     1EBC                     	;# 
  1864     1EBD                     	;# 
  1865     1EBE                     	;# 
  1866     1EC3                     	;# 
  1867     1EC5                     	;# 
  1868     1EC6                     	;# 
  1869     1EC7                     	;# 
  1870     1EC8                     	;# 
  1871     1EC9                     	;# 
  1872     1ECA                     	;# 
  1873     1ECB                     	;# 
  1874     1ECC                     	;# 
  1875     1F10                     	;# 
  1876     1F11                     	;# 
  1877     1F12                     	;# 
  1878     1F14                     	;# 
  1879     1F15                     	;# 
  1880     1F20                     	;# 
  1881     1F21                     	;# 
  1882     1F22                     	;# 
  1883     1F23                     	;# 
  1884     1F24                     	;# 
  1885     1F25                     	;# 
  1886     1F38                     	;# 
  1887     1F39                     	;# 
  1888     1F3A                     	;# 
  1889     1F3B                     	;# 
  1890     1F3C                     	;# 
  1891     1F3D                     	;# 
  1892     1F3E                     	;# 
  1893     1F3F                     	;# 
  1894     1F4E                     	;# 
  1895     1F4F                     	;# 
  1896     1F50                     	;# 
  1897     1F51                     	;# 
  1898     1F52                     	;# 
  1899     1F53                     	;# 
  1900     1F54                     	;# 
  1901     1F55                     	;# 
  1902     1FE4                     	;# 
  1903     1FE5                     	;# 
  1904     1FE6                     	;# 
  1905     1FE7                     	;# 
  1906     1FE8                     	;# 
  1907     1FE8                     	;# 
  1908     1FE9                     	;# 
  1909     1FEA                     	;# 
  1910     1FEB                     	;# 
  1911     1FED                     	;# 
  1912     1FEE                     	;# 
  1913     1FEF                     	;# 
  1914     0000                     	;# 
  1915     0001                     	;# 
  1916     0002                     	;# 
  1917     0003                     	;# 
  1918     0004                     	;# 
  1919     0005                     	;# 
  1920     0006                     	;# 
  1921     0007                     	;# 
  1922     0008                     	;# 
  1923     0009                     	;# 
  1924     000A                     	;# 
  1925     000B                     	;# 
  1926     000C                     	;# 
  1927     000E                     	;# 
  1928     0012                     	;# 
  1929     0014                     	;# 
  1930     0018                     	;# 
  1931     001A                     	;# 
  1932     008C                     	;# 
  1933     008C                     	;# 
  1934     008D                     	;# 
  1935     008E                     	;# 
  1936     008E                     	;# 
  1937     008F                     	;# 
  1938     0090                     	;# 
  1939     0090                     	;# 
  1940     0091                     	;# 
  1941     0092                     	;# 
  1942     0092                     	;# 
  1943     0093                     	;# 
  1944     0094                     	;# 
  1945     0094                     	;# 
  1946     0095                     	;# 
  1947     0096                     	;# 
  1948     0096                     	;# 
  1949     0097                     	;# 
  1950     0098                     	;# 
  1951     0099                     	;# 
  1952     009A                     	;# 
  1953     009B                     	;# 
  1954     009B                     	;# 
  1955     009C                     	;# 
  1956     009D                     	;# 
  1957     009D                     	;# 
  1958     009E                     	;# 
  1959     009F                     	;# 
  1960     010C                     	;# 
  1961     010C                     	;# 
  1962     010D                     	;# 
  1963     010E                     	;# 
  1964     010F                     	;# 
  1965     010F                     	;# 
  1966     0110                     	;# 
  1967     0111                     	;# 
  1968     0112                     	;# 
  1969     0113                     	;# 
  1970     0114                     	;# 
  1971     0115                     	;# 
  1972     0116                     	;# 
  1973     0117                     	;# 
  1974     0118                     	;# 
  1975     0119                     	;# 
  1976     0119                     	;# 
  1977     0119                     	;# 
  1978     011A                     	;# 
  1979     011A                     	;# 
  1980     011A                     	;# 
  1981     011B                     	;# 
  1982     011B                     	;# 
  1983     011B                     	;# 
  1984     011B                     	;# 
  1985     011B                     	;# 
  1986     011C                     	;# 
  1987     011C                     	;# 
  1988     011C                     	;# 
  1989     011D                     	;# 
  1990     011D                     	;# 
  1991     011D                     	;# 
  1992     011E                     	;# 
  1993     011E                     	;# 
  1994     011E                     	;# 
  1995     011F                     	;# 
  1996     011F                     	;# 
  1997     011F                     	;# 
  1998     011F                     	;# 
  1999     011F                     	;# 
  2000     018C                     	;# 
  2001     018D                     	;# 
  2002     018E                     	;# 
  2003     018F                     	;# 
  2004     0190                     	;# 
  2005     0191                     	;# 
  2006     0192                     	;# 
  2007     0196                     	;# 
  2008     0197                     	;# 
  2009     0198                     	;# 
  2010     0199                     	;# 
  2011     019A                     	;# 
  2012     019B                     	;# 
  2013     019C                     	;# 
  2014     020C                     	;# 
  2015     020D                     	;# 
  2016     020E                     	;# 
  2017     020E                     	;# 
  2018     020F                     	;# 
  2019     020F                     	;# 
  2020     0210                     	;# 
  2021     0210                     	;# 
  2022     0211                     	;# 
  2023     0211                     	;# 
  2024     0212                     	;# 
  2025     0213                     	;# 
  2026     0214                     	;# 
  2027     0214                     	;# 
  2028     0215                     	;# 
  2029     0215                     	;# 
  2030     0216                     	;# 
  2031     0216                     	;# 
  2032     0217                     	;# 
  2033     0217                     	;# 
  2034     0218                     	;# 
  2035     0219                     	;# 
  2036     021A                     	;# 
  2037     021A                     	;# 
  2038     021B                     	;# 
  2039     021B                     	;# 
  2040     021C                     	;# 
  2041     021C                     	;# 
  2042     021D                     	;# 
  2043     021D                     	;# 
  2044     021E                     	;# 
  2045     021F                     	;# 
  2046     028C                     	;# 
  2047     028C                     	;# 
  2048     028D                     	;# 
  2049     028D                     	;# 
  2050     028E                     	;# 
  2051     028F                     	;# 
  2052     0290                     	;# 
  2053     0291                     	;# 
  2054     0292                     	;# 
  2055     0292                     	;# 
  2056     0293                     	;# 
  2057     0293                     	;# 
  2058     0294                     	;# 
  2059     0295                     	;# 
  2060     0296                     	;# 
  2061     0297                     	;# 
  2062     0298                     	;# 
  2063     0298                     	;# 
  2064     0299                     	;# 
  2065     0299                     	;# 
  2066     029A                     	;# 
  2067     029B                     	;# 
  2068     029C                     	;# 
  2069     029D                     	;# 
  2070     029F                     	;# 
  2071     030C                     	;# 
  2072     030C                     	;# 
  2073     030D                     	;# 
  2074     030E                     	;# 
  2075     030F                     	;# 
  2076     0310                     	;# 
  2077     0310                     	;# 
  2078     0311                     	;# 
  2079     0312                     	;# 
  2080     0313                     	;# 
  2081     0314                     	;# 
  2082     0314                     	;# 
  2083     0315                     	;# 
  2084     0316                     	;# 
  2085     0317                     	;# 
  2086     0318                     	;# 
  2087     0318                     	;# 
  2088     0319                     	;# 
  2089     031A                     	;# 
  2090     031B                     	;# 
  2091     038C                     	;# 
  2092     038C                     	;# 
  2093     038D                     	;# 
  2094     038E                     	;# 
  2095     0390                     	;# 
  2096     0390                     	;# 
  2097     0391                     	;# 
  2098     0392                     	;# 
  2099     048C                     	;# 
  2100     048C                     	;# 
  2101     048D                     	;# 
  2102     048E                     	;# 
  2103     048F                     	;# 
  2104     048F                     	;# 
  2105     0490                     	;# 
  2106     0491                     	;# 
  2107     0492                     	;# 
  2108     0492                     	;# 
  2109     0493                     	;# 
  2110     0494                     	;# 
  2111     0495                     	;# 
  2112     0495                     	;# 
  2113     0496                     	;# 
  2114     0497                     	;# 
  2115     0498                     	;# 
  2116     0499                     	;# 
  2117     049A                     	;# 
  2118     049B                     	;# 
  2119     049C                     	;# 
  2120     049D                     	;# 
  2121     058C                     	;# 
  2122     058C                     	;# 
  2123     058D                     	;# 
  2124     058E                     	;# 
  2125     058F                     	;# 
  2126     058F                     	;# 
  2127     0590                     	;# 
  2128     0591                     	;# 
  2129     0592                     	;# 
  2130     0593                     	;# 
  2131     059C                     	;# 
  2132     059C                     	;# 
  2133     059D                     	;# 
  2134     059D                     	;# 
  2135     059E                     	;# 
  2136     059F                     	;# 
  2137     060C                     	;# 
  2138     060C                     	;# 
  2139     060D                     	;# 
  2140     060D                     	;# 
  2141     060E                     	;# 
  2142     060F                     	;# 
  2143     0610                     	;# 
  2144     0611                     	;# 
  2145     0612                     	;# 
  2146     0613                     	;# 
  2147     0614                     	;# 
  2148     0616                     	;# 
  2149     0616                     	;# 
  2150     0617                     	;# 
  2151     0617                     	;# 
  2152     0618                     	;# 
  2153     0619                     	;# 
  2154     061A                     	;# 
  2155     061B                     	;# 
  2156     061C                     	;# 
  2157     061D                     	;# 
  2158     061E                     	;# 
  2159     070C                     	;# 
  2160     070D                     	;# 
  2161     070E                     	;# 
  2162     070F                     	;# 
  2163     0710                     	;# 
  2164     0711                     	;# 
  2165     0712                     	;# 
  2166     0713                     	;# 
  2167     0714                     	;# 
  2168     0716                     	;# 
  2169     0717                     	;# 
  2170     0718                     	;# 
  2171     0719                     	;# 
  2172     071A                     	;# 
  2173     071B                     	;# 
  2174     071C                     	;# 
  2175     071D                     	;# 
  2176     071E                     	;# 
  2177     0796                     	;# 
  2178     0797                     	;# 
  2179     0798                     	;# 
  2180     0799                     	;# 
  2181     079A                     	;# 
  2182     079B                     	;# 
  2183     079C                     	;# 
  2184     079D                     	;# 
  2185     080C                     	;# 
  2186     080D                     	;# 
  2187     080E                     	;# 
  2188     080F                     	;# 
  2189     0810                     	;# 
  2190     0811                     	;# 
  2191     0812                     	;# 
  2192     0813                     	;# 
  2193     0814                     	;# 
  2194     081A                     	;# 
  2195     081A                     	;# 
  2196     081B                     	;# 
  2197     081C                     	;# 
  2198     081C                     	;# 
  2199     081D                     	;# 
  2200     081E                     	;# 
  2201     081F                     	;# 
  2202     088C                     	;# 
  2203     088D                     	;# 
  2204     088E                     	;# 
  2205     088F                     	;# 
  2206     0890                     	;# 
  2207     0891                     	;# 
  2208     0892                     	;# 
  2209     0893                     	;# 
  2210     0895                     	;# 
  2211     0896                     	;# 
  2212     0897                     	;# 
  2213     0898                     	;# 
  2214     0899                     	;# 
  2215     089A                     	;# 
  2216     089B                     	;# 
  2217     090C                     	;# 
  2218     090E                     	;# 
  2219     090F                     	;# 
  2220     091F                     	;# 
  2221     098F                     	;# 
  2222     098F                     	;# 
  2223     0990                     	;# 
  2224     0991                     	;# 
  2225     0992                     	;# 
  2226     0993                     	;# 
  2227     0994                     	;# 
  2228     0995                     	;# 
  2229     0996                     	;# 
  2230     0997                     	;# 
  2231     1E0F                     	;# 
  2232     1E10                     	;# 
  2233     1E11                     	;# 
  2234     1E12                     	;# 
  2235     1E13                     	;# 
  2236     1E14                     	;# 
  2237     1E15                     	;# 
  2238     1E16                     	;# 
  2239     1E17                     	;# 
  2240     1E18                     	;# 
  2241     1E19                     	;# 
  2242     1E1A                     	;# 
  2243     1E1B                     	;# 
  2244     1E1C                     	;# 
  2245     1E1D                     	;# 
  2246     1E1E                     	;# 
  2247     1E1F                     	;# 
  2248     1E20                     	;# 
  2249     1E21                     	;# 
  2250     1E22                     	;# 
  2251     1E23                     	;# 
  2252     1E24                     	;# 
  2253     1E25                     	;# 
  2254     1E26                     	;# 
  2255     1E27                     	;# 
  2256     1E28                     	;# 
  2257     1E29                     	;# 
  2258     1E2A                     	;# 
  2259     1E2B                     	;# 
  2260     1E2C                     	;# 
  2261     1E2D                     	;# 
  2262     1E2E                     	;# 
  2263     1E2F                     	;# 
  2264     1E30                     	;# 
  2265     1E31                     	;# 
  2266     1E32                     	;# 
  2267     1E33                     	;# 
  2268     1E34                     	;# 
  2269     1E35                     	;# 
  2270     1E36                     	;# 
  2271     1E37                     	;# 
  2272     1E8F                     	;# 
  2273     1E90                     	;# 
  2274     1E91                     	;# 
  2275     1E92                     	;# 
  2276     1E93                     	;# 
  2277     1E94                     	;# 
  2278     1E95                     	;# 
  2279     1E96                     	;# 
  2280     1E97                     	;# 
  2281     1E9C                     	;# 
  2282     1E9D                     	;# 
  2283     1E9E                     	;# 
  2284     1EA1                     	;# 
  2285     1EA2                     	;# 
  2286     1EA3                     	;# 
  2287     1EA4                     	;# 
  2288     1EA9                     	;# 
  2289     1EAA                     	;# 
  2290     1EB1                     	;# 
  2291     1EB2                     	;# 
  2292     1EB8                     	;# 
  2293     1EB9                     	;# 
  2294     1EBA                     	;# 
  2295     1EBB                     	;# 
  2296     1EBC                     	;# 
  2297     1EBD                     	;# 
  2298     1EBE                     	;# 
  2299     1EC3                     	;# 
  2300     1EC5                     	;# 
  2301     1EC6                     	;# 
  2302     1EC7                     	;# 
  2303     1EC8                     	;# 
  2304     1EC9                     	;# 
  2305     1ECA                     	;# 
  2306     1ECB                     	;# 
  2307     1ECC                     	;# 
  2308     1F10                     	;# 
  2309     1F11                     	;# 
  2310     1F12                     	;# 
  2311     1F14                     	;# 
  2312     1F15                     	;# 
  2313     1F20                     	;# 
  2314     1F21                     	;# 
  2315     1F22                     	;# 
  2316     1F23                     	;# 
  2317     1F24                     	;# 
  2318     1F25                     	;# 
  2319     1F38                     	;# 
  2320     1F39                     	;# 
  2321     1F3A                     	;# 
  2322     1F3B                     	;# 
  2323     1F3C                     	;# 
  2324     1F3D                     	;# 
  2325     1F3E                     	;# 
  2326     1F3F                     	;# 
  2327     1F4E                     	;# 
  2328     1F4F                     	;# 
  2329     1F50                     	;# 
  2330     1F51                     	;# 
  2331     1F52                     	;# 
  2332     1F53                     	;# 
  2333     1F54                     	;# 
  2334     1F55                     	;# 
  2335     1FE4                     	;# 
  2336     1FE5                     	;# 
  2337     1FE6                     	;# 
  2338     1FE7                     	;# 
  2339     1FE8                     	;# 
  2340     1FE8                     	;# 
  2341     1FE9                     	;# 
  2342     1FEA                     	;# 
  2343     1FEB                     	;# 
  2344     1FED                     	;# 
  2345     1FEE                     	;# 
  2346     1FEF                     	;# 
  2347     0000                     	;# 
  2348     0001                     	;# 
  2349     0002                     	;# 
  2350     0003                     	;# 
  2351     0004                     	;# 
  2352     0005                     	;# 
  2353     0006                     	;# 
  2354     0007                     	;# 
  2355     0008                     	;# 
  2356     0009                     	;# 
  2357     000A                     	;# 
  2358     000B                     	;# 
  2359     000C                     	;# 
  2360     000E                     	;# 
  2361     0012                     	;# 
  2362     0014                     	;# 
  2363     0018                     	;# 
  2364     001A                     	;# 
  2365     008C                     	;# 
  2366     008C                     	;# 
  2367     008D                     	;# 
  2368     008E                     	;# 
  2369     008E                     	;# 
  2370     008F                     	;# 
  2371     0090                     	;# 
  2372     0090                     	;# 
  2373     0091                     	;# 
  2374     0092                     	;# 
  2375     0092                     	;# 
  2376     0093                     	;# 
  2377     0094                     	;# 
  2378     0094                     	;# 
  2379     0095                     	;# 
  2380     0096                     	;# 
  2381     0096                     	;# 
  2382     0097                     	;# 
  2383     0098                     	;# 
  2384     0099                     	;# 
  2385     009A                     	;# 
  2386     009B                     	;# 
  2387     009B                     	;# 
  2388     009C                     	;# 
  2389     009D                     	;# 
  2390     009D                     	;# 
  2391     009E                     	;# 
  2392     009F                     	;# 
  2393     010C                     	;# 
  2394     010C                     	;# 
  2395     010D                     	;# 
  2396     010E                     	;# 
  2397     010F                     	;# 
  2398     010F                     	;# 
  2399     0110                     	;# 
  2400     0111                     	;# 
  2401     0112                     	;# 
  2402     0113                     	;# 
  2403     0114                     	;# 
  2404     0115                     	;# 
  2405     0116                     	;# 
  2406     0117                     	;# 
  2407     0118                     	;# 
  2408     0119                     	;# 
  2409     0119                     	;# 
  2410     0119                     	;# 
  2411     011A                     	;# 
  2412     011A                     	;# 
  2413     011A                     	;# 
  2414     011B                     	;# 
  2415     011B                     	;# 
  2416     011B                     	;# 
  2417     011B                     	;# 
  2418     011B                     	;# 
  2419     011C                     	;# 
  2420     011C                     	;# 
  2421     011C                     	;# 
  2422     011D                     	;# 
  2423     011D                     	;# 
  2424     011D                     	;# 
  2425     011E                     	;# 
  2426     011E                     	;# 
  2427     011E                     	;# 
  2428     011F                     	;# 
  2429     011F                     	;# 
  2430     011F                     	;# 
  2431     011F                     	;# 
  2432     011F                     	;# 
  2433     018C                     	;# 
  2434     018D                     	;# 
  2435     018E                     	;# 
  2436     018F                     	;# 
  2437     0190                     	;# 
  2438     0191                     	;# 
  2439     0192                     	;# 
  2440     0196                     	;# 
  2441     0197                     	;# 
  2442     0198                     	;# 
  2443     0199                     	;# 
  2444     019A                     	;# 
  2445     019B                     	;# 
  2446     019C                     	;# 
  2447     020C                     	;# 
  2448     020D                     	;# 
  2449     020E                     	;# 
  2450     020E                     	;# 
  2451     020F                     	;# 
  2452     020F                     	;# 
  2453     0210                     	;# 
  2454     0210                     	;# 
  2455     0211                     	;# 
  2456     0211                     	;# 
  2457     0212                     	;# 
  2458     0213                     	;# 
  2459     0214                     	;# 
  2460     0214                     	;# 
  2461     0215                     	;# 
  2462     0215                     	;# 
  2463     0216                     	;# 
  2464     0216                     	;# 
  2465     0217                     	;# 
  2466     0217                     	;# 
  2467     0218                     	;# 
  2468     0219                     	;# 
  2469     021A                     	;# 
  2470     021A                     	;# 
  2471     021B                     	;# 
  2472     021B                     	;# 
  2473     021C                     	;# 
  2474     021C                     	;# 
  2475     021D                     	;# 
  2476     021D                     	;# 
  2477     021E                     	;# 
  2478     021F                     	;# 
  2479     028C                     	;# 
  2480     028C                     	;# 
  2481     028D                     	;# 
  2482     028D                     	;# 
  2483     028E                     	;# 
  2484     028F                     	;# 
  2485     0290                     	;# 
  2486     0291                     	;# 
  2487     0292                     	;# 
  2488     0292                     	;# 
  2489     0293                     	;# 
  2490     0293                     	;# 
  2491     0294                     	;# 
  2492     0295                     	;# 
  2493     0296                     	;# 
  2494     0297                     	;# 
  2495     0298                     	;# 
  2496     0298                     	;# 
  2497     0299                     	;# 
  2498     0299                     	;# 
  2499     029A                     	;# 
  2500     029B                     	;# 
  2501     029C                     	;# 
  2502     029D                     	;# 
  2503     029F                     	;# 
  2504     030C                     	;# 
  2505     030C                     	;# 
  2506     030D                     	;# 
  2507     030E                     	;# 
  2508     030F                     	;# 
  2509     0310                     	;# 
  2510     0310                     	;# 
  2511     0311                     	;# 
  2512     0312                     	;# 
  2513     0313                     	;# 
  2514     0314                     	;# 
  2515     0314                     	;# 
  2516     0315                     	;# 
  2517     0316                     	;# 
  2518     0317                     	;# 
  2519     0318                     	;# 
  2520     0318                     	;# 
  2521     0319                     	;# 
  2522     031A                     	;# 
  2523     031B                     	;# 
  2524     038C                     	;# 
  2525     038C                     	;# 
  2526     038D                     	;# 
  2527     038E                     	;# 
  2528     0390                     	;# 
  2529     0390                     	;# 
  2530     0391                     	;# 
  2531     0392                     	;# 
  2532     048C                     	;# 
  2533     048C                     	;# 
  2534     048D                     	;# 
  2535     048E                     	;# 
  2536     048F                     	;# 
  2537     048F                     	;# 
  2538     0490                     	;# 
  2539     0491                     	;# 
  2540     0492                     	;# 
  2541     0492                     	;# 
  2542     0493                     	;# 
  2543     0494                     	;# 
  2544     0495                     	;# 
  2545     0495                     	;# 
  2546     0496                     	;# 
  2547     0497                     	;# 
  2548     0498                     	;# 
  2549     0499                     	;# 
  2550     049A                     	;# 
  2551     049B                     	;# 
  2552     049C                     	;# 
  2553     049D                     	;# 
  2554     058C                     	;# 
  2555     058C                     	;# 
  2556     058D                     	;# 
  2557     058E                     	;# 
  2558     058F                     	;# 
  2559     058F                     	;# 
  2560     0590                     	;# 
  2561     0591                     	;# 
  2562     0592                     	;# 
  2563     0593                     	;# 
  2564     059C                     	;# 
  2565     059C                     	;# 
  2566     059D                     	;# 
  2567     059D                     	;# 
  2568     059E                     	;# 
  2569     059F                     	;# 
  2570     060C                     	;# 
  2571     060C                     	;# 
  2572     060D                     	;# 
  2573     060D                     	;# 
  2574     060E                     	;# 
  2575     060F                     	;# 
  2576     0610                     	;# 
  2577     0611                     	;# 
  2578     0612                     	;# 
  2579     0613                     	;# 
  2580     0614                     	;# 
  2581     0616                     	;# 
  2582     0616                     	;# 
  2583     0617                     	;# 
  2584     0617                     	;# 
  2585     0618                     	;# 
  2586     0619                     	;# 
  2587     061A                     	;# 
  2588     061B                     	;# 
  2589     061C                     	;# 
  2590     061D                     	;# 
  2591     061E                     	;# 
  2592     070C                     	;# 
  2593     070D                     	;# 
  2594     070E                     	;# 
  2595     070F                     	;# 
  2596     0710                     	;# 
  2597     0711                     	;# 
  2598     0712                     	;# 
  2599     0713                     	;# 
  2600     0714                     	;# 
  2601     0716                     	;# 
  2602     0717                     	;# 
  2603     0718                     	;# 
  2604     0719                     	;# 
  2605     071A                     	;# 
  2606     071B                     	;# 
  2607     071C                     	;# 
  2608     071D                     	;# 
  2609     071E                     	;# 
  2610     0796                     	;# 
  2611     0797                     	;# 
  2612     0798                     	;# 
  2613     0799                     	;# 
  2614     079A                     	;# 
  2615     079B                     	;# 
  2616     079C                     	;# 
  2617     079D                     	;# 
  2618     080C                     	;# 
  2619     080D                     	;# 
  2620     080E                     	;# 
  2621     080F                     	;# 
  2622     0810                     	;# 
  2623     0811                     	;# 
  2624     0812                     	;# 
  2625     0813                     	;# 
  2626     0814                     	;# 
  2627     081A                     	;# 
  2628     081A                     	;# 
  2629     081B                     	;# 
  2630     081C                     	;# 
  2631     081C                     	;# 
  2632     081D                     	;# 
  2633     081E                     	;# 
  2634     081F                     	;# 
  2635     088C                     	;# 
  2636     088D                     	;# 
  2637     088E                     	;# 
  2638     088F                     	;# 
  2639     0890                     	;# 
  2640     0891                     	;# 
  2641     0892                     	;# 
  2642     0893                     	;# 
  2643     0895                     	;# 
  2644     0896                     	;# 
  2645     0897                     	;# 
  2646     0898                     	;# 
  2647     0899                     	;# 
  2648     089A                     	;# 
  2649     089B                     	;# 
  2650     090C                     	;# 
  2651     090E                     	;# 
  2652     090F                     	;# 
  2653     091F                     	;# 
  2654     098F                     	;# 
  2655     098F                     	;# 
  2656     0990                     	;# 
  2657     0991                     	;# 
  2658     0992                     	;# 
  2659     0993                     	;# 
  2660     0994                     	;# 
  2661     0995                     	;# 
  2662     0996                     	;# 
  2663     0997                     	;# 
  2664     1E0F                     	;# 
  2665     1E10                     	;# 
  2666     1E11                     	;# 
  2667     1E12                     	;# 
  2668     1E13                     	;# 
  2669     1E14                     	;# 
  2670     1E15                     	;# 
  2671     1E16                     	;# 
  2672     1E17                     	;# 
  2673     1E18                     	;# 
  2674     1E19                     	;# 
  2675     1E1A                     	;# 
  2676     1E1B                     	;# 
  2677     1E1C                     	;# 
  2678     1E1D                     	;# 
  2679     1E1E                     	;# 
  2680     1E1F                     	;# 
  2681     1E20                     	;# 
  2682     1E21                     	;# 
  2683     1E22                     	;# 
  2684     1E23                     	;# 
  2685     1E24                     	;# 
  2686     1E25                     	;# 
  2687     1E26                     	;# 
  2688     1E27                     	;# 
  2689     1E28                     	;# 
  2690     1E29                     	;# 
  2691     1E2A                     	;# 
  2692     1E2B                     	;# 
  2693     1E2C                     	;# 
  2694     1E2D                     	;# 
  2695     1E2E                     	;# 
  2696     1E2F                     	;# 
  2697     1E30                     	;# 
  2698     1E31                     	;# 
  2699     1E32                     	;# 
  2700     1E33                     	;# 
  2701     1E34                     	;# 
  2702     1E35                     	;# 
  2703     1E36                     	;# 
  2704     1E37                     	;# 
  2705     1E8F                     	;# 
  2706     1E90                     	;# 
  2707     1E91                     	;# 
  2708     1E92                     	;# 
  2709     1E93                     	;# 
  2710     1E94                     	;# 
  2711     1E95                     	;# 
  2712     1E96                     	;# 
  2713     1E97                     	;# 
  2714     1E9C                     	;# 
  2715     1E9D                     	;# 
  2716     1E9E                     	;# 
  2717     1EA1                     	;# 
  2718     1EA2                     	;# 
  2719     1EA3                     	;# 
  2720     1EA4                     	;# 
  2721     1EA9                     	;# 
  2722     1EAA                     	;# 
  2723     1EB1                     	;# 
  2724     1EB2                     	;# 
  2725     1EB8                     	;# 
  2726     1EB9                     	;# 
  2727     1EBA                     	;# 
  2728     1EBB                     	;# 
  2729     1EBC                     	;# 
  2730     1EBD                     	;# 
  2731     1EBE                     	;# 
  2732     1EC3                     	;# 
  2733     1EC5                     	;# 
  2734     1EC6                     	;# 
  2735     1EC7                     	;# 
  2736     1EC8                     	;# 
  2737     1EC9                     	;# 
  2738     1ECA                     	;# 
  2739     1ECB                     	;# 
  2740     1ECC                     	;# 
  2741     1F10                     	;# 
  2742     1F11                     	;# 
  2743     1F12                     	;# 
  2744     1F14                     	;# 
  2745     1F15                     	;# 
  2746     1F20                     	;# 
  2747     1F21                     	;# 
  2748     1F22                     	;# 
  2749     1F23                     	;# 
  2750     1F24                     	;# 
  2751     1F25                     	;# 
  2752     1F38                     	;# 
  2753     1F39                     	;# 
  2754     1F3A                     	;# 
  2755     1F3B                     	;# 
  2756     1F3C                     	;# 
  2757     1F3D                     	;# 
  2758     1F3E                     	;# 
  2759     1F3F                     	;# 
  2760     1F4E                     	;# 
  2761     1F4F                     	;# 
  2762     1F50                     	;# 
  2763     1F51                     	;# 
  2764     1F52                     	;# 
  2765     1F53                     	;# 
  2766     1F54                     	;# 
  2767     1F55                     	;# 
  2768     1FE4                     	;# 
  2769     1FE5                     	;# 
  2770     1FE6                     	;# 
  2771     1FE7                     	;# 
  2772     1FE8                     	;# 
  2773     1FE8                     	;# 
  2774     1FE9                     	;# 
  2775     1FEA                     	;# 
  2776     1FEB                     	;# 
  2777     1FED                     	;# 
  2778     1FEE                     	;# 
  2779     1FEF                     	;# 
  2780     0000                     	;# 
  2781     0001                     	;# 
  2782     0002                     	;# 
  2783     0003                     	;# 
  2784     0004                     	;# 
  2785     0005                     	;# 
  2786     0006                     	;# 
  2787     0007                     	;# 
  2788     0008                     	;# 
  2789     0009                     	;# 
  2790     000A                     	;# 
  2791     000B                     	;# 
  2792     000C                     	;# 
  2793     000E                     	;# 
  2794     0012                     	;# 
  2795     0014                     	;# 
  2796     0018                     	;# 
  2797     001A                     	;# 
  2798     008C                     	;# 
  2799     008C                     	;# 
  2800     008D                     	;# 
  2801     008E                     	;# 
  2802     008E                     	;# 
  2803     008F                     	;# 
  2804     0090                     	;# 
  2805     0090                     	;# 
  2806     0091                     	;# 
  2807     0092                     	;# 
  2808     0092                     	;# 
  2809     0093                     	;# 
  2810     0094                     	;# 
  2811     0094                     	;# 
  2812     0095                     	;# 
  2813     0096                     	;# 
  2814     0096                     	;# 
  2815     0097                     	;# 
  2816     0098                     	;# 
  2817     0099                     	;# 
  2818     009A                     	;# 
  2819     009B                     	;# 
  2820     009B                     	;# 
  2821     009C                     	;# 
  2822     009D                     	;# 
  2823     009D                     	;# 
  2824     009E                     	;# 
  2825     009F                     	;# 
  2826     010C                     	;# 
  2827     010C                     	;# 
  2828     010D                     	;# 
  2829     010E                     	;# 
  2830     010F                     	;# 
  2831     010F                     	;# 
  2832     0110                     	;# 
  2833     0111                     	;# 
  2834     0112                     	;# 
  2835     0113                     	;# 
  2836     0114                     	;# 
  2837     0115                     	;# 
  2838     0116                     	;# 
  2839     0117                     	;# 
  2840     0118                     	;# 
  2841     0119                     	;# 
  2842     0119                     	;# 
  2843     0119                     	;# 
  2844     011A                     	;# 
  2845     011A                     	;# 
  2846     011A                     	;# 
  2847     011B                     	;# 
  2848     011B                     	;# 
  2849     011B                     	;# 
  2850     011B                     	;# 
  2851     011B                     	;# 
  2852     011C                     	;# 
  2853     011C                     	;# 
  2854     011C                     	;# 
  2855     011D                     	;# 
  2856     011D                     	;# 
  2857     011D                     	;# 
  2858     011E                     	;# 
  2859     011E                     	;# 
  2860     011E                     	;# 
  2861     011F                     	;# 
  2862     011F                     	;# 
  2863     011F                     	;# 
  2864     011F                     	;# 
  2865     011F                     	;# 
  2866     018C                     	;# 
  2867     018D                     	;# 
  2868     018E                     	;# 
  2869     018F                     	;# 
  2870     0190                     	;# 
  2871     0191                     	;# 
  2872     0192                     	;# 
  2873     0196                     	;# 
  2874     0197                     	;# 
  2875     0198                     	;# 
  2876     0199                     	;# 
  2877     019A                     	;# 
  2878     019B                     	;# 
  2879     019C                     	;# 
  2880     020C                     	;# 
  2881     020D                     	;# 
  2882     020E                     	;# 
  2883     020E                     	;# 
  2884     020F                     	;# 
  2885     020F                     	;# 
  2886     0210                     	;# 
  2887     0210                     	;# 
  2888     0211                     	;# 
  2889     0211                     	;# 
  2890     0212                     	;# 
  2891     0213                     	;# 
  2892     0214                     	;# 
  2893     0214                     	;# 
  2894     0215                     	;# 
  2895     0215                     	;# 
  2896     0216                     	;# 
  2897     0216                     	;# 
  2898     0217                     	;# 
  2899     0217                     	;# 
  2900     0218                     	;# 
  2901     0219                     	;# 
  2902     021A                     	;# 
  2903     021A                     	;# 
  2904     021B                     	;# 
  2905     021B                     	;# 
  2906     021C                     	;# 
  2907     021C                     	;# 
  2908     021D                     	;# 
  2909     021D                     	;# 
  2910     021E                     	;# 
  2911     021F                     	;# 
  2912     028C                     	;# 
  2913     028C                     	;# 
  2914     028D                     	;# 
  2915     028D                     	;# 
  2916     028E                     	;# 
  2917     028F                     	;# 
  2918     0290                     	;# 
  2919     0291                     	;# 
  2920     0292                     	;# 
  2921     0292                     	;# 
  2922     0293                     	;# 
  2923     0293                     	;# 
  2924     0294                     	;# 
  2925     0295                     	;# 
  2926     0296                     	;# 
  2927     0297                     	;# 
  2928     0298                     	;# 
  2929     0298                     	;# 
  2930     0299                     	;# 
  2931     0299                     	;# 
  2932     029A                     	;# 
  2933     029B                     	;# 
  2934     029C                     	;# 
  2935     029D                     	;# 
  2936     029F                     	;# 
  2937     030C                     	;# 
  2938     030C                     	;# 
  2939     030D                     	;# 
  2940     030E                     	;# 
  2941     030F                     	;# 
  2942     0310                     	;# 
  2943     0310                     	;# 
  2944     0311                     	;# 
  2945     0312                     	;# 
  2946     0313                     	;# 
  2947     0314                     	;# 
  2948     0314                     	;# 
  2949     0315                     	;# 
  2950     0316                     	;# 
  2951     0317                     	;# 
  2952     0318                     	;# 
  2953     0318                     	;# 
  2954     0319                     	;# 
  2955     031A                     	;# 
  2956     031B                     	;# 
  2957     038C                     	;# 
  2958     038C                     	;# 
  2959     038D                     	;# 
  2960     038E                     	;# 
  2961     0390                     	;# 
  2962     0390                     	;# 
  2963     0391                     	;# 
  2964     0392                     	;# 
  2965     048C                     	;# 
  2966     048C                     	;# 
  2967     048D                     	;# 
  2968     048E                     	;# 
  2969     048F                     	;# 
  2970     048F                     	;# 
  2971     0490                     	;# 
  2972     0491                     	;# 
  2973     0492                     	;# 
  2974     0492                     	;# 
  2975     0493                     	;# 
  2976     0494                     	;# 
  2977     0495                     	;# 
  2978     0495                     	;# 
  2979     0496                     	;# 
  2980     0497                     	;# 
  2981     0498                     	;# 
  2982     0499                     	;# 
  2983     049A                     	;# 
  2984     049B                     	;# 
  2985     049C                     	;# 
  2986     049D                     	;# 
  2987     058C                     	;# 
  2988     058C                     	;# 
  2989     058D                     	;# 
  2990     058E                     	;# 
  2991     058F                     	;# 
  2992     058F                     	;# 
  2993     0590                     	;# 
  2994     0591                     	;# 
  2995     0592                     	;# 
  2996     0593                     	;# 
  2997     059C                     	;# 
  2998     059C                     	;# 
  2999     059D                     	;# 
  3000     059D                     	;# 
  3001     059E                     	;# 
  3002     059F                     	;# 
  3003     060C                     	;# 
  3004     060C                     	;# 
  3005     060D                     	;# 
  3006     060D                     	;# 
  3007     060E                     	;# 
  3008     060F                     	;# 
  3009     0610                     	;# 
  3010     0611                     	;# 
  3011     0612                     	;# 
  3012     0613                     	;# 
  3013     0614                     	;# 
  3014     0616                     	;# 
  3015     0616                     	;# 
  3016     0617                     	;# 
  3017     0617                     	;# 
  3018     0618                     	;# 
  3019     0619                     	;# 
  3020     061A                     	;# 
  3021     061B                     	;# 
  3022     061C                     	;# 
  3023     061D                     	;# 
  3024     061E                     	;# 
  3025     070C                     	;# 
  3026     070D                     	;# 
  3027     070E                     	;# 
  3028     070F                     	;# 
  3029     0710                     	;# 
  3030     0711                     	;# 
  3031     0712                     	;# 
  3032     0713                     	;# 
  3033     0714                     	;# 
  3034     0716                     	;# 
  3035     0717                     	;# 
  3036     0718                     	;# 
  3037     0719                     	;# 
  3038     071A                     	;# 
  3039     071B                     	;# 
  3040     071C                     	;# 
  3041     071D                     	;# 
  3042     071E                     	;# 
  3043     0796                     	;# 
  3044     0797                     	;# 
  3045     0798                     	;# 
  3046     0799                     	;# 
  3047     079A                     	;# 
  3048     079B                     	;# 
  3049     079C                     	;# 
  3050     079D                     	;# 
  3051     080C                     	;# 
  3052     080D                     	;# 
  3053     080E                     	;# 
  3054     080F                     	;# 
  3055     0810                     	;# 
  3056     0811                     	;# 
  3057     0812                     	;# 
  3058     0813                     	;# 
  3059     0814                     	;# 
  3060     081A                     	;# 
  3061     081A                     	;# 
  3062     081B                     	;# 
  3063     081C                     	;# 
  3064     081C                     	;# 
  3065     081D                     	;# 
  3066     081E                     	;# 
  3067     081F                     	;# 
  3068     088C                     	;# 
  3069     088D                     	;# 
  3070     088E                     	;# 
  3071     088F                     	;# 
  3072     0890                     	;# 
  3073     0891                     	;# 
  3074     0892                     	;# 
  3075     0893                     	;# 
  3076     0895                     	;# 
  3077     0896                     	;# 
  3078     0897                     	;# 
  3079     0898                     	;# 
  3080     0899                     	;# 
  3081     089A                     	;# 
  3082     089B                     	;# 
  3083     090C                     	;# 
  3084     090E                     	;# 
  3085     090F                     	;# 
  3086     091F                     	;# 
  3087     098F                     	;# 
  3088     098F                     	;# 
  3089     0990                     	;# 
  3090     0991                     	;# 
  3091     0992                     	;# 
  3092     0993                     	;# 
  3093     0994                     	;# 
  3094     0995                     	;# 
  3095     0996                     	;# 
  3096     0997                     	;# 
  3097     1E0F                     	;# 
  3098     1E10                     	;# 
  3099     1E11                     	;# 
  3100     1E12                     	;# 
  3101     1E13                     	;# 
  3102     1E14                     	;# 
  3103     1E15                     	;# 
  3104     1E16                     	;# 
  3105     1E17                     	;# 
  3106     1E18                     	;# 
  3107     1E19                     	;# 
  3108     1E1A                     	;# 
  3109     1E1B                     	;# 
  3110     1E1C                     	;# 
  3111     1E1D                     	;# 
  3112     1E1E                     	;# 
  3113     1E1F                     	;# 
  3114     1E20                     	;# 
  3115     1E21                     	;# 
  3116     1E22                     	;# 
  3117     1E23                     	;# 
  3118     1E24                     	;# 
  3119     1E25                     	;# 
  3120     1E26                     	;# 
  3121     1E27                     	;# 
  3122     1E28                     	;# 
  3123     1E29                     	;# 
  3124     1E2A                     	;# 
  3125     1E2B                     	;# 
  3126     1E2C                     	;# 
  3127     1E2D                     	;# 
  3128     1E2E                     	;# 
  3129     1E2F                     	;# 
  3130     1E30                     	;# 
  3131     1E31                     	;# 
  3132     1E32                     	;# 
  3133     1E33                     	;# 
  3134     1E34                     	;# 
  3135     1E35                     	;# 
  3136     1E36                     	;# 
  3137     1E37                     	;# 
  3138     1E8F                     	;# 
  3139     1E90                     	;# 
  3140     1E91                     	;# 
  3141     1E92                     	;# 
  3142     1E93                     	;# 
  3143     1E94                     	;# 
  3144     1E95                     	;# 
  3145     1E96                     	;# 
  3146     1E97                     	;# 
  3147     1E9C                     	;# 
  3148     1E9D                     	;# 
  3149     1E9E                     	;# 
  3150     1EA1                     	;# 
  3151     1EA2                     	;# 
  3152     1EA3                     	;# 
  3153     1EA4                     	;# 
  3154     1EA9                     	;# 
  3155     1EAA                     	;# 
  3156     1EB1                     	;# 
  3157     1EB2                     	;# 
  3158     1EB8                     	;# 
  3159     1EB9                     	;# 
  3160     1EBA                     	;# 
  3161     1EBB                     	;# 
  3162     1EBC                     	;# 
  3163     1EBD                     	;# 
  3164     1EBE                     	;# 
  3165     1EC3                     	;# 
  3166     1EC5                     	;# 
  3167     1EC6                     	;# 
  3168     1EC7                     	;# 
  3169     1EC8                     	;# 
  3170     1EC9                     	;# 
  3171     1ECA                     	;# 
  3172     1ECB                     	;# 
  3173     1ECC                     	;# 
  3174     1F10                     	;# 
  3175     1F11                     	;# 
  3176     1F12                     	;# 
  3177     1F14                     	;# 
  3178     1F15                     	;# 
  3179     1F20                     	;# 
  3180     1F21                     	;# 
  3181     1F22                     	;# 
  3182     1F23                     	;# 
  3183     1F24                     	;# 
  3184     1F25                     	;# 
  3185     1F38                     	;# 
  3186     1F39                     	;# 
  3187     1F3A                     	;# 
  3188     1F3B                     	;# 
  3189     1F3C                     	;# 
  3190     1F3D                     	;# 
  3191     1F3E                     	;# 
  3192     1F3F                     	;# 
  3193     1F4E                     	;# 
  3194     1F4F                     	;# 
  3195     1F50                     	;# 
  3196     1F51                     	;# 
  3197     1F52                     	;# 
  3198     1F53                     	;# 
  3199     1F54                     	;# 
  3200     1F55                     	;# 
  3201     1FE4                     	;# 
  3202     1FE5                     	;# 
  3203     1FE6                     	;# 
  3204     1FE7                     	;# 
  3205     1FE8                     	;# 
  3206     1FE8                     	;# 
  3207     1FE9                     	;# 
  3208     1FEA                     	;# 
  3209     1FEB                     	;# 
  3210     1FED                     	;# 
  3211     1FEE                     	;# 
  3212     1FEF                     	;# 
  3213     0000                     	;# 
  3214     0001                     	;# 
  3215     0002                     	;# 
  3216     0003                     	;# 
  3217     0004                     	;# 
  3218     0005                     	;# 
  3219     0006                     	;# 
  3220     0007                     	;# 
  3221     0008                     	;# 
  3222     0009                     	;# 
  3223     000A                     	;# 
  3224     000B                     	;# 
  3225     000C                     	;# 
  3226     000E                     	;# 
  3227     0012                     	;# 
  3228     0014                     	;# 
  3229     0018                     	;# 
  3230     001A                     	;# 
  3231     008C                     	;# 
  3232     008C                     	;# 
  3233     008D                     	;# 
  3234     008E                     	;# 
  3235     008E                     	;# 
  3236     008F                     	;# 
  3237     0090                     	;# 
  3238     0090                     	;# 
  3239     0091                     	;# 
  3240     0092                     	;# 
  3241     0092                     	;# 
  3242     0093                     	;# 
  3243     0094                     	;# 
  3244     0094                     	;# 
  3245     0095                     	;# 
  3246     0096                     	;# 
  3247     0096                     	;# 
  3248     0097                     	;# 
  3249     0098                     	;# 
  3250     0099                     	;# 
  3251     009A                     	;# 
  3252     009B                     	;# 
  3253     009B                     	;# 
  3254     009C                     	;# 
  3255     009D                     	;# 
  3256     009D                     	;# 
  3257     009E                     	;# 
  3258     009F                     	;# 
  3259     010C                     	;# 
  3260     010C                     	;# 
  3261     010D                     	;# 
  3262     010E                     	;# 
  3263     010F                     	;# 
  3264     010F                     	;# 
  3265     0110                     	;# 
  3266     0111                     	;# 
  3267     0112                     	;# 
  3268     0113                     	;# 
  3269     0114                     	;# 
  3270     0115                     	;# 
  3271     0116                     	;# 
  3272     0117                     	;# 
  3273     0118                     	;# 
  3274     0119                     	;# 
  3275     0119                     	;# 
  3276     0119                     	;# 
  3277     011A                     	;# 
  3278     011A                     	;# 
  3279     011A                     	;# 
  3280     011B                     	;# 
  3281     011B                     	;# 
  3282     011B                     	;# 
  3283     011B                     	;# 
  3284     011B                     	;# 
  3285     011C                     	;# 
  3286     011C                     	;# 
  3287     011C                     	;# 
  3288     011D                     	;# 
  3289     011D                     	;# 
  3290     011D                     	;# 
  3291     011E                     	;# 
  3292     011E                     	;# 
  3293     011E                     	;# 
  3294     011F                     	;# 
  3295     011F                     	;# 
  3296     011F                     	;# 
  3297     011F                     	;# 
  3298     011F                     	;# 
  3299     018C                     	;# 
  3300     018D                     	;# 
  3301     018E                     	;# 
  3302     018F                     	;# 
  3303     0190                     	;# 
  3304     0191                     	;# 
  3305     0192                     	;# 
  3306     0196                     	;# 
  3307     0197                     	;# 
  3308     0198                     	;# 
  3309     0199                     	;# 
  3310     019A                     	;# 
  3311     019B                     	;# 
  3312     019C                     	;# 
  3313     020C                     	;# 
  3314     020D                     	;# 
  3315     020E                     	;# 
  3316     020E                     	;# 
  3317     020F                     	;# 
  3318     020F                     	;# 
  3319     0210                     	;# 
  3320     0210                     	;# 
  3321     0211                     	;# 
  3322     0211                     	;# 
  3323     0212                     	;# 
  3324     0213                     	;# 
  3325     0214                     	;# 
  3326     0214                     	;# 
  3327     0215                     	;# 
  3328     0215                     	;# 
  3329     0216                     	;# 
  3330     0216                     	;# 
  3331     0217                     	;# 
  3332     0217                     	;# 
  3333     0218                     	;# 
  3334     0219                     	;# 
  3335     021A                     	;# 
  3336     021A                     	;# 
  3337     021B                     	;# 
  3338     021B                     	;# 
  3339     021C                     	;# 
  3340     021C                     	;# 
  3341     021D                     	;# 
  3342     021D                     	;# 
  3343     021E                     	;# 
  3344     021F                     	;# 
  3345     028C                     	;# 
  3346     028C                     	;# 
  3347     028D                     	;# 
  3348     028D                     	;# 
  3349     028E                     	;# 
  3350     028F                     	;# 
  3351     0290                     	;# 
  3352     0291                     	;# 
  3353     0292                     	;# 
  3354     0292                     	;# 
  3355     0293                     	;# 
  3356     0293                     	;# 
  3357     0294                     	;# 
  3358     0295                     	;# 
  3359     0296                     	;# 
  3360     0297                     	;# 
  3361     0298                     	;# 
  3362     0298                     	;# 
  3363     0299                     	;# 
  3364     0299                     	;# 
  3365     029A                     	;# 
  3366     029B                     	;# 
  3367     029C                     	;# 
  3368     029D                     	;# 
  3369     029F                     	;# 
  3370     030C                     	;# 
  3371     030C                     	;# 
  3372     030D                     	;# 
  3373     030E                     	;# 
  3374     030F                     	;# 
  3375     0310                     	;# 
  3376     0310                     	;# 
  3377     0311                     	;# 
  3378     0312                     	;# 
  3379     0313                     	;# 
  3380     0314                     	;# 
  3381     0314                     	;# 
  3382     0315                     	;# 
  3383     0316                     	;# 
  3384     0317                     	;# 
  3385     0318                     	;# 
  3386     0318                     	;# 
  3387     0319                     	;# 
  3388     031A                     	;# 
  3389     031B                     	;# 
  3390     038C                     	;# 
  3391     038C                     	;# 
  3392     038D                     	;# 
  3393     038E                     	;# 
  3394     0390                     	;# 
  3395     0390                     	;# 
  3396     0391                     	;# 
  3397     0392                     	;# 
  3398     048C                     	;# 
  3399     048C                     	;# 
  3400     048D                     	;# 
  3401     048E                     	;# 
  3402     048F                     	;# 
  3403     048F                     	;# 
  3404     0490                     	;# 
  3405     0491                     	;# 
  3406     0492                     	;# 
  3407     0492                     	;# 
  3408     0493                     	;# 
  3409     0494                     	;# 
  3410     0495                     	;# 
  3411     0495                     	;# 
  3412     0496                     	;# 
  3413     0497                     	;# 
  3414     0498                     	;# 
  3415     0499                     	;# 
  3416     049A                     	;# 
  3417     049B                     	;# 
  3418     049C                     	;# 
  3419     049D                     	;# 
  3420     058C                     	;# 
  3421     058C                     	;# 
  3422     058D                     	;# 
  3423     058E                     	;# 
  3424     058F                     	;# 
  3425     058F                     	;# 
  3426     0590                     	;# 
  3427     0591                     	;# 
  3428     0592                     	;# 
  3429     0593                     	;# 
  3430     059C                     	;# 
  3431     059C                     	;# 
  3432     059D                     	;# 
  3433     059D                     	;# 
  3434     059E                     	;# 
  3435     059F                     	;# 
  3436     060C                     	;# 
  3437     060C                     	;# 
  3438     060D                     	;# 
  3439     060D                     	;# 
  3440     060E                     	;# 
  3441     060F                     	;# 
  3442     0610                     	;# 
  3443     0611                     	;# 
  3444     0612                     	;# 
  3445     0613                     	;# 
  3446     0614                     	;# 
  3447     0616                     	;# 
  3448     0616                     	;# 
  3449     0617                     	;# 
  3450     0617                     	;# 
  3451     0618                     	;# 
  3452     0619                     	;# 
  3453     061A                     	;# 
  3454     061B                     	;# 
  3455     061C                     	;# 
  3456     061D                     	;# 
  3457     061E                     	;# 
  3458     070C                     	;# 
  3459     070D                     	;# 
  3460     070E                     	;# 
  3461     070F                     	;# 
  3462     0710                     	;# 
  3463     0711                     	;# 
  3464     0712                     	;# 
  3465     0713                     	;# 
  3466     0714                     	;# 
  3467     0716                     	;# 
  3468     0717                     	;# 
  3469     0718                     	;# 
  3470     0719                     	;# 
  3471     071A                     	;# 
  3472     071B                     	;# 
  3473     071C                     	;# 
  3474     071D                     	;# 
  3475     071E                     	;# 
  3476     0796                     	;# 
  3477     0797                     	;# 
  3478     0798                     	;# 
  3479     0799                     	;# 
  3480     079A                     	;# 
  3481     079B                     	;# 
  3482     079C                     	;# 
  3483     079D                     	;# 
  3484     080C                     	;# 
  3485     080D                     	;# 
  3486     080E                     	;# 
  3487     080F                     	;# 
  3488     0810                     	;# 
  3489     0811                     	;# 
  3490     0812                     	;# 
  3491     0813                     	;# 
  3492     0814                     	;# 
  3493     081A                     	;# 
  3494     081A                     	;# 
  3495     081B                     	;# 
  3496     081C                     	;# 
  3497     081C                     	;# 
  3498     081D                     	;# 
  3499     081E                     	;# 
  3500     081F                     	;# 
  3501     088C                     	;# 
  3502     088D                     	;# 
  3503     088E                     	;# 
  3504     088F                     	;# 
  3505     0890                     	;# 
  3506     0891                     	;# 
  3507     0892                     	;# 
  3508     0893                     	;# 
  3509     0895                     	;# 
  3510     0896                     	;# 
  3511     0897                     	;# 
  3512     0898                     	;# 
  3513     0899                     	;# 
  3514     089A                     	;# 
  3515     089B                     	;# 
  3516     090C                     	;# 
  3517     090E                     	;# 
  3518     090F                     	;# 
  3519     091F                     	;# 
  3520     098F                     	;# 
  3521     098F                     	;# 
  3522     0990                     	;# 
  3523     0991                     	;# 
  3524     0992                     	;# 
  3525     0993                     	;# 
  3526     0994                     	;# 
  3527     0995                     	;# 
  3528     0996                     	;# 
  3529     0997                     	;# 
  3530     1E0F                     	;# 
  3531     1E10                     	;# 
  3532     1E11                     	;# 
  3533     1E12                     	;# 
  3534     1E13                     	;# 
  3535     1E14                     	;# 
  3536     1E15                     	;# 
  3537     1E16                     	;# 
  3538     1E17                     	;# 
  3539     1E18                     	;# 
  3540     1E19                     	;# 
  3541     1E1A                     	;# 
  3542     1E1B                     	;# 
  3543     1E1C                     	;# 
  3544     1E1D                     	;# 
  3545     1E1E                     	;# 
  3546     1E1F                     	;# 
  3547     1E20                     	;# 
  3548     1E21                     	;# 
  3549     1E22                     	;# 
  3550     1E23                     	;# 
  3551     1E24                     	;# 
  3552     1E25                     	;# 
  3553     1E26                     	;# 
  3554     1E27                     	;# 
  3555     1E28                     	;# 
  3556     1E29                     	;# 
  3557     1E2A                     	;# 
  3558     1E2B                     	;# 
  3559     1E2C                     	;# 
  3560     1E2D                     	;# 
  3561     1E2E                     	;# 
  3562     1E2F                     	;# 
  3563     1E30                     	;# 
  3564     1E31                     	;# 
  3565     1E32                     	;# 
  3566     1E33                     	;# 
  3567     1E34                     	;# 
  3568     1E35                     	;# 
  3569     1E36                     	;# 
  3570     1E37                     	;# 
  3571     1E8F                     	;# 
  3572     1E90                     	;# 
  3573     1E91                     	;# 
  3574     1E92                     	;# 
  3575     1E93                     	;# 
  3576     1E94                     	;# 
  3577     1E95                     	;# 
  3578     1E96                     	;# 
  3579     1E97                     	;# 
  3580     1E9C                     	;# 
  3581     1E9D                     	;# 
  3582     1E9E                     	;# 
  3583     1EA1                     	;# 
  3584     1EA2                     	;# 
  3585     1EA3                     	;# 
  3586     1EA4                     	;# 
  3587     1EA9                     	;# 
  3588     1EAA                     	;# 
  3589     1EB1                     	;# 
  3590     1EB2                     	;# 
  3591     1EB8                     	;# 
  3592     1EB9                     	;# 
  3593     1EBA                     	;# 
  3594     1EBB                     	;# 
  3595     1EBC                     	;# 
  3596     1EBD                     	;# 
  3597     1EBE                     	;# 
  3598     1EC3                     	;# 
  3599     1EC5                     	;# 
  3600     1EC6                     	;# 
  3601     1EC7                     	;# 
  3602     1EC8                     	;# 
  3603     1EC9                     	;# 
  3604     1ECA                     	;# 
  3605     1ECB                     	;# 
  3606     1ECC                     	;# 
  3607     1F10                     	;# 
  3608     1F11                     	;# 
  3609     1F12                     	;# 
  3610     1F14                     	;# 
  3611     1F15                     	;# 
  3612     1F20                     	;# 
  3613     1F21                     	;# 
  3614     1F22                     	;# 
  3615     1F23                     	;# 
  3616     1F24                     	;# 
  3617     1F25                     	;# 
  3618     1F38                     	;# 
  3619     1F39                     	;# 
  3620     1F3A                     	;# 
  3621     1F3B                     	;# 
  3622     1F3C                     	;# 
  3623     1F3D                     	;# 
  3624     1F3E                     	;# 
  3625     1F3F                     	;# 
  3626     1F4E                     	;# 
  3627     1F4F                     	;# 
  3628     1F50                     	;# 
  3629     1F51                     	;# 
  3630     1F52                     	;# 
  3631     1F53                     	;# 
  3632     1F54                     	;# 
  3633     1F55                     	;# 
  3634     1FE4                     	;# 
  3635     1FE5                     	;# 
  3636     1FE6                     	;# 
  3637     1FE7                     	;# 
  3638     1FE8                     	;# 
  3639     1FE8                     	;# 
  3640     1FE9                     	;# 
  3641     1FEA                     	;# 
  3642     1FEB                     	;# 
  3643     1FED                     	;# 
  3644     1FEE                     	;# 
  3645     1FEF                     	;# 
  3646     0000                     	;# 
  3647     0001                     	;# 
  3648     0002                     	;# 
  3649     0003                     	;# 
  3650     0004                     	;# 
  3651     0005                     	;# 
  3652     0006                     	;# 
  3653     0007                     	;# 
  3654     0008                     	;# 
  3655     0009                     	;# 
  3656     000A                     	;# 
  3657     000B                     	;# 
  3658     000C                     	;# 
  3659     000E                     	;# 
  3660     0012                     	;# 
  3661     0014                     	;# 
  3662     0018                     	;# 
  3663     001A                     	;# 
  3664     008C                     	;# 
  3665     008C                     	;# 
  3666     008D                     	;# 
  3667     008E                     	;# 
  3668     008E                     	;# 
  3669     008F                     	;# 
  3670     0090                     	;# 
  3671     0090                     	;# 
  3672     0091                     	;# 
  3673     0092                     	;# 
  3674     0092                     	;# 
  3675     0093                     	;# 
  3676     0094                     	;# 
  3677     0094                     	;# 
  3678     0095                     	;# 
  3679     0096                     	;# 
  3680     0096                     	;# 
  3681     0097                     	;# 
  3682     0098                     	;# 
  3683     0099                     	;# 
  3684     009A                     	;# 
  3685     009B                     	;# 
  3686     009B                     	;# 
  3687     009C                     	;# 
  3688     009D                     	;# 
  3689     009D                     	;# 
  3690     009E                     	;# 
  3691     009F                     	;# 
  3692     010C                     	;# 
  3693     010C                     	;# 
  3694     010D                     	;# 
  3695     010E                     	;# 
  3696     010F                     	;# 
  3697     010F                     	;# 
  3698     0110                     	;# 
  3699     0111                     	;# 
  3700     0112                     	;# 
  3701     0113                     	;# 
  3702     0114                     	;# 
  3703     0115                     	;# 
  3704     0116                     	;# 
  3705     0117                     	;# 
  3706     0118                     	;# 
  3707     0119                     	;# 
  3708     0119                     	;# 
  3709     0119                     	;# 
  3710     011A                     	;# 
  3711     011A                     	;# 
  3712     011A                     	;# 
  3713     011B                     	;# 
  3714     011B                     	;# 
  3715     011B                     	;# 
  3716     011B                     	;# 
  3717     011B                     	;# 
  3718     011C                     	;# 
  3719     011C                     	;# 
  3720     011C                     	;# 
  3721     011D                     	;# 
  3722     011D                     	;# 
  3723     011D                     	;# 
  3724     011E                     	;# 
  3725     011E                     	;# 
  3726     011E                     	;# 
  3727     011F                     	;# 
  3728     011F                     	;# 
  3729     011F                     	;# 
  3730     011F                     	;# 
  3731     011F                     	;# 
  3732     018C                     	;# 
  3733     018D                     	;# 
  3734     018E                     	;# 
  3735     018F                     	;# 
  3736     0190                     	;# 
  3737     0191                     	;# 
  3738     0192                     	;# 
  3739     0196                     	;# 
  3740     0197                     	;# 
  3741     0198                     	;# 
  3742     0199                     	;# 
  3743     019A                     	;# 
  3744     019B                     	;# 
  3745     019C                     	;# 
  3746     020C                     	;# 
  3747     020D                     	;# 
  3748     020E                     	;# 
  3749     020E                     	;# 
  3750     020F                     	;# 
  3751     020F                     	;# 
  3752     0210                     	;# 
  3753     0210                     	;# 
  3754     0211                     	;# 
  3755     0211                     	;# 
  3756     0212                     	;# 
  3757     0213                     	;# 
  3758     0214                     	;# 
  3759     0214                     	;# 
  3760     0215                     	;# 
  3761     0215                     	;# 
  3762     0216                     	;# 
  3763     0216                     	;# 
  3764     0217                     	;# 
  3765     0217                     	;# 
  3766     0218                     	;# 
  3767     0219                     	;# 
  3768     021A                     	;# 
  3769     021A                     	;# 
  3770     021B                     	;# 
  3771     021B                     	;# 
  3772     021C                     	;# 
  3773     021C                     	;# 
  3774     021D                     	;# 
  3775     021D                     	;# 
  3776     021E                     	;# 
  3777     021F                     	;# 
  3778     028C                     	;# 
  3779     028C                     	;# 
  3780     028D                     	;# 
  3781     028D                     	;# 
  3782     028E                     	;# 
  3783     028F                     	;# 
  3784     0290                     	;# 
  3785     0291                     	;# 
  3786     0292                     	;# 
  3787     0292                     	;# 
  3788     0293                     	;# 
  3789     0293                     	;# 
  3790     0294                     	;# 
  3791     0295                     	;# 
  3792     0296                     	;# 
  3793     0297                     	;# 
  3794     0298                     	;# 
  3795     0298                     	;# 
  3796     0299                     	;# 
  3797     0299                     	;# 
  3798     029A                     	;# 
  3799     029B                     	;# 
  3800     029C                     	;# 
  3801     029D                     	;# 
  3802     029F                     	;# 
  3803     030C                     	;# 
  3804     030C                     	;# 
  3805     030D                     	;# 
  3806     030E                     	;# 
  3807     030F                     	;# 
  3808     0310                     	;# 
  3809     0310                     	;# 
  3810     0311                     	;# 
  3811     0312                     	;# 
  3812     0313                     	;# 
  3813     0314                     	;# 
  3814     0314                     	;# 
  3815     0315                     	;# 
  3816     0316                     	;# 
  3817     0317                     	;# 
  3818     0318                     	;# 
  3819     0318                     	;# 
  3820     0319                     	;# 
  3821     031A                     	;# 
  3822     031B                     	;# 
  3823     038C                     	;# 
  3824     038C                     	;# 
  3825     038D                     	;# 
  3826     038E                     	;# 
  3827     0390                     	;# 
  3828     0390                     	;# 
  3829     0391                     	;# 
  3830     0392                     	;# 
  3831     048C                     	;# 
  3832     048C                     	;# 
  3833     048D                     	;# 
  3834     048E                     	;# 
  3835     048F                     	;# 
  3836     048F                     	;# 
  3837     0490                     	;# 
  3838     0491                     	;# 
  3839     0492                     	;# 
  3840     0492                     	;# 
  3841     0493                     	;# 
  3842     0494                     	;# 
  3843     0495                     	;# 
  3844     0495                     	;# 
  3845     0496                     	;# 
  3846     0497                     	;# 
  3847     0498                     	;# 
  3848     0499                     	;# 
  3849     049A                     	;# 
  3850     049B                     	;# 
  3851     049C                     	;# 
  3852     049D                     	;# 
  3853     058C                     	;# 
  3854     058C                     	;# 
  3855     058D                     	;# 
  3856     058E                     	;# 
  3857     058F                     	;# 
  3858     058F                     	;# 
  3859     0590                     	;# 
  3860     0591                     	;# 
  3861     0592                     	;# 
  3862     0593                     	;# 
  3863     059C                     	;# 
  3864     059C                     	;# 
  3865     059D                     	;# 
  3866     059D                     	;# 
  3867     059E                     	;# 
  3868     059F                     	;# 
  3869     060C                     	;# 
  3870     060C                     	;# 
  3871     060D                     	;# 
  3872     060D                     	;# 
  3873     060E                     	;# 
  3874     060F                     	;# 
  3875     0610                     	;# 
  3876     0611                     	;# 
  3877     0612                     	;# 
  3878     0613                     	;# 
  3879     0614                     	;# 
  3880     0616                     	;# 
  3881     0616                     	;# 
  3882     0617                     	;# 
  3883     0617                     	;# 
  3884     0618                     	;# 
  3885     0619                     	;# 
  3886     061A                     	;# 
  3887     061B                     	;# 
  3888     061C                     	;# 
  3889     061D                     	;# 
  3890     061E                     	;# 
  3891     070C                     	;# 
  3892     070D                     	;# 
  3893     070E                     	;# 
  3894     070F                     	;# 
  3895     0710                     	;# 
  3896     0711                     	;# 
  3897     0712                     	;# 
  3898     0713                     	;# 
  3899     0714                     	;# 
  3900     0716                     	;# 
  3901     0717                     	;# 
  3902     0718                     	;# 
  3903     0719                     	;# 
  3904     071A                     	;# 
  3905     071B                     	;# 
  3906     071C                     	;# 
  3907     071D                     	;# 
  3908     071E                     	;# 
  3909     0796                     	;# 
  3910     0797                     	;# 
  3911     0798                     	;# 
  3912     0799                     	;# 
  3913     079A                     	;# 
  3914     079B                     	;# 
  3915     079C                     	;# 
  3916     079D                     	;# 
  3917     080C                     	;# 
  3918     080D                     	;# 
  3919     080E                     	;# 
  3920     080F                     	;# 
  3921     0810                     	;# 
  3922     0811                     	;# 
  3923     0812                     	;# 
  3924     0813                     	;# 
  3925     0814                     	;# 
  3926     081A                     	;# 
  3927     081A                     	;# 
  3928     081B                     	;# 
  3929     081C                     	;# 
  3930     081C                     	;# 
  3931     081D                     	;# 
  3932     081E                     	;# 
  3933     081F                     	;# 
  3934     088C                     	;# 
  3935     088D                     	;# 
  3936     088E                     	;# 
  3937     088F                     	;# 
  3938     0890                     	;# 
  3939     0891                     	;# 
  3940     0892                     	;# 
  3941     0893                     	;# 
  3942     0895                     	;# 
  3943     0896                     	;# 
  3944     0897                     	;# 
  3945     0898                     	;# 
  3946     0899                     	;# 
  3947     089A                     	;# 
  3948     089B                     	;# 
  3949     090C                     	;# 
  3950     090E                     	;# 
  3951     090F                     	;# 
  3952     091F                     	;# 
  3953     098F                     	;# 
  3954     098F                     	;# 
  3955     0990                     	;# 
  3956     0991                     	;# 
  3957     0992                     	;# 
  3958     0993                     	;# 
  3959     0994                     	;# 
  3960     0995                     	;# 
  3961     0996                     	;# 
  3962     0997                     	;# 
  3963     1E0F                     	;# 
  3964     1E10                     	;# 
  3965     1E11                     	;# 
  3966     1E12                     	;# 
  3967     1E13                     	;# 
  3968     1E14                     	;# 
  3969     1E15                     	;# 
  3970     1E16                     	;# 
  3971     1E17                     	;# 
  3972     1E18                     	;# 
  3973     1E19                     	;# 
  3974     1E1A                     	;# 
  3975     1E1B                     	;# 
  3976     1E1C                     	;# 
  3977     1E1D                     	;# 
  3978     1E1E                     	;# 
  3979     1E1F                     	;# 
  3980     1E20                     	;# 
  3981     1E21                     	;# 
  3982     1E22                     	;# 
  3983     1E23                     	;# 
  3984     1E24                     	;# 
  3985     1E25                     	;# 
  3986     1E26                     	;# 
  3987     1E27                     	;# 
  3988     1E28                     	;# 
  3989     1E29                     	;# 
  3990     1E2A                     	;# 
  3991     1E2B                     	;# 
  3992     1E2C                     	;# 
  3993     1E2D                     	;# 
  3994     1E2E                     	;# 
  3995     1E2F                     	;# 
  3996     1E30                     	;# 
  3997     1E31                     	;# 
  3998     1E32                     	;# 
  3999     1E33                     	;# 
  4000     1E34                     	;# 
  4001     1E35                     	;# 
  4002     1E36                     	;# 
  4003     1E37                     	;# 
  4004     1E8F                     	;# 
  4005     1E90                     	;# 
  4006     1E91                     	;# 
  4007     1E92                     	;# 
  4008     1E93                     	;# 
  4009     1E94                     	;# 
  4010     1E95                     	;# 
  4011     1E96                     	;# 
  4012     1E97                     	;# 
  4013     1E9C                     	;# 
  4014     1E9D                     	;# 
  4015     1E9E                     	;# 
  4016     1EA1                     	;# 
  4017     1EA2                     	;# 
  4018     1EA3                     	;# 
  4019     1EA4                     	;# 
  4020     1EA9                     	;# 
  4021     1EAA                     	;# 
  4022     1EB1                     	;# 
  4023     1EB2                     	;# 
  4024     1EB8                     	;# 
  4025     1EB9                     	;# 
  4026     1EBA                     	;# 
  4027     1EBB                     	;# 
  4028     1EBC                     	;# 
  4029     1EBD                     	;# 
  4030     1EBE                     	;# 
  4031     1EC3                     	;# 
  4032     1EC5                     	;# 
  4033     1EC6                     	;# 
  4034     1EC7                     	;# 
  4035     1EC8                     	;# 
  4036     1EC9                     	;# 
  4037     1ECA                     	;# 
  4038     1ECB                     	;# 
  4039     1ECC                     	;# 
  4040     1F10                     	;# 
  4041     1F11                     	;# 
  4042     1F12                     	;# 
  4043     1F14                     	;# 
  4044     1F15                     	;# 
  4045     1F20                     	;# 
  4046     1F21                     	;# 
  4047     1F22                     	;# 
  4048     1F23                     	;# 
  4049     1F24                     	;# 
  4050     1F25                     	;# 
  4051     1F38                     	;# 
  4052     1F39                     	;# 
  4053     1F3A                     	;# 
  4054     1F3B                     	;# 
  4055     1F3C                     	;# 
  4056     1F3D                     	;# 
  4057     1F3E                     	;# 
  4058     1F3F                     	;# 
  4059     1F4E                     	;# 
  4060     1F4F                     	;# 
  4061     1F50                     	;# 
  4062     1F51                     	;# 
  4063     1F52                     	;# 
  4064     1F53                     	;# 
  4065     1F54                     	;# 
  4066     1F55                     	;# 
  4067     1FE4                     	;# 
  4068     1FE5                     	;# 
  4069     1FE6                     	;# 
  4070     1FE7                     	;# 
  4071     1FE8                     	;# 
  4072     1FE8                     	;# 
  4073     1FE9                     	;# 
  4074     1FEA                     	;# 
  4075     1FEB                     	;# 
  4076     1FED                     	;# 
  4077     1FEE                     	;# 
  4078     1FEF                     	;# 
  4079     0000                     	;# 
  4080     0001                     	;# 
  4081     0002                     	;# 
  4082     0003                     	;# 
  4083     0004                     	;# 
  4084     0005                     	;# 
  4085     0006                     	;# 
  4086     0007                     	;# 
  4087     0008                     	;# 
  4088     0009                     	;# 
  4089     000A                     	;# 
  4090     000B                     	;# 
  4091     000C                     	;# 
  4092     000E                     	;# 
  4093     0012                     	;# 
  4094     0014                     	;# 
  4095     0018                     	;# 
  4096     001A                     	;# 
  4097     008C                     	;# 
  4098     008C                     	;# 
  4099     008D                     	;# 
  4100     008E                     	;# 
  4101     008E                     	;# 
  4102     008F                     	;# 
  4103     0090                     	;# 
  4104     0090                     	;# 
  4105     0091                     	;# 
  4106     0092                     	;# 
  4107     0092                     	;# 
  4108     0093                     	;# 
  4109     0094                     	;# 
  4110     0094                     	;# 
  4111     0095                     	;# 
  4112     0096                     	;# 
  4113     0096                     	;# 
  4114     0097                     	;# 
  4115     0098                     	;# 
  4116     0099                     	;# 
  4117     009A                     	;# 
  4118     009B                     	;# 
  4119     009B                     	;# 
  4120     009C                     	;# 
  4121     009D                     	;# 
  4122     009D                     	;# 
  4123     009E                     	;# 
  4124     009F                     	;# 
  4125     010C                     	;# 
  4126     010C                     	;# 
  4127     010D                     	;# 
  4128     010E                     	;# 
  4129     010F                     	;# 
  4130     010F                     	;# 
  4131     0110                     	;# 
  4132     0111                     	;# 
  4133     0112                     	;# 
  4134     0113                     	;# 
  4135     0114                     	;# 
  4136     0115                     	;# 
  4137     0116                     	;# 
  4138     0117                     	;# 
  4139     0118                     	;# 
  4140     0119                     	;# 
  4141     0119                     	;# 
  4142     0119                     	;# 
  4143     011A                     	;# 
  4144     011A                     	;# 
  4145     011A                     	;# 
  4146     011B                     	;# 
  4147     011B                     	;# 
  4148     011B                     	;# 
  4149     011B                     	;# 
  4150     011B                     	;# 
  4151     011C                     	;# 
  4152     011C                     	;# 
  4153     011C                     	;# 
  4154     011D                     	;# 
  4155     011D                     	;# 
  4156     011D                     	;# 
  4157     011E                     	;# 
  4158     011E                     	;# 
  4159     011E                     	;# 
  4160     011F                     	;# 
  4161     011F                     	;# 
  4162     011F                     	;# 
  4163     011F                     	;# 
  4164     011F                     	;# 
  4165     018C                     	;# 
  4166     018D                     	;# 
  4167     018E                     	;# 
  4168     018F                     	;# 
  4169     0190                     	;# 
  4170     0191                     	;# 
  4171     0192                     	;# 
  4172     0196                     	;# 
  4173     0197                     	;# 
  4174     0198                     	;# 
  4175     0199                     	;# 
  4176     019A                     	;# 
  4177     019B                     	;# 
  4178     019C                     	;# 
  4179     020C                     	;# 
  4180     020D                     	;# 
  4181     020E                     	;# 
  4182     020E                     	;# 
  4183     020F                     	;# 
  4184     020F                     	;# 
  4185     0210                     	;# 
  4186     0210                     	;# 
  4187     0211                     	;# 
  4188     0211                     	;# 
  4189     0212                     	;# 
  4190     0213                     	;# 
  4191     0214                     	;# 
  4192     0214                     	;# 
  4193     0215                     	;# 
  4194     0215                     	;# 
  4195     0216                     	;# 
  4196     0216                     	;# 
  4197     0217                     	;# 
  4198     0217                     	;# 
  4199     0218                     	;# 
  4200     0219                     	;# 
  4201     021A                     	;# 
  4202     021A                     	;# 
  4203     021B                     	;# 
  4204     021B                     	;# 
  4205     021C                     	;# 
  4206     021C                     	;# 
  4207     021D                     	;# 
  4208     021D                     	;# 
  4209     021E                     	;# 
  4210     021F                     	;# 
  4211     028C                     	;# 
  4212     028C                     	;# 
  4213     028D                     	;# 
  4214     028D                     	;# 
  4215     028E                     	;# 
  4216     028F                     	;# 
  4217     0290                     	;# 
  4218     0291                     	;# 
  4219     0292                     	;# 
  4220     0292                     	;# 
  4221     0293                     	;# 
  4222     0293                     	;# 
  4223     0294                     	;# 
  4224     0295                     	;# 
  4225     0296                     	;# 
  4226     0297                     	;# 
  4227     0298                     	;# 
  4228     0298                     	;# 
  4229     0299                     	;# 
  4230     0299                     	;# 
  4231     029A                     	;# 
  4232     029B                     	;# 
  4233     029C                     	;# 
  4234     029D                     	;# 
  4235     029F                     	;# 
  4236     030C                     	;# 
  4237     030C                     	;# 
  4238     030D                     	;# 
  4239     030E                     	;# 
  4240     030F                     	;# 
  4241     0310                     	;# 
  4242     0310                     	;# 
  4243     0311                     	;# 
  4244     0312                     	;# 
  4245     0313                     	;# 
  4246     0314                     	;# 
  4247     0314                     	;# 
  4248     0315                     	;# 
  4249     0316                     	;# 
  4250     0317                     	;# 
  4251     0318                     	;# 
  4252     0318                     	;# 
  4253     0319                     	;# 
  4254     031A                     	;# 
  4255     031B                     	;# 
  4256     038C                     	;# 
  4257     038C                     	;# 
  4258     038D                     	;# 
  4259     038E                     	;# 
  4260     0390                     	;# 
  4261     0390                     	;# 
  4262     0391                     	;# 
  4263     0392                     	;# 
  4264     048C                     	;# 
  4265     048C                     	;# 
  4266     048D                     	;# 
  4267     048E                     	;# 
  4268     048F                     	;# 
  4269     048F                     	;# 
  4270     0490                     	;# 
  4271     0491                     	;# 
  4272     0492                     	;# 
  4273     0492                     	;# 
  4274     0493                     	;# 
  4275     0494                     	;# 
  4276     0495                     	;# 
  4277     0495                     	;# 
  4278     0496                     	;# 
  4279     0497                     	;# 
  4280     0498                     	;# 
  4281     0499                     	;# 
  4282     049A                     	;# 
  4283     049B                     	;# 
  4284     049C                     	;# 
  4285     049D                     	;# 
  4286     058C                     	;# 
  4287     058C                     	;# 
  4288     058D                     	;# 
  4289     058E                     	;# 
  4290     058F                     	;# 
  4291     058F                     	;# 
  4292     0590                     	;# 
  4293     0591                     	;# 
  4294     0592                     	;# 
  4295     0593                     	;# 
  4296     059C                     	;# 
  4297     059C                     	;# 
  4298     059D                     	;# 
  4299     059D                     	;# 
  4300     059E                     	;# 
  4301     059F                     	;# 
  4302     060C                     	;# 
  4303     060C                     	;# 
  4304     060D                     	;# 
  4305     060D                     	;# 
  4306     060E                     	;# 
  4307     060F                     	;# 
  4308     0610                     	;# 
  4309     0611                     	;# 
  4310     0612                     	;# 
  4311     0613                     	;# 
  4312     0614                     	;# 
  4313     0616                     	;# 
  4314     0616                     	;# 
  4315     0617                     	;# 
  4316     0617                     	;# 
  4317     0618                     	;# 
  4318     0619                     	;# 
  4319     061A                     	;# 
  4320     061B                     	;# 
  4321     061C                     	;# 
  4322     061D                     	;# 
  4323     061E                     	;# 
  4324     070C                     	;# 
  4325     070D                     	;# 
  4326     070E                     	;# 
  4327     070F                     	;# 
  4328     0710                     	;# 
  4329     0711                     	;# 
  4330     0712                     	;# 
  4331     0713                     	;# 
  4332     0714                     	;# 
  4333     0716                     	;# 
  4334     0717                     	;# 
  4335     0718                     	;# 
  4336     0719                     	;# 
  4337     071A                     	;# 
  4338     071B                     	;# 
  4339     071C                     	;# 
  4340     071D                     	;# 
  4341     071E                     	;# 
  4342     0796                     	;# 
  4343     0797                     	;# 
  4344     0798                     	;# 
  4345     0799                     	;# 
  4346     079A                     	;# 
  4347     079B                     	;# 
  4348     079C                     	;# 
  4349     079D                     	;# 
  4350     080C                     	;# 
  4351     080D                     	;# 
  4352     080E                     	;# 
  4353     080F                     	;# 
  4354     0810                     	;# 
  4355     0811                     	;# 
  4356     0812                     	;# 
  4357     0813                     	;# 
  4358     0814                     	;# 
  4359     081A                     	;# 
  4360     081A                     	;# 
  4361     081B                     	;# 
  4362     081C                     	;# 
  4363     081C                     	;# 
  4364     081D                     	;# 
  4365     081E                     	;# 
  4366     081F                     	;# 
  4367     088C                     	;# 
  4368     088D                     	;# 
  4369     088E                     	;# 
  4370     088F                     	;# 
  4371     0890                     	;# 
  4372     0891                     	;# 
  4373     0892                     	;# 
  4374     0893                     	;# 
  4375     0895                     	;# 
  4376     0896                     	;# 
  4377     0897                     	;# 
  4378     0898                     	;# 
  4379     0899                     	;# 
  4380     089A                     	;# 
  4381     089B                     	;# 
  4382     090C                     	;# 
  4383     090E                     	;# 
  4384     090F                     	;# 
  4385     091F                     	;# 
  4386     098F                     	;# 
  4387     098F                     	;# 
  4388     0990                     	;# 
  4389     0991                     	;# 
  4390     0992                     	;# 
  4391     0993                     	;# 
  4392     0994                     	;# 
  4393     0995                     	;# 
  4394     0996                     	;# 
  4395     0997                     	;# 
  4396     1E0F                     	;# 
  4397     1E10                     	;# 
  4398     1E11                     	;# 
  4399     1E12                     	;# 
  4400     1E13                     	;# 
  4401     1E14                     	;# 
  4402     1E15                     	;# 
  4403     1E16                     	;# 
  4404     1E17                     	;# 
  4405     1E18                     	;# 
  4406     1E19                     	;# 
  4407     1E1A                     	;# 
  4408     1E1B                     	;# 
  4409     1E1C                     	;# 
  4410     1E1D                     	;# 
  4411     1E1E                     	;# 
  4412     1E1F                     	;# 
  4413     1E20                     	;# 
  4414     1E21                     	;# 
  4415     1E22                     	;# 
  4416     1E23                     	;# 
  4417     1E24                     	;# 
  4418     1E25                     	;# 
  4419     1E26                     	;# 
  4420     1E27                     	;# 
  4421     1E28                     	;# 
  4422     1E29                     	;# 
  4423     1E2A                     	;# 
  4424     1E2B                     	;# 
  4425     1E2C                     	;# 
  4426     1E2D                     	;# 
  4427     1E2E                     	;# 
  4428     1E2F                     	;# 
  4429     1E30                     	;# 
  4430     1E31                     	;# 
  4431     1E32                     	;# 
  4432     1E33                     	;# 
  4433     1E34                     	;# 
  4434     1E35                     	;# 
  4435     1E36                     	;# 
  4436     1E37                     	;# 
  4437     1E8F                     	;# 
  4438     1E90                     	;# 
  4439     1E91                     	;# 
  4440     1E92                     	;# 
  4441     1E93                     	;# 
  4442     1E94                     	;# 
  4443     1E95                     	;# 
  4444     1E96                     	;# 
  4445     1E97                     	;# 
  4446     1E9C                     	;# 
  4447     1E9D                     	;# 
  4448     1E9E                     	;# 
  4449     1EA1                     	;# 
  4450     1EA2                     	;# 
  4451     1EA3                     	;# 
  4452     1EA4                     	;# 
  4453     1EA9                     	;# 
  4454     1EAA                     	;# 
  4455     1EB1                     	;# 
  4456     1EB2                     	;# 
  4457     1EB8                     	;# 
  4458     1EB9                     	;# 
  4459     1EBA                     	;# 
  4460     1EBB                     	;# 
  4461     1EBC                     	;# 
  4462     1EBD                     	;# 
  4463     1EBE                     	;# 
  4464     1EC3                     	;# 
  4465     1EC5                     	;# 
  4466     1EC6                     	;# 
  4467     1EC7                     	;# 
  4468     1EC8                     	;# 
  4469     1EC9                     	;# 
  4470     1ECA                     	;# 
  4471     1ECB                     	;# 
  4472     1ECC                     	;# 
  4473     1F10                     	;# 
  4474     1F11                     	;# 
  4475     1F12                     	;# 
  4476     1F14                     	;# 
  4477     1F15                     	;# 
  4478     1F20                     	;# 
  4479     1F21                     	;# 
  4480     1F22                     	;# 
  4481     1F23                     	;# 
  4482     1F24                     	;# 
  4483     1F25                     	;# 
  4484     1F38                     	;# 
  4485     1F39                     	;# 
  4486     1F3A                     	;# 
  4487     1F3B                     	;# 
  4488     1F3C                     	;# 
  4489     1F3D                     	;# 
  4490     1F3E                     	;# 
  4491     1F3F                     	;# 
  4492     1F4E                     	;# 
  4493     1F4F                     	;# 
  4494     1F50                     	;# 
  4495     1F51                     	;# 
  4496     1F52                     	;# 
  4497     1F53                     	;# 
  4498     1F54                     	;# 
  4499     1F55                     	;# 
  4500     1FE4                     	;# 
  4501     1FE5                     	;# 
  4502     1FE6                     	;# 
  4503     1FE7                     	;# 
  4504     1FE8                     	;# 
  4505     1FE8                     	;# 
  4506     1FE9                     	;# 
  4507     1FEA                     	;# 
  4508     1FEB                     	;# 
  4509     1FED                     	;# 
  4510     1FEE                     	;# 
  4511     1FEF                     	;# 
  4512     0000                     	;# 
  4513     0001                     	;# 
  4514     0002                     	;# 
  4515     0003                     	;# 
  4516     0004                     	;# 
  4517     0005                     	;# 
  4518     0006                     	;# 
  4519     0007                     	;# 
  4520     0008                     	;# 
  4521     0009                     	;# 
  4522     000A                     	;# 
  4523     000B                     	;# 
  4524     000C                     	;# 
  4525     000E                     	;# 
  4526     0012                     	;# 
  4527     0014                     	;# 
  4528     0018                     	;# 
  4529     001A                     	;# 
  4530     008C                     	;# 
  4531     008C                     	;# 
  4532     008D                     	;# 
  4533     008E                     	;# 
  4534     008E                     	;# 
  4535     008F                     	;# 
  4536     0090                     	;# 
  4537     0090                     	;# 
  4538     0091                     	;# 
  4539     0092                     	;# 
  4540     0092                     	;# 
  4541     0093                     	;# 
  4542     0094                     	;# 
  4543     0094                     	;# 
  4544     0095                     	;# 
  4545     0096                     	;# 
  4546     0096                     	;# 
  4547     0097                     	;# 
  4548     0098                     	;# 
  4549     0099                     	;# 
  4550     009A                     	;# 
  4551     009B                     	;# 
  4552     009B                     	;# 
  4553     009C                     	;# 
  4554     009D                     	;# 
  4555     009D                     	;# 
  4556     009E                     	;# 
  4557     009F                     	;# 
  4558     010C                     	;# 
  4559     010C                     	;# 
  4560     010D                     	;# 
  4561     010E                     	;# 
  4562     010F                     	;# 
  4563     010F                     	;# 
  4564     0110                     	;# 
  4565     0111                     	;# 
  4566     0112                     	;# 
  4567     0113                     	;# 
  4568     0114                     	;# 
  4569     0115                     	;# 
  4570     0116                     	;# 
  4571     0117                     	;# 
  4572     0118                     	;# 
  4573     0119                     	;# 
  4574     0119                     	;# 
  4575     0119                     	;# 
  4576     011A                     	;# 
  4577     011A                     	;# 
  4578     011A                     	;# 
  4579     011B                     	;# 
  4580     011B                     	;# 
  4581     011B                     	;# 
  4582     011B                     	;# 
  4583     011B                     	;# 
  4584     011C                     	;# 
  4585     011C                     	;# 
  4586     011C                     	;# 
  4587     011D                     	;# 
  4588     011D                     	;# 
  4589     011D                     	;# 
  4590     011E                     	;# 
  4591     011E                     	;# 
  4592     011E                     	;# 
  4593     011F                     	;# 
  4594     011F                     	;# 
  4595     011F                     	;# 
  4596     011F                     	;# 
  4597     011F                     	;# 
  4598     018C                     	;# 
  4599     018D                     	;# 
  4600     018E                     	;# 
  4601     018F                     	;# 
  4602     0190                     	;# 
  4603     0191                     	;# 
  4604     0192                     	;# 
  4605     0196                     	;# 
  4606     0197                     	;# 
  4607     0198                     	;# 
  4608     0199                     	;# 
  4609     019A                     	;# 
  4610     019B                     	;# 
  4611     019C                     	;# 
  4612     020C                     	;# 
  4613     020D                     	;# 
  4614     020E                     	;# 
  4615     020E                     	;# 
  4616     020F                     	;# 
  4617     020F                     	;# 
  4618     0210                     	;# 
  4619     0210                     	;# 
  4620     0211                     	;# 
  4621     0211                     	;# 
  4622     0212                     	;# 
  4623     0213                     	;# 
  4624     0214                     	;# 
  4625     0214                     	;# 
  4626     0215                     	;# 
  4627     0215                     	;# 
  4628     0216                     	;# 
  4629     0216                     	;# 
  4630     0217                     	;# 
  4631     0217                     	;# 
  4632     0218                     	;# 
  4633     0219                     	;# 
  4634     021A                     	;# 
  4635     021A                     	;# 
  4636     021B                     	;# 
  4637     021B                     	;# 
  4638     021C                     	;# 
  4639     021C                     	;# 
  4640     021D                     	;# 
  4641     021D                     	;# 
  4642     021E                     	;# 
  4643     021F                     	;# 
  4644     028C                     	;# 
  4645     028C                     	;# 
  4646     028D                     	;# 
  4647     028D                     	;# 
  4648     028E                     	;# 
  4649     028F                     	;# 
  4650     0290                     	;# 
  4651     0291                     	;# 
  4652     0292                     	;# 
  4653     0292                     	;# 
  4654     0293                     	;# 
  4655     0293                     	;# 
  4656     0294                     	;# 
  4657     0295                     	;# 
  4658     0296                     	;# 
  4659     0297                     	;# 
  4660     0298                     	;# 
  4661     0298                     	;# 
  4662     0299                     	;# 
  4663     0299                     	;# 
  4664     029A                     	;# 
  4665     029B                     	;# 
  4666     029C                     	;# 
  4667     029D                     	;# 
  4668     029F                     	;# 
  4669     030C                     	;# 
  4670     030C                     	;# 
  4671     030D                     	;# 
  4672     030E                     	;# 
  4673     030F                     	;# 
  4674     0310                     	;# 
  4675     0310                     	;# 
  4676     0311                     	;# 
  4677     0312                     	;# 
  4678     0313                     	;# 
  4679     0314                     	;# 
  4680     0314                     	;# 
  4681     0315                     	;# 
  4682     0316                     	;# 
  4683     0317                     	;# 
  4684     0318                     	;# 
  4685     0318                     	;# 
  4686     0319                     	;# 
  4687     031A                     	;# 
  4688     031B                     	;# 
  4689     038C                     	;# 
  4690     038C                     	;# 
  4691     038D                     	;# 
  4692     038E                     	;# 
  4693     0390                     	;# 
  4694     0390                     	;# 
  4695     0391                     	;# 
  4696     0392                     	;# 
  4697     048C                     	;# 
  4698     048C                     	;# 
  4699     048D                     	;# 
  4700     048E                     	;# 
  4701     048F                     	;# 
  4702     048F                     	;# 
  4703     0490                     	;# 
  4704     0491                     	;# 
  4705     0492                     	;# 
  4706     0492                     	;# 
  4707     0493                     	;# 
  4708     0494                     	;# 
  4709     0495                     	;# 
  4710     0495                     	;# 
  4711     0496                     	;# 
  4712     0497                     	;# 
  4713     0498                     	;# 
  4714     0499                     	;# 
  4715     049A                     	;# 
  4716     049B                     	;# 
  4717     049C                     	;# 
  4718     049D                     	;# 
  4719     058C                     	;# 
  4720     058C                     	;# 
  4721     058D                     	;# 
  4722     058E                     	;# 
  4723     058F                     	;# 
  4724     058F                     	;# 
  4725     0590                     	;# 
  4726     0591                     	;# 
  4727     0592                     	;# 
  4728     0593                     	;# 
  4729     059C                     	;# 
  4730     059C                     	;# 
  4731     059D                     	;# 
  4732     059D                     	;# 
  4733     059E                     	;# 
  4734     059F                     	;# 
  4735     060C                     	;# 
  4736     060C                     	;# 
  4737     060D                     	;# 
  4738     060D                     	;# 
  4739     060E                     	;# 
  4740     060F                     	;# 
  4741     0610                     	;# 
  4742     0611                     	;# 
  4743     0612                     	;# 
  4744     0613                     	;# 
  4745     0614                     	;# 
  4746     0616                     	;# 
  4747     0616                     	;# 
  4748     0617                     	;# 
  4749     0617                     	;# 
  4750     0618                     	;# 
  4751     0619                     	;# 
  4752     061A                     	;# 
  4753     061B                     	;# 
  4754     061C                     	;# 
  4755     061D                     	;# 
  4756     061E                     	;# 
  4757     070C                     	;# 
  4758     070D                     	;# 
  4759     070E                     	;# 
  4760     070F                     	;# 
  4761     0710                     	;# 
  4762     0711                     	;# 
  4763     0712                     	;# 
  4764     0713                     	;# 
  4765     0714                     	;# 
  4766     0716                     	;# 
  4767     0717                     	;# 
  4768     0718                     	;# 
  4769     0719                     	;# 
  4770     071A                     	;# 
  4771     071B                     	;# 
  4772     071C                     	;# 
  4773     071D                     	;# 
  4774     071E                     	;# 
  4775     0796                     	;# 
  4776     0797                     	;# 
  4777     0798                     	;# 
  4778     0799                     	;# 
  4779     079A                     	;# 
  4780     079B                     	;# 
  4781     079C                     	;# 
  4782     079D                     	;# 
  4783     080C                     	;# 
  4784     080D                     	;# 
  4785     080E                     	;# 
  4786     080F                     	;# 
  4787     0810                     	;# 
  4788     0811                     	;# 
  4789     0812                     	;# 
  4790     0813                     	;# 
  4791     0814                     	;# 
  4792     081A                     	;# 
  4793     081A                     	;# 
  4794     081B                     	;# 
  4795     081C                     	;# 
  4796     081C                     	;# 
  4797     081D                     	;# 
  4798     081E                     	;# 
  4799     081F                     	;# 
  4800     088C                     	;# 
  4801     088D                     	;# 
  4802     088E                     	;# 
  4803     088F                     	;# 
  4804     0890                     	;# 
  4805     0891                     	;# 
  4806     0892                     	;# 
  4807     0893                     	;# 
  4808     0895                     	;# 
  4809     0896                     	;# 
  4810     0897                     	;# 
  4811     0898                     	;# 
  4812     0899                     	;# 
  4813     089A                     	;# 
  4814     089B                     	;# 
  4815     090C                     	;# 
  4816     090E                     	;# 
  4817     090F                     	;# 
  4818     091F                     	;# 
  4819     098F                     	;# 
  4820     098F                     	;# 
  4821     0990                     	;# 
  4822     0991                     	;# 
  4823     0992                     	;# 
  4824     0993                     	;# 
  4825     0994                     	;# 
  4826     0995                     	;# 
  4827     0996                     	;# 
  4828     0997                     	;# 
  4829     1E0F                     	;# 
  4830     1E10                     	;# 
  4831     1E11                     	;# 
  4832     1E12                     	;# 
  4833     1E13                     	;# 
  4834     1E14                     	;# 
  4835     1E15                     	;# 
  4836     1E16                     	;# 
  4837     1E17                     	;# 
  4838     1E18                     	;# 
  4839     1E19                     	;# 
  4840     1E1A                     	;# 
  4841     1E1B                     	;# 
  4842     1E1C                     	;# 
  4843     1E1D                     	;# 
  4844     1E1E                     	;# 
  4845     1E1F                     	;# 
  4846     1E20                     	;# 
  4847     1E21                     	;# 
  4848     1E22                     	;# 
  4849     1E23                     	;# 
  4850     1E24                     	;# 
  4851     1E25                     	;# 
  4852     1E26                     	;# 
  4853     1E27                     	;# 
  4854     1E28                     	;# 
  4855     1E29                     	;# 
  4856     1E2A                     	;# 
  4857     1E2B                     	;# 
  4858     1E2C                     	;# 
  4859     1E2D                     	;# 
  4860     1E2E                     	;# 
  4861     1E2F                     	;# 
  4862     1E30                     	;# 
  4863     1E31                     	;# 
  4864     1E32                     	;# 
  4865     1E33                     	;# 
  4866     1E34                     	;# 
  4867     1E35                     	;# 
  4868     1E36                     	;# 
  4869     1E37                     	;# 
  4870     1E8F                     	;# 
  4871     1E90                     	;# 
  4872     1E91                     	;# 
  4873     1E92                     	;# 
  4874     1E93                     	;# 
  4875     1E94                     	;# 
  4876     1E95                     	;# 
  4877     1E96                     	;# 
  4878     1E97                     	;# 
  4879     1E9C                     	;# 
  4880     1E9D                     	;# 
  4881     1E9E                     	;# 
  4882     1EA1                     	;# 
  4883     1EA2                     	;# 
  4884     1EA3                     	;# 
  4885     1EA4                     	;# 
  4886     1EA9                     	;# 
  4887     1EAA                     	;# 
  4888     1EB1                     	;# 
  4889     1EB2                     	;# 
  4890     1EB8                     	;# 
  4891     1EB9                     	;# 
  4892     1EBA                     	;# 
  4893     1EBB                     	;# 
  4894     1EBC                     	;# 
  4895     1EBD                     	;# 
  4896     1EBE                     	;# 
  4897     1EC3                     	;# 
  4898     1EC5                     	;# 
  4899     1EC6                     	;# 
  4900     1EC7                     	;# 
  4901     1EC8                     	;# 
  4902     1EC9                     	;# 
  4903     1ECA                     	;# 
  4904     1ECB                     	;# 
  4905     1ECC                     	;# 
  4906     1F10                     	;# 
  4907     1F11                     	;# 
  4908     1F12                     	;# 
  4909     1F14                     	;# 
  4910     1F15                     	;# 
  4911     1F20                     	;# 
  4912     1F21                     	;# 
  4913     1F22                     	;# 
  4914     1F23                     	;# 
  4915     1F24                     	;# 
  4916     1F25                     	;# 
  4917     1F38                     	;# 
  4918     1F39                     	;# 
  4919     1F3A                     	;# 
  4920     1F3B                     	;# 
  4921     1F3C                     	;# 
  4922     1F3D                     	;# 
  4923     1F3E                     	;# 
  4924     1F3F                     	;# 
  4925     1F4E                     	;# 
  4926     1F4F                     	;# 
  4927     1F50                     	;# 
  4928     1F51                     	;# 
  4929     1F52                     	;# 
  4930     1F53                     	;# 
  4931     1F54                     	;# 
  4932     1F55                     	;# 
  4933     1FE4                     	;# 
  4934     1FE5                     	;# 
  4935     1FE6                     	;# 
  4936     1FE7                     	;# 
  4937     1FE8                     	;# 
  4938     1FE8                     	;# 
  4939     1FE9                     	;# 
  4940     1FEA                     	;# 
  4941     1FEB                     	;# 
  4942     1FED                     	;# 
  4943     1FEE                     	;# 
  4944     1FEF                     	;# 
  4945     0000                     	;# 
  4946     0001                     	;# 
  4947     0002                     	;# 
  4948     0003                     	;# 
  4949     0004                     	;# 
  4950     0005                     	;# 
  4951     0006                     	;# 
  4952     0007                     	;# 
  4953     0008                     	;# 
  4954     0009                     	;# 
  4955     000A                     	;# 
  4956     000B                     	;# 
  4957     000C                     	;# 
  4958     000E                     	;# 
  4959     0012                     	;# 
  4960     0014                     	;# 
  4961     0018                     	;# 
  4962     001A                     	;# 
  4963     008C                     	;# 
  4964     008C                     	;# 
  4965     008D                     	;# 
  4966     008E                     	;# 
  4967     008E                     	;# 
  4968     008F                     	;# 
  4969     0090                     	;# 
  4970     0090                     	;# 
  4971     0091                     	;# 
  4972     0092                     	;# 
  4973     0092                     	;# 
  4974     0093                     	;# 
  4975     0094                     	;# 
  4976     0094                     	;# 
  4977     0095                     	;# 
  4978     0096                     	;# 
  4979     0096                     	;# 
  4980     0097                     	;# 
  4981     0098                     	;# 
  4982     0099                     	;# 
  4983     009A                     	;# 
  4984     009B                     	;# 
  4985     009B                     	;# 
  4986     009C                     	;# 
  4987     009D                     	;# 
  4988     009D                     	;# 
  4989     009E                     	;# 
  4990     009F                     	;# 
  4991     010C                     	;# 
  4992     010C                     	;# 
  4993     010D                     	;# 
  4994     010E                     	;# 
  4995     010F                     	;# 
  4996     010F                     	;# 
  4997     0110                     	;# 
  4998     0111                     	;# 
  4999     0112                     	;# 
  5000     0113                     	;# 
  5001     0114                     	;# 
  5002     0115                     	;# 
  5003     0116                     	;# 
  5004     0117                     	;# 
  5005     0118                     	;# 
  5006     0119                     	;# 
  5007     0119                     	;# 
  5008     0119                     	;# 
  5009     011A                     	;# 
  5010     011A                     	;# 
  5011     011A                     	;# 
  5012     011B                     	;# 
  5013     011B                     	;# 
  5014     011B                     	;# 
  5015     011B                     	;# 
  5016     011B                     	;# 
  5017     011C                     	;# 
  5018     011C                     	;# 
  5019     011C                     	;# 
  5020     011D                     	;# 
  5021     011D                     	;# 
  5022     011D                     	;# 
  5023     011E                     	;# 
  5024     011E                     	;# 
  5025     011E                     	;# 
  5026     011F                     	;# 
  5027     011F                     	;# 
  5028     011F                     	;# 
  5029     011F                     	;# 
  5030     011F                     	;# 
  5031     018C                     	;# 
  5032     018D                     	;# 
  5033     018E                     	;# 
  5034     018F                     	;# 
  5035     0190                     	;# 
  5036     0191                     	;# 
  5037     0192                     	;# 
  5038     0196                     	;# 
  5039     0197                     	;# 
  5040     0198                     	;# 
  5041     0199                     	;# 
  5042     019A                     	;# 
  5043     019B                     	;# 
  5044     019C                     	;# 
  5045     020C                     	;# 
  5046     020D                     	;# 
  5047     020E                     	;# 
  5048     020E                     	;# 
  5049     020F                     	;# 
  5050     020F                     	;# 
  5051     0210                     	;# 
  5052     0210                     	;# 
  5053     0211                     	;# 
  5054     0211                     	;# 
  5055     0212                     	;# 
  5056     0213                     	;# 
  5057     0214                     	;# 
  5058     0214                     	;# 
  5059     0215                     	;# 
  5060     0215                     	;# 
  5061     0216                     	;# 
  5062     0216                     	;# 
  5063     0217                     	;# 
  5064     0217                     	;# 
  5065     0218                     	;# 
  5066     0219                     	;# 
  5067     021A                     	;# 
  5068     021A                     	;# 
  5069     021B                     	;# 
  5070     021B                     	;# 
  5071     021C                     	;# 
  5072     021C                     	;# 
  5073     021D                     	;# 
  5074     021D                     	;# 
  5075     021E                     	;# 
  5076     021F                     	;# 
  5077     028C                     	;# 
  5078     028C                     	;# 
  5079     028D                     	;# 
  5080     028D                     	;# 
  5081     028E                     	;# 
  5082     028F                     	;# 
  5083     0290                     	;# 
  5084     0291                     	;# 
  5085     0292                     	;# 
  5086     0292                     	;# 
  5087     0293                     	;# 
  5088     0293                     	;# 
  5089     0294                     	;# 
  5090     0295                     	;# 
  5091     0296                     	;# 
  5092     0297                     	;# 
  5093     0298                     	;# 
  5094     0298                     	;# 
  5095     0299                     	;# 
  5096     0299                     	;# 
  5097     029A                     	;# 
  5098     029B                     	;# 
  5099     029C                     	;# 
  5100     029D                     	;# 
  5101     029F                     	;# 
  5102     030C                     	;# 
  5103     030C                     	;# 
  5104     030D                     	;# 
  5105     030E                     	;# 
  5106     030F                     	;# 
  5107     0310                     	;# 
  5108     0310                     	;# 
  5109     0311                     	;# 
  5110     0312                     	;# 
  5111     0313                     	;# 
  5112     0314                     	;# 
  5113     0314                     	;# 
  5114     0315                     	;# 
  5115     0316                     	;# 
  5116     0317                     	;# 
  5117     0318                     	;# 
  5118     0318                     	;# 
  5119     0319                     	;# 
  5120     031A                     	;# 
  5121     031B                     	;# 
  5122     038C                     	;# 
  5123     038C                     	;# 
  5124     038D                     	;# 
  5125     038E                     	;# 
  5126     0390                     	;# 
  5127     0390                     	;# 
  5128     0391                     	;# 
  5129     0392                     	;# 
  5130     048C                     	;# 
  5131     048C                     	;# 
  5132     048D                     	;# 
  5133     048E                     	;# 
  5134     048F                     	;# 
  5135     048F                     	;# 
  5136     0490                     	;# 
  5137     0491                     	;# 
  5138     0492                     	;# 
  5139     0492                     	;# 
  5140     0493                     	;# 
  5141     0494                     	;# 
  5142     0495                     	;# 
  5143     0495                     	;# 
  5144     0496                     	;# 
  5145     0497                     	;# 
  5146     0498                     	;# 
  5147     0499                     	;# 
  5148     049A                     	;# 
  5149     049B                     	;# 
  5150     049C                     	;# 
  5151     049D                     	;# 
  5152     058C                     	;# 
  5153     058C                     	;# 
  5154     058D                     	;# 
  5155     058E                     	;# 
  5156     058F                     	;# 
  5157     058F                     	;# 
  5158     0590                     	;# 
  5159     0591                     	;# 
  5160     0592                     	;# 
  5161     0593                     	;# 
  5162     059C                     	;# 
  5163     059C                     	;# 
  5164     059D                     	;# 
  5165     059D                     	;# 
  5166     059E                     	;# 
  5167     059F                     	;# 
  5168     060C                     	;# 
  5169     060C                     	;# 
  5170     060D                     	;# 
  5171     060D                     	;# 
  5172     060E                     	;# 
  5173     060F                     	;# 
  5174     0610                     	;# 
  5175     0611                     	;# 
  5176     0612                     	;# 
  5177     0613                     	;# 
  5178     0614                     	;# 
  5179     0616                     	;# 
  5180     0616                     	;# 
  5181     0617                     	;# 
  5182     0617                     	;# 
  5183     0618                     	;# 
  5184     0619                     	;# 
  5185     061A                     	;# 
  5186     061B                     	;# 
  5187     061C                     	;# 
  5188     061D                     	;# 
  5189     061E                     	;# 
  5190     070C                     	;# 
  5191     070D                     	;# 
  5192     070E                     	;# 
  5193     070F                     	;# 
  5194     0710                     	;# 
  5195     0711                     	;# 
  5196     0712                     	;# 
  5197     0713                     	;# 
  5198     0714                     	;# 
  5199     0716                     	;# 
  5200     0717                     	;# 
  5201     0718                     	;# 
  5202     0719                     	;# 
  5203     071A                     	;# 
  5204     071B                     	;# 
  5205     071C                     	;# 
  5206     071D                     	;# 
  5207     071E                     	;# 
  5208     0796                     	;# 
  5209     0797                     	;# 
  5210     0798                     	;# 
  5211     0799                     	;# 
  5212     079A                     	;# 
  5213     079B                     	;# 
  5214     079C                     	;# 
  5215     079D                     	;# 
  5216     080C                     	;# 
  5217     080D                     	;# 
  5218     080E                     	;# 
  5219     080F                     	;# 
  5220     0810                     	;# 
  5221     0811                     	;# 
  5222     0812                     	;# 
  5223     0813                     	;# 
  5224     0814                     	;# 
  5225     081A                     	;# 
  5226     081A                     	;# 
  5227     081B                     	;# 
  5228     081C                     	;# 
  5229     081C                     	;# 
  5230     081D                     	;# 
  5231     081E                     	;# 
  5232     081F                     	;# 
  5233     088C                     	;# 
  5234     088D                     	;# 
  5235     088E                     	;# 
  5236     088F                     	;# 
  5237     0890                     	;# 
  5238     0891                     	;# 
  5239     0892                     	;# 
  5240     0893                     	;# 
  5241     0895                     	;# 
  5242     0896                     	;# 
  5243     0897                     	;# 
  5244     0898                     	;# 
  5245     0899                     	;# 
  5246     089A                     	;# 
  5247     089B                     	;# 
  5248     090C                     	;# 
  5249     090E                     	;# 
  5250     090F                     	;# 
  5251     091F                     	;# 
  5252     098F                     	;# 
  5253     098F                     	;# 
  5254     0990                     	;# 
  5255     0991                     	;# 
  5256     0992                     	;# 
  5257     0993                     	;# 
  5258     0994                     	;# 
  5259     0995                     	;# 
  5260     0996                     	;# 
  5261     0997                     	;# 
  5262     1E0F                     	;# 
  5263     1E10                     	;# 
  5264     1E11                     	;# 
  5265     1E12                     	;# 
  5266     1E13                     	;# 
  5267     1E14                     	;# 
  5268     1E15                     	;# 
  5269     1E16                     	;# 
  5270     1E17                     	;# 
  5271     1E18                     	;# 
  5272     1E19                     	;# 
  5273     1E1A                     	;# 
  5274     1E1B                     	;# 
  5275     1E1C                     	;# 
  5276     1E1D                     	;# 
  5277     1E1E                     	;# 
  5278     1E1F                     	;# 
  5279     1E20                     	;# 
  5280     1E21                     	;# 
  5281     1E22                     	;# 
  5282     1E23                     	;# 
  5283     1E24                     	;# 
  5284     1E25                     	;# 
  5285     1E26                     	;# 
  5286     1E27                     	;# 
  5287     1E28                     	;# 
  5288     1E29                     	;# 
  5289     1E2A                     	;# 
  5290     1E2B                     	;# 
  5291     1E2C                     	;# 
  5292     1E2D                     	;# 
  5293     1E2E                     	;# 
  5294     1E2F                     	;# 
  5295     1E30                     	;# 
  5296     1E31                     	;# 
  5297     1E32                     	;# 
  5298     1E33                     	;# 
  5299     1E34                     	;# 
  5300     1E35                     	;# 
  5301     1E36                     	;# 
  5302     1E37                     	;# 
  5303     1E8F                     	;# 
  5304     1E90                     	;# 
  5305     1E91                     	;# 
  5306     1E92                     	;# 
  5307     1E93                     	;# 
  5308     1E94                     	;# 
  5309     1E95                     	;# 
  5310     1E96                     	;# 
  5311     1E97                     	;# 
  5312     1E9C                     	;# 
  5313     1E9D                     	;# 
  5314     1E9E                     	;# 
  5315     1EA1                     	;# 
  5316     1EA2                     	;# 
  5317     1EA3                     	;# 
  5318     1EA4                     	;# 
  5319     1EA9                     	;# 
  5320     1EAA                     	;# 
  5321     1EB1                     	;# 
  5322     1EB2                     	;# 
  5323     1EB8                     	;# 
  5324     1EB9                     	;# 
  5325     1EBA                     	;# 
  5326     1EBB                     	;# 
  5327     1EBC                     	;# 
  5328     1EBD                     	;# 
  5329     1EBE                     	;# 
  5330     1EC3                     	;# 
  5331     1EC5                     	;# 
  5332     1EC6                     	;# 
  5333     1EC7                     	;# 
  5334     1EC8                     	;# 
  5335     1EC9                     	;# 
  5336     1ECA                     	;# 
  5337     1ECB                     	;# 
  5338     1ECC                     	;# 
  5339     1F10                     	;# 
  5340     1F11                     	;# 
  5341     1F12                     	;# 
  5342     1F14                     	;# 
  5343     1F15                     	;# 
  5344     1F20                     	;# 
  5345     1F21                     	;# 
  5346     1F22                     	;# 
  5347     1F23                     	;# 
  5348     1F24                     	;# 
  5349     1F25                     	;# 
  5350     1F38                     	;# 
  5351     1F39                     	;# 
  5352     1F3A                     	;# 
  5353     1F3B                     	;# 
  5354     1F3C                     	;# 
  5355     1F3D                     	;# 
  5356     1F3E                     	;# 
  5357     1F3F                     	;# 
  5358     1F4E                     	;# 
  5359     1F4F                     	;# 
  5360     1F50                     	;# 
  5361     1F51                     	;# 
  5362     1F52                     	;# 
  5363     1F53                     	;# 
  5364     1F54                     	;# 
  5365     1F55                     	;# 
  5366     1FE4                     	;# 
  5367     1FE5                     	;# 
  5368     1FE6                     	;# 
  5369     1FE7                     	;# 
  5370     1FE8                     	;# 
  5371     1FE8                     	;# 
  5372     1FE9                     	;# 
  5373     1FEA                     	;# 
  5374     1FEB                     	;# 
  5375     1FED                     	;# 
  5376     1FEE                     	;# 
  5377     1FEF                     	;# 
  5378     0000                     	;# 
  5379     0001                     	;# 
  5380     0002                     	;# 
  5381     0003                     	;# 
  5382     0004                     	;# 
  5383     0005                     	;# 
  5384     0006                     	;# 
  5385     0007                     	;# 
  5386     0008                     	;# 
  5387     0009                     	;# 
  5388     000A                     	;# 
  5389     000B                     	;# 
  5390     000C                     	;# 
  5391     000E                     	;# 
  5392     0012                     	;# 
  5393     0014                     	;# 
  5394     0018                     	;# 
  5395     001A                     	;# 
  5396     008C                     	;# 
  5397     008C                     	;# 
  5398     008D                     	;# 
  5399     008E                     	;# 
  5400     008E                     	;# 
  5401     008F                     	;# 
  5402     0090                     	;# 
  5403     0090                     	;# 
  5404     0091                     	;# 
  5405     0092                     	;# 
  5406     0092                     	;# 
  5407     0093                     	;# 
  5408     0094                     	;# 
  5409     0094                     	;# 
  5410     0095                     	;# 
  5411     0096                     	;# 
  5412     0096                     	;# 
  5413     0097                     	;# 
  5414     0098                     	;# 
  5415     0099                     	;# 
  5416     009A                     	;# 
  5417     009B                     	;# 
  5418     009B                     	;# 
  5419     009C                     	;# 
  5420     009D                     	;# 
  5421     009D                     	;# 
  5422     009E                     	;# 
  5423     009F                     	;# 
  5424     010C                     	;# 
  5425     010C                     	;# 
  5426     010D                     	;# 
  5427     010E                     	;# 
  5428     010F                     	;# 
  5429     010F                     	;# 
  5430     0110                     	;# 
  5431     0111                     	;# 
  5432     0112                     	;# 
  5433     0113                     	;# 
  5434     0114                     	;# 
  5435     0115                     	;# 
  5436     0116                     	;# 
  5437     0117                     	;# 
  5438     0118                     	;# 
  5439     0119                     	;# 
  5440     0119                     	;# 
  5441     0119                     	;# 
  5442     011A                     	;# 
  5443     011A                     	;# 
  5444     011A                     	;# 
  5445     011B                     	;# 
  5446     011B                     	;# 
  5447     011B                     	;# 
  5448     011B                     	;# 
  5449     011B                     	;# 
  5450     011C                     	;# 
  5451     011C                     	;# 
  5452     011C                     	;# 
  5453     011D                     	;# 
  5454     011D                     	;# 
  5455     011D                     	;# 
  5456     011E                     	;# 
  5457     011E                     	;# 
  5458     011E                     	;# 
  5459     011F                     	;# 
  5460     011F                     	;# 
  5461     011F                     	;# 
  5462     011F                     	;# 
  5463     011F                     	;# 
  5464     018C                     	;# 
  5465     018D                     	;# 
  5466     018E                     	;# 
  5467     018F                     	;# 
  5468     0190                     	;# 
  5469     0191                     	;# 
  5470     0192                     	;# 
  5471     0196                     	;# 
  5472     0197                     	;# 
  5473     0198                     	;# 
  5474     0199                     	;# 
  5475     019A                     	;# 
  5476     019B                     	;# 
  5477     019C                     	;# 
  5478     020C                     	;# 
  5479     020D                     	;# 
  5480     020E                     	;# 
  5481     020E                     	;# 
  5482     020F                     	;# 
  5483     020F                     	;# 
  5484     0210                     	;# 
  5485     0210                     	;# 
  5486     0211                     	;# 
  5487     0211                     	;# 
  5488     0212                     	;# 
  5489     0213                     	;# 
  5490     0214                     	;# 
  5491     0214                     	;# 
  5492     0215                     	;# 
  5493     0215                     	;# 
  5494     0216                     	;# 
  5495     0216                     	;# 
  5496     0217                     	;# 
  5497     0217                     	;# 
  5498     0218                     	;# 
  5499     0219                     	;# 
  5500     021A                     	;# 
  5501     021A                     	;# 
  5502     021B                     	;# 
  5503     021B                     	;# 
  5504     021C                     	;# 
  5505     021C                     	;# 
  5506     021D                     	;# 
  5507     021D                     	;# 
  5508     021E                     	;# 
  5509     021F                     	;# 
  5510     028C                     	;# 
  5511     028C                     	;# 
  5512     028D                     	;# 
  5513     028D                     	;# 
  5514     028E                     	;# 
  5515     028F                     	;# 
  5516     0290                     	;# 
  5517     0291                     	;# 
  5518     0292                     	;# 
  5519     0292                     	;# 
  5520     0293                     	;# 
  5521     0293                     	;# 
  5522     0294                     	;# 
  5523     0295                     	;# 
  5524     0296                     	;# 
  5525     0297                     	;# 
  5526     0298                     	;# 
  5527     0298                     	;# 
  5528     0299                     	;# 
  5529     0299                     	;# 
  5530     029A                     	;# 
  5531     029B                     	;# 
  5532     029C                     	;# 
  5533     029D                     	;# 
  5534     029F                     	;# 
  5535     030C                     	;# 
  5536     030C                     	;# 
  5537     030D                     	;# 
  5538     030E                     	;# 
  5539     030F                     	;# 
  5540     0310                     	;# 
  5541     0310                     	;# 
  5542     0311                     	;# 
  5543     0312                     	;# 
  5544     0313                     	;# 
  5545     0314                     	;# 
  5546     0314                     	;# 
  5547     0315                     	;# 
  5548     0316                     	;# 
  5549     0317                     	;# 
  5550     0318                     	;# 
  5551     0318                     	;# 
  5552     0319                     	;# 
  5553     031A                     	;# 
  5554     031B                     	;# 
  5555     038C                     	;# 
  5556     038C                     	;# 
  5557     038D                     	;# 
  5558     038E                     	;# 
  5559     0390                     	;# 
  5560     0390                     	;# 
  5561     0391                     	;# 
  5562     0392                     	;# 
  5563     048C                     	;# 
  5564     048C                     	;# 
  5565     048D                     	;# 
  5566     048E                     	;# 
  5567     048F                     	;# 
  5568     048F                     	;# 
  5569     0490                     	;# 
  5570     0491                     	;# 
  5571     0492                     	;# 
  5572     0492                     	;# 
  5573     0493                     	;# 
  5574     0494                     	;# 
  5575     0495                     	;# 
  5576     0495                     	;# 
  5577     0496                     	;# 
  5578     0497                     	;# 
  5579     0498                     	;# 
  5580     0499                     	;# 
  5581     049A                     	;# 
  5582     049B                     	;# 
  5583     049C                     	;# 
  5584     049D                     	;# 
  5585     058C                     	;# 
  5586     058C                     	;# 
  5587     058D                     	;# 
  5588     058E                     	;# 
  5589     058F                     	;# 
  5590     058F                     	;# 
  5591     0590                     	;# 
  5592     0591                     	;# 
  5593     0592                     	;# 
  5594     0593                     	;# 
  5595     059C                     	;# 
  5596     059C                     	;# 
  5597     059D                     	;# 
  5598     059D                     	;# 
  5599     059E                     	;# 
  5600     059F                     	;# 
  5601     060C                     	;# 
  5602     060C                     	;# 
  5603     060D                     	;# 
  5604     060D                     	;# 
  5605     060E                     	;# 
  5606     060F                     	;# 
  5607     0610                     	;# 
  5608     0611                     	;# 
  5609     0612                     	;# 
  5610     0613                     	;# 
  5611     0614                     	;# 
  5612     0616                     	;# 
  5613     0616                     	;# 
  5614     0617                     	;# 
  5615     0617                     	;# 
  5616     0618                     	;# 
  5617     0619                     	;# 
  5618     061A                     	;# 
  5619     061B                     	;# 
  5620     061C                     	;# 
  5621     061D                     	;# 
  5622     061E                     	;# 
  5623     070C                     	;# 
  5624     070D                     	;# 
  5625     070E                     	;# 
  5626     070F                     	;# 
  5627     0710                     	;# 
  5628     0711                     	;# 
  5629     0712                     	;# 
  5630     0713                     	;# 
  5631     0714                     	;# 
  5632     0716                     	;# 
  5633     0717                     	;# 
  5634     0718                     	;# 
  5635     0719                     	;# 
  5636     071A                     	;# 
  5637     071B                     	;# 
  5638     071C                     	;# 
  5639     071D                     	;# 
  5640     071E                     	;# 
  5641     0796                     	;# 
  5642     0797                     	;# 
  5643     0798                     	;# 
  5644     0799                     	;# 
  5645     079A                     	;# 
  5646     079B                     	;# 
  5647     079C                     	;# 
  5648     079D                     	;# 
  5649     080C                     	;# 
  5650     080D                     	;# 
  5651     080E                     	;# 
  5652     080F                     	;# 
  5653     0810                     	;# 
  5654     0811                     	;# 
  5655     0812                     	;# 
  5656     0813                     	;# 
  5657     0814                     	;# 
  5658     081A                     	;# 
  5659     081A                     	;# 
  5660     081B                     	;# 
  5661     081C                     	;# 
  5662     081C                     	;# 
  5663     081D                     	;# 
  5664     081E                     	;# 
  5665     081F                     	;# 
  5666     088C                     	;# 
  5667     088D                     	;# 
  5668     088E                     	;# 
  5669     088F                     	;# 
  5670     0890                     	;# 
  5671     0891                     	;# 
  5672     0892                     	;# 
  5673     0893                     	;# 
  5674     0895                     	;# 
  5675     0896                     	;# 
  5676     0897                     	;# 
  5677     0898                     	;# 
  5678     0899                     	;# 
  5679     089A                     	;# 
  5680     089B                     	;# 
  5681     090C                     	;# 
  5682     090E                     	;# 
  5683     090F                     	;# 
  5684     091F                     	;# 
  5685     098F                     	;# 
  5686     098F                     	;# 
  5687     0990                     	;# 
  5688     0991                     	;# 
  5689     0992                     	;# 
  5690     0993                     	;# 
  5691     0994                     	;# 
  5692     0995                     	;# 
  5693     0996                     	;# 
  5694     0997                     	;# 
  5695     1E0F                     	;# 
  5696     1E10                     	;# 
  5697     1E11                     	;# 
  5698     1E12                     	;# 
  5699     1E13                     	;# 
  5700     1E14                     	;# 
  5701     1E15                     	;# 
  5702     1E16                     	;# 
  5703     1E17                     	;# 
  5704     1E18                     	;# 
  5705     1E19                     	;# 
  5706     1E1A                     	;# 
  5707     1E1B                     	;# 
  5708     1E1C                     	;# 
  5709     1E1D                     	;# 
  5710     1E1E                     	;# 
  5711     1E1F                     	;# 
  5712     1E20                     	;# 
  5713     1E21                     	;# 
  5714     1E22                     	;# 
  5715     1E23                     	;# 
  5716     1E24                     	;# 
  5717     1E25                     	;# 
  5718     1E26                     	;# 
  5719     1E27                     	;# 
  5720     1E28                     	;# 
  5721     1E29                     	;# 
  5722     1E2A                     	;# 
  5723     1E2B                     	;# 
  5724     1E2C                     	;# 
  5725     1E2D                     	;# 
  5726     1E2E                     	;# 
  5727     1E2F                     	;# 
  5728     1E30                     	;# 
  5729     1E31                     	;# 
  5730     1E32                     	;# 
  5731     1E33                     	;# 
  5732     1E34                     	;# 
  5733     1E35                     	;# 
  5734     1E36                     	;# 
  5735     1E37                     	;# 
  5736     1E8F                     	;# 
  5737     1E90                     	;# 
  5738     1E91                     	;# 
  5739     1E92                     	;# 
  5740     1E93                     	;# 
  5741     1E94                     	;# 
  5742     1E95                     	;# 
  5743     1E96                     	;# 
  5744     1E97                     	;# 
  5745     1E9C                     	;# 
  5746     1E9D                     	;# 
  5747     1E9E                     	;# 
  5748     1EA1                     	;# 
  5749     1EA2                     	;# 
  5750     1EA3                     	;# 
  5751     1EA4                     	;# 
  5752     1EA9                     	;# 
  5753     1EAA                     	;# 
  5754     1EB1                     	;# 
  5755     1EB2                     	;# 
  5756     1EB8                     	;# 
  5757     1EB9                     	;# 
  5758     1EBA                     	;# 
  5759     1EBB                     	;# 
  5760     1EBC                     	;# 
  5761     1EBD                     	;# 
  5762     1EBE                     	;# 
  5763     1EC3                     	;# 
  5764     1EC5                     	;# 
  5765     1EC6                     	;# 
  5766     1EC7                     	;# 
  5767     1EC8                     	;# 
  5768     1EC9                     	;# 
  5769     1ECA                     	;# 
  5770     1ECB                     	;# 
  5771     1ECC                     	;# 
  5772     1F10                     	;# 
  5773     1F11                     	;# 
  5774     1F12                     	;# 
  5775     1F14                     	;# 
  5776     1F15                     	;# 
  5777     1F20                     	;# 
  5778     1F21                     	;# 
  5779     1F22                     	;# 
  5780     1F23                     	;# 
  5781     1F24                     	;# 
  5782     1F25                     	;# 
  5783     1F38                     	;# 
  5784     1F39                     	;# 
  5785     1F3A                     	;# 
  5786     1F3B                     	;# 
  5787     1F3C                     	;# 
  5788     1F3D                     	;# 
  5789     1F3E                     	;# 
  5790     1F3F                     	;# 
  5791     1F4E                     	;# 
  5792     1F4F                     	;# 
  5793     1F50                     	;# 
  5794     1F51                     	;# 
  5795     1F52                     	;# 
  5796     1F53                     	;# 
  5797     1F54                     	;# 
  5798     1F55                     	;# 
  5799     1FE4                     	;# 
  5800     1FE5                     	;# 
  5801     1FE6                     	;# 
  5802     1FE7                     	;# 
  5803     1FE8                     	;# 
  5804     1FE8                     	;# 
  5805     1FE9                     	;# 
  5806     1FEA                     	;# 
  5807     1FEB                     	;# 
  5808     1FED                     	;# 
  5809     1FEE                     	;# 
  5810     1FEF                     	;# 
  5811     0000                     	;# 
  5812     0001                     	;# 
  5813     0002                     	;# 
  5814     0003                     	;# 
  5815     0004                     	;# 
  5816     0005                     	;# 
  5817     0006                     	;# 
  5818     0007                     	;# 
  5819     0008                     	;# 
  5820     0009                     	;# 
  5821     000A                     	;# 
  5822     000B                     	;# 
  5823     000C                     	;# 
  5824     000E                     	;# 
  5825     0012                     	;# 
  5826     0014                     	;# 
  5827     0018                     	;# 
  5828     001A                     	;# 
  5829     008C                     	;# 
  5830     008C                     	;# 
  5831     008D                     	;# 
  5832     008E                     	;# 
  5833     008E                     	;# 
  5834     008F                     	;# 
  5835     0090                     	;# 
  5836     0090                     	;# 
  5837     0091                     	;# 
  5838     0092                     	;# 
  5839     0092                     	;# 
  5840     0093                     	;# 
  5841     0094                     	;# 
  5842     0094                     	;# 
  5843     0095                     	;# 
  5844     0096                     	;# 
  5845     0096                     	;# 
  5846     0097                     	;# 
  5847     0098                     	;# 
  5848     0099                     	;# 
  5849     009A                     	;# 
  5850     009B                     	;# 
  5851     009B                     	;# 
  5852     009C                     	;# 
  5853     009D                     	;# 
  5854     009D                     	;# 
  5855     009E                     	;# 
  5856     009F                     	;# 
  5857     010C                     	;# 
  5858     010C                     	;# 
  5859     010D                     	;# 
  5860     010E                     	;# 
  5861     010F                     	;# 
  5862     010F                     	;# 
  5863     0110                     	;# 
  5864     0111                     	;# 
  5865     0112                     	;# 
  5866     0113                     	;# 
  5867     0114                     	;# 
  5868     0115                     	;# 
  5869     0116                     	;# 
  5870     0117                     	;# 
  5871     0118                     	;# 
  5872     0119                     	;# 
  5873     0119                     	;# 
  5874     0119                     	;# 
  5875     011A                     	;# 
  5876     011A                     	;# 
  5877     011A                     	;# 
  5878     011B                     	;# 
  5879     011B                     	;# 
  5880     011B                     	;# 
  5881     011B                     	;# 
  5882     011B                     	;# 
  5883     011C                     	;# 
  5884     011C                     	;# 
  5885     011C                     	;# 
  5886     011D                     	;# 
  5887     011D                     	;# 
  5888     011D                     	;# 
  5889     011E                     	;# 
  5890     011E                     	;# 
  5891     011E                     	;# 
  5892     011F                     	;# 
  5893     011F                     	;# 
  5894     011F                     	;# 
  5895     011F                     	;# 
  5896     011F                     	;# 
  5897     018C                     	;# 
  5898     018D                     	;# 
  5899     018E                     	;# 
  5900     018F                     	;# 
  5901     0190                     	;# 
  5902     0191                     	;# 
  5903     0192                     	;# 
  5904     0196                     	;# 
  5905     0197                     	;# 
  5906     0198                     	;# 
  5907     0199                     	;# 
  5908     019A                     	;# 
  5909     019B                     	;# 
  5910     019C                     	;# 
  5911     020C                     	;# 
  5912     020D                     	;# 
  5913     020E                     	;# 
  5914     020E                     	;# 
  5915     020F                     	;# 
  5916     020F                     	;# 
  5917     0210                     	;# 
  5918     0210                     	;# 
  5919     0211                     	;# 
  5920     0211                     	;# 
  5921     0212                     	;# 
  5922     0213                     	;# 
  5923     0214                     	;# 
  5924     0214                     	;# 
  5925     0215                     	;# 
  5926     0215                     	;# 
  5927     0216                     	;# 
  5928     0216                     	;# 
  5929     0217                     	;# 
  5930     0217                     	;# 
  5931     0218                     	;# 
  5932     0219                     	;# 
  5933     021A                     	;# 
  5934     021A                     	;# 
  5935     021B                     	;# 
  5936     021B                     	;# 
  5937     021C                     	;# 
  5938     021C                     	;# 
  5939     021D                     	;# 
  5940     021D                     	;# 
  5941     021E                     	;# 
  5942     021F                     	;# 
  5943     028C                     	;# 
  5944     028C                     	;# 
  5945     028D                     	;# 
  5946     028D                     	;# 
  5947     028E                     	;# 
  5948     028F                     	;# 
  5949     0290                     	;# 
  5950     0291                     	;# 
  5951     0292                     	;# 
  5952     0292                     	;# 
  5953     0293                     	;# 
  5954     0293                     	;# 
  5955     0294                     	;# 
  5956     0295                     	;# 
  5957     0296                     	;# 
  5958     0297                     	;# 
  5959     0298                     	;# 
  5960     0298                     	;# 
  5961     0299                     	;# 
  5962     0299                     	;# 
  5963     029A                     	;# 
  5964     029B                     	;# 
  5965     029C                     	;# 
  5966     029D                     	;# 
  5967     029F                     	;# 
  5968     030C                     	;# 
  5969     030C                     	;# 
  5970     030D                     	;# 
  5971     030E                     	;# 
  5972     030F                     	;# 
  5973     0310                     	;# 
  5974     0310                     	;# 
  5975     0311                     	;# 
  5976     0312                     	;# 
  5977     0313                     	;# 
  5978     0314                     	;# 
  5979     0314                     	;# 
  5980     0315                     	;# 
  5981     0316                     	;# 
  5982     0317                     	;# 
  5983     0318                     	;# 
  5984     0318                     	;# 
  5985     0319                     	;# 
  5986     031A                     	;# 
  5987     031B                     	;# 
  5988     038C                     	;# 
  5989     038C                     	;# 
  5990     038D                     	;# 
  5991     038E                     	;# 
  5992     0390                     	;# 
  5993     0390                     	;# 
  5994     0391                     	;# 
  5995     0392                     	;# 
  5996     048C                     	;# 
  5997     048C                     	;# 
  5998     048D                     	;# 
  5999     048E                     	;# 
  6000     048F                     	;# 
  6001     048F                     	;# 
  6002     0490                     	;# 
  6003     0491                     	;# 
  6004     0492                     	;# 
  6005     0492                     	;# 
  6006     0493                     	;# 
  6007     0494                     	;# 
  6008     0495                     	;# 
  6009     0495                     	;# 
  6010     0496                     	;# 
  6011     0497                     	;# 
  6012     0498                     	;# 
  6013     0499                     	;# 
  6014     049A                     	;# 
  6015     049B                     	;# 
  6016     049C                     	;# 
  6017     049D                     	;# 
  6018     058C                     	;# 
  6019     058C                     	;# 
  6020     058D                     	;# 
  6021     058E                     	;# 
  6022     058F                     	;# 
  6023     058F                     	;# 
  6024     0590                     	;# 
  6025     0591                     	;# 
  6026     0592                     	;# 
  6027     0593                     	;# 
  6028     059C                     	;# 
  6029     059C                     	;# 
  6030     059D                     	;# 
  6031     059D                     	;# 
  6032     059E                     	;# 
  6033     059F                     	;# 
  6034     060C                     	;# 
  6035     060C                     	;# 
  6036     060D                     	;# 
  6037     060D                     	;# 
  6038     060E                     	;# 
  6039     060F                     	;# 
  6040     0610                     	;# 
  6041     0611                     	;# 
  6042     0612                     	;# 
  6043     0613                     	;# 
  6044     0614                     	;# 
  6045     0616                     	;# 
  6046     0616                     	;# 
  6047     0617                     	;# 
  6048     0617                     	;# 
  6049     0618                     	;# 
  6050     0619                     	;# 
  6051     061A                     	;# 
  6052     061B                     	;# 
  6053     061C                     	;# 
  6054     061D                     	;# 
  6055     061E                     	;# 
  6056     070C                     	;# 
  6057     070D                     	;# 
  6058     070E                     	;# 
  6059     070F                     	;# 
  6060     0710                     	;# 
  6061     0711                     	;# 
  6062     0712                     	;# 
  6063     0713                     	;# 
  6064     0714                     	;# 
  6065     0716                     	;# 
  6066     0717                     	;# 
  6067     0718                     	;# 
  6068     0719                     	;# 
  6069     071A                     	;# 
  6070     071B                     	;# 
  6071     071C                     	;# 
  6072     071D                     	;# 
  6073     071E                     	;# 
  6074     0796                     	;# 
  6075     0797                     	;# 
  6076     0798                     	;# 
  6077     0799                     	;# 
  6078     079A                     	;# 
  6079     079B                     	;# 
  6080     079C                     	;# 
  6081     079D                     	;# 
  6082     080C                     	;# 
  6083     080D                     	;# 
  6084     080E                     	;# 
  6085     080F                     	;# 
  6086     0810                     	;# 
  6087     0811                     	;# 
  6088     0812                     	;# 
  6089     0813                     	;# 
  6090     0814                     	;# 
  6091     081A                     	;# 
  6092     081A                     	;# 
  6093     081B                     	;# 
  6094     081C                     	;# 
  6095     081C                     	;# 
  6096     081D                     	;# 
  6097     081E                     	;# 
  6098     081F                     	;# 
  6099     088C                     	;# 
  6100     088D                     	;# 
  6101     088E                     	;# 
  6102     088F                     	;# 
  6103     0890                     	;# 
  6104     0891                     	;# 
  6105     0892                     	;# 
  6106     0893                     	;# 
  6107     0895                     	;# 
  6108     0896                     	;# 
  6109     0897                     	;# 
  6110     0898                     	;# 
  6111     0899                     	;# 
  6112     089A                     	;# 
  6113     089B                     	;# 
  6114     090C                     	;# 
  6115     090E                     	;# 
  6116     090F                     	;# 
  6117     091F                     	;# 
  6118     098F                     	;# 
  6119     098F                     	;# 
  6120     0990                     	;# 
  6121     0991                     	;# 
  6122     0992                     	;# 
  6123     0993                     	;# 
  6124     0994                     	;# 
  6125     0995                     	;# 
  6126     0996                     	;# 
  6127     0997                     	;# 
  6128     1E0F                     	;# 
  6129     1E10                     	;# 
  6130     1E11                     	;# 
  6131     1E12                     	;# 
  6132     1E13                     	;# 
  6133     1E14                     	;# 
  6134     1E15                     	;# 
  6135     1E16                     	;# 
  6136     1E17                     	;# 
  6137     1E18                     	;# 
  6138     1E19                     	;# 
  6139     1E1A                     	;# 
  6140     1E1B                     	;# 
  6141     1E1C                     	;# 
  6142     1E1D                     	;# 
  6143     1E1E                     	;# 
  6144     1E1F                     	;# 
  6145     1E20                     	;# 
  6146     1E21                     	;# 
  6147     1E22                     	;# 
  6148     1E23                     	;# 
  6149     1E24                     	;# 
  6150     1E25                     	;# 
  6151     1E26                     	;# 
  6152     1E27                     	;# 
  6153     1E28                     	;# 
  6154     1E29                     	;# 
  6155     1E2A                     	;# 
  6156     1E2B                     	;# 
  6157     1E2C                     	;# 
  6158     1E2D                     	;# 
  6159     1E2E                     	;# 
  6160     1E2F                     	;# 
  6161     1E30                     	;# 
  6162     1E31                     	;# 
  6163     1E32                     	;# 
  6164     1E33                     	;# 
  6165     1E34                     	;# 
  6166     1E35                     	;# 
  6167     1E36                     	;# 
  6168     1E37                     	;# 
  6169     1E8F                     	;# 
  6170     1E90                     	;# 
  6171     1E91                     	;# 
  6172     1E92                     	;# 
  6173     1E93                     	;# 
  6174     1E94                     	;# 
  6175     1E95                     	;# 
  6176     1E96                     	;# 
  6177     1E97                     	;# 
  6178     1E9C                     	;# 
  6179     1E9D                     	;# 
  6180     1E9E                     	;# 
  6181     1EA1                     	;# 
  6182     1EA2                     	;# 
  6183     1EA3                     	;# 
  6184     1EA4                     	;# 
  6185     1EA9                     	;# 
  6186     1EAA                     	;# 
  6187     1EB1                     	;# 
  6188     1EB2                     	;# 
  6189     1EB8                     	;# 
  6190     1EB9                     	;# 
  6191     1EBA                     	;# 
  6192     1EBB                     	;# 
  6193     1EBC                     	;# 
  6194     1EBD                     	;# 
  6195     1EBE                     	;# 
  6196     1EC3                     	;# 
  6197     1EC5                     	;# 
  6198     1EC6                     	;# 
  6199     1EC7                     	;# 
  6200     1EC8                     	;# 
  6201     1EC9                     	;# 
  6202     1ECA                     	;# 
  6203     1ECB                     	;# 
  6204     1ECC                     	;# 
  6205     1F10                     	;# 
  6206     1F11                     	;# 
  6207     1F12                     	;# 
  6208     1F14                     	;# 
  6209     1F15                     	;# 
  6210     1F20                     	;# 
  6211     1F21                     	;# 
  6212     1F22                     	;# 
  6213     1F23                     	;# 
  6214     1F24                     	;# 
  6215     1F25                     	;# 
  6216     1F38                     	;# 
  6217     1F39                     	;# 
  6218     1F3A                     	;# 
  6219     1F3B                     	;# 
  6220     1F3C                     	;# 
  6221     1F3D                     	;# 
  6222     1F3E                     	;# 
  6223     1F3F                     	;# 
  6224     1F4E                     	;# 
  6225     1F4F                     	;# 
  6226     1F50                     	;# 
  6227     1F51                     	;# 
  6228     1F52                     	;# 
  6229     1F53                     	;# 
  6230     1F54                     	;# 
  6231     1F55                     	;# 
  6232     1FE4                     	;# 
  6233     1FE5                     	;# 
  6234     1FE6                     	;# 
  6235     1FE7                     	;# 
  6236     1FE8                     	;# 
  6237     1FE8                     	;# 
  6238     1FE9                     	;# 
  6239     1FEA                     	;# 
  6240     1FEB                     	;# 
  6241     1FED                     	;# 
  6242     1FEE                     	;# 
  6243     1FEF                     	;# 
  6244     0000                     	;# 
  6245     0001                     	;# 
  6246     0002                     	;# 
  6247     0003                     	;# 
  6248     0004                     	;# 
  6249     0005                     	;# 
  6250     0006                     	;# 
  6251     0007                     	;# 
  6252     0008                     	;# 
  6253     0009                     	;# 
  6254     000A                     	;# 
  6255     000B                     	;# 
  6256     000C                     	;# 
  6257     000E                     	;# 
  6258     0012                     	;# 
  6259     0014                     	;# 
  6260     0018                     	;# 
  6261     001A                     	;# 
  6262     008C                     	;# 
  6263     008C                     	;# 
  6264     008D                     	;# 
  6265     008E                     	;# 
  6266     008E                     	;# 
  6267     008F                     	;# 
  6268     0090                     	;# 
  6269     0090                     	;# 
  6270     0091                     	;# 
  6271     0092                     	;# 
  6272     0092                     	;# 
  6273     0093                     	;# 
  6274     0094                     	;# 
  6275     0094                     	;# 
  6276     0095                     	;# 
  6277     0096                     	;# 
  6278     0096                     	;# 
  6279     0097                     	;# 
  6280     0098                     	;# 
  6281     0099                     	;# 
  6282     009A                     	;# 
  6283     009B                     	;# 
  6284     009B                     	;# 
  6285     009C                     	;# 
  6286     009D                     	;# 
  6287     009D                     	;# 
  6288     009E                     	;# 
  6289     009F                     	;# 
  6290     010C                     	;# 
  6291     010C                     	;# 
  6292     010D                     	;# 
  6293     010E                     	;# 
  6294     010F                     	;# 
  6295     010F                     	;# 
  6296     0110                     	;# 
  6297     0111                     	;# 
  6298     0112                     	;# 
  6299     0113                     	;# 
  6300     0114                     	;# 
  6301     0115                     	;# 
  6302     0116                     	;# 
  6303     0117                     	;# 
  6304     0118                     	;# 
  6305     0119                     	;# 
  6306     0119                     	;# 
  6307     0119                     	;# 
  6308     011A                     	;# 
  6309     011A                     	;# 
  6310     011A                     	;# 
  6311     011B                     	;# 
  6312     011B                     	;# 
  6313     011B                     	;# 
  6314     011B                     	;# 
  6315     011B                     	;# 
  6316     011C                     	;# 
  6317     011C                     	;# 
  6318     011C                     	;# 
  6319     011D                     	;# 
  6320     011D                     	;# 
  6321     011D                     	;# 
  6322     011E                     	;# 
  6323     011E                     	;# 
  6324     011E                     	;# 
  6325     011F                     	;# 
  6326     011F                     	;# 
  6327     011F                     	;# 
  6328     011F                     	;# 
  6329     011F                     	;# 
  6330     018C                     	;# 
  6331     018D                     	;# 
  6332     018E                     	;# 
  6333     018F                     	;# 
  6334     0190                     	;# 
  6335     0191                     	;# 
  6336     0192                     	;# 
  6337     0196                     	;# 
  6338     0197                     	;# 
  6339     0198                     	;# 
  6340     0199                     	;# 
  6341     019A                     	;# 
  6342     019B                     	;# 
  6343     019C                     	;# 
  6344     020C                     	;# 
  6345     020D                     	;# 
  6346     020E                     	;# 
  6347     020E                     	;# 
  6348     020F                     	;# 
  6349     020F                     	;# 
  6350     0210                     	;# 
  6351     0210                     	;# 
  6352     0211                     	;# 
  6353     0211                     	;# 
  6354     0212                     	;# 
  6355     0213                     	;# 
  6356     0214                     	;# 
  6357     0214                     	;# 
  6358     0215                     	;# 
  6359     0215                     	;# 
  6360     0216                     	;# 
  6361     0216                     	;# 
  6362     0217                     	;# 
  6363     0217                     	;# 
  6364     0218                     	;# 
  6365     0219                     	;# 
  6366     021A                     	;# 
  6367     021A                     	;# 
  6368     021B                     	;# 
  6369     021B                     	;# 
  6370     021C                     	;# 
  6371     021C                     	;# 
  6372     021D                     	;# 
  6373     021D                     	;# 
  6374     021E                     	;# 
  6375     021F                     	;# 
  6376     028C                     	;# 
  6377     028C                     	;# 
  6378     028D                     	;# 
  6379     028D                     	;# 
  6380     028E                     	;# 
  6381     028F                     	;# 
  6382     0290                     	;# 
  6383     0291                     	;# 
  6384     0292                     	;# 
  6385     0292                     	;# 
  6386     0293                     	;# 
  6387     0293                     	;# 
  6388     0294                     	;# 
  6389     0295                     	;# 
  6390     0296                     	;# 
  6391     0297                     	;# 
  6392     0298                     	;# 
  6393     0298                     	;# 
  6394     0299                     	;# 
  6395     0299                     	;# 
  6396     029A                     	;# 
  6397     029B                     	;# 
  6398     029C                     	;# 
  6399     029D                     	;# 
  6400     029F                     	;# 
  6401     030C                     	;# 
  6402     030C                     	;# 
  6403     030D                     	;# 
  6404     030E                     	;# 
  6405     030F                     	;# 
  6406     0310                     	;# 
  6407     0310                     	;# 
  6408     0311                     	;# 
  6409     0312                     	;# 
  6410     0313                     	;# 
  6411     0314                     	;# 
  6412     0314                     	;# 
  6413     0315                     	;# 
  6414     0316                     	;# 
  6415     0317                     	;# 
  6416     0318                     	;# 
  6417     0318                     	;# 
  6418     0319                     	;# 
  6419     031A                     	;# 
  6420     031B                     	;# 
  6421     038C                     	;# 
  6422     038C                     	;# 
  6423     038D                     	;# 
  6424     038E                     	;# 
  6425     0390                     	;# 
  6426     0390                     	;# 
  6427     0391                     	;# 
  6428     0392                     	;# 
  6429     048C                     	;# 
  6430     048C                     	;# 
  6431     048D                     	;# 
  6432     048E                     	;# 
  6433     048F                     	;# 
  6434     048F                     	;# 
  6435     0490                     	;# 
  6436     0491                     	;# 
  6437     0492                     	;# 
  6438     0492                     	;# 
  6439     0493                     	;# 
  6440     0494                     	;# 
  6441     0495                     	;# 
  6442     0495                     	;# 
  6443     0496                     	;# 
  6444     0497                     	;# 
  6445     0498                     	;# 
  6446     0499                     	;# 
  6447     049A                     	;# 
  6448     049B                     	;# 
  6449     049C                     	;# 
  6450     049D                     	;# 
  6451     058C                     	;# 
  6452     058C                     	;# 
  6453     058D                     	;# 
  6454     058E                     	;# 
  6455     058F                     	;# 
  6456     058F                     	;# 
  6457     0590                     	;# 
  6458     0591                     	;# 
  6459     0592                     	;# 
  6460     0593                     	;# 
  6461     059C                     	;# 
  6462     059C                     	;# 
  6463     059D                     	;# 
  6464     059D                     	;# 
  6465     059E                     	;# 
  6466     059F                     	;# 
  6467     060C                     	;# 
  6468     060C                     	;# 
  6469     060D                     	;# 
  6470     060D                     	;# 
  6471     060E                     	;# 
  6472     060F                     	;# 
  6473     0610                     	;# 
  6474     0611                     	;# 
  6475     0612                     	;# 
  6476     0613                     	;# 
  6477     0614                     	;# 
  6478     0616                     	;# 
  6479     0616                     	;# 
  6480     0617                     	;# 
  6481     0617                     	;# 
  6482     0618                     	;# 
  6483     0619                     	;# 
  6484     061A                     	;# 
  6485     061B                     	;# 
  6486     061C                     	;# 
  6487     061D                     	;# 
  6488     061E                     	;# 
  6489     070C                     	;# 
  6490     070D                     	;# 
  6491     070E                     	;# 
  6492     070F                     	;# 
  6493     0710                     	;# 
  6494     0711                     	;# 
  6495     0712                     	;# 
  6496     0713                     	;# 
  6497     0714                     	;# 
  6498     0716                     	;# 
  6499     0717                     	;# 
  6500     0718                     	;# 
  6501     0719                     	;# 
  6502     071A                     	;# 
  6503     071B                     	;# 
  6504     071C                     	;# 
  6505     071D                     	;# 
  6506     071E                     	;# 
  6507     0796                     	;# 
  6508     0797                     	;# 
  6509     0798                     	;# 
  6510     0799                     	;# 
  6511     079A                     	;# 
  6512     079B                     	;# 
  6513     079C                     	;# 
  6514     079D                     	;# 
  6515     080C                     	;# 
  6516     080D                     	;# 
  6517     080E                     	;# 
  6518     080F                     	;# 
  6519     0810                     	;# 
  6520     0811                     	;# 
  6521     0812                     	;# 
  6522     0813                     	;# 
  6523     0814                     	;# 
  6524     081A                     	;# 
  6525     081A                     	;# 
  6526     081B                     	;# 
  6527     081C                     	;# 
  6528     081C                     	;# 
  6529     081D                     	;# 
  6530     081E                     	;# 
  6531     081F                     	;# 
  6532     088C                     	;# 
  6533     088D                     	;# 
  6534     088E                     	;# 
  6535     088F                     	;# 
  6536     0890                     	;# 
  6537     0891                     	;# 
  6538     0892                     	;# 
  6539     0893                     	;# 
  6540     0895                     	;# 
  6541     0896                     	;# 
  6542     0897                     	;# 
  6543     0898                     	;# 
  6544     0899                     	;# 
  6545     089A                     	;# 
  6546     089B                     	;# 
  6547     090C                     	;# 
  6548     090E                     	;# 
  6549     090F                     	;# 
  6550     091F                     	;# 
  6551     098F                     	;# 
  6552     098F                     	;# 
  6553     0990                     	;# 
  6554     0991                     	;# 
  6555     0992                     	;# 
  6556     0993                     	;# 
  6557     0994                     	;# 
  6558     0995                     	;# 
  6559     0996                     	;# 
  6560     0997                     	;# 
  6561     1E0F                     	;# 
  6562     1E10                     	;# 
  6563     1E11                     	;# 
  6564     1E12                     	;# 
  6565     1E13                     	;# 
  6566     1E14                     	;# 
  6567     1E15                     	;# 
  6568     1E16                     	;# 
  6569     1E17                     	;# 
  6570     1E18                     	;# 
  6571     1E19                     	;# 
  6572     1E1A                     	;# 
  6573     1E1B                     	;# 
  6574     1E1C                     	;# 
  6575     1E1D                     	;# 
  6576     1E1E                     	;# 
  6577     1E1F                     	;# 
  6578     1E20                     	;# 
  6579     1E21                     	;# 
  6580     1E22                     	;# 
  6581     1E23                     	;# 
  6582     1E24                     	;# 
  6583     1E25                     	;# 
  6584     1E26                     	;# 
  6585     1E27                     	;# 
  6586     1E28                     	;# 
  6587     1E29                     	;# 
  6588     1E2A                     	;# 
  6589     1E2B                     	;# 
  6590     1E2C                     	;# 
  6591     1E2D                     	;# 
  6592     1E2E                     	;# 
  6593     1E2F                     	;# 
  6594     1E30                     	;# 
  6595     1E31                     	;# 
  6596     1E32                     	;# 
  6597     1E33                     	;# 
  6598     1E34                     	;# 
  6599     1E35                     	;# 
  6600     1E36                     	;# 
  6601     1E37                     	;# 
  6602     1E8F                     	;# 
  6603     1E90                     	;# 
  6604     1E91                     	;# 
  6605     1E92                     	;# 
  6606     1E93                     	;# 
  6607     1E94                     	;# 
  6608     1E95                     	;# 
  6609     1E96                     	;# 
  6610     1E97                     	;# 
  6611     1E9C                     	;# 
  6612     1E9D                     	;# 
  6613     1E9E                     	;# 
  6614     1EA1                     	;# 
  6615     1EA2                     	;# 
  6616     1EA3                     	;# 
  6617     1EA4                     	;# 
  6618     1EA9                     	;# 
  6619     1EAA                     	;# 
  6620     1EB1                     	;# 
  6621     1EB2                     	;# 
  6622     1EB8                     	;# 
  6623     1EB9                     	;# 
  6624     1EBA                     	;# 
  6625     1EBB                     	;# 
  6626     1EBC                     	;# 
  6627     1EBD                     	;# 
  6628     1EBE                     	;# 
  6629     1EC3                     	;# 
  6630     1EC5                     	;# 
  6631     1EC6                     	;# 
  6632     1EC7                     	;# 
  6633     1EC8                     	;# 
  6634     1EC9                     	;# 
  6635     1ECA                     	;# 
  6636     1ECB                     	;# 
  6637     1ECC                     	;# 
  6638     1F10                     	;# 
  6639     1F11                     	;# 
  6640     1F12                     	;# 
  6641     1F14                     	;# 
  6642     1F15                     	;# 
  6643     1F20                     	;# 
  6644     1F21                     	;# 
  6645     1F22                     	;# 
  6646     1F23                     	;# 
  6647     1F24                     	;# 
  6648     1F25                     	;# 
  6649     1F38                     	;# 
  6650     1F39                     	;# 
  6651     1F3A                     	;# 
  6652     1F3B                     	;# 
  6653     1F3C                     	;# 
  6654     1F3D                     	;# 
  6655     1F3E                     	;# 
  6656     1F3F                     	;# 
  6657     1F4E                     	;# 
  6658     1F4F                     	;# 
  6659     1F50                     	;# 
  6660     1F51                     	;# 
  6661     1F52                     	;# 
  6662     1F53                     	;# 
  6663     1F54                     	;# 
  6664     1F55                     	;# 
  6665     1FE4                     	;# 
  6666     1FE5                     	;# 
  6667     1FE6                     	;# 
  6668     1FE7                     	;# 
  6669     1FE8                     	;# 
  6670     1FE8                     	;# 
  6671     1FE9                     	;# 
  6672     1FEA                     	;# 
  6673     1FEB                     	;# 
  6674     1FED                     	;# 
  6675     1FEE                     	;# 
  6676     1FEF                     	;# 
  6677                           
  6678 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  6679     0000                     
  6680                           	psect	idataBANK0
  6681     0A8C                     __pidataBANK0:
  6682                           
  6683                           ;initializer for _status_prev
  6684     0A8C  3435               	retlw	53
  6685     0A8D  340C               	retlw	12
  6686     0A8E  340C               	retlw	12
  6687     0A8F  34FE               	retlw	254
  6688     0A90  3400               	retlw	0
  6689     0A91  3401               	retlw	1
  6690     0A92  3400               	retlw	0
  6691                           
  6692                           ;initializer for _status
  6693     0A93  3435               	retlw	53
  6694     0A94  340C               	retlw	12
  6695     0A95  340C               	retlw	12
  6696     0A96  34FE               	retlw	254
  6697     0A97  3400               	retlw	0
  6698     0A98  3401               	retlw	1
  6699     0A99  3400               	retlw	0
  6700                           
  6701                           ;initializer for _measureTime
  6702     0A9A  3401               	retlw	1
  6703                           
  6704                           	psect	idataBANK1
  6705     0BB4                     __pidataBANK1:
  6706                           
  6707                           ;initializer for main@F11067
  6708     0BB4  3400               	retlw	0
  6709     0BB5  3400               	retlw	0
  6710     0BB6  3400               	retlw	0
  6711     0BB7  3400               	retlw	0
  6712     0BB8  3400               	retlw	0
  6713     0BB9  3400               	retlw	0
  6714     0BBA  3430               	retlw	48
  6715     0BBB  3430               	retlw	48
  6716     0BBC  3430               	retlw	48
  6717     0BBD  3430               	retlw	48
  6718     0BBE  3430               	retlw	48
  6719                           
  6720                           ;initializer for sendSensorData@F11035
  6721     0BBF  344C               	retlw	76
  6722     0BC0  343E               	retlw	62
  6723     0BC1  3400               	retlw	0
  6724     0BC2  3400               	retlw	0
  6725     0BC3  3400               	retlw	0
  6726     0BC4  3400               	retlw	0
  6727     0BC5  3400               	retlw	0
  6728     0BC6  3400               	retlw	0
  6729                           
  6730                           ;initializer for sendSensorInfo@F11030
  6731     0BC7  344C               	retlw	76
  6732     0BC8  343E               	retlw	62
  6733     0BC9  3445               	retlw	69
  6734     0BCA  3450               	retlw	80
  6735     0BCB  3431               	retlw	49
  6736     0BCC  3430               	retlw	48
  6737     0BCD  3430               	retlw	48
  6738                           
  6739                           	psect	idataBANK2
  6740     0795                     __pidataBANK2:
  6741                           
  6742                           ;initializer for _battery
  6743     0795  3445               	retlw	69
  6744     0796  3442               	retlw	66
  6745     0797  3431               	retlw	49
  6746     0798  3430               	retlw	48
  6747     0799  3431               	retlw	49
  6748     079A  3431               	retlw	49
  6749     079B  3430               	retlw	48
  6750     079C  3431               	retlw	49
  6751     079D  3441               	retlw	65
  6752     079E  3443               	retlw	67
  6753     079F  341C               	retlw	28
  6754     07A0  3436               	retlw	54
  6755     07A1  341A               	retlw	26
  6756     07A2  3400               	retlw	0
  6757     07A3  3400               	retlw	0
  6758     07A4  3400               	retlw	0
  6759     07A5  3400               	retlw	0
  6760     07A6  3400               	retlw	0
  6761     07A7  3400               	retlw	0
  6762     07A8  3400               	retlw	0
  6763     07A9  3400               	retlw	0
  6764     07AA  3400               	retlw	0
  6765     07AB  3400               	retlw	0
  6766     07AC  3400               	retlw	0
  6767     07AD  3400               	retlw	0
  6768     07AE  3400               	retlw	0
  6769     07AF  3400               	retlw	0
  6770     07B0  3400               	retlw	0
  6771     07B1  3400               	retlw	0
  6772     07B2  3400               	retlw	0
  6773     07B3  3400               	retlw	0
  6774     07B4  34FF               	retlw	255
  6775     07B5  347F               	retlw	127
  6776     07B6  3400               	retlw	0
  6777     07B7  3400               	retlw	0
  6778     07B8  3400               	retlw	0
  6779     07B9  3400               	retlw	0
  6780     07BA  3400               	retlw	0
  6781     07BB  3400               	retlw	0
  6782     07BC  3400               	retlw	0
  6783     07BD  3400               	retlw	0
  6784     07BE  3400               	retlw	0
  6785     07BF  3400               	retlw	0
  6786     07C0  3400               	retlw	0
  6787     07C1  3400               	retlw	0
  6788     07C2  3400               	retlw	0
  6789     07C3  3400               	retlw	0
  6790     07C4  3400               	retlw	0
  6791     07C5  3400               	retlw	0
  6792     07C6  3400               	retlw	0
  6793     07C7  3400               	retlw	0
  6794     07C8  3400               	retlw	0
  6795     07C9  3400               	retlw	0
  6796     07CA  3400               	retlw	0
  6797     07CB  34FF               	retlw	255
  6798     07CC  347F               	retlw	127
  6799     07CD  3400               	retlw	0
  6800     07CE  3400               	retlw	0
  6801     07CF  3400               	retlw	0
  6802                           
  6803                           	psect	idataBANK3
  6804     0FC5                     __pidataBANK3:
  6805                           
  6806                           ;initializer for _panel
  6807     0FC5  3445               	retlw	69
  6808     0FC6  3450               	retlw	80
  6809     0FC7  3431               	retlw	49
  6810     0FC8  3430               	retlw	48
  6811     0FC9  3430               	retlw	48
  6812     0FCA  3431               	retlw	49
  6813     0FCB  3430               	retlw	48
  6814     0FCC  3430               	retlw	48
  6815     0FCD  3440               	retlw	64
  6816     0FCE  3443               	retlw	67
  6817     0FCF  343C               	retlw	60
  6818     0FD0  3436               	retlw	54
  6819     0FD1  341A               	retlw	26
  6820     0FD2  3400               	retlw	0
  6821     0FD3  3400               	retlw	0
  6822     0FD4  3400               	retlw	0
  6823     0FD5  3400               	retlw	0
  6824     0FD6  3400               	retlw	0
  6825     0FD7  3400               	retlw	0
  6826     0FD8  3400               	retlw	0
  6827     0FD9  3400               	retlw	0
  6828     0FDA  3400               	retlw	0
  6829     0FDB  3400               	retlw	0
  6830     0FDC  3400               	retlw	0
  6831     0FDD  3400               	retlw	0
  6832     0FDE  3400               	retlw	0
  6833     0FDF  3400               	retlw	0
  6834     0FE0  3400               	retlw	0
  6835     0FE1  3400               	retlw	0
  6836     0FE2  3400               	retlw	0
  6837     0FE3  3400               	retlw	0
  6838     0FE4  34FF               	retlw	255
  6839     0FE5  347F               	retlw	127
  6840     0FE6  3400               	retlw	0
  6841     0FE7  3400               	retlw	0
  6842     0FE8  3400               	retlw	0
  6843     0FE9  3400               	retlw	0
  6844     0FEA  3400               	retlw	0
  6845     0FEB  3400               	retlw	0
  6846     0FEC  3400               	retlw	0
  6847     0FED  3400               	retlw	0
  6848     0FEE  3400               	retlw	0
  6849     0FEF  3400               	retlw	0
  6850     0FF0  3400               	retlw	0
  6851     0FF1  3400               	retlw	0
  6852     0FF2  3400               	retlw	0
  6853     0FF3  3400               	retlw	0
  6854     0FF4  3400               	retlw	0
  6855     0FF5  3400               	retlw	0
  6856     0FF6  3400               	retlw	0
  6857     0FF7  3400               	retlw	0
  6858     0FF8  3400               	retlw	0
  6859     0FF9  3400               	retlw	0
  6860     0FFA  3400               	retlw	0
  6861     0FFB  34FF               	retlw	255
  6862     0FFC  347F               	retlw	127
  6863     0FFD  3400               	retlw	0
  6864     0FFE  3400               	retlw	0
  6865     0FFF  3400               	retlw	0
  6866                           
  6867                           	psect	idataBANK4
  6868     0F8A                     __pidataBANK4:
  6869                           
  6870                           ;initializer for _cons
  6871     0F8A  3445               	retlw	69
  6872     0F8B  3443               	retlw	67
  6873     0F8C  3431               	retlw	49
  6874     0F8D  3430               	retlw	48
  6875     0F8E  3432               	retlw	50
  6876     0F8F  3431               	retlw	49
  6877     0F90  3430               	retlw	48
  6878     0F91  3432               	retlw	50
  6879     0F92  3442               	retlw	66
  6880     0F93  3443               	retlw	67
  6881     0F94  341C               	retlw	28
  6882     0F95  3436               	retlw	54
  6883     0F96  341A               	retlw	26
  6884     0F97  3400               	retlw	0
  6885     0F98  3400               	retlw	0
  6886     0F99  3400               	retlw	0
  6887     0F9A  3400               	retlw	0
  6888     0F9B  3400               	retlw	0
  6889     0F9C  3400               	retlw	0
  6890     0F9D  3400               	retlw	0
  6891     0F9E  3400               	retlw	0
  6892     0F9F  3400               	retlw	0
  6893     0FA0  3400               	retlw	0
  6894     0FA1  3400               	retlw	0
  6895     0FA2  3400               	retlw	0
  6896     0FA3  3400               	retlw	0
  6897     0FA4  3400               	retlw	0
  6898     0FA5  3400               	retlw	0
  6899     0FA6  3400               	retlw	0
  6900     0FA7  3400               	retlw	0
  6901     0FA8  3400               	retlw	0
  6902     0FA9  34FF               	retlw	255
  6903     0FAA  347F               	retlw	127
  6904     0FAB  3400               	retlw	0
  6905     0FAC  3400               	retlw	0
  6906     0FAD  3400               	retlw	0
  6907     0FAE  3400               	retlw	0
  6908     0FAF  3400               	retlw	0
  6909     0FB0  3400               	retlw	0
  6910     0FB1  3400               	retlw	0
  6911     0FB2  3400               	retlw	0
  6912     0FB3  3400               	retlw	0
  6913     0FB4  3400               	retlw	0
  6914     0FB5  3400               	retlw	0
  6915     0FB6  3400               	retlw	0
  6916     0FB7  3400               	retlw	0
  6917     0FB8  3400               	retlw	0
  6918     0FB9  3400               	retlw	0
  6919     0FBA  3400               	retlw	0
  6920     0FBB  3400               	retlw	0
  6921     0FBC  3400               	retlw	0
  6922     0FBD  3400               	retlw	0
  6923     0FBE  3400               	retlw	0
  6924     0FBF  3400               	retlw	0
  6925     0FC0  34FF               	retlw	255
  6926     0FC1  347F               	retlw	127
  6927     0FC2  3400               	retlw	0
  6928     0FC3  3400               	retlw	0
  6929     0FC4  3400               	retlw	0
  6930                           
  6931                           	psect	stringtext1
  6932     1000                     __pstringtext1:
  6933     1000                     _fsmStateTable:
  6934     1000  3495               	retlw	low _I2C1_DO_IDLE
  6935     1001  3409               	retlw	high _I2C1_DO_IDLE
  6936     1002  34EE               	retlw	low _I2C1_DO_SEND_ADR_READ
  6937     1003  3409               	retlw	high _I2C1_DO_SEND_ADR_READ
  6938     1004  34E7               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  6939     1005  3409               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  6940     1006  3405               	retlw	low _I2C1_DO_TX
  6941     1007  3407               	retlw	high _I2C1_DO_TX
  6942     1008  3453               	retlw	low _I2C1_DO_RX
  6943     1009  3407               	retlw	high _I2C1_DO_RX
  6944     100A  34D5               	retlw	low _I2C1_DO_RCEN
  6945     100B  3409               	retlw	high _I2C1_DO_RCEN
  6946     100C  34C2               	retlw	low _I2C1_DO_TX_EMPTY
  6947     100D  340D               	retlw	high _I2C1_DO_TX_EMPTY
  6948     100E  345E               	retlw	low _I2C1_DO_SEND_RESTART_READ
  6949     100F  3409               	retlw	high _I2C1_DO_SEND_RESTART_READ
  6950     1010  3462               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  6951     1011  3409               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  6952     1012  3466               	retlw	low _I2C1_DO_SEND_RESTART
  6953     1013  3409               	retlw	high _I2C1_DO_SEND_RESTART
  6954     1014  346A               	retlw	low _I2C1_DO_SEND_STOP
  6955     1015  3409               	retlw	high _I2C1_DO_SEND_STOP
  6956     1016  346E               	retlw	low _I2C1_DO_RX_ACK
  6957     1017  3409               	retlw	high _I2C1_DO_RX_ACK
  6958     1018  3472               	retlw	low _I2C1_DO_RX_NACK_STOP
  6959     1019  3409               	retlw	high _I2C1_DO_RX_NACK_STOP
  6960     101A  3476               	retlw	low _I2C1_DO_RX_NACK_RESTART
  6961     101B  3409               	retlw	high _I2C1_DO_RX_NACK_RESTART
  6962     101C  349A               	retlw	low _I2C1_DO_RESET
  6963     101D  3409               	retlw	high _I2C1_DO_RESET
  6964     101E  3445               	retlw	low _I2C1_DO_ADDRESS_NACK
  6965     101F  340D               	retlw	high _I2C1_DO_ADDRESS_NACK
  6966     1020                     __end_of_fsmStateTable:
  6967                           
  6968                           	psect	nvBANK0
  6969     0060                     __pnvBANK0:
  6970     0060                     _TMR0_InterruptHandler:
  6971     0060                     	ds	2
  6972     0062                     _TMR4_InterruptHandler:
  6973     0062                     	ds	2
  6974     0064                     _TMR2_InterruptHandler:
  6975     0064                     	ds	2
  6976     0066                     _EUSART1_RxDefaultInterruptHandler:
  6977     0066                     	ds	2
  6978                           
  6979                           	psect	nvBANK1
  6980     00EA                     __pnvBANK1:
  6981     00EA                     _EUSART1_ErrorHandler:
  6982     00EA                     	ds	2
  6983     00EC                     _EUSART1_OverrunErrorHandler:
  6984     00EC                     	ds	2
  6985     00EE                     _EUSART1_FramingErrorHandler:
  6986     00EE                     	ds	2
  6987     0018                     _LATAbits	set	24
  6988     000B                     _INTCONbits	set	11
  6989     0014                     _TRISC	set	20
  6990     0012                     _TRISA	set	18
  6991     001A                     _LATC	set	26
  6992     0018                     _LATA	set	24
  6993     001A                     _LATCbits	set	26
  6994     0119                     _RC1REG	set	281
  6995     011D                     _RC1STAbits	set	285
  6996     011A                     _TX1REG	set	282
  6997     011E                     _TX1STAbits	set	286
  6998     011C                     _SP1BRGH	set	284
  6999     011B                     _SP1BRGL	set	283
  7000     011E                     _TX1STA	set	286
  7001     011D                     _RC1STA	set	285
  7002     011F                     _BAUD1CON	set	287
  7003     0191                     _SSP1CON2bits	set	401
  7004     018C                     _SSP1BUF	set	396
  7005     0190                     _SSP1CON1bits	set	400
  7006     018D                     _SSP1ADD	set	397
  7007     0191                     _SSP1CON2	set	401
  7008     0190                     _SSP1CON1	set	400
  7009     018F                     _SSP1STAT	set	399
  7010     0294                     _T4CONbits	set	660
  7011     0294                     _T4CON	set	660
  7012     0292                     _T4TMR	set	658
  7013     0293                     _T4PR	set	659
  7014     0297                     _T4RST	set	663
  7015     0295                     _T4HLT	set	661
  7016     0296                     _T4CLKCON	set	662
  7017     028E                     _T2CONbits	set	654
  7018     028E                     _T2CON	set	654
  7019     028C                     _T2TMR	set	652
  7020     028D                     _T2PR	set	653
  7021     0291                     _T2RST	set	657
  7022     028F                     _T2HLT	set	655
  7023     0290                     _T2CLKCON	set	656
  7024     059E                     _T0CON0	set	1438
  7025     059C                     _TMR0L	set	1436
  7026     059D                     _TMR0H	set	1437
  7027     059F                     _T0CON1	set	1439
  7028     0710                     _PIR4bits	set	1808
  7029     071A                     _PIE4bits	set	1818
  7030     070E                     _PIR2bits	set	1806
  7031     0718                     _PIE2bits	set	1816
  7032     070C                     _PIR0bits	set	1804
  7033     0716                     _PIE0bits	set	1814
  7034     070F                     _PIR3bits	set	1807
  7035     0719                     _PIE3bits	set	1817
  7036     079D                     _PMD7	set	1949
  7037     079C                     _PMD6	set	1948
  7038     079B                     _PMD5	set	1947
  7039     079A                     _PMD4	set	1946
  7040     0799                     _PMD3	set	1945
  7041     0798                     _PMD2	set	1944
  7042     0797                     _PMD1	set	1943
  7043     0796                     _PMD0	set	1942
  7044     088C                     _CPUDOZE	set	2188
  7045     0892                     _OSCTUNE	set	2194
  7046     0893                     _OSCFRQ	set	2195
  7047     0891                     _OSCEN	set	2193
  7048     088F                     _OSCCON3	set	2191
  7049     088D                     _OSCCON1	set	2189
  7050     090F                     _DAC1CON1	set	2319
  7051     090E                     _DAC1CON0	set	2318
  7052     0990                     _CM1CON0bits	set	2448
  7053     0993                     _CM1PCH	set	2451
  7054     0992                     _CM1NCH	set	2450
  7055     0991                     _CM1CON1	set	2449
  7056     0990                     _CM1CON0	set	2448
  7057     1ECB                     _RX1DTPPS	set	7883
  7058     1EC6                     _SSP1DATPPS	set	7878
  7059     1EC5                     _SSP1CLKPPS	set	7877
  7060     1F24                     _RC4PPS	set	7972
  7061     1F21                     _RC1PPS	set	7969
  7062     1F20                     _RC0PPS	set	7968
  7063     1F52                     _INLVLC	set	8018
  7064     1F3C                     _INLVLA	set	7996
  7065     1F51                     _SLRCONC	set	8017
  7066     1F3B                     _SLRCONA	set	7995
  7067     1F50                     _ODCONC	set	8016
  7068     1F3A                     _ODCONA	set	7994
  7069     1F4F                     _WPUC	set	8015
  7070     1F39                     _WPUA	set	7993
  7071     1F38                     _ANSELA	set	7992
  7072     1F4E                     _ANSELC	set	8014
  7073                           
  7074                           	psect	cinit
  7075     0032                     start_initialization:	
  7076                           ; #config settings
  7077                           
  7078     0032                     __initialization:
  7079                           
  7080                           ; Initialize objects allocated to BANK0
  7081     0032  308C               	movlw	low __pidataBANK0
  7082     0033  0084               	movwf	4
  7083     0034  308A               	movlw	(high __pidataBANK0)| (0+128)
  7084     0035  0085               	movwf	5
  7085     0036  3051               	movlw	low __pdataBANK0
  7086     0037  0086               	movwf	6
  7087     0038  3000               	movlw	high __pdataBANK0
  7088     0039  0087               	movwf	7
  7089     003A  300F               	movlw	15
  7090     003B  3189  21E1  3180   	fcall	init_ram
  7091                           
  7092                           ; Initialize objects allocated to BANK1
  7093     003E  30B4               	movlw	low __pidataBANK1
  7094     003F  0084               	movwf	4
  7095     0040  308B               	movlw	(high __pidataBANK1)| (0+128)
  7096     0041  0085               	movwf	5
  7097     0042  30C5               	movlw	low __pdataBANK1
  7098     0043  0086               	movwf	6
  7099     0044  3000               	movlw	high __pdataBANK1
  7100     0045  0087               	movwf	7
  7101     0046  301A               	movlw	26
  7102     0047  3189  21E1  3180   	fcall	init_ram
  7103                           
  7104                           ; Initialize objects allocated to BANK2
  7105     004A  3095               	movlw	low __pidataBANK2
  7106     004B  0084               	movwf	4
  7107     004C  3087               	movlw	(high __pidataBANK2)| (0+128)
  7108     004D  0085               	movwf	5
  7109     004E  3020               	movlw	low __pdataBANK2
  7110     004F  0086               	movwf	6
  7111     0050  3001               	movlw	high __pdataBANK2
  7112     0051  0087               	movwf	7
  7113     0052  303B               	movlw	59
  7114     0053  3189  21E1  3180   	fcall	init_ram
  7115                           
  7116                           ; Initialize objects allocated to BANK3
  7117     0056  30C5               	movlw	low __pidataBANK3
  7118     0057  0084               	movwf	4
  7119     0058  308F               	movlw	(high __pidataBANK3)| (0+128)
  7120     0059  0085               	movwf	5
  7121     005A  30A0               	movlw	low __pdataBANK3
  7122     005B  0086               	movwf	6
  7123     005C  3001               	movlw	high __pdataBANK3
  7124     005D  0087               	movwf	7
  7125     005E  303B               	movlw	59
  7126     005F  3189  21E1  3180   	fcall	init_ram
  7127                           
  7128                           ; Initialize objects allocated to BANK4
  7129     0062  308A               	movlw	low __pidataBANK4
  7130     0063  0084               	movwf	4
  7131     0064  308F               	movlw	(high __pidataBANK4)| (0+128)
  7132     0065  0085               	movwf	5
  7133     0066  3020               	movlw	low __pdataBANK4
  7134     0067  0086               	movwf	6
  7135     0068  3002               	movlw	high __pdataBANK4
  7136     0069  0087               	movwf	7
  7137     006A  303B               	movlw	59
  7138     006B  3189  21E1  3180   	fcall	init_ram
  7139                           
  7140                           ; Clear objects allocated to COMMON
  7141     006E  01F6               	clrf	__pbssCOMMON& (0+127)
  7142     006F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  7143     0070  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  7144     0071  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  7145                           
  7146                           ; Clear objects allocated to BANK0
  7147     0072  01E8               	clrf	__pbssBANK0& (0+127)
  7148     0073  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  7149     0074  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  7150                           
  7151                           ; Clear objects allocated to BANK1
  7152     0075  30A0               	movlw	low __pbssBANK1
  7153     0076  0084               	movwf	4
  7154     0077  3000               	movlw	high __pbssBANK1
  7155     0078  0085               	movwf	5
  7156     0079  3025               	movlw	37
  7157     007A  3189  21DB  3180   	fcall	clear_ram0
  7158                           
  7159                           ; Clear objects allocated to BANK5
  7160     007D  30A0               	movlw	low __pbssBANK5
  7161     007E  0084               	movwf	4
  7162     007F  3002               	movlw	high __pbssBANK5
  7163     0080  0085               	movwf	5
  7164     0081  3040               	movlw	64
  7165     0082  3189  21DB  3180   	fcall	clear_ram0
  7166                           
  7167                           ; Clear objects allocated to BANK6
  7168     0085  3020               	movlw	low __pbssBANK6
  7169     0086  0084               	movwf	4
  7170     0087  3003               	movlw	high __pbssBANK6
  7171     0088  0085               	movwf	5
  7172     0089  3040               	movlw	64
  7173     008A  3189  21DB         	fcall	clear_ram0
  7174     008C                     end_of_initialization:	
  7175                           ;End of C runtime variable initialization code
  7176                           
  7177     008C                     __end_of__initialization:
  7178     008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7179     008D  0140               	movlb	0
  7180     008E  3182  2A03         	ljmp	_main	;jump to C main() function
  7181                           
  7182                           	psect	bssCOMMON
  7183     0076                     __pbssCOMMON:
  7184     0076                     _timer0ReloadVal16bit:
  7185     0076                     	ds	2
  7186     0078                     _eusart1RxTail:
  7187     0078                     	ds	1
  7188     0079                     _eusart1RxHead:
  7189     0079                     	ds	1
  7190                           
  7191                           	psect	bssBANK0
  7192     0068                     __pbssBANK0:
  7193     0068                     _eusart1RxLastError:
  7194     0068                     	ds	1
  7195     0069                     _eusart1PacketFinish:
  7196     0069                     	ds	1
  7197     006A                     _eusart1RxCount:
  7198     006A                     	ds	1
  7199                           
  7200                           	psect	dataBANK0
  7201     0051                     __pdataBANK0:
  7202     0051                     _status_prev:
  7203     0051                     	ds	7
  7204     0058                     _status:
  7205     0058                     	ds	7
  7206     005F                     _measureTime:
  7207     005F                     	ds	1
  7208                           
  7209                           	psect	bssBANK1
  7210     00A0                     __pbssBANK1:
  7211     00A0                     _I2C1_Status:
  7212     00A0                     	ds	29
  7213     00BD                     _BuffReg:
  7214     00BD                     	ds	8
  7215                           
  7216                           	psect	dataBANK1
  7217     00C5                     __pdataBANK1:
  7218     00C5                     main@F11067:
  7219     00C5                     	ds	11
  7220     00D0                     sendSensorData@F11035:
  7221     00D0                     	ds	8
  7222     00D8                     sendSensorInfo@F11030:
  7223     00D8                     	ds	7
  7224                           
  7225                           	psect	dataBANK2
  7226     0120                     __pdataBANK2:
  7227     0120                     _battery:
  7228     0120                     	ds	59
  7229                           
  7230                           	psect	dataBANK3
  7231     01A0                     __pdataBANK3:
  7232     01A0                     _panel:
  7233     01A0                     	ds	59
  7234                           
  7235                           	psect	dataBANK4
  7236     0220                     __pdataBANK4:
  7237     0220                     _cons:
  7238     0220                     	ds	59
  7239                           
  7240                           	psect	bssBANK5
  7241     02A0                     __pbssBANK5:
  7242     02A0                     _eusart1RxBuffer:
  7243     02A0                     	ds	64
  7244                           
  7245                           	psect	bssBANK6
  7246     0320                     __pbssBANK6:
  7247     0320                     _eusart1RxStatusBuffer:
  7248     0320                     	ds	64
  7249                           
  7250                           	psect	inittext
  7251     09E1                     init_ram:
  7252     09E1  00FE               	movwf	126
  7253     09E2                     initloop:
  7254     09E2  0012               	moviw fsr0++
  7255     09E3  001E               	movwi fsr1++
  7256     09E4  0BFE               	decfsz	126,f
  7257     09E5  29E2               	goto	initloop
  7258     09E6  3400               	retlw	0
  7259                           
  7260                           	psect	clrtext
  7261     09DB                     clear_ram0:	
  7262                           ;	Called with FSR0 containing the base address, and
  7263                           ;	WREG with the size to clear
  7264                           
  7265     09DB  0064               	clrwdt	;clear the watchdog before getting into this loop
  7266     09DC                     clrloop0:
  7267     09DC  0180               	clrf	0	;clear RAM location pointed to by FSR
  7268     09DD  3101               	addfsr 0,1
  7269     09DE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7270     09DF  29DC               	goto	clrloop0	;have we reached the end yet?
  7271     09E0  3400               	retlw	0	;all done for this memory range, return
  7272                           
  7273                           	psect	cstackBANK1
  7274     00DF                     __pcstackBANK1:
  7275     00DF                     main@packet:
  7276                           
  7277                           ; 11 bytes @ 0x0
  7278     00DF                     	ds	11
  7279                           
  7280                           	psect	cstackCOMMON
  7281     0070                     __pcstackCOMMON:
  7282     0070                     ?_I2C1_Open:
  7283     0070                     ?_I2C1_MasterWrite:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286     0070                     ?_I2C1_Close:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289     0070                     ?_I2C1_MasterRead:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292     0070                     ?_EUSART1_Receive_ISR:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301     0070                     ?_EUSART1_DefaultErrorHandler:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304     0070                     ?_EUSART1_RxDataHandler:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307     0070                     ??_EUSART1_RxDataHandler:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310     0070                     ?_PMD_Initialize:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313     0070                     ?_I2C1_Initialize:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316     0070                     ?_PIN_MANAGER_Initialize:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319     0070                     ?_OSCILLATOR_Initialize:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322     0070                     ?_CMP1_Initialize:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325     0070                     ?_TMR4_Initialize:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328     0070                     ?_DAC1_Initialize:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331     0070                     ?_TMR2_Initialize:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334     0070                     ?_TMR0_Initialize:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337     0070                     ?_I2C1_DO_IDLE:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340     0070                     ?_I2C1_DO_SEND_ADR_READ:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346     0070                     ?_I2C1_DO_TX:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349     0070                     ?_I2C1_DO_RX:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352     0070                     ?_I2C1_DO_RCEN:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355     0070                     ?_I2C1_DO_TX_EMPTY:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364     0070                     ?_I2C1_DO_SEND_RESTART:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367     0070                     ?_I2C1_DO_SEND_STOP:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370     0070                     ?_I2C1_DO_RX_ACK:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373     0070                     ?_I2C1_DO_RX_NACK_STOP:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379     0070                     ?_I2C1_DO_RESET:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382     0070                     ?_I2C1_DO_ADDRESS_NACK:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385     0070                     ?_I2C1_MasterClearIrq:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388     0070                     ?_I2C1_MasterOpen:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391     0070                     ?_I2C1_MasterDisableIrq:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394     0070                     ?_I2C1_MasterClose:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397     0070                     ?_I2C1_MasterStart:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400     0070                     ?_I2C1_Poller:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403     0070                     ?_I2C1_MasterWaitForEvent:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406     0070                     ?_I2C1_MasterFsm:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409     0070                     ?_I2C1_MasterIsNack:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412     0070                     ?_I2C1_MasterSendTxData:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415     0070                     ?_I2C1_MasterGetRxData:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418     0070                     ?_I2C1_MasterSendAck:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421     0070                     ?_I2C1_MasterStartRx:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424     0070                     ?_I2C1_MasterSetIrq:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427     0070                     ?_I2C1_MasterEnableRestart:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430     0070                     ?_I2C1_MasterStop:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433     0070                     ?_I2C1_MasterSendNack:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436     0070                     ?_TMR0_ISR:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439     0070                     ??_TMR0_ISR:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442     0070                     ?_CMP1_ISR:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445     0070                     ??_CMP1_ISR:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448     0070                     ?_TMR4_ISR:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451     0070                     ??_TMR4_ISR:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454     0070                     ?_TMR2_ISR:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457     0070                     ??_TMR2_ISR:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460     0070                     ?_TMR2_DefaultInterruptHandler:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463     0070                     ??_TMR2_DefaultInterruptHandler:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466     0070                     ?_TMR4_DefaultInterruptHandler:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469     0070                     ??_TMR4_DefaultInterruptHandler:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472     0070                     ?_TMR0_DefaultInterruptHandler:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475     0070                     ??_TMR0_DefaultInterruptHandler:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478     0070                     ?_TxDeviceDisable:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481     0070                     ?_TxDeviceEnable:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484     0070                     ?_stringlen:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487     0070                     ?_EUSART1_Initialize:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490     0070                     ?_EUSART1_is_tx_ready:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493     0070                     ?_EUSART1_is_tx_done:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496     0070                     ?_EUSART1_Read:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499     0070                     ?_EUSART1_Write:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502     0070                     ?_SYSTEM_Initialize:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505     0070                     ?_I2C1_MasterOperation:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508     0070                     ?_INTERRUPT_InterruptManager:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511     0070                     ?_CMP1_GetOutputStatus:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514     0070                     ??_CMP1_GetOutputStatus:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517     0070                     ?_TMR2_Start:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520     0070                     ?_TMR2_Stop:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523     0070                     ?_TMR4_Start:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526     0070                     ?_TMR4_Stop:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529     0070                     ?_TMR0_Reload:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532     0070                     ?_main:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535                           
  7536                           ; 1 bytes @ 0x0
  7537     0070                     	ds	2
  7538     0072                     EUSART1_RxDataHandler@t:
  7539                           
  7540                           ; 2 bytes @ 0x2
  7541     0072                     	ds	2
  7542     0074                     ??_I2C1_Open:
  7543     0074                     ?_I2C1_SetBuffer:	
  7544                           ; 1 bytes @ 0x4
  7545                           
  7546     0074                     ??_I2C1_Close:	
  7547                           ; 1 bytes @ 0x4
  7548                           
  7549     0074                     ?_EUSART1_SetRxInterruptHandler:	
  7550                           ; 1 bytes @ 0x4
  7551                           
  7552     0074                     ??_EUSART1_Receive_ISR:	
  7553                           ; 1 bytes @ 0x4
  7554                           
  7555     0074                     ?_EUSART1_SetFramingErrorHandler:	
  7556                           ; 1 bytes @ 0x4
  7557                           
  7558     0074                     ?_EUSART1_SetOverrunErrorHandler:	
  7559                           ; 1 bytes @ 0x4
  7560                           
  7561     0074                     ?_EUSART1_SetErrorHandler:	
  7562                           ; 1 bytes @ 0x4
  7563                           
  7564     0074                     ??_EUSART1_DefaultErrorHandler:	
  7565                           ; 1 bytes @ 0x4
  7566                           
  7567     0074                     ??_PMD_Initialize:	
  7568                           ; 1 bytes @ 0x4
  7569                           
  7570     0074                     ??_I2C1_Initialize:	
  7571                           ; 1 bytes @ 0x4
  7572                           
  7573     0074                     ??_PIN_MANAGER_Initialize:	
  7574                           ; 1 bytes @ 0x4
  7575                           
  7576     0074                     ??_OSCILLATOR_Initialize:	
  7577                           ; 1 bytes @ 0x4
  7578                           
  7579     0074                     ??_CMP1_Initialize:	
  7580                           ; 1 bytes @ 0x4
  7581                           
  7582     0074                     ??_DAC1_Initialize:	
  7583                           ; 1 bytes @ 0x4
  7584                           
  7585     0074                     ??_I2C1_DO_IDLE:	
  7586                           ; 1 bytes @ 0x4
  7587                           
  7588     0074                     ??_I2C1_DO_SEND_ADR_READ:	
  7589                           ; 1 bytes @ 0x4
  7590                           
  7591     0074                     ??_I2C1_DO_RCEN:	
  7592                           ; 1 bytes @ 0x4
  7593                           
  7594     0074                     ??_I2C1_DO_SEND_RESTART_READ:	
  7595                           ; 1 bytes @ 0x4
  7596                           
  7597     0074                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  7598                           ; 1 bytes @ 0x4
  7599                           
  7600     0074                     ??_I2C1_DO_SEND_RESTART:	
  7601                           ; 1 bytes @ 0x4
  7602                           
  7603     0074                     ??_I2C1_DO_SEND_STOP:	
  7604                           ; 1 bytes @ 0x4
  7605                           
  7606     0074                     ??_I2C1_DO_RX_ACK:	
  7607                           ; 1 bytes @ 0x4
  7608                           
  7609     0074                     ??_I2C1_DO_RX_NACK_STOP:	
  7610                           ; 1 bytes @ 0x4
  7611                           
  7612     0074                     ??_I2C1_DO_RX_NACK_RESTART:	
  7613                           ; 1 bytes @ 0x4
  7614                           
  7615     0074                     ??_I2C1_DO_RESET:	
  7616                           ; 1 bytes @ 0x4
  7617                           
  7618     0074                     ??_I2C1_MasterClearIrq:	
  7619                           ; 1 bytes @ 0x4
  7620                           
  7621     0074                     ??_I2C1_MasterOpen:	
  7622                           ; 1 bytes @ 0x4
  7623                           
  7624     0074                     ??_I2C1_MasterDisableIrq:	
  7625                           ; 1 bytes @ 0x4
  7626                           
  7627     0074                     ??_I2C1_MasterClose:	
  7628                           ; 1 bytes @ 0x4
  7629                           
  7630     0074                     ??_I2C1_MasterStart:	
  7631                           ; 1 bytes @ 0x4
  7632                           
  7633     0074                     ??_I2C1_SetCallback:	
  7634                           ; 1 bytes @ 0x4
  7635                           
  7636     0074                     ??_I2C1_MasterWaitForEvent:	
  7637                           ; 1 bytes @ 0x4
  7638                           
  7639     0074                     ??_I2C1_MasterIsNack:	
  7640                           ; 1 bytes @ 0x4
  7641                           
  7642     0074                     ??_I2C1_MasterSendTxData:	
  7643                           ; 1 bytes @ 0x4
  7644                           
  7645     0074                     ??_I2C1_MasterGetRxData:	
  7646                           ; 1 bytes @ 0x4
  7647                           
  7648     0074                     ??_I2C1_MasterSendAck:	
  7649                           ; 1 bytes @ 0x4
  7650                           
  7651     0074                     ??_I2C1_MasterStartRx:	
  7652                           ; 1 bytes @ 0x4
  7653                           
  7654     0074                     ??_I2C1_MasterSetIrq:	
  7655                           ; 1 bytes @ 0x4
  7656                           
  7657     0074                     ??_I2C1_MasterEnableRestart:	
  7658                           ; 1 bytes @ 0x4
  7659                           
  7660     0074                     ??_I2C1_MasterStop:	
  7661                           ; 1 bytes @ 0x4
  7662                           
  7663     0074                     ??_I2C1_MasterSendNack:	
  7664                           ; 1 bytes @ 0x4
  7665                           
  7666     0074                     ?_TMR2_SetInterruptHandler:	
  7667                           ; 1 bytes @ 0x4
  7668                           
  7669     0074                     ?_TMR4_SetInterruptHandler:	
  7670                           ; 1 bytes @ 0x4
  7671                           
  7672     0074                     ?_TMR0_SetInterruptHandler:	
  7673                           ; 1 bytes @ 0x4
  7674                           
  7675     0074                     ??_TxDeviceDisable:	
  7676                           ; 1 bytes @ 0x4
  7677                           
  7678     0074                     ??_stringCompare:	
  7679                           ; 1 bytes @ 0x4
  7680                           
  7681     0074                     ??_TxDeviceEnable:	
  7682                           ; 1 bytes @ 0x4
  7683                           
  7684     0074                     ??_stringlen:	
  7685                           ; 1 bytes @ 0x4
  7686                           
  7687     0074                     ?_getMax:	
  7688                           ; 1 bytes @ 0x4
  7689                           
  7690     0074                     ?_getMin:	
  7691                           ; 1 bytes @ 0x4
  7692                           
  7693     0074                     ??_EUSART1_is_tx_ready:	
  7694                           ; 1 bytes @ 0x4
  7695                           
  7696     0074                     ??_EUSART1_is_tx_done:	
  7697                           ; 1 bytes @ 0x4
  7698                           
  7699     0074                     ??_EUSART1_Read:	
  7700                           ; 1 bytes @ 0x4
  7701                           
  7702     0074                     ??_EUSART1_Write:	
  7703                           ; 1 bytes @ 0x4
  7704                           
  7705     0074                     ??_INTERRUPT_InterruptManager:	
  7706                           ; 1 bytes @ 0x4
  7707                           
  7708     0074                     ??_TMR2_Start:	
  7709                           ; 1 bytes @ 0x4
  7710                           
  7711     0074                     ??_TMR2_Stop:	
  7712                           ; 1 bytes @ 0x4
  7713                           
  7714     0074                     ??_TMR4_Start:	
  7715                           ; 1 bytes @ 0x4
  7716                           
  7717     0074                     ??_TMR4_Stop:	
  7718                           ; 1 bytes @ 0x4
  7719                           
  7720     0074                     ??_TMR0_Reload:	
  7721                           ; 1 bytes @ 0x4
  7722                           
  7723     0074                     ??___wmul:	
  7724                           ; 1 bytes @ 0x4
  7725                           
  7726     0074                     ??___aldiv:	
  7727                           ; 1 bytes @ 0x4
  7728                           
  7729     0074                     ??___lwdiv:	
  7730                           ; 1 bytes @ 0x4
  7731                           
  7732     0074                     ??___lwmod:	
  7733                           ; 1 bytes @ 0x4
  7734                           
  7735     0074                     _EUSART1_is_tx_ready$357:	
  7736                           ; 1 bytes @ 0x4
  7737                           
  7738     0074                     EUSART1_Read@readValue:	
  7739                           ; 1 bytes @ 0x4
  7740                           
  7741     0074                     EUSART1_Write@txData:	
  7742                           ; 1 bytes @ 0x4
  7743                           
  7744     0074                     I2C1_Open@address:	
  7745                           ; 1 bytes @ 0x4
  7746                           
  7747     0074                     I2C1_Close@returnValue:	
  7748                           ; 1 bytes @ 0x4
  7749                           
  7750     0074                     I2C1_SetCallback@idx:	
  7751                           ; 1 bytes @ 0x4
  7752                           
  7753     0074                     I2C1_MasterSendTxData@data:	
  7754                           ; 1 bytes @ 0x4
  7755                           
  7756     0074                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7757                           ; 1 bytes @ 0x4
  7758                           
  7759     0074                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7760                           ; 2 bytes @ 0x4
  7761                           
  7762     0074                     EUSART1_SetErrorHandler@interruptHandler:	
  7763                           ; 2 bytes @ 0x4
  7764                           
  7765     0074                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7766                           ; 2 bytes @ 0x4
  7767                           
  7768     0074                     I2C1_SetBuffer@bufferSize:	
  7769                           ; 2 bytes @ 0x4
  7770                           
  7771     0074                     TMR2_SetInterruptHandler@InterruptHandler:	
  7772                           ; 2 bytes @ 0x4
  7773                           
  7774     0074                     TMR4_SetInterruptHandler@InterruptHandler:	
  7775                           ; 2 bytes @ 0x4
  7776                           
  7777     0074                     TMR0_SetInterruptHandler@InterruptHandler:	
  7778                           ; 2 bytes @ 0x4
  7779                           
  7780     0074                     getMax@data:	
  7781                           ; 2 bytes @ 0x4
  7782                           
  7783     0074                     getMin@data:	
  7784                           ; 2 bytes @ 0x4
  7785                           
  7786     0074                     ___wmul@product:	
  7787                           ; 2 bytes @ 0x4
  7788                           
  7789                           
  7790                           ; 2 bytes @ 0x4
  7791     0074                     	ds	1
  7792     0075                     ??_I2C1_SetDataCompleteCallback:
  7793     0075                     ??_I2C1_SetAddressNackCallback:	
  7794                           ; 1 bytes @ 0x5
  7795                           
  7796     0075                     ??_I2C1_DO_SEND_ADR_WRITE:	
  7797                           ; 1 bytes @ 0x5
  7798                           
  7799     0075                     ?_receiveData:	
  7800                           ; 1 bytes @ 0x5
  7801                           
  7802     0075                     ??_sendSensorInfo:	
  7803                           ; 1 bytes @ 0x5
  7804                           
  7805     0075                     I2C1_Open@returnValue:	
  7806                           ; 1 bytes @ 0x5
  7807                           
  7808     0075                     receiveData@maxdata:	
  7809                           ; 1 bytes @ 0x5
  7810                           
  7811     0075                     ___lwmod@counter:	
  7812                           ; 1 bytes @ 0x5
  7813                           
  7814                           
  7815                           ; 1 bytes @ 0x5
  7816     0075                     	ds	1
  7817     0076                     ??_rd1RegCompleteHandler:
  7818     0076                     ??_I2C1_SetBuffer:	
  7819                           ; 1 bytes @ 0x6
  7820                           
  7821     0076                     ??_I2C1_MasterWrite:	
  7822                           ; 1 bytes @ 0x6
  7823                           
  7824     0076                     ??_rd2RegCompleteHandler:	
  7825                           ; 1 bytes @ 0x6
  7826                           
  7827     0076                     ??_wr1RegCompleteHandler:	
  7828                           ; 1 bytes @ 0x6
  7829                           
  7830     0076                     ??_wr2RegCompleteHandler:	
  7831                           ; 1 bytes @ 0x6
  7832                           
  7833     0076                     ??_I2C1_MasterRead:	
  7834                           ; 1 bytes @ 0x6
  7835                           
  7836     0076                     ??_rdBlkRegCompleteHandler:	
  7837                           ; 1 bytes @ 0x6
  7838                           
  7839     0076                     ??_EUSART1_SetRxInterruptHandler:	
  7840                           ; 1 bytes @ 0x6
  7841                           
  7842     0076                     ??_EUSART1_SetFramingErrorHandler:	
  7843                           ; 1 bytes @ 0x6
  7844                           
  7845     0076                     ??_EUSART1_SetOverrunErrorHandler:	
  7846                           ; 1 bytes @ 0x6
  7847                           
  7848     0076                     ??_EUSART1_SetErrorHandler:	
  7849                           ; 1 bytes @ 0x6
  7850                           
  7851     0076                     ??_TMR4_Initialize:	
  7852                           ; 1 bytes @ 0x6
  7853                           
  7854     0076                     ??_TMR2_Initialize:	
  7855                           ; 1 bytes @ 0x6
  7856                           
  7857     0076                     ??_TMR0_Initialize:	
  7858                           ; 1 bytes @ 0x6
  7859                           
  7860     0076                     ??_I2C1_CallbackReturnStop:	
  7861                           ; 1 bytes @ 0x6
  7862                           
  7863     0076                     ??_I2C1_CallbackReturnReset:	
  7864                           ; 1 bytes @ 0x6
  7865                           
  7866     0076                     ??_I2C1_Poller:	
  7867                           ; 1 bytes @ 0x6
  7868                           
  7869     0076                     ??_TMR2_SetInterruptHandler:	
  7870                           ; 1 bytes @ 0x6
  7871                           
  7872     0076                     ??_TMR4_SetInterruptHandler:	
  7873                           ; 1 bytes @ 0x6
  7874                           
  7875     0076                     ??_TMR0_SetInterruptHandler:	
  7876                           ; 1 bytes @ 0x6
  7877                           
  7878     0076                     ??_getMetrics:	
  7879                           ; 1 bytes @ 0x6
  7880                           
  7881     0076                     ??_I2C1_WriteNBytes:	
  7882                           ; 1 bytes @ 0x6
  7883                           
  7884     0076                     ??_I2C1_ReadNBytes:	
  7885                           ; 1 bytes @ 0x6
  7886                           
  7887     0076                     ??_EUSART1_Initialize:	
  7888                           ; 1 bytes @ 0x6
  7889                           
  7890     0076                     ??_SYSTEM_Initialize:	
  7891                           ; 1 bytes @ 0x6
  7892                           
  7893     0076                     ??_I2C1_MasterOperation:	
  7894                           ; 1 bytes @ 0x6
  7895                           
  7896     0076                     ??_stringToInt16:	
  7897                           ; 1 bytes @ 0x6
  7898                           
  7899     0076                     ??_writeINA220:	
  7900                           ; 1 bytes @ 0x6
  7901                           
  7902                           
  7903                           	psect	cstackBANK0
  7904     0020                     __pcstackBANK0:	
  7905                           ; 1 bytes @ 0x6
  7906                           
  7907     0020                     ?_I2C1_SetCallback:
  7908     0020                     ?_initRxBuffer:	
  7909                           ; 1 bytes @ 0x0
  7910                           
  7911     0020                     ??_receiveData:	
  7912                           ; 1 bytes @ 0x0
  7913                           
  7914     0020                     ??_getMax:	
  7915                           ; 1 bytes @ 0x0
  7916                           
  7917     0020                     ??_getMin:	
  7918                           ; 1 bytes @ 0x0
  7919                           
  7920     0020                     ?_stringCompare:	
  7921                           ; 1 bytes @ 0x0
  7922                           
  7923     0020                     ?___wmul:	
  7924                           ; 2 bytes @ 0x0
  7925                           
  7926     0020                     ?___lwdiv:	
  7927                           ; 2 bytes @ 0x0
  7928                           
  7929     0020                     ?___lwmod:	
  7930                           ; 2 bytes @ 0x0
  7931                           
  7932     0020                     ?___aldiv:	
  7933                           ; 2 bytes @ 0x0
  7934                           
  7935     0020                     I2C1_SetBuffer@buffer:	
  7936                           ; 4 bytes @ 0x0
  7937                           
  7938     0020                     stringlen@str:	
  7939                           ; 1 bytes @ 0x0
  7940                           
  7941     0020                     I2C1_SetCallback@cb:	
  7942                           ; 1 bytes @ 0x0
  7943                           
  7944     0020                     stringCompare@buf:	
  7945                           ; 2 bytes @ 0x0
  7946                           
  7947     0020                     ___wmul@multiplier:	
  7948                           ; 2 bytes @ 0x0
  7949                           
  7950     0020                     ___lwdiv@divisor:	
  7951                           ; 2 bytes @ 0x0
  7952                           
  7953     0020                     ___lwmod@divisor:	
  7954                           ; 2 bytes @ 0x0
  7955                           
  7956     0020                     initRxBuffer@size:	
  7957                           ; 2 bytes @ 0x0
  7958                           
  7959     0020                     ___aldiv@divisor:	
  7960                           ; 4 bytes @ 0x0
  7961                           
  7962                           
  7963                           ; 4 bytes @ 0x0
  7964     0020                     	ds	1
  7965     0021                     receiveData@data:
  7966     0021                     stringlen@idx:	
  7967                           ; 1 bytes @ 0x1
  7968                           
  7969                           
  7970                           ; 1 bytes @ 0x1
  7971     0021                     	ds	1
  7972     0022                     ?_sendPacket:
  7973     0022                     I2C1_SetCallback@ptr:	
  7974                           ; 1 bytes @ 0x2
  7975                           
  7976     0022                     receiveData@c:	
  7977                           ; 1 bytes @ 0x2
  7978                           
  7979     0022                     stringCompare@byte_count:	
  7980                           ; 1 bytes @ 0x2
  7981                           
  7982     0022                     ___wmul@multiplicand:	
  7983                           ; 2 bytes @ 0x2
  7984                           
  7985     0022                     ___lwdiv@dividend:	
  7986                           ; 2 bytes @ 0x2
  7987                           
  7988     0022                     ___lwmod@dividend:	
  7989                           ; 2 bytes @ 0x2
  7990                           
  7991     0022                     sendPacket@byteCount:	
  7992                           ; 2 bytes @ 0x2
  7993                           
  7994                           
  7995                           ; 4 bytes @ 0x2
  7996     0022                     	ds	1
  7997     0023                     ?_I2C1_SetDataCompleteCallback:
  7998     0023                     ?_I2C1_SetAddressNackCallback:	
  7999                           ; 1 bytes @ 0x3
  8000                           
  8001     0023                     receiveData@charCount:	
  8002                           ; 1 bytes @ 0x3
  8003                           
  8004     0023                     I2C1_SetDataCompleteCallback@cb:	
  8005                           ; 1 bytes @ 0x3
  8006                           
  8007     0023                     I2C1_SetAddressNackCallback@cb:	
  8008                           ; 2 bytes @ 0x3
  8009                           
  8010                           
  8011                           ; 2 bytes @ 0x3
  8012     0023                     	ds	1
  8013     0024                     ??_initRxBuffer:
  8014     0024                     ?_stringToInt16:	
  8015                           ; 1 bytes @ 0x4
  8016                           
  8017     0024                     stringToInt16@strlen:	
  8018                           ; 2 bytes @ 0x4
  8019                           
  8020     0024                     ___lwdiv@counter:	
  8021                           ; 1 bytes @ 0x4
  8022                           
  8023     0024                     stringCompare@idx:	
  8024                           ; 1 bytes @ 0x4
  8025                           
  8026     0024                     ___aldiv@dividend:	
  8027                           ; 2 bytes @ 0x4
  8028                           
  8029                           
  8030                           ; 4 bytes @ 0x4
  8031     0024                     	ds	1
  8032     0025                     I2C1_SetDataCompleteCallback@ptr:
  8033     0025                     I2C1_SetAddressNackCallback@ptr:	
  8034                           ; 1 bytes @ 0x5
  8035                           
  8036     0025                     ___lwdiv@quotient:	
  8037                           ; 2 bytes @ 0x5
  8038                           
  8039                           
  8040                           ; 2 bytes @ 0x5
  8041     0025                     	ds	1
  8042     0026                     ?_rd1RegCompleteHandler:
  8043     0026                     ?_rd2RegCompleteHandler:	
  8044                           ; 1 bytes @ 0x6
  8045                           
  8046     0026                     ?_wr1RegCompleteHandler:	
  8047                           ; 1 bytes @ 0x6
  8048                           
  8049     0026                     ?_wr2RegCompleteHandler:	
  8050                           ; 1 bytes @ 0x6
  8051                           
  8052     0026                     ?_rdBlkRegCompleteHandler:	
  8053                           ; 1 bytes @ 0x6
  8054                           
  8055     0026                     ?_I2C1_CallbackReturnStop:	
  8056                           ; 1 bytes @ 0x6
  8057                           
  8058     0026                     ?_I2C1_CallbackReturnReset:	
  8059                           ; 1 bytes @ 0x6
  8060                           
  8061     0026                     ??_sendPacket:	
  8062                           ; 1 bytes @ 0x6
  8063                           
  8064     0026                     rd1RegCompleteHandler@ptr:	
  8065                           ; 1 bytes @ 0x6
  8066                           
  8067     0026                     rd2RegCompleteHandler@ptr:	
  8068                           ; 1 bytes @ 0x6
  8069                           
  8070     0026                     wr1RegCompleteHandler@ptr:	
  8071                           ; 1 bytes @ 0x6
  8072                           
  8073     0026                     wr2RegCompleteHandler@ptr:	
  8074                           ; 1 bytes @ 0x6
  8075                           
  8076     0026                     rdBlkRegCompleteHandler@ptr:	
  8077                           ; 1 bytes @ 0x6
  8078                           
  8079     0026                     I2C1_CallbackReturnStop@funPtr:	
  8080                           ; 1 bytes @ 0x6
  8081                           
  8082     0026                     I2C1_CallbackReturnReset@funPtr:	
  8083                           ; 1 bytes @ 0x6
  8084                           
  8085     0026                     stringCompare@str:	
  8086                           ; 1 bytes @ 0x6
  8087                           
  8088     0026                     stringToInt16@sign:	
  8089                           ; 1 bytes @ 0x6
  8090                           
  8091                           
  8092                           ; 1 bytes @ 0x6
  8093     0026                     	ds	1
  8094     0027                     ??_I2C1_DO_TX:
  8095     0027                     ??_I2C1_DO_RX:	
  8096                           ; 1 bytes @ 0x7
  8097                           
  8098     0027                     ??_I2C1_DO_TX_EMPTY:	
  8099                           ; 1 bytes @ 0x7
  8100                           
  8101     0027                     ??_I2C1_DO_ADDRESS_NACK:	
  8102                           ; 1 bytes @ 0x7
  8103                           
  8104     0027                     ?_int16ToString:	
  8105                           ; 1 bytes @ 0x7
  8106                           
  8107     0027                     getMax@i:	
  8108                           ; 1 bytes @ 0x7
  8109                           
  8110     0027                     getMin@i:	
  8111                           ; 1 bytes @ 0x7
  8112                           
  8113     0027                     int16ToString@value:	
  8114                           ; 1 bytes @ 0x7
  8115                           
  8116     0027                     stringToInt16@multiple:	
  8117                           ; 2 bytes @ 0x7
  8118                           
  8119                           
  8120                           ; 2 bytes @ 0x7
  8121     0027                     	ds	1
  8122     0028                     initRxBuffer@buf:
  8123     0028                     getMax@aux:	
  8124                           ; 1 bytes @ 0x8
  8125                           
  8126     0028                     getMin@aux:	
  8127                           ; 1 bytes @ 0x8
  8128                           
  8129     0028                     ___aldiv@counter:	
  8130                           ; 1 bytes @ 0x8
  8131                           
  8132                           
  8133                           ; 1 bytes @ 0x8
  8134     0028                     	ds	1
  8135     0029                     ??_I2C1_MasterFsm:
  8136     0029                     int16ToString@data:	
  8137                           ; 1 bytes @ 0x9
  8138                           
  8139     0029                     ___aldiv@sign:	
  8140                           ; 1 bytes @ 0x9
  8141                           
  8142     0029                     initRxBuffer@i:	
  8143                           ; 1 bytes @ 0x9
  8144                           
  8145     0029                     stringToInt16@result:	
  8146                           ; 2 bytes @ 0x9
  8147                           
  8148                           
  8149                           ; 2 bytes @ 0x9
  8150     0029                     	ds	1
  8151     002A                     ??_int16ToString:
  8152     002A                     sendPacket@i:	
  8153                           ; 1 bytes @ 0xA
  8154                           
  8155     002A                     ___aldiv@quotient:	
  8156                           ; 2 bytes @ 0xA
  8157                           
  8158                           
  8159                           ; 4 bytes @ 0xA
  8160     002A                     	ds	1
  8161     002B                     I2C1_MasterOperation@read:
  8162     002B                     int16ToString@flag_0:	
  8163                           ; 1 bytes @ 0xB
  8164                           
  8165     002B                     stringToInt16@string:	
  8166                           ; 1 bytes @ 0xB
  8167                           
  8168                           
  8169                           ; 1 bytes @ 0xB
  8170     002B                     	ds	1
  8171     002C                     I2C1_MasterOperation@returnValue:
  8172     002C                     sendPacket@str:	
  8173                           ; 1 bytes @ 0xC
  8174                           
  8175     002C                     int16ToString@result:	
  8176                           ; 1 bytes @ 0xC
  8177                           
  8178                           
  8179                           ; 2 bytes @ 0xC
  8180     002C                     	ds	1
  8181     002D                     ?_I2C1_WriteNBytes:
  8182     002D                     ?_I2C1_ReadNBytes:	
  8183                           ; 1 bytes @ 0xD
  8184                           
  8185     002D                     ?_sendSensorInfo:	
  8186                           ; 1 bytes @ 0xD
  8187                           
  8188     002D                     I2C1_WriteNBytes@data:	
  8189                           ; 1 bytes @ 0xD
  8190                           
  8191     002D                     I2C1_ReadNBytes@data:	
  8192                           ; 1 bytes @ 0xD
  8193                           
  8194     002D                     sendSensorInfo@sensor_info:	
  8195                           ; 1 bytes @ 0xD
  8196                           
  8197                           
  8198                           ; 2 bytes @ 0xD
  8199     002D                     	ds	1
  8200     002E                     ?_getMed:
  8201     002E                     I2C1_WriteNBytes@len:	
  8202                           ; 1 bytes @ 0xE
  8203                           
  8204     002E                     I2C1_ReadNBytes@len:	
  8205                           ; 2 bytes @ 0xE
  8206                           
  8207     002E                     int16ToString@i:	
  8208                           ; 2 bytes @ 0xE
  8209                           
  8210     002E                     getMed@data:	
  8211                           ; 2 bytes @ 0xE
  8212                           
  8213                           
  8214                           ; 2 bytes @ 0xE
  8215     002E                     	ds	1
  8216     002F                     sendSensorInfo@packet:
  8217                           
  8218                           ; 7 bytes @ 0xF
  8219     002F                     	ds	1
  8220     0030                     ??_getMed:
  8221     0030                     I2C1_WriteNBytes@address:	
  8222                           ; 1 bytes @ 0x10
  8223                           
  8224     0030                     I2C1_ReadNBytes@address:	
  8225                           ; 1 bytes @ 0x10
  8226                           
  8227     0030                     int16ToString@dividend:	
  8228                           ; 1 bytes @ 0x10
  8229                           
  8230                           
  8231                           ; 2 bytes @ 0x10
  8232     0030                     	ds	1
  8233     0031                     ?_writeINA220:
  8234     0031                     ?_readINA220:	
  8235                           ; 1 bytes @ 0x11
  8236                           
  8237     0031                     readINA220@address:	
  8238                           ; 2 bytes @ 0x11
  8239                           
  8240     0031                     writeINA220@regdata:	
  8241                           ; 1 bytes @ 0x11
  8242                           
  8243                           
  8244                           ; 2 bytes @ 0x11
  8245     0031                     	ds	1
  8246     0032                     int16ToString@divisor:
  8247                           
  8248                           ; 2 bytes @ 0x12
  8249     0032                     	ds	1
  8250     0033                     ??_readINA220:
  8251     0033                     writeINA220@address:	
  8252                           ; 1 bytes @ 0x13
  8253                           
  8254                           
  8255                           ; 1 bytes @ 0x13
  8256     0033                     	ds	1
  8257     0034                     ?_sendSensorData:
  8258     0034                     writeINA220@regadd:	
  8259                           ; 1 bytes @ 0x14
  8260                           
  8261     0034                     sendSensorData@sensor_data:	
  8262                           ; 1 bytes @ 0x14
  8263                           
  8264                           
  8265                           ; 2 bytes @ 0x14
  8266     0034                     	ds	1
  8267     0035                     readINA220@pRxbuffer:
  8268     0035                     writeINA220@pTxbuffer:	
  8269                           ; 1 bytes @ 0x15
  8270                           
  8271                           
  8272                           ; 1 bytes @ 0x15
  8273     0035                     	ds	1
  8274     0036                     ??_sendSensorData:
  8275     0036                     readINA220@pTxbuffer:	
  8276                           ; 1 bytes @ 0x16
  8277                           
  8278     0036                     sendSensorInfo@idx:	
  8279                           ; 1 bytes @ 0x16
  8280                           
  8281     0036                     writeINA220@Txbuffer:	
  8282                           ; 2 bytes @ 0x16
  8283                           
  8284                           
  8285                           ; 3 bytes @ 0x16
  8286     0036                     	ds	1
  8287     0037                     readINA220@buff:
  8288                           
  8289                           ; 2 bytes @ 0x17
  8290     0037                     	ds	1
  8291     0038                     getMed@buff:
  8292     0038                     sendSensorData@packet:	
  8293                           ; 4 bytes @ 0x18
  8294                           
  8295                           
  8296                           ; 8 bytes @ 0x18
  8297     0038                     	ds	1
  8298     0039                     readINA220@regadd:
  8299                           
  8300                           ; 1 bytes @ 0x19
  8301     0039                     	ds	1
  8302     003A                     readINA220@ret:
  8303                           
  8304                           ; 2 bytes @ 0x1A
  8305     003A                     	ds	2
  8306     003C                     ?_getINA220Data:
  8307     003C                     getMed@i:	
  8308                           ; 1 bytes @ 0x1C
  8309                           
  8310     003C                     getINA220Data@device:	
  8311                           ; 1 bytes @ 0x1C
  8312                           
  8313                           
  8314                           ; 2 bytes @ 0x1C
  8315     003C                     	ds	1
  8316     003D                     getMed@aux:
  8317                           
  8318                           ; 1 bytes @ 0x1D
  8319     003D                     	ds	1
  8320     003E                     ??_getINA220Data:
  8321     003E                     ?_getMetrics:	
  8322                           ; 1 bytes @ 0x1E
  8323                           
  8324     003E                     getMetrics@device:	
  8325                           ; 1 bytes @ 0x1E
  8326                           
  8327                           
  8328                           ; 2 bytes @ 0x1E
  8329     003E                     	ds	2
  8330     0040                     ?_getHis:
  8331     0040                     getHis@data:	
  8332                           ; 1 bytes @ 0x20
  8333                           
  8334                           
  8335                           ; 2 bytes @ 0x20
  8336     0040                     	ds	2
  8337     0042                     ??_getHis:
  8338     0042                     getINA220Data@buff:	
  8339                           ; 1 bytes @ 0x22
  8340                           
  8341                           
  8342                           ; 2 bytes @ 0x22
  8343     0042                     	ds	2
  8344     0044                     getHis@i:
  8345                           
  8346                           ; 1 bytes @ 0x24
  8347     0044                     	ds	1
  8348     0045                     getHis@aux:
  8349                           
  8350                           ; 1 bytes @ 0x25
  8351     0045                     	ds	1
  8352     0046                     ?_processCommand:
  8353     0046                     processCommand@data:	
  8354                           ; 1 bytes @ 0x26
  8355                           
  8356                           
  8357                           ; 1 bytes @ 0x26
  8358     0046                     	ds	1
  8359     0047                     processCommand@sensor:
  8360                           
  8361                           ; 2 bytes @ 0x27
  8362     0047                     	ds	2
  8363     0049                     ??_processCommand:
  8364                           
  8365                           ; 1 bytes @ 0x29
  8366     0049                     	ds	4
  8367     004D                     processCommand@command:
  8368                           
  8369                           ; 1 bytes @ 0x2D
  8370     004D                     	ds	1
  8371     004E                     ??_main:
  8372                           
  8373                           ; 1 bytes @ 0x2E
  8374     004E                     	ds	3
  8375                           
  8376                           	psect	maintext
  8377     0203                     __pmaintext:	
  8378 ;;
  8379 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  8380 ;;
  8381 ;; *************** function _main *****************
  8382 ;; Defined at:
  8383 ;;		line 99 in file "main.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  packet         11    0[BANK1 ] struct .
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : B3F/0
  8394 ;;		On exit  : 3F/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;Total ram usage:       14 bytes
  8402 ;; Hardware stack levels required when called: 16
  8403 ;; This function calls:
  8404 ;;		_SYSTEM_Initialize
  8405 ;;		_TMR2_Start
  8406 ;;		_TMR2_Stop
  8407 ;;		_TMR4_Start
  8408 ;;		_TMR4_Stop
  8409 ;;		_TxDeviceDisable
  8410 ;;		_getINA220Data
  8411 ;;		_getMetrics
  8412 ;;		_initRxBuffer
  8413 ;;		_processCommand
  8414 ;;		_receiveData
  8415 ;;		_stringCompare
  8416 ;; This function is called by:
  8417 ;;		Startup code after reset
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421     0203                     _main:	
  8422                           ;psect for function _main
  8423                           
  8424                           
  8425                           ;main.c: 101:     cmd_packet_t packet= {
  8426                           
  8427                           ;incstack = 0
  8428                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8429     0203  30C5               	movlw	low main@F11067
  8430     0204  0086               	movwf	6
  8431     0205  3000               	movlw	high main@F11067
  8432     0206  0087               	movwf	7
  8433     0207  30DF               	movlw	low main@packet
  8434     0208  0084               	movwf	4
  8435     0209  3000               	movlw	high main@packet
  8436     020A  0085               	movwf	5
  8437     020B  300B               	movlw	11
  8438     020C  00CE               	movwf	??_main
  8439     020D                     u3320:
  8440     020D  0016               	moviw fsr1++
  8441     020E  001A               	movwi fsr0++
  8442     020F  0BCE               	decfsz	??_main,f
  8443     0210  2A0D               	goto	u3320
  8444                           
  8445                           ;main.c: 106:     SYSTEM_Initialize();
  8446     0211  318C  2421  3182   	fcall	_SYSTEM_Initialize
  8447                           
  8448                           ;main.c: 107:     TxDeviceDisable();
  8449     0214  3189  2133  3182   	fcall	_TxDeviceDisable
  8450     0217  1498               	bsf	24,1	;volatile
  8451     0218  1418               	bsf	24,0	;volatile
  8452     0219  119A               	bcf	26,3	;volatile
  8453                           
  8454                           ;main.c: 113:     (INTCONbits.GIE = 1);
  8455     021A  178B               	bsf	11,7	;volatile
  8456                           
  8457                           ;main.c: 114:     (INTCONbits.PEIE = 1);
  8458     021B  170B               	bsf	11,6	;volatile
  8459     021C                     l1050:	
  8460                           ;main.c: 117:     while(1)
  8461                           
  8462     021C  0063               	sleep	;# 
  8463                           
  8464                           ;main.c: 120:         if(eusart1PacketFinish)
  8465     021D  0140               	movlb	0	; select bank0
  8466     021E  0869               	movf	_eusart1PacketFinish,w	;volatile
  8467     021F  1903               	btfsc	3,2
  8468     0220  2A88               	goto	l5691
  8469                           
  8470                           ;main.c: 121:         {;main.c: 122:             eusart1PacketFinish--;
  8471     0221  3001               	movlw	1
  8472     0222  02E9               	subwf	_eusart1PacketFinish,f	;volatile
  8473                           
  8474                           ;main.c: 123:             initRxBuffer((char *)&packet.cmd_packet, sizeof(cmd_packet_fie
      +                          lds_t));
  8475     0223  3000               	movlw	0
  8476     0224  00A3               	movwf	initRxBuffer@size+3
  8477     0225  3000               	movlw	0
  8478     0226  00A2               	movwf	initRxBuffer@size+2
  8479     0227  3000               	movlw	0
  8480     0228  00A1               	movwf	initRxBuffer@size+1
  8481     0229  300B               	movlw	11
  8482     022A  00A0               	movwf	initRxBuffer@size
  8483     022B  30DF               	movlw	(low (main@packet| 0))& (0+255)
  8484     022C  318D  251D  3182   	fcall	_initRxBuffer
  8485                           
  8486                           ;main.c: 124:             receiveData((char *)&packet.cmd_packet,sizeof(cmd_packet_field
      +                          s_t));
  8487     022F  300B               	movlw	11
  8488     0230  00F5               	movwf	receiveData@maxdata
  8489     0231  30DF               	movlw	(low (main@packet| 0))& (0+255)
  8490     0232  318C  2461  3182   	fcall	_receiveData
  8491                           
  8492                           ;main.c: 126:             if(stringCompare(packet.cmd_packet_fields.address, panel.senso
      +                          r_info.address, 3) == 0)
  8493     0235  30A5               	movlw	low (_panel+5)
  8494     0236  00A0               	movwf	stringCompare@buf
  8495     0237  3001               	movlw	high (_panel+5)
  8496     0238  00A1               	movwf	stringCompare@buf+1
  8497     0239  3003               	movlw	3
  8498     023A  00A2               	movwf	stringCompare@byte_count
  8499     023B  3000               	movlw	0
  8500     023C  00A3               	movwf	stringCompare@byte_count+1
  8501     023D  30E1               	movlw	(low ((main@packet| 0+2)))& (0+255)
  8502     023E  318E  267F  3182   	fcall	_stringCompare
  8503     0241  0820               	movf	?_stringCompare,w
  8504     0242  0421               	iorwf	?_stringCompare+1,w
  8505     0243  1D03               	btfss	3,2
  8506     0244  2A50               	goto	l1052
  8507                           
  8508                           ;main.c: 127:             {;main.c: 128:                 processCommand(packet.cmd_packe
      +                          t_fields.command, &packet.cmd_packet_fields.data[0], &panel);
  8509     0245  30E5               	movlw	(low ((main@packet| 0+6)))& (0+255)
  8510     0246  00C6               	movwf	processCommand@data
  8511     0247  30A0               	movlw	low _panel
  8512     0248  00C7               	movwf	processCommand@sensor
  8513     0249  3001               	movlw	high _panel
  8514     024A  00C8               	movwf	processCommand@sensor+1
  8515     024B  0141               	movlb	1	; select bank1
  8516     024C  0864               	movf	(main@packet^(0+128)+5),w
  8517     024D  3180  2090  3182   	fcall	_processCommand
  8518     0250                     l1052:	
  8519                           ;main.c: 129:             }
  8520                           
  8521                           
  8522                           ;main.c: 130:             if(stringCompare(packet.cmd_packet_fields.address, battery.sen
      +                          sor_info.address, 3) == 0)
  8523     0250  3025               	movlw	low (_battery+5)
  8524     0251  0140               	movlb	0	; select bank0
  8525     0252  00A0               	movwf	stringCompare@buf
  8526     0253  3001               	movlw	high (_battery+5)
  8527     0254  00A1               	movwf	stringCompare@buf+1
  8528     0255  3003               	movlw	3
  8529     0256  00A2               	movwf	stringCompare@byte_count
  8530     0257  3000               	movlw	0
  8531     0258  00A3               	movwf	stringCompare@byte_count+1
  8532     0259  30E1               	movlw	(low ((main@packet| 0+2)))& (0+255)
  8533     025A  318E  267F  3182   	fcall	_stringCompare
  8534     025D  0820               	movf	?_stringCompare,w
  8535     025E  0421               	iorwf	?_stringCompare+1,w
  8536     025F  1D03               	btfss	3,2
  8537     0260  2A6C               	goto	l1053
  8538                           
  8539                           ;main.c: 131:    {;main.c: 132:                 processCommand(packet.cmd_packet_fields.
      +                          command, &packet.cmd_packet_fields.data[0], &battery);
  8540     0261  30E5               	movlw	(low ((main@packet| 0+6)))& (0+255)
  8541     0262  00C6               	movwf	processCommand@data
  8542     0263  3020               	movlw	low _battery
  8543     0264  00C7               	movwf	processCommand@sensor
  8544     0265  3001               	movlw	high _battery
  8545     0266  00C8               	movwf	processCommand@sensor+1
  8546     0267  0141               	movlb	1	; select bank1
  8547     0268  0864               	movf	(main@packet^(0+128)+5),w
  8548     0269  3180  2090  3182   	fcall	_processCommand
  8549     026C                     l1053:	
  8550                           ;main.c: 133:    }
  8551                           
  8552                           
  8553                           ;main.c: 134:             if(stringCompare(packet.cmd_packet_fields.address, cons.sensor
      +                          _info.address, 3) == 0)
  8554     026C  3025               	movlw	low (_cons+5)
  8555     026D  0140               	movlb	0	; select bank0
  8556     026E  00A0               	movwf	stringCompare@buf
  8557     026F  3002               	movlw	high (_cons+5)
  8558     0270  00A1               	movwf	stringCompare@buf+1
  8559     0271  3003               	movlw	3
  8560     0272  00A2               	movwf	stringCompare@byte_count
  8561     0273  3000               	movlw	0
  8562     0274  00A3               	movwf	stringCompare@byte_count+1
  8563     0275  30E1               	movlw	(low ((main@packet| 0+2)))& (0+255)
  8564     0276  318E  267F  3182   	fcall	_stringCompare
  8565     0279  0820               	movf	?_stringCompare,w
  8566     027A  0421               	iorwf	?_stringCompare+1,w
  8567     027B  1D03               	btfss	3,2
  8568     027C  2A88               	goto	l5691
  8569                           
  8570                           ;main.c: 135:    {;main.c: 136:                 processCommand(packet.cmd_packet_fields.
      +                          command, &packet.cmd_packet_fields.data[0], &cons);
  8571     027D  30E5               	movlw	(low ((main@packet| 0+6)))& (0+255)
  8572     027E  00C6               	movwf	processCommand@data
  8573     027F  3020               	movlw	low _cons
  8574     0280  00C7               	movwf	processCommand@sensor
  8575     0281  3002               	movlw	high _cons
  8576     0282  00C8               	movwf	processCommand@sensor+1
  8577     0283  0141               	movlb	1	; select bank1
  8578     0284  0864               	movf	(main@packet^(0+128)+5),w
  8579     0285  3180  2090  3182   	fcall	_processCommand
  8580     0288                     l5691:
  8581                           
  8582                           ;main.c: 139:         if(measureTime)
  8583     0288  0140               	movlb	0	; select bank0
  8584     0289  085F               	movf	_measureTime,w
  8585     028A  1903               	btfsc	3,2
  8586     028B  2AB7               	goto	l5697
  8587                           
  8588                           ;main.c: 140:         {;main.c: 141:             getINA220Data(&panel);
  8589     028C  30A0               	movlw	low _panel
  8590     028D  00BC               	movwf	getINA220Data@device
  8591     028E  3001               	movlw	high _panel
  8592     028F  00BD               	movwf	getINA220Data@device+1
  8593     0290  3183  2352  3182   	fcall	_getINA220Data
  8594                           
  8595                           ;main.c: 142:             getINA220Data(&battery);
  8596     0293  3020               	movlw	low _battery
  8597     0294  00BC               	movwf	getINA220Data@device
  8598     0295  3001               	movlw	high _battery
  8599     0296  00BD               	movwf	getINA220Data@device+1
  8600     0297  3183  2352  3182   	fcall	_getINA220Data
  8601                           
  8602                           ;main.c: 143:             getINA220Data(&cons);
  8603     029A  3020               	movlw	low _cons
  8604     029B  00BC               	movwf	getINA220Data@device
  8605     029C  3002               	movlw	high _cons
  8606     029D  00BD               	movwf	getINA220Data@device+1
  8607     029E  3183  2352  3182   	fcall	_getINA220Data
  8608                           
  8609                           ;main.c: 144:             getMetrics(&panel);
  8610     02A1  30A0               	movlw	low _panel
  8611     02A2  00BE               	movwf	getMetrics@device
  8612     02A3  3001               	movlw	high _panel
  8613     02A4  00BF               	movwf	getMetrics@device+1
  8614     02A5  318F  271A  3182   	fcall	_getMetrics
  8615                           
  8616                           ;main.c: 145:             getMetrics(&battery);
  8617     02A8  3020               	movlw	low _battery
  8618     02A9  00BE               	movwf	getMetrics@device
  8619     02AA  3001               	movlw	high _battery
  8620     02AB  00BF               	movwf	getMetrics@device+1
  8621     02AC  318F  271A  3182   	fcall	_getMetrics
  8622                           
  8623                           ;main.c: 146:             getMetrics(&cons);
  8624     02AF  3020               	movlw	low _cons
  8625     02B0  00BE               	movwf	getMetrics@device
  8626     02B1  3002               	movlw	high _cons
  8627     02B2  00BF               	movwf	getMetrics@device+1
  8628     02B3  318F  271A  3182   	fcall	_getMetrics
  8629                           
  8630                           ;main.c: 147:             measureTime = 0;
  8631     02B6  01DF               	clrf	_measureTime
  8632     02B7                     l5697:
  8633                           
  8634                           ;main.c: 150:         if(status.chrg != status_prev.chrg)
  8635     02B7  085D               	movf	_status+5,w
  8636     02B8  0656               	xorwf	_status_prev+5,w
  8637     02B9  1903               	skipnz
  8638     02BA  2AC3               	goto	l1056
  8639                           
  8640                           ;main.c: 151:         {;main.c: 152:             if(status.chrg)
  8641     02BB  085D               	movf	_status+5,w
  8642     02BC  1903               	btfsc	3,2
  8643     02BD  2AC0               	goto	l1061
  8644                           
  8645                           ;main.c: 153:             {;main.c: 154:                 do { LATAbits.LATA1 = 1; } whil
      +                          e(0);
  8646     02BE  1498               	bsf	24,1	;volatile
  8647     02BF  2AC1               	goto	l5701
  8648     02C0                     l1061:	
  8649                           ;main.c: 156:             {;main.c: 157:                 do { LATAbits.LATA1 = 0; } whil
      +                          e(0);
  8650                           
  8651     02C0  1098               	bcf	24,1	;volatile
  8652     02C1                     l5701:
  8653                           
  8654                           ;main.c: 159:             status_prev.chrg = status.chrg;
  8655     02C1  085D               	movf	_status+5,w
  8656     02C2  00D6               	movwf	_status_prev+5
  8657     02C3                     l1056:	
  8658                           ;main.c: 160:         }
  8659                           
  8660                           
  8661                           ;main.c: 162:         if(status.uvp != status_prev.uvp)
  8662     02C3  085E               	movf	_status+6,w
  8663     02C4  0657               	xorwf	_status_prev+6,w
  8664     02C5  1903               	skipnz
  8665     02C6  2ACF               	goto	l1063
  8666                           
  8667                           ;main.c: 163:         {;main.c: 164:             if(status.uvp)
  8668     02C7  085E               	movf	_status+6,w
  8669     02C8  1903               	btfsc	3,2
  8670     02C9  2ACC               	goto	l1068
  8671                           
  8672                           ;main.c: 165:             {;main.c: 166:                 do { LATAbits.LATA0 = 0; } whil
      +                          e(0);
  8673     02CA  1018               	bcf	24,0	;volatile
  8674     02CB  2ACD               	goto	l5705
  8675     02CC                     l1068:	
  8676                           ;main.c: 168:             {;main.c: 169:                 do { LATAbits.LATA0 = 1; } whil
      +                          e(0);
  8677                           
  8678     02CC  1418               	bsf	24,0	;volatile
  8679     02CD                     l5705:
  8680                           
  8681                           ;main.c: 171:             status_prev.uvp = status.uvp;
  8682     02CD  085E               	movf	_status+6,w
  8683     02CE  00D7               	movwf	_status_prev+6
  8684     02CF                     l1063:	
  8685                           ;main.c: 172:         }
  8686                           
  8687                           
  8688                           ;main.c: 174:         if(status.beacon != status_prev.beacon){
  8689     02CF  085C               	movf	_status+4,w
  8690     02D0  0655               	xorwf	_status_prev+4,w
  8691     02D1  1903               	skipnz
  8692     02D2  2AE8               	goto	l5717
  8693                           
  8694                           ;main.c: 175:             if(status.beacon)
  8695     02D3  085C               	movf	_status+4,w
  8696     02D4  1903               	btfsc	3,2
  8697     02D5  2ADD               	goto	l5711
  8698                           
  8699                           ;main.c: 176:             {;main.c: 177:                 TMR4_Start();
  8700     02D6  3189  212D  3182   	fcall	_TMR4_Start
  8701                           
  8702                           ;main.c: 178:                 TMR2_Start();
  8703     02D9  3189  211B  3182   	fcall	_TMR2_Start
  8704                           
  8705                           ;main.c: 179:             }else
  8706     02DC  2AE5               	goto	l5715
  8707     02DD                     l5711:
  8708                           
  8709                           ;main.c: 180:             {;main.c: 181:                 TMR4_Stop();
  8710     02DD  3189  2130  3182   	fcall	_TMR4_Stop
  8711                           
  8712                           ;main.c: 182:                 TMR2_Stop();
  8713     02E0  3189  211D  3182   	fcall	_TMR2_Stop
  8714     02E3  0140               	movlb	0	; select bank0
  8715     02E4  1298               	bcf	24,5	;volatile
  8716     02E5                     l5715:
  8717                           
  8718                           ;main.c: 185:             status_prev.beacon = status.beacon;
  8719     02E5  0140               	movlb	0	; select bank0
  8720     02E6  085C               	movf	_status+4,w
  8721     02E7  00D5               	movwf	_status_prev+4
  8722     02E8                     l5717:
  8723                           
  8724                           ;main.c: 188:         if(battery.sensor_data.voltage.med > 3375)
  8725     02E8  0142               	movlb	2	; select bank2
  8726     02E9  0842               	movf	((_battery+1)^(0+256)+33),w
  8727     02EA  3A80               	xorlw	128
  8728     02EB  0140               	movlb	0	; select bank0
  8729     02EC  00CE               	movwf	??_main
  8730     02ED  308D               	movlw	141
  8731     02EE  024E               	subwf	??_main,w
  8732     02EF  1D03               	skipz
  8733     02F0  2AF4               	goto	u3445
  8734     02F1  3030               	movlw	48
  8735     02F2  0142               	movlb	2	; select bank2
  8736     02F3  0241               	subwf	(_battery^(0+256)+33),w
  8737     02F4                     u3445:
  8738     02F4  1C03               	skipc
  8739     02F5  2B10               	goto	l5723
  8740                           
  8741                           ;main.c: 189:         {;main.c: 190:             if(battery.sensor_data.current.hist[bat
      +                          tery.sensor_data.current.pWrite] > status.curr_tail)
  8742     02F6  0142               	movlb	2	; select bank2
  8743     02F7  355A               	lslf	(_battery^(0+256)+58),w
  8744     02F8  3E44               	addlw	(low ((_battery| (0+256)+36)))& (0+255)
  8745     02F9  0086               	movwf	6
  8746     02FA  3001               	movlw	1	; select bank2/3
  8747     02FB  0087               	movwf	7
  8748     02FC  3F40               	moviw [0]fsr1
  8749     02FD  0140               	movlb	0	; select bank0
  8750     02FE  00CE               	movwf	??_main
  8751     02FF  3F41               	moviw [1]fsr1
  8752     0300  00CF               	movwf	??_main+1
  8753     0301  085B               	movf	_status+3,w
  8754     0302  3A80               	xorlw	128
  8755     0303  00D0               	movwf	??_main+2
  8756     0304  084F               	movf	??_main+1,w
  8757     0305  3A80               	xorlw	128
  8758     0306  0250               	subwf	??_main+2,w
  8759     0307  1D03               	skipz
  8760     0308  2B0B               	goto	u3455
  8761     0309  084E               	movf	??_main,w
  8762     030A  025A               	subwf	_status+2,w
  8763     030B                     u3455:
  8764     030B  1803               	skipnc
  8765     030C  2B1F               	goto	l5727
  8766                           
  8767                           ;main.c: 191:             {;main.c: 192:                 status.chrg = 0;
  8768     030D  0140               	movlb	0	; select bank0
  8769     030E  01DD               	clrf	_status+5
  8770     030F  2B1F               	goto	l5727
  8771     0310                     l5723:
  8772     0310  0140               	movlb	0	; select bank0
  8773     0311  0859               	movf	_status+1,w
  8774     0312  0142               	movlb	2	; select bank2
  8775     0313  0242               	subwf	((_battery+1)^(0+256)+33),w
  8776     0314  1D03               	skipz
  8777     0315  2B1A               	goto	u3465
  8778     0316  0140               	movlb	0	; select bank0
  8779     0317  0858               	movf	_status,w
  8780     0318  0142               	movlb	2	; select bank2
  8781     0319  0241               	subwf	(_battery^(0+256)+33),w
  8782     031A                     u3465:
  8783     031A  1803               	skipnc
  8784     031B  2B1F               	goto	l5727
  8785                           
  8786                           ;main.c: 196:         {;main.c: 197:             status.chrg = 1;
  8787     031C  0140               	movlb	0	; select bank0
  8788     031D  01DD               	clrf	_status+5
  8789     031E  0ADD               	incf	_status+5,f
  8790     031F                     l5727:
  8791                           
  8792                           ;main.c: 200:         if(battery.sensor_data.voltage.hist[battery.sensor_data.voltage.pW
      +                          rite] > 2750)
  8793     031F  0142               	movlb	2	; select bank2
  8794     0320  3543               	lslf	(_battery^(0+256)+35),w
  8795     0321  3E2D               	addlw	(low ((_battery| (0+256)+13)))& (0+255)
  8796     0322  0086               	movwf	6
  8797     0323  3001               	movlw	1	; select bank2/3
  8798     0324  0087               	movwf	7
  8799     0325  3F40               	moviw [0]fsr1
  8800     0326  0140               	movlb	0	; select bank0
  8801     0327  00CE               	movwf	??_main
  8802     0328  3F41               	moviw [1]fsr1
  8803     0329  00CF               	movwf	??_main+1
  8804     032A  084F               	movf	??_main+1,w
  8805     032B  3A80               	xorlw	128
  8806     032C  00D0               	movwf	??_main+2
  8807     032D  308A               	movlw	138
  8808     032E  0250               	subwf	??_main+2,w
  8809     032F  1D03               	skipz
  8810     0330  2B33               	goto	u3475
  8811     0331  30BF               	movlw	191
  8812     0332  024E               	subwf	??_main,w
  8813     0333                     u3475:
  8814     0333  1C03               	skipc
  8815     0334  2B38               	goto	l5731
  8816                           
  8817                           ;main.c: 201:         {;main.c: 202:             status.uvp=0;
  8818     0335  0140               	movlb	0	; select bank0
  8819     0336  01DE               	clrf	_status+6
  8820                           
  8821                           ;main.c: 203:         }
  8822     0337  2A1C               	goto	l1050
  8823     0338                     l5731:
  8824     0338  0142               	movlb	2	; select bank2
  8825     0339  3543               	lslf	(_battery^(0+256)+35),w
  8826     033A  3E2D               	addlw	(low ((_battery| (0+256)+13)))& (0+255)
  8827     033B  0086               	movwf	6
  8828     033C  3001               	movlw	1	; select bank2/3
  8829     033D  0087               	movwf	7
  8830     033E  3F40               	moviw [0]fsr1
  8831     033F  0140               	movlb	0	; select bank0
  8832     0340  00CE               	movwf	??_main
  8833     0341  3F41               	moviw [1]fsr1
  8834     0342  00CF               	movwf	??_main+1
  8835     0343  084F               	movf	??_main+1,w
  8836     0344  3A80               	xorlw	128
  8837     0345  00D0               	movwf	??_main+2
  8838     0346  3089               	movlw	137
  8839     0347  0250               	subwf	??_main+2,w
  8840     0348  1D03               	skipz
  8841     0349  2B4C               	goto	u3485
  8842     034A  30C4               	movlw	196
  8843     034B  024E               	subwf	??_main,w
  8844     034C                     u3485:
  8845     034C  1803               	skipnc
  8846     034D  2A1C               	goto	l1050
  8847                           
  8848                           ;main.c: 205:         {;main.c: 206:             status.uvp=1;
  8849     034E  0140               	movlb	0	; select bank0
  8850     034F  01DE               	clrf	_status+6
  8851     0350  0ADE               	incf	_status+6,f
  8852     0351  2A1C               	goto	l1050
  8853     0352                     __end_of_main:
  8854                           
  8855                           	psect	text1
  8856     0E7F                     __ptext1:	
  8857 ;; *************** function _stringCompare *****************
  8858 ;; Defined at:
  8859 ;;		line 47 in file "device.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  str             1    wreg     PTR const unsigned char 
  8862 ;;		 -> main@packet.address(3), main@packet(11), 
  8863 ;;  buf             2    0[BANK0 ] PTR const unsigned char 
  8864 ;;		 -> cons.sensor_info.address(3), cons.sensor_info(8), battery.sensor_info.address(3), battery.sensor_info(8), 
  8865 ;;		 -> panel.sensor_info.address(3), panel.sensor_info(8), 
  8866 ;;  byte_count      2    2[BANK0 ] int 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;  str             1    6[BANK0 ] PTR const unsigned char 
  8869 ;;		 -> main@packet.address(3), main@packet(11), 
  8870 ;;  idx             2    4[BANK0 ] int 
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  2    0[BANK0 ] int 
  8873 ;; Registers used:
  8874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8875 ;; Tracked objects:
  8876 ;;		On entry : 3F/0
  8877 ;;		On exit  : 3F/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;Total ram usage:        8 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; Hardware stack levels required when called: 4
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_main
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894     0E7F                     _stringCompare:	
  8895                           ;psect for function _stringCompare
  8896                           
  8897                           
  8898                           ;incstack = 0
  8899                           ; Regs used in _stringCompare: [wreg-fsr1h+status,2+status,0]
  8900                           ;stringCompare@str stored from wreg
  8901     0E7F  00A6               	movwf	stringCompare@str
  8902                           
  8903                           ;device.c: 47: int stringCompare(const char* str, const char* buf, int byte_count);devic
      +                          e.c: 48: {;device.c: 49:  int idx = 0;
  8904     0E80  01A4               	clrf	stringCompare@idx
  8905     0E81  01A5               	clrf	stringCompare@idx+1
  8906                           
  8907                           ;device.c: 51:  for(idx = 0; idx < byte_count; idx++)
  8908     0E82  01A4               	clrf	stringCompare@idx
  8909     0E83  01A5               	clrf	stringCompare@idx+1
  8910     0E84                     l5595:
  8911     0E84  0825               	movf	stringCompare@idx+1,w
  8912     0E85  3A80               	xorlw	128
  8913     0E86  00F4               	movwf	??_stringCompare
  8914     0E87  0823               	movf	stringCompare@byte_count+1,w
  8915     0E88  3A80               	xorlw	128
  8916     0E89  0274               	subwf	??_stringCompare,w
  8917     0E8A  1D03               	skipz
  8918     0E8B  2E8E               	goto	u3315
  8919     0E8C  0822               	movf	stringCompare@byte_count,w
  8920     0E8D  0224               	subwf	stringCompare@idx,w
  8921     0E8E                     u3315:
  8922     0E8E  1803               	btfsc	3,0
  8923     0E8F  2EAE               	goto	l5597
  8924                           
  8925                           ;device.c: 52:  {;device.c: 53:   if(*str != *buf)
  8926     0E90  0140               	movlb	0	; select bank0
  8927     0E91  0820               	movf	stringCompare@buf,w
  8928     0E92  0086               	movwf	6
  8929     0E93  0821               	movf	stringCompare@buf+1,w
  8930     0E94  0087               	movwf	7
  8931     0E95  0826               	movf	stringCompare@str,w
  8932     0E96  0084               	movwf	4
  8933     0E97  0185               	clrf	5
  8934     0E98  0800               	movf	0,w
  8935     0E99  0601               	xorwf	1,w
  8936     0E9A  1903               	skipnz
  8937     0E9B  2EA1               	goto	l5589
  8938                           
  8939                           ;device.c: 54:    return -1;
  8940     0E9C  30FF               	movlw	255
  8941     0E9D  00A0               	movwf	?_stringCompare
  8942     0E9E  30FF               	movlw	255
  8943     0E9F  00A1               	movwf	?_stringCompare+1
  8944     0EA0  0008               	return
  8945     0EA1                     l5589:
  8946                           
  8947                           ;device.c: 56:   {;device.c: 57:    str++;
  8948     0EA1  3001               	movlw	1
  8949     0EA2  00F4               	movwf	??_stringCompare
  8950     0EA3  0874               	movf	??_stringCompare,w
  8951     0EA4  07A6               	addwf	stringCompare@str,f
  8952                           
  8953                           ;device.c: 58:    buf++;
  8954     0EA5  3001               	movlw	1
  8955     0EA6  07A0               	addwf	stringCompare@buf,f
  8956     0EA7  3000               	movlw	0
  8957     0EA8  3DA1               	addwfc	stringCompare@buf+1,f
  8958                           
  8959                           ;device.c: 60:  }
  8960     0EA9  3001               	movlw	1
  8961     0EAA  07A4               	addwf	stringCompare@idx,f
  8962     0EAB  3000               	movlw	0
  8963     0EAC  3DA5               	addwfc	stringCompare@idx+1,f
  8964     0EAD  2E84               	goto	l5595
  8965     0EAE                     l5597:
  8966                           
  8967                           ;device.c: 61:  return 0;
  8968     0EAE  0140               	movlb	0	; select bank0
  8969     0EAF  01A0               	clrf	?_stringCompare
  8970     0EB0  01A1               	clrf	?_stringCompare+1
  8971     0EB1  0008               	return
  8972     0EB2                     __end_of_stringCompare:
  8973                           
  8974                           	psect	text2
  8975     0C61                     __ptext2:	
  8976 ;; *************** function _receiveData *****************
  8977 ;; Defined at:
  8978 ;;		line 49 in file "communication.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  data            1    wreg     PTR unsigned char 
  8981 ;;		 -> main@packet(11), 
  8982 ;;  maxdata         1    5[COMMON] unsigned char 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  data            1    1[BANK0 ] PTR unsigned char 
  8985 ;;		 -> main@packet(11), 
  8986 ;;  charCount       1    3[BANK0 ] unsigned char 
  8987 ;;  c               1    2[BANK0 ] unsigned char 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  1    wreg      unsigned char 
  8990 ;; Registers used:
  8991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 3F/0
  8994 ;;		On exit  : 3F/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8997 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9000 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;Total ram usage:        5 bytes
  9002 ;; Hardware stack levels used: 1
  9003 ;; Hardware stack levels required when called: 5
  9004 ;; This function calls:
  9005 ;;		_EUSART1_Read
  9006 ;; This function is called by:
  9007 ;;		_main
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011     0C61                     _receiveData:	
  9012                           ;psect for function _receiveData
  9013                           
  9014                           
  9015                           ;incstack = 0
  9016                           ; Regs used in _receiveData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9017                           ;receiveData@data stored from wreg
  9018     0C61  00A1               	movwf	receiveData@data
  9019                           
  9020                           ;communication.c: 49: uint8_t receiveData(char *data, uint8_t maxdata);communication.c: 
      +                          50: {;communication.c: 51:     uint8_t charCount = 0;
  9021     0C62  01A3               	clrf	receiveData@charCount
  9022     0C63                     l5565:
  9023                           
  9024                           ;communication.c: 55:     {;communication.c: 56:         c = EUSART1_Read();
  9025     0C63  318A  22BD  318C   	fcall	_EUSART1_Read
  9026     0C66  00A2               	movwf	receiveData@c
  9027                           
  9028                           ;communication.c: 57:         if(charCount <= maxdata)
  9029     0C67  0823               	movf	receiveData@charCount,w
  9030     0C68  0275               	subwf	receiveData@maxdata,w
  9031     0C69  1C03               	skipc
  9032     0C6A  2C77               	goto	l5573
  9033                           
  9034                           ;communication.c: 58:         {;communication.c: 59:             data[charCount++] = c;
  9035     0C6B  0823               	movf	receiveData@charCount,w
  9036     0C6C  0721               	addwf	receiveData@data,w
  9037     0C6D  00A0               	movwf	??_receiveData
  9038     0C6E  0820               	movf	??_receiveData,w
  9039     0C6F  0086               	movwf	6
  9040     0C70  0187               	clrf	7
  9041     0C71  0822               	movf	receiveData@c,w
  9042     0C72  0081               	movwf	1
  9043     0C73  3001               	movlw	1
  9044     0C74  00A0               	movwf	??_receiveData
  9045     0C75  0820               	movf	??_receiveData,w
  9046     0C76  07A3               	addwf	receiveData@charCount,f
  9047     0C77                     l5573:
  9048                           
  9049                           ;communication.c: 61:     }while(c != 0x0A);
  9050     0C77  300A               	movlw	10
  9051     0C78  0622               	xorwf	receiveData@c,w
  9052     0C79  1D03               	btfss	3,2
  9053     0C7A  2C63               	goto	l5565
  9054                           
  9055                           ;communication.c: 63:     data[charCount] = 0;
  9056     0C7B  0823               	movf	receiveData@charCount,w
  9057     0C7C  0721               	addwf	receiveData@data,w
  9058     0C7D  00A0               	movwf	??_receiveData
  9059     0C7E  0820               	movf	??_receiveData,w
  9060     0C7F  0086               	movwf	6
  9061     0C80  0187               	clrf	7
  9062     0C81  0181               	clrf	1
  9063     0C82  0008               	return
  9064     0C83                     __end_of_receiveData:
  9065                           
  9066                           	psect	text3
  9067     0ABD                     __ptext3:	
  9068 ;; *************** function _EUSART1_Read *****************
  9069 ;; Defined at:
  9070 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;		None
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  readValue       1    4[COMMON] unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1    wreg      unsigned char 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9079 ;; Tracked objects:
  9080 ;;		On entry : 3F/0
  9081 ;;		On exit  : 3F/0
  9082 ;;		Unchanged: 3F/0
  9083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;Total ram usage:        1 bytes
  9089 ;; Hardware stack levels used: 1
  9090 ;; Hardware stack levels required when called: 4
  9091 ;; This function calls:
  9092 ;;		Nothing
  9093 ;; This function is called by:
  9094 ;;		_receiveData
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098     0ABD                     _EUSART1_Read:	
  9099                           ;psect for function _EUSART1_Read
  9100                           
  9101     0ABD                     l5277:	
  9102                           ;mcc_generated_files/eusart1.c: 148:     while(!(eusart1RxHead != eusart1RxTail));
  9103                           
  9104                           ;incstack = 0
  9105                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9106                           
  9107     0ABD  0879               	movf	_eusart1RxHead,w	;volatile
  9108     0ABE  0678               	xorwf	_eusart1RxTail,w	;volatile
  9109     0ABF  1903               	skipnz
  9110     0AC0  2ABD               	goto	l5277
  9111                           
  9112                           ;mcc_generated_files/eusart1.c: 150:     readValue = eusart1RxBuffer[eusart1RxTail];
  9113     0AC1  0878               	movf	_eusart1RxTail,w
  9114     0AC2  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
  9115     0AC3  0086               	movwf	6
  9116     0AC4  3002               	movlw	2	; select bank5/6
  9117     0AC5  0087               	movwf	7
  9118     0AC6  0801               	movf	1,w
  9119     0AC7  00F4               	movwf	EUSART1_Read@readValue
  9120                           
  9121                           ;mcc_generated_files/eusart1.c: 151:     eusart1RxTail = (eusart1RxTail + 1) % 64;
  9122     0AC8  0878               	movf	_eusart1RxTail,w	;volatile
  9123     0AC9  3E01               	addlw	1
  9124     0ACA  393F               	andlw	63
  9125     0ACB  00F8               	movwf	_eusart1RxTail	;volatile
  9126                           
  9127                           ;mcc_generated_files/eusart1.c: 156:     return readValue;
  9128     0ACC  0874               	movf	EUSART1_Read@readValue,w
  9129     0ACD  0008               	return
  9130     0ACE                     __end_of_EUSART1_Read:
  9131                           
  9132                           	psect	text4
  9133     0090                     __ptext4:	
  9134 ;; *************** function _processCommand *****************
  9135 ;; Defined at:
  9136 ;;		line 182 in file "sensor.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  command         1    wreg     unsigned char 
  9139 ;;  data            1   38[BANK0 ] PTR unsigned char 
  9140 ;;		 -> main@packet(11), 
  9141 ;;  sensor          2   39[BANK0 ] PTR struct .
  9142 ;;		 -> cons(59), battery(59), panel(59), 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  command         1   45[BANK0 ] unsigned char 
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      void 
  9147 ;; Registers used:
  9148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9149 ;; Tracked objects:
  9150 ;;		On entry : 3F/1
  9151 ;;		On exit  : 34/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9154 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;Total ram usage:        8 bytes
  9159 ;; Hardware stack levels used: 1
  9160 ;; Hardware stack levels required when called: 15
  9161 ;; This function calls:
  9162 ;;		_TMR0_Reload
  9163 ;;		_getHis
  9164 ;;		_getINA220Data
  9165 ;;		_getMax
  9166 ;;		_getMed
  9167 ;;		_getMin
  9168 ;;		_sendSensorData
  9169 ;;		_sendSensorInfo
  9170 ;;		_stringToInt16
  9171 ;;		_stringlen
  9172 ;; This function is called by:
  9173 ;;		_main
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177     0090                     _processCommand:	
  9178                           ;psect for function _processCommand
  9179                           
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in _processCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9183                           ;processCommand@command stored from wreg
  9184     0090  0140               	movlb	0	; select bank0
  9185     0091  00CD               	movwf	processCommand@command
  9186                           
  9187                           ;sensor.c: 182: void processCommand(char command, char* data, sensor_t *sensor);sensor.c
      +                          : 183: {;sensor.c: 184: switch(command)
  9188     0092  29D4               	goto	l5639
  9189     0093                     l5603:
  9190                           
  9191                           ;sensor.c: 187:         sendSensorInfo(&sensor->sensor_info);
  9192     0093  0848               	movf	processCommand@sensor+1,w
  9193     0094  00AE               	movwf	sendSensorInfo@sensor_info+1
  9194     0095  0847               	movf	processCommand@sensor,w
  9195     0096  00AD               	movwf	sendSensorInfo@sensor_info
  9196     0097  318F  2750         	fcall	_sendSensorInfo
  9197                           
  9198                           ;sensor.c: 188:         break;
  9199     0099  0008               	return
  9200     009A                     l5605:
  9201                           
  9202                           ;sensor.c: 190:         getINA220Data(sensor);
  9203     009A  0848               	movf	processCommand@sensor+1,w
  9204     009B  00BD               	movwf	getINA220Data@device+1
  9205     009C  0847               	movf	processCommand@sensor,w
  9206     009D  00BC               	movwf	getINA220Data@device
  9207     009E  3183  2352         	fcall	_getINA220Data
  9208                           
  9209                           ;sensor.c: 191:         break;
  9210     00A0  0008               	return
  9211     00A1                     l5607:
  9212                           
  9213                           ;sensor.c: 193:         sendSensorData(sensor->sensor_data.voltage.hist[sensor->sensor_d
      +                          ata.voltage.pWrite]);
  9214     00A1  0847               	movf	processCommand@sensor,w
  9215     00A2  3E23               	addlw	35
  9216     00A3  0086               	movwf	6
  9217     00A4  3000               	movlw	0
  9218     00A5  3D48               	addwfc	processCommand@sensor+1,w
  9219     00A6  0087               	movwf	7
  9220     00A7  0801               	movf	1,w
  9221     00A8  00C9               	movwf	??_processCommand
  9222     00A9  01CA               	clrf	??_processCommand+1
  9223     00AA  35C9               	lslf	??_processCommand,f
  9224     00AB  0DCA               	rlf	??_processCommand+1,f
  9225     00AC  0849               	movf	??_processCommand,w
  9226     00AD  0747               	addwf	processCommand@sensor,w
  9227     00AE  00CB               	movwf	??_processCommand+2
  9228     00AF  084A               	movf	??_processCommand+1,w
  9229     00B0  3D48               	addwfc	processCommand@sensor+1,w
  9230     00B1  00CC               	movwf	??_processCommand+3
  9231     00B2  084B               	movf	??_processCommand+2,w
  9232     00B3  0086               	movwf	6
  9233     00B4  084C               	movf	??_processCommand+3,w
  9234     00B5  0087               	movwf	7
  9235     00B6  314D               	addfsr 1,13
  9236     00B7  3F40               	moviw [0]fsr1
  9237     00B8  00B4               	movwf	sendSensorData@sensor_data
  9238     00B9  3F41               	moviw [1]fsr1
  9239     00BA  00B5               	movwf	sendSensorData@sensor_data+1
  9240     00BB  318D  25EF  3180   	fcall	_sendSensorData
  9241                           
  9242                           ;sensor.c: 194:         sendSensorData(sensor->sensor_data.current.hist[sensor->sensor_d
      +                          ata.current.pWrite]);
  9243     00BE  0847               	movf	processCommand@sensor,w
  9244     00BF  3E3A               	addlw	58
  9245     00C0  0086               	movwf	6
  9246     00C1  3000               	movlw	0
  9247     00C2  3D48               	addwfc	processCommand@sensor+1,w
  9248     00C3  0087               	movwf	7
  9249     00C4  0801               	movf	1,w
  9250     00C5  00C9               	movwf	??_processCommand
  9251     00C6  01CA               	clrf	??_processCommand+1
  9252     00C7  35C9               	lslf	??_processCommand,f
  9253     00C8  0DCA               	rlf	??_processCommand+1,f
  9254     00C9  0849               	movf	??_processCommand,w
  9255     00CA  0747               	addwf	processCommand@sensor,w
  9256     00CB  00CB               	movwf	??_processCommand+2
  9257     00CC  084A               	movf	??_processCommand+1,w
  9258     00CD  3D48               	addwfc	processCommand@sensor+1,w
  9259     00CE  00CC               	movwf	??_processCommand+3
  9260     00CF  084B               	movf	??_processCommand+2,w
  9261     00D0  3E24               	addlw	36
  9262     00D1  0086               	movwf	6
  9263     00D2  3000               	movlw	0
  9264     00D3  3D4C               	addwfc	??_processCommand+3,w
  9265     00D4  0087               	movwf	7
  9266     00D5  3F40               	moviw [0]fsr1
  9267     00D6  00B4               	movwf	sendSensorData@sensor_data
  9268     00D7  3F41               	moviw [1]fsr1
  9269     00D8  00B5               	movwf	sendSensorData@sensor_data+1
  9270     00D9  318D  25EF         	fcall	_sendSensorData
  9271                           
  9272                           ;sensor.c: 195:         break;
  9273     00DB  0008               	return
  9274     00DC                     l5609:
  9275                           
  9276                           ;sensor.c: 197:         getMax(&sensor->sensor_data.voltage);
  9277     00DC  0847               	movf	processCommand@sensor,w
  9278     00DD  3E0D               	addlw	13
  9279     00DE  00F4               	movwf	getMax@data
  9280     00DF  3000               	movlw	0
  9281     00E0  3D48               	addwfc	processCommand@sensor+1,w
  9282     00E1  00F5               	movwf	getMax@data+1
  9283     00E2  3186  26B4  3180   	fcall	_getMax
  9284                           
  9285                           ;sensor.c: 198:         getMax(&sensor->sensor_data.current);
  9286     00E5  0847               	movf	processCommand@sensor,w
  9287     00E6  3E24               	addlw	36
  9288     00E7  00F4               	movwf	getMax@data
  9289     00E8  3000               	movlw	0
  9290     00E9  3D48               	addwfc	processCommand@sensor+1,w
  9291     00EA  00F5               	movwf	getMax@data+1
  9292     00EB  3186  26B4  3180   	fcall	_getMax
  9293                           
  9294                           ;sensor.c: 199:         sendSensorData(sensor->sensor_data.voltage.max);
  9295     00EE  0847               	movf	processCommand@sensor,w
  9296     00EF  0086               	movwf	6
  9297     00F0  0848               	movf	processCommand@sensor+1,w
  9298     00F1  0087               	movwf	7
  9299     00F2  315D               	addfsr 1,29
  9300     00F3  3F40               	moviw [0]fsr1
  9301     00F4  00B4               	movwf	sendSensorData@sensor_data
  9302     00F5  3F41               	moviw [1]fsr1
  9303     00F6  00B5               	movwf	sendSensorData@sensor_data+1
  9304     00F7  318D  25EF  3180   	fcall	_sendSensorData
  9305                           
  9306                           ;sensor.c: 200:         sendSensorData(sensor->sensor_data.current.max);
  9307     00FA  0847               	movf	processCommand@sensor,w
  9308     00FB  3E34               	addlw	52
  9309     00FC  0086               	movwf	6
  9310     00FD  3000               	movlw	0
  9311     00FE  3D48               	addwfc	processCommand@sensor+1,w
  9312     00FF  0087               	movwf	7
  9313     0100  3F40               	moviw [0]fsr1
  9314     0101  00B4               	movwf	sendSensorData@sensor_data
  9315     0102  3F41               	moviw [1]fsr1
  9316     0103  00B5               	movwf	sendSensorData@sensor_data+1
  9317     0104  318D  25EF         	fcall	_sendSensorData
  9318                           
  9319                           ;sensor.c: 201:         break;
  9320     0106  0008               	return
  9321     0107                     l5611:
  9322                           
  9323                           ;sensor.c: 203:         getMin(&sensor->sensor_data.voltage);
  9324     0107  0847               	movf	processCommand@sensor,w
  9325     0108  3E0D               	addlw	13
  9326     0109  00F4               	movwf	getMin@data
  9327     010A  3000               	movlw	0
  9328     010B  3D48               	addwfc	processCommand@sensor+1,w
  9329     010C  00F5               	movwf	getMin@data+1
  9330     010D  3186  2663  3180   	fcall	_getMin
  9331                           
  9332                           ;sensor.c: 204:         getMin(&sensor->sensor_data.current);
  9333     0110  0847               	movf	processCommand@sensor,w
  9334     0111  3E24               	addlw	36
  9335     0112  00F4               	movwf	getMin@data
  9336     0113  3000               	movlw	0
  9337     0114  3D48               	addwfc	processCommand@sensor+1,w
  9338     0115  00F5               	movwf	getMin@data+1
  9339     0116  3186  2663  3180   	fcall	_getMin
  9340                           
  9341                           ;sensor.c: 205:         sendSensorData(sensor->sensor_data.voltage.min);
  9342     0119  0847               	movf	processCommand@sensor,w
  9343     011A  0086               	movwf	6
  9344     011B  0848               	movf	processCommand@sensor+1,w
  9345     011C  0087               	movwf	7
  9346     011D  315F               	addfsr 1,31
  9347     011E  3F40               	moviw [0]fsr1
  9348     011F  00B4               	movwf	sendSensorData@sensor_data
  9349     0120  3F41               	moviw [1]fsr1
  9350     0121  00B5               	movwf	sendSensorData@sensor_data+1
  9351     0122  318D  25EF  3180   	fcall	_sendSensorData
  9352                           
  9353                           ;sensor.c: 206:         sendSensorData(sensor->sensor_data.current.min);
  9354     0125  0847               	movf	processCommand@sensor,w
  9355     0126  3E36               	addlw	54
  9356     0127  0086               	movwf	6
  9357     0128  3000               	movlw	0
  9358     0129  3D48               	addwfc	processCommand@sensor+1,w
  9359     012A  0087               	movwf	7
  9360     012B  3F40               	moviw [0]fsr1
  9361     012C  00B4               	movwf	sendSensorData@sensor_data
  9362     012D  3F41               	moviw [1]fsr1
  9363     012E  00B5               	movwf	sendSensorData@sensor_data+1
  9364     012F  318D  25EF         	fcall	_sendSensorData
  9365                           
  9366                           ;sensor.c: 207:         break;
  9367     0131  0008               	return
  9368     0132                     l5613:
  9369                           
  9370                           ;sensor.c: 209:         getMed(&sensor->sensor_data.voltage);
  9371     0132  0847               	movf	processCommand@sensor,w
  9372     0133  3E0D               	addlw	13
  9373     0134  00AE               	movwf	getMed@data
  9374     0135  3000               	movlw	0
  9375     0136  3D48               	addwfc	processCommand@sensor+1,w
  9376     0137  00AF               	movwf	getMed@data+1
  9377     0138  3185  25B5  3180   	fcall	_getMed
  9378                           
  9379                           ;sensor.c: 210:         getMed(&sensor->sensor_data.current);
  9380     013B  0847               	movf	processCommand@sensor,w
  9381     013C  3E24               	addlw	36
  9382     013D  00AE               	movwf	getMed@data
  9383     013E  3000               	movlw	0
  9384     013F  3D48               	addwfc	processCommand@sensor+1,w
  9385     0140  00AF               	movwf	getMed@data+1
  9386     0141  3185  25B5  3180   	fcall	_getMed
  9387                           
  9388                           ;sensor.c: 211:         sendSensorData(sensor->sensor_data.voltage.med);
  9389     0144  0847               	movf	processCommand@sensor,w
  9390     0145  3E21               	addlw	33
  9391     0146  0086               	movwf	6
  9392     0147  3000               	movlw	0
  9393     0148  3D48               	addwfc	processCommand@sensor+1,w
  9394     0149  0087               	movwf	7
  9395     014A  3F40               	moviw [0]fsr1
  9396     014B  00B4               	movwf	sendSensorData@sensor_data
  9397     014C  3F41               	moviw [1]fsr1
  9398     014D  00B5               	movwf	sendSensorData@sensor_data+1
  9399     014E  318D  25EF  3180   	fcall	_sendSensorData
  9400                           
  9401                           ;sensor.c: 212:         sendSensorData(sensor->sensor_data.current.med);
  9402     0151  0847               	movf	processCommand@sensor,w
  9403     0152  3E38               	addlw	56
  9404     0153  0086               	movwf	6
  9405     0154  3000               	movlw	0
  9406     0155  3D48               	addwfc	processCommand@sensor+1,w
  9407     0156  0087               	movwf	7
  9408     0157  3F40               	moviw [0]fsr1
  9409     0158  00B4               	movwf	sendSensorData@sensor_data
  9410     0159  3F41               	moviw [1]fsr1
  9411     015A  00B5               	movwf	sendSensorData@sensor_data+1
  9412     015B  318D  25EF         	fcall	_sendSensorData
  9413                           
  9414                           ;sensor.c: 213:         break;
  9415     015D  0008               	return
  9416     015E                     l5619:
  9417                           
  9418                           ;sensor.c: 215:         getHis(&sensor->sensor_data.voltage);
  9419     015E  0847               	movf	processCommand@sensor,w
  9420     015F  3E0D               	addlw	13
  9421     0160  00C0               	movwf	getHis@data
  9422     0161  3000               	movlw	0
  9423     0162  3D48               	addwfc	processCommand@sensor+1,w
  9424     0163  00C1               	movwf	getHis@data+1
  9425     0164  318D  256D  3180   	fcall	_getHis
  9426                           
  9427                           ;sensor.c: 216:         getHis(&sensor->sensor_data.current);
  9428     0167  0847               	movf	processCommand@sensor,w
  9429     0168  3E24               	addlw	36
  9430     0169  00C0               	movwf	getHis@data
  9431     016A  3000               	movlw	0
  9432     016B  3D48               	addwfc	processCommand@sensor+1,w
  9433     016C  00C1               	movwf	getHis@data+1
  9434     016D  318D  256D         	fcall	_getHis
  9435                           
  9436                           ;sensor.c: 217:         break;
  9437     016F  0008               	return
  9438     0170                     l5621:
  9439                           
  9440                           ;sensor.c: 219:         timer0ReloadVal16bit = stringToInt16(data,stringlen(data));
  9441     0170  0846               	movf	processCommand@data,w
  9442     0171  318B  2382  3180   	fcall	_stringlen
  9443     0174  00A4               	movwf	stringToInt16@strlen
  9444     0175  0846               	movf	processCommand@data,w
  9445     0176  3185  2552  3180   	fcall	_stringToInt16
  9446     0179  0825               	movf	?_stringToInt16+1,w
  9447     017A  00F7               	movwf	_timer0ReloadVal16bit+1	;volatile
  9448     017B  0824               	movf	?_stringToInt16,w
  9449     017C  00F6               	movwf	_timer0ReloadVal16bit	;volatile
  9450                           
  9451                           ;sensor.c: 220:         TMR0_Reload();
  9452     017D  3189  21C9         	fcall	_TMR0_Reload
  9453                           
  9454                           ;sensor.c: 221:         break;
  9455     017F  0008               	return
  9456     0180                     l5625:
  9457                           
  9458                           ;sensor.c: 226:             status.beacon = 0;
  9459     0180  01DC               	clrf	_status+4
  9460                           
  9461                           ;sensor.c: 227:             break;
  9462     0181  0008               	return
  9463     0182                     l1295:	
  9464                           ;sensor.c: 228:         case '1':
  9465                           
  9466                           
  9467                           ;sensor.c: 229:             status.beacon = 1;
  9468     0182  01DC               	clrf	_status+4
  9469     0183  0ADC               	incf	_status+4,f
  9470                           
  9471                           ;sensor.c: 230:             break;
  9472     0184  0008               	return
  9473     0185                     l5629:
  9474     0185  0846               	movf	processCommand@data,w
  9475     0186  0086               	movwf	6
  9476     0187  0187               	clrf	7
  9477     0188  0801               	movf	1,w
  9478     0189  00C9               	movwf	??_processCommand
  9479     018A  01CA               	clrf	??_processCommand+1
  9480                           
  9481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9482                           ; Switch size 1, requested type "simple"
  9483                           ; Number of cases is 1, Range of values is 0 to 0
  9484                           ; switch strategies available:
  9485                           ; Name         Instructions Cycles
  9486                           ; simple_byte            4     3 (average)
  9487                           ; direct_byte            8     6 (fixed)
  9488                           ; jumptable            260     6 (fixed)
  9489                           ;	Chosen strategy is simple_byte
  9490     018B  084A               	movf	??_processCommand+1,w
  9491     018C  3A00               	xorlw	0	; case 0
  9492     018D  1903               	skipnz
  9493     018E  2990               	goto	l5875
  9494     018F  2A02               	goto	l1301
  9495     0190                     l5875:
  9496                           
  9497                           ; Switch size 1, requested type "simple"
  9498                           ; Number of cases is 2, Range of values is 48 to 49
  9499                           ; switch strategies available:
  9500                           ; Name         Instructions Cycles
  9501                           ; simple_byte            7     4 (average)
  9502                           ; direct_byte           13     9 (fixed)
  9503                           ; jumptable            263     9 (fixed)
  9504                           ;	Chosen strategy is simple_byte
  9505     0190  0849               	movf	??_processCommand,w
  9506     0191  3A30               	xorlw	48	; case 48
  9507     0192  1903               	skipnz
  9508     0193  2980               	goto	l5625
  9509     0194  3A01               	xorlw	1	; case 49
  9510     0195  1903               	skipnz
  9511     0196  2982               	goto	l1295
  9512     0197  2A02               	goto	l1301
  9513     0198                     l5631:
  9514                           
  9515                           ;sensor.c: 236:         status.voltage_chrg_on = stringToInt16(data,stringlen(data));
  9516     0198  0846               	movf	processCommand@data,w
  9517     0199  318B  2382  3180   	fcall	_stringlen
  9518     019C  00A4               	movwf	stringToInt16@strlen
  9519     019D  0846               	movf	processCommand@data,w
  9520     019E  3185  2552         	fcall	_stringToInt16
  9521     01A0  0825               	movf	?_stringToInt16+1,w
  9522     01A1  00D9               	movwf	_status+1
  9523     01A2  0824               	movf	?_stringToInt16,w
  9524     01A3  00D8               	movwf	_status
  9525                           
  9526                           ;sensor.c: 237:         break;
  9527     01A4  0008               	return
  9528     01A5                     l5633:
  9529                           
  9530                           ;sensor.c: 239:         status.curr_tail = stringToInt16(data,stringlen(data));
  9531     01A5  0846               	movf	processCommand@data,w
  9532     01A6  318B  2382  3180   	fcall	_stringlen
  9533     01A9  00A4               	movwf	stringToInt16@strlen
  9534     01AA  0846               	movf	processCommand@data,w
  9535     01AB  3185  2552         	fcall	_stringToInt16
  9536     01AD  0825               	movf	?_stringToInt16+1,w
  9537     01AE  00DB               	movwf	_status+3
  9538     01AF  0824               	movf	?_stringToInt16,w
  9539     01B0  00DA               	movwf	_status+2
  9540                           
  9541                           ;sensor.c: 240:         break;
  9542     01B1  0008               	return
  9543     01B2                     l5635:
  9544                           
  9545                           ;sensor.c: 242:         sendSensorData(status.voltage_chrg_on);
  9546     01B2  0859               	movf	_status+1,w
  9547     01B3  00B5               	movwf	sendSensorData@sensor_data+1
  9548     01B4  0858               	movf	_status,w
  9549     01B5  00B4               	movwf	sendSensorData@sensor_data
  9550     01B6  318D  25EF  3180   	fcall	_sendSensorData
  9551                           
  9552                           ;sensor.c: 243:         sendSensorData(status.curr_tail);
  9553     01B9  085B               	movf	_status+3,w
  9554     01BA  00B5               	movwf	sendSensorData@sensor_data+1
  9555     01BB  085A               	movf	_status+2,w
  9556     01BC  00B4               	movwf	sendSensorData@sensor_data
  9557     01BD  318D  25EF  3180   	fcall	_sendSensorData
  9558                           
  9559                           ;sensor.c: 244:         sendSensorData(status.beacon);
  9560     01C0  085C               	movf	_status+4,w
  9561     01C1  00C9               	movwf	??_processCommand
  9562     01C2  01CA               	clrf	??_processCommand+1
  9563     01C3  0849               	movf	??_processCommand,w
  9564     01C4  00B4               	movwf	sendSensorData@sensor_data
  9565     01C5  084A               	movf	??_processCommand+1,w
  9566     01C6  00B5               	movwf	sendSensorData@sensor_data+1
  9567     01C7  318D  25EF  3180   	fcall	_sendSensorData
  9568                           
  9569                           ;sensor.c: 245:         sendSensorData(status.chrg);
  9570     01CA  085D               	movf	_status+5,w
  9571     01CB  00C9               	movwf	??_processCommand
  9572     01CC  01CA               	clrf	??_processCommand+1
  9573     01CD  0849               	movf	??_processCommand,w
  9574     01CE  00B4               	movwf	sendSensorData@sensor_data
  9575     01CF  084A               	movf	??_processCommand+1,w
  9576     01D0  00B5               	movwf	sendSensorData@sensor_data+1
  9577     01D1  318D  25EF         	fcall	_sendSensorData
  9578                           
  9579                           ;sensor.c: 246:         break;
  9580     01D3  0008               	return
  9581     01D4                     l5639:
  9582     01D4  084D               	movf	processCommand@command,w
  9583     01D5  00C9               	movwf	??_processCommand
  9584     01D6  01CA               	clrf	??_processCommand+1
  9585                           
  9586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9587                           ; Switch size 1, requested type "simple"
  9588                           ; Number of cases is 1, Range of values is 0 to 0
  9589                           ; switch strategies available:
  9590                           ; Name         Instructions Cycles
  9591                           ; simple_byte            4     3 (average)
  9592                           ; direct_byte            8     6 (fixed)
  9593                           ; jumptable            260     6 (fixed)
  9594                           ;	Chosen strategy is simple_byte
  9595     01D7  084A               	movf	??_processCommand+1,w
  9596     01D8  3A00               	xorlw	0	; case 0
  9597     01D9  1903               	skipnz
  9598     01DA  29DC               	goto	l5877
  9599     01DB  2A02               	goto	l1301
  9600     01DC                     l5877:
  9601                           
  9602                           ; Switch size 1, requested type "simple"
  9603                           ; Number of cases is 12, Range of values is 66 to 109
  9604                           ; switch strategies available:
  9605                           ; Name         Instructions Cycles
  9606                           ; simple_byte           37    19 (average)
  9607                           ; direct_byte           97     9 (fixed)
  9608                           ; jumptable            263     9 (fixed)
  9609                           ;	Chosen strategy is simple_byte
  9610     01DC  0849               	movf	??_processCommand,w
  9611     01DD  3A42               	xorlw	66	; case 66
  9612     01DE  1903               	skipnz
  9613     01DF  2985               	goto	l5629
  9614     01E0  3A01               	xorlw	1	; case 67
  9615     01E1  1903               	skipnz
  9616     01E2  2998               	goto	l5631
  9617     01E3  3A07               	xorlw	7	; case 68
  9618     01E4  1903               	skipnz
  9619     01E5  28A1               	goto	l5607
  9620     01E6  3A01               	xorlw	1	; case 69
  9621     01E7  1903               	skipnz
  9622     01E8  29B2               	goto	l5635
  9623     01E9  3A0D               	xorlw	13	; case 72
  9624     01EA  1903               	skipnz
  9625     01EB  295E               	goto	l5619
  9626     01EC  3A01               	xorlw	1	; case 73
  9627     01ED  1903               	skipnz
  9628     01EE  2893               	goto	l5603
  9629     01EF  3A04               	xorlw	4	; case 77
  9630     01F0  1903               	skipnz
  9631     01F1  28DC               	goto	l5609
  9632     01F2  3A1D               	xorlw	29	; case 80
  9633     01F3  1903               	skipnz
  9634     01F4  2932               	goto	l5613
  9635     01F5  3A03               	xorlw	3	; case 83
  9636     01F6  1903               	skipnz
  9637     01F7  289A               	goto	l5605
  9638     01F8  3A07               	xorlw	7	; case 84
  9639     01F9  1903               	skipnz
  9640     01FA  2970               	goto	l5621
  9641     01FB  3A3D               	xorlw	61	; case 105
  9642     01FC  1903               	skipnz
  9643     01FD  29A5               	goto	l5633
  9644     01FE  3A04               	xorlw	4	; case 109
  9645     01FF  1903               	skipnz
  9646     0200  2907               	goto	l5611
  9647     0201  2A02               	goto	l1301
  9648     0202                     l1301:
  9649     0202  0008               	return
  9650     0203                     __end_of_processCommand:
  9651                           
  9652                           	psect	text5
  9653     0552                     __ptext5:	
  9654 ;; *************** function _stringToInt16 *****************
  9655 ;; Defined at:
  9656 ;;		line 201 in file "device.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  string          1    wreg     PTR unsigned char 
  9659 ;;		 -> main@packet(11), 
  9660 ;;  strlen          1    4[BANK0 ] unsigned char 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  string          1   11[BANK0 ] PTR unsigned char 
  9663 ;;		 -> main@packet(11), 
  9664 ;;  result          2    9[BANK0 ] short 
  9665 ;;  multiple        2    7[BANK0 ] short 
  9666 ;;  sign            1    6[BANK0 ] char 
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  2    4[BANK0 ] short 
  9669 ;; Registers used:
  9670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9671 ;; Tracked objects:
  9672 ;;		On entry : 3F/0
  9673 ;;		On exit  : 3F/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;Total ram usage:        8 bytes
  9681 ;; Hardware stack levels used: 1
  9682 ;; Hardware stack levels required when called: 5
  9683 ;; This function calls:
  9684 ;;		___wmul
  9685 ;; This function is called by:
  9686 ;;		_processCommand
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690     0552                     _stringToInt16:	
  9691                           ;psect for function _stringToInt16
  9692                           
  9693                           
  9694                           ;incstack = 0
  9695                           ; Regs used in _stringToInt16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9696                           ;stringToInt16@string stored from wreg
  9697     0552  00AB               	movwf	stringToInt16@string
  9698                           
  9699                           ;device.c: 201: int16_t stringToInt16(char* string, uint8_t strlen);device.c: 202: {;dev
      +                          ice.c: 203:     int16_t result = 0;
  9700     0553  01A9               	clrf	stringToInt16@result
  9701     0554  01AA               	clrf	stringToInt16@result+1
  9702                           
  9703                           ;device.c: 204:     int16_t multiple = 1;
  9704     0555  3001               	movlw	1
  9705     0556  00A7               	movwf	stringToInt16@multiple
  9706     0557  3000               	movlw	0
  9707     0558  00A8               	movwf	stringToInt16@multiple+1
  9708                           
  9709                           ;device.c: 205:     int8_t sign = 1;
  9710     0559  01A6               	clrf	stringToInt16@sign
  9711     055A  0AA6               	incf	stringToInt16@sign,f
  9712                           
  9713                           ;device.c: 207:     if (*string == '-')
  9714     055B  082B               	movf	stringToInt16@string,w
  9715     055C  0086               	movwf	6
  9716     055D  0187               	clrf	7
  9717     055E  302D               	movlw	45
  9718     055F  0601               	xorwf	1,w
  9719     0560  1D03               	btfss	3,2
  9720     0561  2D64               	goto	l5445
  9721                           
  9722                           ;device.c: 208:     {;device.c: 209:         sign = -1;
  9723     0562  01A6               	clrf	stringToInt16@sign
  9724     0563  03A6               	decf	stringToInt16@sign,f
  9725     0564                     l5445:
  9726                           
  9727                           ;device.c: 211:     string = string+strlen;
  9728     0564  082B               	movf	stringToInt16@string,w
  9729     0565  0724               	addwf	stringToInt16@strlen,w
  9730     0566  00AB               	movwf	stringToInt16@string
  9731     0567                     l5457:	
  9732                           ;device.c: 212:     while(strlen)
  9733                           
  9734                           
  9735                           ;device.c: 212:     while(strlen)
  9736     0567  0824               	movf	stringToInt16@strlen,w
  9737     0568  1903               	btfsc	3,2
  9738     0569  2DA1               	goto	l5459
  9739                           
  9740                           ;device.c: 213:     {;device.c: 214:         string--;
  9741     056A  3001               	movlw	1
  9742     056B  02AB               	subwf	stringToInt16@string,f
  9743                           
  9744                           ;device.c: 215:         strlen--;
  9745     056C  3001               	movlw	1
  9746     056D  02A4               	subwf	stringToInt16@strlen,f
  9747                           
  9748                           ;device.c: 216:         if(*string >= '0' && *string <= '9')
  9749     056E  082B               	movf	stringToInt16@string,w
  9750     056F  0086               	movwf	6
  9751     0570  0187               	clrf	7
  9752     0571  3030               	movlw	48
  9753     0572  0201               	subwf	1,w
  9754     0573  1C03               	skipc
  9755     0574  2D67               	goto	l5457
  9756     0575  082B               	movf	stringToInt16@string,w
  9757     0576  0086               	movwf	6
  9758     0577  0187               	clrf	7
  9759     0578  303A               	movlw	58
  9760     0579  0201               	subwf	1,w
  9761     057A  1803               	skipnc
  9762     057B  2D67               	goto	l5457
  9763                           
  9764                           ;device.c: 217:         {;device.c: 218:             result += (*string - '0') * multipl
      +                          e;
  9765     057C  082B               	movf	stringToInt16@string,w
  9766     057D  0086               	movwf	6
  9767     057E  0187               	clrf	7
  9768     057F  0801               	movf	1,w
  9769     0580  3ED0               	addlw	208
  9770     0581  00A0               	movwf	___wmul@multiplier
  9771     0582  30FF               	movlw	255
  9772     0583  1803               	skipnc
  9773     0584  3000               	movlw	0
  9774     0585  00A1               	movwf	___wmul@multiplier+1
  9775     0586  0828               	movf	stringToInt16@multiple+1,w
  9776     0587  00A3               	movwf	___wmul@multiplicand+1
  9777     0588  0827               	movf	stringToInt16@multiple,w
  9778     0589  00A2               	movwf	___wmul@multiplicand
  9779     058A  318B  23CE  3185   	fcall	___wmul
  9780     058D  0820               	movf	?___wmul,w
  9781     058E  07A9               	addwf	stringToInt16@result,f
  9782     058F  0821               	movf	?___wmul+1,w
  9783     0590  3DAA               	addwfc	stringToInt16@result+1,f
  9784                           
  9785                           ;device.c: 219:             multiple *= 10;
  9786     0591  300A               	movlw	10
  9787     0592  00A0               	movwf	___wmul@multiplier
  9788     0593  3000               	movlw	0
  9789     0594  00A1               	movwf	___wmul@multiplier+1
  9790     0595  0828               	movf	stringToInt16@multiple+1,w
  9791     0596  00A3               	movwf	___wmul@multiplicand+1
  9792     0597  0827               	movf	stringToInt16@multiple,w
  9793     0598  00A2               	movwf	___wmul@multiplicand
  9794     0599  318B  23CE  3185   	fcall	___wmul
  9795     059C  0821               	movf	?___wmul+1,w
  9796     059D  00A8               	movwf	stringToInt16@multiple+1
  9797     059E  0820               	movf	?___wmul,w
  9798     059F  00A7               	movwf	stringToInt16@multiple
  9799     05A0  2D67               	goto	l5457
  9800     05A1                     l5459:
  9801                           
  9802                           ;device.c: 222:     result = result * sign;
  9803     05A1  0826               	movf	stringToInt16@sign,w
  9804     05A2  00A0               	movwf	___wmul@multiplier
  9805     05A3  01A1               	clrf	___wmul@multiplier+1
  9806     05A4  1BA0               	btfsc	___wmul@multiplier,7
  9807     05A5  03A1               	decf	___wmul@multiplier+1,f
  9808     05A6  082A               	movf	stringToInt16@result+1,w
  9809     05A7  00A3               	movwf	___wmul@multiplicand+1
  9810     05A8  0829               	movf	stringToInt16@result,w
  9811     05A9  00A2               	movwf	___wmul@multiplicand
  9812     05AA  318B  23CE         	fcall	___wmul
  9813     05AC  0821               	movf	?___wmul+1,w
  9814     05AD  00AA               	movwf	stringToInt16@result+1
  9815     05AE  0820               	movf	?___wmul,w
  9816     05AF  00A9               	movwf	stringToInt16@result
  9817                           
  9818                           ;device.c: 223:     return result;
  9819     05B0  082A               	movf	stringToInt16@result+1,w
  9820     05B1  00A5               	movwf	?_stringToInt16+1
  9821     05B2  0829               	movf	stringToInt16@result,w
  9822     05B3  00A4               	movwf	?_stringToInt16
  9823     05B4  0008               	return
  9824     05B5                     __end_of_stringToInt16:
  9825                           
  9826                           	psect	text6
  9827     0BCE                     __ptext6:	
  9828 ;; *************** function ___wmul *****************
  9829 ;; Defined at:
  9830 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9833 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  product         2    4[COMMON] unsigned int 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  2    0[BANK0 ] unsigned int 
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0
  9840 ;; Tracked objects:
  9841 ;;		On entry : 3F/0
  9842 ;;		On exit  : 3F/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;Total ram usage:        6 bytes
  9850 ;; Hardware stack levels used: 1
  9851 ;; Hardware stack levels required when called: 4
  9852 ;; This function calls:
  9853 ;;		Nothing
  9854 ;; This function is called by:
  9855 ;;		_stringToInt16
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859     0BCE                     ___wmul:	
  9860                           ;psect for function ___wmul
  9861                           
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9865     0BCE  01F4               	clrf	___wmul@product
  9866     0BCF  01F5               	clrf	___wmul@product+1
  9867     0BD0                     l5201:
  9868     0BD0  1C20               	btfss	___wmul@multiplier,0
  9869     0BD1  2BD6               	goto	l1453
  9870     0BD2  0822               	movf	___wmul@multiplicand,w
  9871     0BD3  07F4               	addwf	___wmul@product,f
  9872     0BD4  0823               	movf	___wmul@multiplicand+1,w
  9873     0BD5  3DF5               	addwfc	___wmul@product+1,f
  9874     0BD6                     l1453:
  9875     0BD6  3001               	movlw	1
  9876     0BD7                     u2955:
  9877     0BD7  35A2               	lslf	___wmul@multiplicand,f
  9878     0BD8  0DA3               	rlf	___wmul@multiplicand+1,f
  9879     0BD9  0B89               	decfsz	9,f
  9880     0BDA  2BD7               	goto	u2955
  9881     0BDB  3001               	movlw	1
  9882     0BDC                     u2965:
  9883     0BDC  36A1               	lsrf	___wmul@multiplier+1,f
  9884     0BDD  0CA0               	rrf	___wmul@multiplier,f
  9885     0BDE  0B89               	decfsz	9,f
  9886     0BDF  2BDC               	goto	u2965
  9887     0BE0  0820               	movf	___wmul@multiplier,w
  9888     0BE1  0421               	iorwf	___wmul@multiplier+1,w
  9889     0BE2  1D03               	btfss	3,2
  9890     0BE3  2BD0               	goto	l5201
  9891     0BE4  0875               	movf	___wmul@product+1,w
  9892     0BE5  00A1               	movwf	?___wmul+1
  9893     0BE6  0874               	movf	___wmul@product,w
  9894     0BE7  00A0               	movwf	?___wmul
  9895     0BE8  0008               	return
  9896     0BE9                     __end_of___wmul:
  9897                           
  9898                           	psect	text7
  9899     0F50                     __ptext7:	
  9900 ;; *************** function _sendSensorInfo *****************
  9901 ;; Defined at:
  9902 ;;		line 8 in file "device.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  sensor_info     2   13[BANK0 ] PTR struct .
  9905 ;;		 -> cons(59), battery(59), panel(59), 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  idx             2   22[BANK0 ] int 
  9908 ;;  packet          7   15[BANK0 ] struct .
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : 3F/0
  9915 ;;		On exit  : 3F/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:       12 bytes
  9923 ;; Hardware stack levels used: 1
  9924 ;; Hardware stack levels required when called: 6
  9925 ;; This function calls:
  9926 ;;		_sendPacket
  9927 ;; This function is called by:
  9928 ;;		_processCommand
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932     0F50                     _sendSensorInfo:	
  9933                           ;psect for function _sendSensorInfo
  9934                           
  9935                           
  9936                           ;device.c: 8: void sendSensorInfo(sensor_info_t* sensor_info);device.c: 9: {;device.c: 1
      +                          1:     info_packet_t packet = {
  9937                           
  9938                           ;incstack = 0
  9939                           ; Regs used in _sendSensorInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9940     0F50  30D8               	movlw	low sendSensorInfo@F11030
  9941     0F51  0086               	movwf	6
  9942     0F52  3000               	movlw	high sendSensorInfo@F11030
  9943     0F53  0087               	movwf	7
  9944     0F54  302F               	movlw	low sendSensorInfo@packet
  9945     0F55  0084               	movwf	4
  9946     0F56  3000               	movlw	high sendSensorInfo@packet
  9947     0F57  0085               	movwf	5
  9948     0F58  3007               	movlw	7
  9949     0F59  00F5               	movwf	??_sendSensorInfo
  9950     0F5A                     u3110:
  9951     0F5A  0016               	moviw fsr1++
  9952     0F5B  001A               	movwi fsr0++
  9953     0F5C  0BF5               	decfsz	??_sendSensorInfo,f
  9954     0F5D  2F5A               	goto	u3110
  9955                           
  9956                           ;device.c: 15:     for(int idx = 0; idx < 5; idx++)
  9957     0F5E  01B6               	clrf	sendSensorInfo@idx
  9958     0F5F  01B7               	clrf	sendSensorInfo@idx+1
  9959     0F60                     l5427:
  9960                           
  9961                           ;device.c: 16:         packet.codename[idx] = sensor_info->codename[idx];
  9962     0F60  0140               	movlb	0	; select bank0
  9963     0F61  0836               	movf	sendSensorInfo@idx,w
  9964     0F62  3E02               	addlw	2
  9965     0F63  3E2F               	addlw	(low (sendSensorInfo@packet| 0))& (0+255)
  9966     0F64  0086               	movwf	6
  9967     0F65  0187               	clrf	7
  9968     0F66  0836               	movf	sendSensorInfo@idx,w
  9969     0F67  072D               	addwf	sendSensorInfo@sensor_info,w
  9970     0F68  0084               	movwf	4
  9971     0F69  0837               	movf	sendSensorInfo@idx+1,w
  9972     0F6A  3D2E               	addwfc	sendSensorInfo@sensor_info+1,w
  9973     0F6B  0085               	movwf	5
  9974     0F6C  0800               	movf	0,w
  9975     0F6D  0081               	movwf	1
  9976     0F6E  3001               	movlw	1
  9977     0F6F  07B6               	addwf	sendSensorInfo@idx,f
  9978     0F70  3000               	movlw	0
  9979     0F71  3DB7               	addwfc	sendSensorInfo@idx+1,f
  9980     0F72  0837               	movf	sendSensorInfo@idx+1,w
  9981     0F73  3A80               	xorlw	128
  9982     0F74  00F5               	movwf	??_sendSensorInfo
  9983     0F75  3080               	movlw	128
  9984     0F76  0275               	subwf	??_sendSensorInfo,w
  9985     0F77  1D03               	skipz
  9986     0F78  2F7B               	goto	u3125
  9987     0F79  3005               	movlw	5
  9988     0F7A  0236               	subwf	sendSensorInfo@idx,w
  9989     0F7B                     u3125:
  9990     0F7B  1C03               	skipc
  9991     0F7C  2F60               	goto	l5427
  9992                           
  9993                           ;device.c: 19:  sendPacket((char*)&packet, sizeof(info_packet_t));
  9994     0F7D  3000               	movlw	0
  9995     0F7E  0140               	movlb	0	; select bank0
  9996     0F7F  00A5               	movwf	sendPacket@byteCount+3
  9997     0F80  3000               	movlw	0
  9998     0F81  00A4               	movwf	sendPacket@byteCount+2
  9999     0F82  3000               	movlw	0
 10000     0F83  00A3               	movwf	sendPacket@byteCount+1
 10001     0F84  3007               	movlw	7
 10002     0F85  00A2               	movwf	sendPacket@byteCount
 10003     0F86  302F               	movlw	(low (sendSensorInfo@packet| 0))& (0+255)
 10004     0F87  3186  260F         	fcall	_sendPacket
 10005     0F89  0008               	return
 10006     0F8A                     __end_of_sendSensorInfo:
 10007                           
 10008                           	psect	text8
 10009     0352                     __ptext8:	
 10010 ;; *************** function _getINA220Data *****************
 10011 ;; Defined at:
 10012 ;;		line 58 in file "sensor.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  device          2   28[BANK0 ] PTR struct .
 10015 ;;		 -> cons(59), battery(59), panel(59), 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  buff            2   34[BANK0 ] short 
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      void 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10022 ;; Tracked objects:
 10023 ;;		On entry : 3F/0
 10024 ;;		On exit  : 3F/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;Total ram usage:        8 bytes
 10032 ;; Hardware stack levels used: 1
 10033 ;; Hardware stack levels required when called: 14
 10034 ;; This function calls:
 10035 ;;		_readINA220
 10036 ;;		_writeINA220
 10037 ;; This function is called by:
 10038 ;;		_main
 10039 ;;		_processCommand
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043     0352                     _getINA220Data:	
 10044                           ;psect for function _getINA220Data
 10045                           
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in _getINA220Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10049                           ;sensor.c: 58: void getINA220Data(sensor_t *device);sensor.c: 59: {;sensor.c: 60:     in
      +                          t16_t buff;;sensor.c: 62:     do { LATAbits.LATA4 = 1; } while(0);
 10050     0352  1618               	bsf	24,4	;volatile
 10051                           
 10052                           ;sensor.c: 63:     _delay((unsigned long)((10)*(1000000/4000.0)));
 10053     0353  3004               	movlw	4
 10054     0354  0140               	movlb	0	; select bank0
 10055     0355  00BE               	movwf	??_getINA220Data
 10056     0356  303D               	movlw	61
 10057     0357                     u3497:
 10058     0357  0B89               	decfsz	9,f
 10059     0358  2B57               	goto	u3497
 10060     0359  0BBE               	decfsz	??_getINA220Data,f
 10061     035A  2B57               	goto	u3497
 10062     035B  3200               	nop2
 10063                           
 10064                           ;sensor.c: 65:     writeINA220(0x00, device->sensor_config.config , device->sensor_confi
      +                          g.addressI2C);
 10065     035C  0140               	movlb	0	; select bank0
 10066     035D  083C               	movf	getINA220Data@device,w
 10067     035E  0086               	movwf	6
 10068     035F  083D               	movf	getINA220Data@device+1,w
 10069     0360  0087               	movwf	7
 10070     0361  3149               	addfsr 1,9
 10071     0362  3F40               	moviw [0]fsr1
 10072     0363  00B1               	movwf	writeINA220@regdata
 10073     0364  3F41               	moviw [1]fsr1
 10074     0365  00B2               	movwf	writeINA220@regdata+1
 10075     0366  083C               	movf	getINA220Data@device,w
 10076     0367  0086               	movwf	6
 10077     0368  083D               	movf	getINA220Data@device+1,w
 10078     0369  0087               	movwf	7
 10079     036A  3148               	addfsr 1,8
 10080     036B  0801               	movf	1,w
 10081     036C  00B3               	movwf	writeINA220@address
 10082     036D  3000               	movlw	0
 10083     036E  318B  2316  3183   	fcall	_writeINA220
 10084                           
 10085                           ;sensor.c: 66:     writeINA220(0x05,device->sensor_config.calib, device->sensor_config.a
      +                          ddressI2C);
 10086     0371  0140               	movlb	0	; select bank0
 10087     0372  083C               	movf	getINA220Data@device,w
 10088     0373  0086               	movwf	6
 10089     0374  083D               	movf	getINA220Data@device+1,w
 10090     0375  0087               	movwf	7
 10091     0376  314B               	addfsr 1,11
 10092     0377  3F40               	moviw [0]fsr1
 10093     0378  00B1               	movwf	writeINA220@regdata
 10094     0379  3F41               	moviw [1]fsr1
 10095     037A  00B2               	movwf	writeINA220@regdata+1
 10096     037B  083C               	movf	getINA220Data@device,w
 10097     037C  0086               	movwf	6
 10098     037D  083D               	movf	getINA220Data@device+1,w
 10099     037E  0087               	movwf	7
 10100     037F  3148               	addfsr 1,8
 10101     0380  0801               	movf	1,w
 10102     0381  00B3               	movwf	writeINA220@address
 10103     0382  3005               	movlw	5
 10104     0383  318B  2316  3183   	fcall	_writeINA220
 10105                           
 10106                           ;sensor.c: 68:     buff = readINA220(0x02, device->sensor_config.addressI2C);
 10107     0386  0140               	movlb	0	; select bank0
 10108     0387  083C               	movf	getINA220Data@device,w
 10109     0388  0086               	movwf	6
 10110     0389  083D               	movf	getINA220Data@device+1,w
 10111     038A  0087               	movwf	7
 10112     038B  3148               	addfsr 1,8
 10113     038C  0801               	movf	1,w
 10114     038D  00B1               	movwf	readINA220@address
 10115     038E  3002               	movlw	2
 10116     038F  318E  26E6  3183   	fcall	_readINA220
 10117     0392  0832               	movf	?_readINA220+1,w
 10118     0393  00C3               	movwf	getINA220Data@buff+1
 10119     0394  0831               	movf	?_readINA220,w
 10120     0395  00C2               	movwf	getINA220Data@buff
 10121                           
 10122                           ;sensor.c: 69:     buff = buff >> 3;
 10123     0396  0843               	movf	getINA220Data@buff+1,w
 10124     0397  00BF               	movwf	??_getINA220Data+1
 10125     0398  0842               	movf	getINA220Data@buff,w
 10126     0399  00BE               	movwf	??_getINA220Data
 10127     039A  0D3F               	rlf	??_getINA220Data+1,w
 10128     039B  0CBF               	rrf	??_getINA220Data+1,f
 10129     039C  0CBE               	rrf	??_getINA220Data,f
 10130     039D  0D3F               	rlf	??_getINA220Data+1,w
 10131     039E  0CBF               	rrf	??_getINA220Data+1,f
 10132     039F  0CBE               	rrf	??_getINA220Data,f
 10133     03A0  0D3F               	rlf	??_getINA220Data+1,w
 10134     03A1  0CBF               	rrf	??_getINA220Data+1,f
 10135     03A2  0CBE               	rrf	??_getINA220Data,f
 10136     03A3  083E               	movf	??_getINA220Data,w
 10137     03A4  00C2               	movwf	getINA220Data@buff
 10138     03A5  083F               	movf	??_getINA220Data+1,w
 10139     03A6  00C3               	movwf	getINA220Data@buff+1
 10140                           
 10141                           ;sensor.c: 70:     buff &= 0x1FFF;
 10142     03A7  30FF               	movlw	255
 10143     03A8  05C2               	andwf	getINA220Data@buff,f
 10144     03A9  301F               	movlw	31
 10145     03AA  05C3               	andwf	getINA220Data@buff+1,f
 10146                           
 10147                           ;sensor.c: 72:     device->sensor_data.voltage.pWrite++;
 10148     03AB  3001               	movlw	1
 10149     03AC  00BE               	movwf	??_getINA220Data
 10150     03AD  083C               	movf	getINA220Data@device,w
 10151     03AE  3E23               	addlw	35
 10152     03AF  0086               	movwf	6
 10153     03B0  3000               	movlw	0
 10154     03B1  3D3D               	addwfc	getINA220Data@device+1,w
 10155     03B2  0087               	movwf	7
 10156     03B3  083E               	movf	??_getINA220Data,w
 10157     03B4  0781               	addwf	1,f
 10158                           
 10159                           ;sensor.c: 74:     if(device->sensor_data.voltage.pWrite == 8)
 10160     03B5  083C               	movf	getINA220Data@device,w
 10161     03B6  3E23               	addlw	35
 10162     03B7  0086               	movwf	6
 10163     03B8  3000               	movlw	0
 10164     03B9  3D3D               	addwfc	getINA220Data@device+1,w
 10165     03BA  0087               	movwf	7
 10166     03BB  3008               	movlw	8
 10167     03BC  0601               	xorwf	1,w
 10168     03BD  1D03               	btfss	3,2
 10169     03BE  2BD8               	goto	l1245
 10170                           
 10171                           ;sensor.c: 75:     {;sensor.c: 76:         device->sensor_data.voltage.pWrite = 0;
 10172     03BF  083C               	movf	getINA220Data@device,w
 10173     03C0  3E23               	addlw	35
 10174     03C1  0086               	movwf	6
 10175     03C2  3000               	movlw	0
 10176     03C3  3D3D               	addwfc	getINA220Data@device+1,w
 10177     03C4  0087               	movwf	7
 10178     03C5  0181               	clrf	1
 10179                           
 10180                           ;sensor.c: 77:         device->sensor_data.voltage.max = 0x8000;
 10181     03C6  083C               	movf	getINA220Data@device,w
 10182     03C7  0086               	movwf	6
 10183     03C8  083D               	movf	getINA220Data@device+1,w
 10184     03C9  0087               	movwf	7
 10185     03CA  315D               	addfsr 1,29
 10186     03CB  3000               	movlw	0
 10187     03CC  3FC0               	movwi [0]fsr1
 10188     03CD  3080               	movlw	128
 10189     03CE  3FC1               	movwi [1]fsr1
 10190                           
 10191                           ;sensor.c: 78:         device->sensor_data.voltage.min = 0x7FFF;
 10192     03CF  083C               	movf	getINA220Data@device,w
 10193     03D0  0086               	movwf	6
 10194     03D1  083D               	movf	getINA220Data@device+1,w
 10195     03D2  0087               	movwf	7
 10196     03D3  315F               	addfsr 1,31
 10197     03D4  30FF               	movlw	255
 10198     03D5  3FC0               	movwi [0]fsr1
 10199     03D6  307F               	movlw	127
 10200     03D7  3FC1               	movwi [1]fsr1
 10201     03D8                     l1245:	
 10202                           ;sensor.c: 79:     }
 10203                           
 10204                           
 10205                           ;sensor.c: 81:     device->sensor_data.voltage.hist[device->sensor_data.voltage.pWrite] 
      +                          = buff;
 10206     03D8  083C               	movf	getINA220Data@device,w
 10207     03D9  3E23               	addlw	35
 10208     03DA  0086               	movwf	6
 10209     03DB  3000               	movlw	0
 10210     03DC  3D3D               	addwfc	getINA220Data@device+1,w
 10211     03DD  0087               	movwf	7
 10212     03DE  0801               	movf	1,w
 10213     03DF  00BE               	movwf	??_getINA220Data
 10214     03E0  01BF               	clrf	??_getINA220Data+1
 10215     03E1  35BE               	lslf	??_getINA220Data,f
 10216     03E2  0DBF               	rlf	??_getINA220Data+1,f
 10217     03E3  083E               	movf	??_getINA220Data,w
 10218     03E4  073C               	addwf	getINA220Data@device,w
 10219     03E5  00C0               	movwf	??_getINA220Data+2
 10220     03E6  083F               	movf	??_getINA220Data+1,w
 10221     03E7  3D3D               	addwfc	getINA220Data@device+1,w
 10222     03E8  00C1               	movwf	??_getINA220Data+3
 10223     03E9  0840               	movf	??_getINA220Data+2,w
 10224     03EA  0086               	movwf	6
 10225     03EB  0841               	movf	??_getINA220Data+3,w
 10226     03EC  0087               	movwf	7
 10227     03ED  314D               	addfsr 1,13
 10228     03EE  0842               	movf	getINA220Data@buff,w
 10229     03EF  3FC0               	movwi [0]fsr1
 10230     03F0  0843               	movf	getINA220Data@buff+1,w
 10231     03F1  3FC1               	movwi [1]fsr1
 10232                           
 10233                           ;sensor.c: 83:     buff = readINA220(0x01, device->sensor_config.addressI2C);
 10234     03F2  083C               	movf	getINA220Data@device,w
 10235     03F3  0086               	movwf	6
 10236     03F4  083D               	movf	getINA220Data@device+1,w
 10237     03F5  0087               	movwf	7
 10238     03F6  3148               	addfsr 1,8
 10239     03F7  0801               	movf	1,w
 10240     03F8  00B1               	movwf	readINA220@address
 10241     03F9  3001               	movlw	1
 10242     03FA  318E  26E6  3183   	fcall	_readINA220
 10243     03FD  0832               	movf	?_readINA220+1,w
 10244     03FE  00C3               	movwf	getINA220Data@buff+1
 10245     03FF  0831               	movf	?_readINA220,w
 10246     0400  00C2               	movwf	getINA220Data@buff
 10247                           
 10248                           ;sensor.c: 85:     device->sensor_data.current.pWrite++;
 10249     0401  3001               	movlw	1
 10250     0402  00BE               	movwf	??_getINA220Data
 10251     0403  083C               	movf	getINA220Data@device,w
 10252     0404  3E3A               	addlw	58
 10253     0405  0086               	movwf	6
 10254     0406  3000               	movlw	0
 10255     0407  3D3D               	addwfc	getINA220Data@device+1,w
 10256     0408  0087               	movwf	7
 10257     0409  083E               	movf	??_getINA220Data,w
 10258     040A  0781               	addwf	1,f
 10259                           
 10260                           ;sensor.c: 87:     if(device->sensor_data.current.pWrite == 8)
 10261     040B  083C               	movf	getINA220Data@device,w
 10262     040C  3E3A               	addlw	58
 10263     040D  0086               	movwf	6
 10264     040E  3000               	movlw	0
 10265     040F  3D3D               	addwfc	getINA220Data@device+1,w
 10266     0410  0087               	movwf	7
 10267     0411  3008               	movlw	8
 10268     0412  0601               	xorwf	1,w
 10269     0413  1D03               	btfss	3,2
 10270     0414  2C30               	goto	l1246
 10271                           
 10272                           ;sensor.c: 88:     {;sensor.c: 89:         device->sensor_data.current.pWrite = 0;
 10273     0415  083C               	movf	getINA220Data@device,w
 10274     0416  3E3A               	addlw	58
 10275     0417  0086               	movwf	6
 10276     0418  3000               	movlw	0
 10277     0419  3D3D               	addwfc	getINA220Data@device+1,w
 10278     041A  0087               	movwf	7
 10279     041B  0181               	clrf	1
 10280                           
 10281                           ;sensor.c: 90:         device->sensor_data.current.max = 0x8000;
 10282     041C  083C               	movf	getINA220Data@device,w
 10283     041D  3E34               	addlw	52
 10284     041E  0086               	movwf	6
 10285     041F  3000               	movlw	0
 10286     0420  3D3D               	addwfc	getINA220Data@device+1,w
 10287     0421  0087               	movwf	7
 10288     0422  3000               	movlw	0
 10289     0423  3FC0               	movwi [0]fsr1
 10290     0424  3080               	movlw	128
 10291     0425  3FC1               	movwi [1]fsr1
 10292                           
 10293                           ;sensor.c: 91:         device->sensor_data.current.min = 0x7FFF;
 10294     0426  083C               	movf	getINA220Data@device,w
 10295     0427  3E36               	addlw	54
 10296     0428  0086               	movwf	6
 10297     0429  3000               	movlw	0
 10298     042A  3D3D               	addwfc	getINA220Data@device+1,w
 10299     042B  0087               	movwf	7
 10300     042C  30FF               	movlw	255
 10301     042D  3FC0               	movwi [0]fsr1
 10302     042E  307F               	movlw	127
 10303     042F  3FC1               	movwi [1]fsr1
 10304     0430                     l1246:	
 10305                           ;sensor.c: 92:     }
 10306                           
 10307                           
 10308                           ;sensor.c: 94:     device->sensor_data.current.hist[device->sensor_data.current.pWrite] 
      +                          = buff;
 10309     0430  083C               	movf	getINA220Data@device,w
 10310     0431  3E3A               	addlw	58
 10311     0432  0086               	movwf	6
 10312     0433  3000               	movlw	0
 10313     0434  3D3D               	addwfc	getINA220Data@device+1,w
 10314     0435  0087               	movwf	7
 10315     0436  0801               	movf	1,w
 10316     0437  00BE               	movwf	??_getINA220Data
 10317     0438  01BF               	clrf	??_getINA220Data+1
 10318     0439  35BE               	lslf	??_getINA220Data,f
 10319     043A  0DBF               	rlf	??_getINA220Data+1,f
 10320     043B  083E               	movf	??_getINA220Data,w
 10321     043C  073C               	addwf	getINA220Data@device,w
 10322     043D  00C0               	movwf	??_getINA220Data+2
 10323     043E  083F               	movf	??_getINA220Data+1,w
 10324     043F  3D3D               	addwfc	getINA220Data@device+1,w
 10325     0440  00C1               	movwf	??_getINA220Data+3
 10326     0441  0840               	movf	??_getINA220Data+2,w
 10327     0442  3E24               	addlw	36
 10328     0443  0086               	movwf	6
 10329     0444  3000               	movlw	0
 10330     0445  3D41               	addwfc	??_getINA220Data+3,w
 10331     0446  0087               	movwf	7
 10332     0447  0842               	movf	getINA220Data@buff,w
 10333     0448  3FC0               	movwi [0]fsr1
 10334     0449  0843               	movf	getINA220Data@buff+1,w
 10335     044A  3FC1               	movwi [1]fsr1
 10336     044B  1218               	bcf	24,4	;volatile
 10337     044C  0008               	return
 10338     044D                     __end_of_getINA220Data:
 10339                           
 10340                           	psect	text9
 10341     0B16                     __ptext9:	
 10342 ;; *************** function _writeINA220 *****************
 10343 ;; Defined at:
 10344 ;;		line 35 in file "sensor.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  regadd          1    wreg     unsigned char 
 10347 ;;  regdata         2   17[BANK0 ] unsigned short 
 10348 ;;  address         1   19[BANK0 ] unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  regadd          1   20[BANK0 ] unsigned char 
 10351 ;;  Txbuffer        3   22[BANK0 ] unsigned char [3]
 10352 ;;  pTxbuffer       1   21[BANK0 ] PTR unsigned char 
 10353 ;;		 -> writeINA220@Txbuffer(3), 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 3F/0
 10360 ;;		On exit  : 3F/1
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10363 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;Total ram usage:        8 bytes
 10368 ;; Hardware stack levels used: 1
 10369 ;; Hardware stack levels required when called: 13
 10370 ;; This function calls:
 10371 ;;		_I2C1_WriteNBytes
 10372 ;; This function is called by:
 10373 ;;		_getINA220Data
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377     0B16                     _writeINA220:	
 10378                           ;psect for function _writeINA220
 10379                           
 10380                           
 10381                           ;incstack = 0
 10382                           ; Regs used in _writeINA220: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10383                           ;writeINA220@regadd stored from wreg
 10384     0B16  00B4               	movwf	writeINA220@regadd
 10385                           
 10386                           ;sensor.c: 35: void writeINA220(uint8_t regadd, uint16_t regdata, uint8_t address);senso
      +                          r.c: 36: {;sensor.c: 37:     uint8_t Txbuffer[3];;sensor.c: 38:     uint8_t* pTxbuffer;;
      +                          sensor.c: 40:     Txbuffer[0] = regadd;
 10387     0B17  0834               	movf	writeINA220@regadd,w
 10388     0B18  00B6               	movwf	writeINA220@Txbuffer
 10389                           
 10390                           ;sensor.c: 41:     Txbuffer[1] = regdata & 0x00FF;
 10391     0B19  0831               	movf	writeINA220@regdata,w
 10392     0B1A  00B7               	movwf	writeINA220@Txbuffer+1
 10393                           
 10394                           ;sensor.c: 42:     Txbuffer[2] = (regdata & 0xFF00) >> 8;
 10395     0B1B  0832               	movf	writeINA220@regdata+1,w
 10396     0B1C  00B8               	movwf	writeINA220@Txbuffer+2
 10397                           
 10398                           ;sensor.c: 43:     pTxbuffer = &Txbuffer[0];
 10399     0B1D  3036               	movlw	(low (writeINA220@Txbuffer| 0))& (0+255)
 10400     0B1E  00B5               	movwf	writeINA220@pTxbuffer
 10401                           
 10402                           ;sensor.c: 44:     I2C1_WriteNBytes(address,pTxbuffer,3);
 10403     0B1F  0835               	movf	writeINA220@pTxbuffer,w
 10404     0B20  00AD               	movwf	I2C1_WriteNBytes@data
 10405     0B21  3003               	movlw	3
 10406     0B22  00AE               	movwf	I2C1_WriteNBytes@len
 10407     0B23  3000               	movlw	0
 10408     0B24  00AF               	movwf	I2C1_WriteNBytes@len+1
 10409     0B25  0833               	movf	writeINA220@address,w
 10410     0B26  318C  24A8         	fcall	_I2C1_WriteNBytes
 10411     0B28  0008               	return
 10412     0B29                     __end_of_writeINA220:
 10413                           
 10414                           	psect	text10
 10415     0EE6                     __ptext10:	
 10416 ;; *************** function _readINA220 *****************
 10417 ;; Defined at:
 10418 ;;		line 19 in file "sensor.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  regadd          1    wreg     unsigned char 
 10421 ;;  address         1   17[BANK0 ] unsigned char 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  regadd          1   25[BANK0 ] unsigned char 
 10424 ;;  buff            2   23[BANK0 ] unsigned char [2]
 10425 ;;  ret             2   26[BANK0 ] unsigned short 
 10426 ;;  pTxbuffer       1   22[BANK0 ] PTR unsigned char 
 10427 ;;		 -> readINA220@regadd(1), 
 10428 ;;  pRxbuffer       1   21[BANK0 ] PTR unsigned char 
 10429 ;;		 -> readINA220@buff(2), 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  2   17[BANK0 ] unsigned short 
 10432 ;; Registers used:
 10433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10434 ;; Tracked objects:
 10435 ;;		On entry : 3F/0
 10436 ;;		On exit  : 3F/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;Total ram usage:       11 bytes
 10444 ;; Hardware stack levels used: 1
 10445 ;; Hardware stack levels required when called: 13
 10446 ;; This function calls:
 10447 ;;		_I2C1_ReadNBytes
 10448 ;;		_I2C1_WriteNBytes
 10449 ;; This function is called by:
 10450 ;;		_getINA220Data
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454     0EE6                     _readINA220:	
 10455                           ;psect for function _readINA220
 10456                           
 10457                           
 10458                           ;incstack = 0
 10459                           ; Regs used in _readINA220: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10460                           ;readINA220@regadd stored from wreg
 10461     0EE6  00B9               	movwf	readINA220@regadd
 10462                           
 10463                           ;sensor.c: 19: uint16_t readINA220(uint8_t regadd, uint8_t address);sensor.c: 20: {;sens
      +                          or.c: 21:     uint8_t buff[2];;sensor.c: 22:     uint16_t ret;;sensor.c: 23:     uint8_t
      +                          * pRxbuffer;;sensor.c: 24:     uint8_t* pTxbuffer;;sensor.c: 25:     pRxbuffer = &buff[0
      +                          ];
 10464     0EE7  3037               	movlw	(low (readINA220@buff| 0))& (0+255)
 10465     0EE8  00B5               	movwf	readINA220@pRxbuffer
 10466                           
 10467                           ;sensor.c: 26:     pTxbuffer = &regadd;
 10468     0EE9  3039               	movlw	(low (readINA220@regadd| 0))& (0+255)
 10469     0EEA  00B6               	movwf	readINA220@pTxbuffer
 10470                           
 10471                           ;sensor.c: 27:     I2C1_WriteNBytes(address,pTxbuffer,1);
 10472     0EEB  0836               	movf	readINA220@pTxbuffer,w
 10473     0EEC  00AD               	movwf	I2C1_WriteNBytes@data
 10474     0EED  3001               	movlw	1
 10475     0EEE  00AE               	movwf	I2C1_WriteNBytes@len
 10476     0EEF  3000               	movlw	0
 10477     0EF0  00AF               	movwf	I2C1_WriteNBytes@len+1
 10478     0EF1  0831               	movf	readINA220@address,w
 10479     0EF2  318C  24A8  318E   	fcall	_I2C1_WriteNBytes
 10480                           
 10481                           ;sensor.c: 28:     I2C1_ReadNBytes(address,pRxbuffer,2);
 10482     0EF5  0140               	movlb	0	; select bank0
 10483     0EF6  0835               	movf	readINA220@pRxbuffer,w
 10484     0EF7  00AD               	movwf	I2C1_ReadNBytes@data
 10485     0EF8  3002               	movlw	2
 10486     0EF9  00AE               	movwf	I2C1_ReadNBytes@len
 10487     0EFA  3000               	movlw	0
 10488     0EFB  00AF               	movwf	I2C1_ReadNBytes@len+1
 10489     0EFC  0831               	movf	readINA220@address,w
 10490     0EFD  318C  2405         	fcall	_I2C1_ReadNBytes
 10491                           
 10492                           ;sensor.c: 29:     ret = buff[0];
 10493     0EFF  0140               	movlb	0	; select bank0
 10494     0F00  0837               	movf	readINA220@buff,w
 10495     0F01  00B3               	movwf	??_readINA220
 10496     0F02  01B4               	clrf	??_readINA220+1
 10497     0F03  0833               	movf	??_readINA220,w
 10498     0F04  00BA               	movwf	readINA220@ret
 10499     0F05  0834               	movf	??_readINA220+1,w
 10500     0F06  00BB               	movwf	readINA220@ret+1
 10501                           
 10502                           ;sensor.c: 30:     ret = ret << 8;
 10503     0F07  083A               	movf	readINA220@ret,w
 10504     0F08  00B4               	movwf	??_readINA220+1
 10505     0F09  01B3               	clrf	??_readINA220
 10506     0F0A  0833               	movf	??_readINA220,w
 10507     0F0B  00BA               	movwf	readINA220@ret
 10508     0F0C  0834               	movf	??_readINA220+1,w
 10509     0F0D  00BB               	movwf	readINA220@ret+1
 10510                           
 10511                           ;sensor.c: 31:     ret = ret + buff[1];
 10512     0F0E  0838               	movf	readINA220@buff+1,w
 10513     0F0F  073A               	addwf	readINA220@ret,w
 10514     0F10  00BA               	movwf	readINA220@ret
 10515     0F11  083B               	movf	readINA220@ret+1,w
 10516     0F12  1803               	skipnc
 10517     0F13  0A3B               	incf	readINA220@ret+1,w
 10518     0F14  00BB               	movwf	readINA220@ret+1
 10519                           
 10520                           ;sensor.c: 32:     return ret;
 10521     0F15  083B               	movf	readINA220@ret+1,w
 10522     0F16  00B2               	movwf	?_readINA220+1
 10523     0F17  083A               	movf	readINA220@ret,w
 10524     0F18  00B1               	movwf	?_readINA220
 10525     0F19  0008               	return
 10526     0F1A                     __end_of_readINA220:
 10527                           
 10528                           	psect	text11
 10529     0CA8                     __ptext11:	
 10530 ;; *************** function _I2C1_WriteNBytes *****************
 10531 ;; Defined at:
 10532 ;;		line 111 in file "mcc_generated_files/examples/i2c1_master_example.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;  address         1    wreg     unsigned char 
 10535 ;;  data            1   13[BANK0 ] PTR unsigned char 
 10536 ;;		 -> writeINA220@Txbuffer(3), readINA220@regadd(1), 
 10537 ;;  len             2   14[BANK0 ] unsigned int 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;  address         1   16[BANK0 ] unsigned char 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      void 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10544 ;; Tracked objects:
 10545 ;;		On entry : 3F/0
 10546 ;;		On exit  : 3F/1
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10549 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;Total ram usage:        4 bytes
 10554 ;; Hardware stack levels used: 1
 10555 ;; Hardware stack levels required when called: 12
 10556 ;; This function calls:
 10557 ;;		_I2C1_Close
 10558 ;;		_I2C1_MasterWrite
 10559 ;;		_I2C1_Open
 10560 ;;		_I2C1_SetAddressNackCallback
 10561 ;;		_I2C1_SetBuffer
 10562 ;; This function is called by:
 10563 ;;		_readINA220
 10564 ;;		_writeINA220
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568     0CA8                     _I2C1_WriteNBytes:	
 10569                           ;psect for function _I2C1_WriteNBytes
 10570                           
 10571                           
 10572                           ;incstack = 0
 10573                           ; Regs used in _I2C1_WriteNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10574                           ;I2C1_WriteNBytes@address stored from wreg
 10575     0CA8  00B0               	movwf	I2C1_WriteNBytes@address
 10576     0CA9                     l5063:	
 10577                           ;mcc_generated_files/examples/i2c1_master_example.c: 111: void I2C1_WriteNBytes(i2c1_add
      +                          ress_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c1_master_exam
      +                          ple.c: 112: {;mcc_generated_files/examples/i2c1_master_example.c: 113:     while(!I2C1_O
      +                          pen(address));
 10578                           
 10579     0CA9  0140               	movlb	0	; select bank0
 10580     0CAA  0830               	movf	I2C1_WriteNBytes@address,w
 10581     0CAB  318E  264C  318C   	fcall	_I2C1_Open
 10582     0CAE  3A00               	xorlw	0
 10583     0CAF  1903               	skipnz
 10584     0CB0  2CA9               	goto	l5063
 10585                           
 10586                           ;mcc_generated_files/examples/i2c1_master_example.c: 114:     I2C1_SetBuffer(data,len);
 10587     0CB1  0140               	movlb	0	; select bank0
 10588     0CB2  082F               	movf	I2C1_WriteNBytes@len+1,w
 10589     0CB3  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 10590     0CB4  082E               	movf	I2C1_WriteNBytes@len,w
 10591     0CB5  00F4               	movwf	I2C1_SetBuffer@bufferSize
 10592     0CB6  082D               	movf	I2C1_WriteNBytes@data,w
 10593     0CB7  318A  226F  318C   	fcall	_I2C1_SetBuffer
 10594                           
 10595                           ;mcc_generated_files/examples/i2c1_master_example.c: 115:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 10596     0CBA  3000               	movlw	0
 10597     0CBB  0140               	movlb	0	; select bank0
 10598     0CBC  00A3               	movwf	I2C1_SetAddressNackCallback@cb
 10599     0CBD  00A4               	movwf	I2C1_SetAddressNackCallback@cb+1
 10600     0CBE  3000               	movlw	0
 10601     0CBF  00A5               	movwf	I2C1_SetAddressNackCallback@ptr
 10602     0CC0  00A6               	movwf	I2C1_SetAddressNackCallback@ptr+1
 10603     0CC1  318A  2228  318C   	fcall	_I2C1_SetAddressNackCallback
 10604                           
 10605                           ;mcc_generated_files/examples/i2c1_master_example.c: 116:     I2C1_MasterWrite();
 10606     0CC4  3189  2182  318C   	fcall	_I2C1_MasterWrite
 10607     0CC7                     l5071:	
 10608                           ;mcc_generated_files/examples/i2c1_master_example.c: 117:     while(I2C1_BUSY == I2C1_Cl
      +                          ose());
 10609                           
 10610     0CC7  318B  233E  318C   	fcall	_I2C1_Close
 10611     0CCA  3A01               	xorlw	1
 10612     0CCB  1D03               	btfss	3,2
 10613     0CCC  0008               	return
 10614     0CCD  2CC7               	goto	l5071
 10615     0CCE                     __end_of_I2C1_WriteNBytes:
 10616                           
 10617                           	psect	text12
 10618     0A28                     __ptext12:	
 10619 ;; *************** function _I2C1_SetAddressNackCallback *****************
 10620 ;; Defined at:
 10621 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;  cb              2    3[BANK0 ] PTR FTN(PTR void ,)enum 
 10624 ;;		 -> NULL(1), 
 10625 ;;  ptr             2    5[BANK0 ] PTR void 
 10626 ;;		 -> NULL(0), 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;		None
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      void 
 10631 ;; Registers used:
 10632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10633 ;; Tracked objects:
 10634 ;;		On entry : 3F/0
 10635 ;;		On exit  : 3F/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10638 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;Total ram usage:        4 bytes
 10643 ;; Hardware stack levels used: 1
 10644 ;; Hardware stack levels required when called: 5
 10645 ;; This function calls:
 10646 ;;		_I2C1_SetCallback
 10647 ;; This function is called by:
 10648 ;;		_I2C1_WriteNBytes
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652     0A28                     _I2C1_SetAddressNackCallback:	
 10653                           ;psect for function _I2C1_SetAddressNackCallback
 10654                           
 10655                           
 10656                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 10657                           
 10658                           ;incstack = 0
 10659                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10660     0A28  0824               	movf	I2C1_SetAddressNackCallback@cb+1,w
 10661     0A29  00A1               	movwf	I2C1_SetCallback@cb+1
 10662     0A2A  0823               	movf	I2C1_SetAddressNackCallback@cb,w
 10663     0A2B  00A0               	movwf	I2C1_SetCallback@cb
 10664     0A2C  0825               	movf	I2C1_SetAddressNackCallback@ptr,w
 10665     0A2D  00A2               	movwf	I2C1_SetCallback@ptr
 10666     0A2E  3002               	movlw	2
 10667     0A2F  318C  243F         	fcall	_I2C1_SetCallback
 10668     0A31  0008               	return
 10669     0A32                     __end_of_I2C1_SetAddressNackCallback:
 10670                           
 10671                           	psect	text13
 10672     0982                     __ptext13:	
 10673 ;; *************** function _I2C1_MasterWrite *****************
 10674 ;; Defined at:
 10675 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;		None
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;		None
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  1    wreg      enum E358
 10682 ;; Registers used:
 10683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10684 ;; Tracked objects:
 10685 ;;		On entry : 3F/0
 10686 ;;		On exit  : 3F/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;Total ram usage:        0 bytes
 10694 ;; Hardware stack levels used: 1
 10695 ;; Hardware stack levels required when called: 11
 10696 ;; This function calls:
 10697 ;;		_I2C1_MasterOperation
 10698 ;; This function is called by:
 10699 ;;		_I2C1_WriteNBytes
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703     0982                     _I2C1_MasterWrite:	
 10704                           ;psect for function _I2C1_MasterWrite
 10705                           
 10706                           
 10707                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 10708                           
 10709                           ;incstack = 0
 10710                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10711     0982  3000               	movlw	0
 10712     0983  318B  23E9         	fcall	_I2C1_MasterOperation
 10713     0985  0008               	return
 10714     0986                     __end_of_I2C1_MasterWrite:
 10715                           
 10716                           	psect	text14
 10717     0C05                     __ptext14:	
 10718 ;; *************** function _I2C1_ReadNBytes *****************
 10719 ;; Defined at:
 10720 ;;		line 120 in file "mcc_generated_files/examples/i2c1_master_example.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;  address         1    wreg     unsigned char 
 10723 ;;  data            1   13[BANK0 ] PTR unsigned char 
 10724 ;;		 -> readINA220@buff(2), 
 10725 ;;  len             2   14[BANK0 ] unsigned int 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  address         1   16[BANK0 ] unsigned char 
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 3F/0
 10734 ;;		On exit  : 3F/1
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10737 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;Total ram usage:        4 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 12
 10744 ;; This function calls:
 10745 ;;		_I2C1_Close
 10746 ;;		_I2C1_MasterRead
 10747 ;;		_I2C1_Open
 10748 ;;		_I2C1_SetBuffer
 10749 ;; This function is called by:
 10750 ;;		_readINA220
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           
 10754     0C05                     _I2C1_ReadNBytes:	
 10755                           ;psect for function _I2C1_ReadNBytes
 10756                           
 10757                           
 10758                           ;incstack = 0
 10759                           ; Regs used in _I2C1_ReadNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10760                           ;I2C1_ReadNBytes@address stored from wreg
 10761     0C05  00B0               	movwf	I2C1_ReadNBytes@address
 10762     0C06                     l5075:	
 10763                           ;mcc_generated_files/examples/i2c1_master_example.c: 120: void I2C1_ReadNBytes(i2c1_addr
      +                          ess_t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c1_master_examp
      +                          le.c: 121: {;mcc_generated_files/examples/i2c1_master_example.c: 122:     while(!I2C1_Op
      +                          en(address));
 10764                           
 10765     0C06  0140               	movlb	0	; select bank0
 10766     0C07  0830               	movf	I2C1_ReadNBytes@address,w
 10767     0C08  318E  264C  318C   	fcall	_I2C1_Open
 10768     0C0B  3A00               	xorlw	0
 10769     0C0C  1903               	skipnz
 10770     0C0D  2C06               	goto	l5075
 10771                           
 10772                           ;mcc_generated_files/examples/i2c1_master_example.c: 123:     I2C1_SetBuffer(data,len);
 10773     0C0E  0140               	movlb	0	; select bank0
 10774     0C0F  082F               	movf	I2C1_ReadNBytes@len+1,w
 10775     0C10  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 10776     0C11  082E               	movf	I2C1_ReadNBytes@len,w
 10777     0C12  00F4               	movwf	I2C1_SetBuffer@bufferSize
 10778     0C13  082D               	movf	I2C1_ReadNBytes@data,w
 10779     0C14  318A  226F  318C   	fcall	_I2C1_SetBuffer
 10780                           
 10781                           ;mcc_generated_files/examples/i2c1_master_example.c: 124:     I2C1_MasterRead();
 10782     0C17  3189  217E  318C   	fcall	_I2C1_MasterRead
 10783     0C1A                     l5081:	
 10784                           ;mcc_generated_files/examples/i2c1_master_example.c: 125:     while(I2C1_BUSY == I2C1_Cl
      +                          ose());
 10785                           
 10786     0C1A  318B  233E  318C   	fcall	_I2C1_Close
 10787     0C1D  3A01               	xorlw	1
 10788     0C1E  1D03               	btfss	3,2
 10789     0C1F  0008               	return
 10790     0C20  2C1A               	goto	l5081
 10791     0C21                     __end_of_I2C1_ReadNBytes:
 10792                           
 10793                           	psect	text15
 10794     0E4C                     __ptext15:	
 10795 ;; *************** function _I2C1_Open *****************
 10796 ;; Defined at:
 10797 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  address         1    wreg     unsigned char 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  address         1    4[COMMON] unsigned char 
 10802 ;;  returnValue     1    5[COMMON] enum E358
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      enum E358
 10805 ;; Registers used:
 10806 ;;		wreg, status,2, status,0, pclath, cstack
 10807 ;; Tracked objects:
 10808 ;;		On entry : 3F/0
 10809 ;;		On exit  : 3D/1
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;Total ram usage:        2 bytes
 10817 ;; Hardware stack levels used: 1
 10818 ;; Hardware stack levels required when called: 5
 10819 ;; This function calls:
 10820 ;;		_I2C1_MasterClearIrq
 10821 ;;		_I2C1_MasterOpen
 10822 ;; This function is called by:
 10823 ;;		_I2C1_WriteNBytes
 10824 ;;		_I2C1_ReadNBytes
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828     0E4C                     _I2C1_Open:	
 10829                           ;psect for function _I2C1_Open
 10830                           
 10831                           
 10832                           ;incstack = 0
 10833                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 10834                           ;I2C1_Open@address stored from wreg
 10835     0E4C  00F4               	movwf	I2C1_Open@address
 10836                           
 10837                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 10838     0E4D  01F5               	clrf	I2C1_Open@returnValue
 10839     0E4E  0AF5               	incf	I2C1_Open@returnValue,f
 10840                           
 10841                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 10842     0E4F  0141               	movlb	1	; select bank1
 10843     0E50  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 10844     0E51  2E7D               	goto	l447
 10845                           
 10846                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 10847     0E52  0874               	movf	I2C1_Open@address,w
 10848     0E53  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 10849                           
 10850                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 10851     0E54  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 10852                           
 10853                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 10854     0E55  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 10855                           
 10856                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 10857     0E56  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 10858                           
 10859                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 10860     0E57  300E               	movlw	14
 10861     0E58  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 10862                           
 10863                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 10864     0E59  30F4               	movlw	244
 10865     0E5A  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 10866     0E5B  3001               	movlw	1
 10867     0E5C  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 10868                           
 10869                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 10870     0E5D  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 10871                           
 10872                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 10873     0E5E  3023               	movlw	low _I2C1_CallbackReturnStop
 10874     0E5F  00A0               	movwf	_I2C1_Status^(0+128)
 10875     0E60  3009               	movlw	high _I2C1_CallbackReturnStop
 10876     0E61  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 10877                           
 10878                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 10879     0E62  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 10880                           
 10881                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 10882     0E63  3023               	movlw	low _I2C1_CallbackReturnStop
 10883     0E64  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 10884     0E65  3009               	movlw	high _I2C1_CallbackReturnStop
 10885     0E66  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 10886                           
 10887                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 10888     0E67  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 10889                           
 10890                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 10891     0E68  3023               	movlw	low _I2C1_CallbackReturnStop
 10892     0E69  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 10893     0E6A  3009               	movlw	high _I2C1_CallbackReturnStop
 10894     0E6B  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 10895                           
 10896                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 10897     0E6C  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 10898                           
 10899                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 10900     0E6D  3023               	movlw	low _I2C1_CallbackReturnStop
 10901     0E6E  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 10902     0E6F  3009               	movlw	high _I2C1_CallbackReturnStop
 10903     0E70  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 10904                           
 10905                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 10906     0E71  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 10907                           
 10908                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 10909     0E72  3025               	movlw	low _I2C1_CallbackReturnReset
 10910     0E73  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 10911     0E74  3009               	movlw	high _I2C1_CallbackReturnReset
 10912     0E75  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 10913                           
 10914                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 10915     0E76  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 10916                           
 10917                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 10918     0E77  3189  2136  318E   	fcall	_I2C1_MasterClearIrq
 10919                           
 10920                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 10921     0E7A  318A  2255         	fcall	_I2C1_MasterOpen
 10922                           
 10923                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 10924     0E7C  01F5               	clrf	I2C1_Open@returnValue
 10925     0E7D                     l447:	
 10926                           ;mcc_generated_files/i2c1_master.c: 205:     }
 10927                           
 10928                           
 10929                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 10930     0E7D  0875               	movf	I2C1_Open@returnValue,w
 10931     0E7E  0008               	return
 10932     0E7F                     __end_of_I2C1_Open:
 10933                           
 10934                           	psect	text16
 10935     0A55                     __ptext16:	
 10936 ;; *************** function _I2C1_MasterOpen *****************
 10937 ;; Defined at:
 10938 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;		None
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      _Bool 
 10945 ;; Registers used:
 10946 ;;		wreg, status,2
 10947 ;; Tracked objects:
 10948 ;;		On entry : 3F/E
 10949 ;;		On exit  : 3F/3
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;Total ram usage:        0 bytes
 10957 ;; Hardware stack levels used: 1
 10958 ;; Hardware stack levels required when called: 4
 10959 ;; This function calls:
 10960 ;;		Nothing
 10961 ;; This function is called by:
 10962 ;;		_I2C1_Open
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966     0A55                     _I2C1_MasterOpen:	
 10967                           ;psect for function _I2C1_MasterOpen
 10968                           
 10969                           
 10970                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 10971                           
 10972                           ;incstack = 0
 10973                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 10974     0A55  0143               	movlb	3	; select bank3
 10975     0A56  1A90               	btfsc	16,5	;volatile
 10976     0A57  0008               	return
 10977                           
 10978                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 10979     0A58  3080               	movlw	128
 10980     0A59  008F               	movwf	15	;volatile
 10981                           
 10982                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x28;
 10983     0A5A  3028               	movlw	40
 10984     0A5B  0090               	movwf	16	;volatile
 10985                           
 10986                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 10987     0A5C  0191               	clrf	17	;volatile
 10988                           
 10989                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x04;
 10990     0A5D  3004               	movlw	4
 10991     0A5E  008D               	movwf	13	;volatile
 10992                           
 10993                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 10994     0A5F  1690               	bsf	16,5	;volatile
 10995     0A60  0008               	return
 10996     0A61                     __end_of_I2C1_MasterOpen:
 10997                           
 10998                           	psect	text17
 10999     097E                     __ptext17:	
 11000 ;; *************** function _I2C1_MasterRead *****************
 11001 ;; Defined at:
 11002 ;;		line 246 in file "mcc_generated_files/i2c1_master.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;		None
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;		None
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      enum E358
 11009 ;; Registers used:
 11010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 3F/1
 11013 ;;		On exit  : 3F/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;Total ram usage:        0 bytes
 11021 ;; Hardware stack levels used: 1
 11022 ;; Hardware stack levels required when called: 11
 11023 ;; This function calls:
 11024 ;;		_I2C1_MasterOperation
 11025 ;; This function is called by:
 11026 ;;		_I2C1_ReadNBytes
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030     097E                     _I2C1_MasterRead:	
 11031                           ;psect for function _I2C1_MasterRead
 11032                           
 11033                           
 11034                           ;mcc_generated_files/i2c1_master.c: 248:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 11035                           
 11036                           ;incstack = 0
 11037                           ; Regs used in _I2C1_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11038     097E  3001               	movlw	1
 11039     097F  318B  23E9         	fcall	_I2C1_MasterOperation
 11040     0981  0008               	return
 11041     0982                     __end_of_I2C1_MasterRead:
 11042                           
 11043                           	psect	text18
 11044     0BE9                     __ptext18:	
 11045 ;; *************** function _I2C1_MasterOperation *****************
 11046 ;; Defined at:
 11047 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  read            1    wreg     _Bool 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  read            1   11[BANK0 ] _Bool 
 11052 ;;  returnValue     1   12[BANK0 ] enum E358
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      enum E358
 11055 ;; Registers used:
 11056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11057 ;; Tracked objects:
 11058 ;;		On entry : 3E/0
 11059 ;;		On exit  : 3F/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;Total ram usage:        2 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; Hardware stack levels required when called: 10
 11069 ;; This function calls:
 11070 ;;		_I2C1_MasterStart
 11071 ;;		_I2C1_Poller
 11072 ;; This function is called by:
 11073 ;;		_I2C1_MasterRead
 11074 ;;		_I2C1_MasterWrite
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078     0BE9                     _I2C1_MasterOperation:	
 11079                           ;psect for function _I2C1_MasterOperation
 11080                           
 11081                           
 11082                           ;incstack = 0
 11083                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11084                           ;I2C1_MasterOperation@read stored from wreg
 11085     0BE9  0140               	movlb	0	; select bank0
 11086     0BEA  00AB               	movwf	I2C1_MasterOperation@read
 11087                           
 11088                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 11089     0BEB  01AC               	clrf	I2C1_MasterOperation@returnValue
 11090     0BEC  0AAC               	incf	I2C1_MasterOperation@returnValue,f
 11091                           
 11092                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 11093     0BED  0141               	movlb	1	; select bank1
 11094     0BEE  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 11095     0BEF  2C02               	goto	l4927
 11096                           
 11097                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 11098     0BF0  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 11099                           
 11100                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 11101     0BF1  0140               	movlb	0	; select bank0
 11102     0BF2  01AC               	clrf	I2C1_MasterOperation@returnValue
 11103                           
 11104                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 11105     0BF3  082B               	movf	I2C1_MasterOperation@read,w
 11106     0BF4  1903               	btfsc	3,2
 11107     0BF5  2BFA               	goto	l4921
 11108                           
 11109                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 11110     0BF6  0141               	movlb	1	; select bank1
 11111     0BF7  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 11112     0BF8  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 11113                           
 11114                           ;mcc_generated_files/i2c1_master.c: 235:         }
 11115     0BF9  2BFD               	goto	l4923
 11116     0BFA                     l4921:
 11117                           
 11118                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 11119     0BFA  3002               	movlw	2
 11120     0BFB  0141               	movlb	1	; select bank1
 11121     0BFC  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 11122     0BFD                     l4923:
 11123                           
 11124                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 11125     0BFD  3189  213C  318B   	fcall	_I2C1_MasterStart
 11126                           
 11127                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 11128     0C00  318A  221E         	fcall	_I2C1_Poller
 11129     0C02                     l4927:
 11130                           
 11131                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 11132     0C02  0140               	movlb	0	; select bank0
 11133     0C03  082C               	movf	I2C1_MasterOperation@returnValue,w
 11134     0C04  0008               	return
 11135     0C05                     __end_of_I2C1_MasterOperation:
 11136                           
 11137                           	psect	text19
 11138     0A1E                     __ptext19:	
 11139 ;; *************** function _I2C1_Poller *****************
 11140 ;; Defined at:
 11141 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;		None
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;		None
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  1    wreg      void 
 11148 ;; Registers used:
 11149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11150 ;; Tracked objects:
 11151 ;;		On entry : 3F/3
 11152 ;;		On exit  : 3F/1
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;Total ram usage:        0 bytes
 11160 ;; Hardware stack levels used: 1
 11161 ;; Hardware stack levels required when called: 9
 11162 ;; This function calls:
 11163 ;;		_I2C1_MasterFsm
 11164 ;;		_I2C1_MasterWaitForEvent
 11165 ;; This function is called by:
 11166 ;;		_I2C1_MasterOperation
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170     0A1E                     _I2C1_Poller:	
 11171                           ;psect for function _I2C1_Poller
 11172                           
 11173     0A1E                     l4893:	
 11174                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 11175                           
 11176                           ;incstack = 0
 11177                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11178                           
 11179                           
 11180                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 11181     0A1E  0141               	movlb	1	; select bank1
 11182     0A1F  1CBC               	btfss	(_I2C1_Status^(0+128)+28),1
 11183     0A20  0008               	return
 11184                           
 11185                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 11186     0A21  3189  217A  318A   	fcall	_I2C1_MasterWaitForEvent
 11187                           
 11188                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 11189     0A24  318C  2483  318A   	fcall	_I2C1_MasterFsm
 11190     0A27  2A1E               	goto	l4893
 11191     0A28                     __end_of_I2C1_Poller:
 11192                           
 11193                           	psect	text20
 11194     097A                     __ptext20:	
 11195 ;; *************** function _I2C1_MasterWaitForEvent *****************
 11196 ;; Defined at:
 11197 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;		None
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;		None
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		None
 11206 ;; Tracked objects:
 11207 ;;		On entry : 3D/1
 11208 ;;		On exit  : 3F/E
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;Total ram usage:        0 bytes
 11216 ;; Hardware stack levels used: 1
 11217 ;; Hardware stack levels required when called: 4
 11218 ;; This function calls:
 11219 ;;		Nothing
 11220 ;; This function is called by:
 11221 ;;		_I2C1_Poller
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225     097A                     _I2C1_MasterWaitForEvent:	
 11226                           ;psect for function _I2C1_MasterWaitForEvent
 11227                           
 11228     097A                     l670:	
 11229                           ;incstack = 0
 11230                           ; Regs used in _I2C1_MasterWaitForEvent: []
 11231                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 11232                           
 11233                           
 11234                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 11235     097A  014E               	movlb	14	; select bank14
 11236     097B  180F               	btfsc	15,0	;volatile
 11237     097C  0008               	return
 11238     097D  297A               	goto	l670
 11239     097E                     __end_of_I2C1_MasterWaitForEvent:
 11240                           
 11241                           	psect	text21
 11242     0C83                     __ptext21:	
 11243 ;; *************** function _I2C1_MasterFsm *****************
 11244 ;; Defined at:
 11245 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      void 
 11252 ;; Registers used:
 11253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11254 ;; Tracked objects:
 11255 ;;		On entry : 3F/E
 11256 ;;		On exit  : 3F/1
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11262 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11263 ;;Total ram usage:        2 bytes
 11264 ;; Hardware stack levels used: 1
 11265 ;; Hardware stack levels required when called: 8
 11266 ;; This function calls:
 11267 ;;		_I2C1_DO_ADDRESS_NACK
 11268 ;;		_I2C1_DO_IDLE
 11269 ;;		_I2C1_DO_RCEN
 11270 ;;		_I2C1_DO_RESET
 11271 ;;		_I2C1_DO_RX
 11272 ;;		_I2C1_DO_RX_ACK
 11273 ;;		_I2C1_DO_RX_NACK_RESTART
 11274 ;;		_I2C1_DO_RX_NACK_STOP
 11275 ;;		_I2C1_DO_SEND_ADR_READ
 11276 ;;		_I2C1_DO_SEND_ADR_WRITE
 11277 ;;		_I2C1_DO_SEND_RESTART
 11278 ;;		_I2C1_DO_SEND_RESTART_READ
 11279 ;;		_I2C1_DO_SEND_RESTART_WRITE
 11280 ;;		_I2C1_DO_SEND_STOP
 11281 ;;		_I2C1_DO_TX
 11282 ;;		_I2C1_DO_TX_EMPTY
 11283 ;;		_I2C1_MasterClearIrq
 11284 ;;		_I2C1_MasterIsNack
 11285 ;; This function is called by:
 11286 ;;		_I2C1_Poller
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290     0C83                     _I2C1_MasterFsm:	
 11291                           ;psect for function _I2C1_MasterFsm
 11292                           
 11293                           
 11294                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 11295                           
 11296                           ;incstack = 0
 11297                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11298     0C83  3189  2136  318C   	fcall	_I2C1_MasterClearIrq
 11299                           
 11300                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 11301     0C86  0141               	movlb	1	; select bank1
 11302     0C87  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 11303     0C88  2C92               	goto	l4883
 11304     0C89  3189  21CF  318C   	fcall	_I2C1_MasterIsNack
 11305     0C8C  3A00               	xorlw	0
 11306     0C8D  1903               	skipnz
 11307     0C8E  2C92               	goto	l4883
 11308                           
 11309                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 11310     0C8F  300F               	movlw	15
 11311     0C90  0141               	movlb	1	; select bank1
 11312     0C91  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 11313     0C92                     l4883:
 11314                           
 11315                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 11316     0C92  0141               	movlb	1	; select bank1
 11317     0C93  083A               	movf	(_I2C1_Status^(0+128)+26),w
 11318     0C94  0140               	movlb	0	; select bank0
 11319     0C95  00A9               	movwf	??_I2C1_MasterFsm
 11320     0C96  01AA               	clrf	??_I2C1_MasterFsm+1
 11321     0C97  35A9               	lslf	??_I2C1_MasterFsm,f
 11322     0C98  0DAA               	rlf	??_I2C1_MasterFsm+1,f
 11323     0C99  3000               	movlw	low _fsmStateTable
 11324     0C9A  0729               	addwf	??_I2C1_MasterFsm,w
 11325     0C9B  0084               	movwf	4
 11326     0C9C  3010               	movlw	high _fsmStateTable
 11327     0C9D  3D2A               	addwfc	??_I2C1_MasterFsm+1,w
 11328     0C9E  3880               	iorlw	128
 11329     0C9F  0085               	movwf	5
 11330     0CA0  3F01               	moviw [1]fsr0
 11331     0CA1  008A               	movwf	10
 11332     0CA2  3F00               	moviw [0]fsr0
 11333     0CA3  000A               	callw
 11334     0CA4  318C               	pagesel	$
 11335     0CA5  0141               	movlb	1	; select bank1
 11336     0CA6  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 11337     0CA7  0008               	return
 11338     0CA8                     __end_of_I2C1_MasterFsm:
 11339                           
 11340                           	psect	text22
 11341     0D45                     __ptext22:	
 11342 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 11343 ;; Defined at:
 11344 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;		None
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;		None
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      enum E10721
 11351 ;; Registers used:
 11352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11353 ;; Tracked objects:
 11354 ;;		On entry : 3F/0
 11355 ;;		On exit  : 3F/3
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;Total ram usage:        2 bytes
 11363 ;; Hardware stack levels used: 1
 11364 ;; Hardware stack levels required when called: 7
 11365 ;; This function calls:
 11366 ;;		NULL
 11367 ;;		_I2C1_CallbackReturnReset
 11368 ;;		_I2C1_CallbackReturnStop
 11369 ;;		_I2C1_DO_SEND_RESTART
 11370 ;;		_I2C1_DO_SEND_STOP
 11371 ;;		_rd1RegCompleteHandler
 11372 ;;		_rd2RegCompleteHandler
 11373 ;;		_rdBlkRegCompleteHandler
 11374 ;;		_wr1RegCompleteHandler
 11375 ;;		_wr2RegCompleteHandler
 11376 ;; This function is called by:
 11377 ;;		_I2C1_MasterFsm
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381     0D45                     _I2C1_DO_ADDRESS_NACK:	
 11382                           ;psect for function _I2C1_DO_ADDRESS_NACK
 11383                           
 11384                           
 11385                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 11386                           
 11387                           ;incstack = 0
 11388                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11389     0D45  0141               	movlb	1	; select bank1
 11390     0D46  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 11391                           
 11392                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 11393     0D47  3002               	movlw	2
 11394     0D48  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 11395                           
 11396                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 11397     0D49  2D50               	goto	l4867
 11398     0D4A                     l4857:
 11399                           
 11400                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 11401     0D4A  3189  2166         	fcall	_I2C1_DO_SEND_RESTART
 11402     0D4C  0008               	return
 11403     0D4D                     l4861:
 11404                           
 11405                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 11406     0D4D  3189  216A         	fcall	_I2C1_DO_SEND_STOP
 11407     0D4F  0008               	return
 11408     0D50                     l4867:
 11409     0D50  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 11410     0D51  0140               	movlb	0	; select bank0
 11411     0D52  00A6               	movwf	I2C1_CallbackReturnReset@funPtr
 11412     0D53  3004               	movlw	4
 11413     0D54  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 11414     0D55  0086               	movwf	6
 11415     0D56  0187               	clrf	7
 11416     0D57  3F41               	moviw [1]fsr1
 11417     0D58  008A               	movwf	10
 11418     0D59  3F40               	moviw [0]fsr1
 11419     0D5A  000A               	callw
 11420     0D5B  318D               	pagesel	$
 11421     0D5C  0140               	movlb	0	; select bank0
 11422     0D5D  00A7               	movwf	??_I2C1_DO_ADDRESS_NACK
 11423     0D5E  01A8               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 11424                           
 11425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11426                           ; Switch size 1, requested type "simple"
 11427                           ; Number of cases is 1, Range of values is 0 to 0
 11428                           ; switch strategies available:
 11429                           ; Name         Instructions Cycles
 11430                           ; simple_byte            4     3 (average)
 11431                           ; direct_byte            8     6 (fixed)
 11432                           ; jumptable            260     6 (fixed)
 11433                           ;	Chosen strategy is simple_byte
 11434     0D5F  0828               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 11435     0D60  3A00               	xorlw	0	; case 0
 11436     0D61  1903               	skipnz
 11437     0D62  2D64               	goto	l5879
 11438     0D63  2D4D               	goto	l4861
 11439     0D64                     l5879:
 11440                           
 11441                           ; Switch size 1, requested type "simple"
 11442                           ; Number of cases is 2, Range of values is 2 to 3
 11443                           ; switch strategies available:
 11444                           ; Name         Instructions Cycles
 11445                           ; simple_byte            7     4 (average)
 11446                           ; direct_byte           13     9 (fixed)
 11447                           ; jumptable            263     9 (fixed)
 11448                           ;	Chosen strategy is simple_byte
 11449     0D64  0827               	movf	??_I2C1_DO_ADDRESS_NACK,w
 11450     0D65  3A02               	xorlw	2	; case 2
 11451     0D66  1903               	skipnz
 11452     0D67  2D4A               	goto	l4857
 11453     0D68  3A01               	xorlw	1	; case 3
 11454     0D69  1903               	skipnz
 11455     0D6A  2D4A               	goto	l4857
 11456     0D6B  2D4D               	goto	l4861
 11457     0D6C  0008               	return
 11458     0D6D                     __end_of_I2C1_DO_ADDRESS_NACK:
 11459                           
 11460                           	psect	text23
 11461     099A                     __ptext23:	
 11462 ;; *************** function _I2C1_DO_RESET *****************
 11463 ;; Defined at:
 11464 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;		None
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;		None
 11469 ;; Return value:  Size  Location     Type
 11470 ;;                  1    wreg      enum E10721
 11471 ;; Registers used:
 11472 ;;		wreg, status,2
 11473 ;; Tracked objects:
 11474 ;;		On entry : 3F/0
 11475 ;;		On exit  : 3F/1
 11476 ;;		Unchanged: 0/0
 11477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;Total ram usage:        0 bytes
 11483 ;; Hardware stack levels used: 1
 11484 ;; Hardware stack levels required when called: 4
 11485 ;; This function calls:
 11486 ;;		Nothing
 11487 ;; This function is called by:
 11488 ;;		_I2C1_MasterFsm
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492     099A                     _I2C1_DO_RESET:	
 11493                           ;psect for function _I2C1_DO_RESET
 11494                           
 11495                           
 11496                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 11497                           
 11498                           ;incstack = 0
 11499                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 11500     099A  0141               	movlb	1	; select bank1
 11501     099B  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 11502                           
 11503                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 11504     099C  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 11505                           
 11506                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 11507     099D  300E               	movlw	14
 11508     099E  0008               	return
 11509     099F                     __end_of_I2C1_DO_RESET:
 11510                           
 11511                           	psect	text24
 11512     0976                     __ptext24:	
 11513 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 11514 ;; Defined at:
 11515 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;		None
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      enum E10721
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0, pclath, cstack
 11524 ;; Tracked objects:
 11525 ;;		On entry : 3F/0
 11526 ;;		On exit  : 3F/3
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;Total ram usage:        0 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 5
 11536 ;; This function calls:
 11537 ;;		_I2C1_MasterSendNack
 11538 ;; This function is called by:
 11539 ;;		_I2C1_DO_RX
 11540 ;;		_I2C1_MasterFsm
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544     0976                     _I2C1_DO_RX_NACK_RESTART:	
 11545                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 11546                           
 11547                           
 11548                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 11549                           
 11550                           ;incstack = 0
 11551                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11552     0976  3189  2156         	fcall	_I2C1_MasterSendNack
 11553                           
 11554                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 11555     0978  3009               	movlw	9
 11556     0979  0008               	return
 11557     097A                     __end_of_I2C1_DO_RX_NACK_RESTART:
 11558                           
 11559                           	psect	text25
 11560     0972                     __ptext25:	
 11561 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 11562 ;; Defined at:
 11563 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;		None
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      enum E10721
 11570 ;; Registers used:
 11571 ;;		wreg, status,2, status,0, pclath, cstack
 11572 ;; Tracked objects:
 11573 ;;		On entry : 3F/0
 11574 ;;		On exit  : 3F/3
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;Total ram usage:        0 bytes
 11582 ;; Hardware stack levels used: 1
 11583 ;; Hardware stack levels required when called: 5
 11584 ;; This function calls:
 11585 ;;		_I2C1_MasterSendNack
 11586 ;; This function is called by:
 11587 ;;		_I2C1_DO_RX
 11588 ;;		_I2C1_MasterFsm
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592     0972                     _I2C1_DO_RX_NACK_STOP:	
 11593                           ;psect for function _I2C1_DO_RX_NACK_STOP
 11594                           
 11595                           
 11596                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 11597                           
 11598                           ;incstack = 0
 11599                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11600     0972  3189  2156         	fcall	_I2C1_MasterSendNack
 11601                           
 11602                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 11603     0974  300A               	movlw	10
 11604     0975  0008               	return
 11605     0976                     __end_of_I2C1_DO_RX_NACK_STOP:
 11606                           
 11607                           	psect	text26
 11608     096E                     __ptext26:	
 11609 ;; *************** function _I2C1_DO_RX_ACK *****************
 11610 ;; Defined at:
 11611 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;		None
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;		None
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  1    wreg      enum E10721
 11618 ;; Registers used:
 11619 ;;		wreg, status,2, status,0, pclath, cstack
 11620 ;; Tracked objects:
 11621 ;;		On entry : 3F/0
 11622 ;;		On exit  : 3F/3
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11629 ;;Total ram usage:        0 bytes
 11630 ;; Hardware stack levels used: 1
 11631 ;; Hardware stack levels required when called: 5
 11632 ;; This function calls:
 11633 ;;		_I2C1_MasterSendAck
 11634 ;; This function is called by:
 11635 ;;		_I2C1_MasterFsm
 11636 ;; This function uses a non-reentrant model
 11637 ;;
 11638                           
 11639     096E                     _I2C1_DO_RX_ACK:	
 11640                           ;psect for function _I2C1_DO_RX_ACK
 11641                           
 11642                           
 11643                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 11644                           
 11645                           ;incstack = 0
 11646                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 11647     096E  3189  215A         	fcall	_I2C1_MasterSendAck
 11648                           
 11649                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 11650     0970  3005               	movlw	5
 11651     0971  0008               	return
 11652     0972                     __end_of_I2C1_DO_RX_ACK:
 11653                           
 11654                           	psect	text27
 11655     096A                     __ptext27:	
 11656 ;; *************** function _I2C1_DO_SEND_STOP *****************
 11657 ;; Defined at:
 11658 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;		None
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;		None
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      enum E10721
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0, pclath, cstack
 11667 ;; Tracked objects:
 11668 ;;		On entry : 3F/0
 11669 ;;		On exit  : 3F/3
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;Total ram usage:        0 bytes
 11677 ;; Hardware stack levels used: 1
 11678 ;; Hardware stack levels required when called: 5
 11679 ;; This function calls:
 11680 ;;		_I2C1_MasterStop
 11681 ;; This function is called by:
 11682 ;;		_I2C1_DO_TX
 11683 ;;		_I2C1_DO_TX_EMPTY
 11684 ;;		_I2C1_DO_ADDRESS_NACK
 11685 ;;		_I2C1_MasterFsm
 11686 ;; This function uses a non-reentrant model
 11687 ;;
 11688                           
 11689     096A                     _I2C1_DO_SEND_STOP:	
 11690                           ;psect for function _I2C1_DO_SEND_STOP
 11691                           
 11692                           
 11693                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 11694                           
 11695                           ;incstack = 0
 11696                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 11697     096A  3189  2142         	fcall	_I2C1_MasterStop
 11698                           
 11699                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 11700     096C  3000               	movlw	0
 11701     096D  0008               	return
 11702     096E                     __end_of_I2C1_DO_SEND_STOP:
 11703                           
 11704                           	psect	text28
 11705     0966                     __ptext28:	
 11706 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 11707 ;; Defined at:
 11708 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;		None
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;		None
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      enum E10721
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, status,0, pclath, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 3F/0
 11719 ;;		On exit  : 3F/3
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;Total ram usage:        0 bytes
 11727 ;; Hardware stack levels used: 1
 11728 ;; Hardware stack levels required when called: 5
 11729 ;; This function calls:
 11730 ;;		_I2C1_MasterEnableRestart
 11731 ;; This function is called by:
 11732 ;;		_I2C1_DO_TX_EMPTY
 11733 ;;		_I2C1_DO_ADDRESS_NACK
 11734 ;;		_I2C1_MasterFsm
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738     0966                     _I2C1_DO_SEND_RESTART:	
 11739                           ;psect for function _I2C1_DO_SEND_RESTART
 11740                           
 11741                           
 11742                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 11743                           
 11744                           ;incstack = 0
 11745                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11746     0966  3189  213F         	fcall	_I2C1_MasterEnableRestart
 11747                           
 11748                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 11749     0968  3001               	movlw	1
 11750     0969  0008               	return
 11751     096A                     __end_of_I2C1_DO_SEND_RESTART:
 11752                           
 11753                           	psect	text29
 11754     0962                     __ptext29:	
 11755 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 11756 ;; Defined at:
 11757 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;		None
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      enum E10721
 11764 ;; Registers used:
 11765 ;;		wreg, status,2, status,0, pclath, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 3F/0
 11768 ;;		On exit  : 3F/3
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;Total ram usage:        0 bytes
 11776 ;; Hardware stack levels used: 1
 11777 ;; Hardware stack levels required when called: 5
 11778 ;; This function calls:
 11779 ;;		_I2C1_MasterEnableRestart
 11780 ;; This function is called by:
 11781 ;;		_I2C1_DO_TX
 11782 ;;		_I2C1_MasterFsm
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786     0962                     _I2C1_DO_SEND_RESTART_WRITE:	
 11787                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 11788                           
 11789                           
 11790                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 11791                           
 11792                           ;incstack = 0
 11793                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11794     0962  3189  213F         	fcall	_I2C1_MasterEnableRestart
 11795                           
 11796                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 11797     0964  3002               	movlw	2
 11798     0965  0008               	return
 11799     0966                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 11800                           
 11801                           	psect	text30
 11802     095E                     __ptext30:	
 11803 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 11804 ;; Defined at:
 11805 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;		None
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;		None
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      enum E10721
 11812 ;; Registers used:
 11813 ;;		wreg, status,2, status,0, pclath, cstack
 11814 ;; Tracked objects:
 11815 ;;		On entry : 3F/0
 11816 ;;		On exit  : 3F/3
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;Total ram usage:        0 bytes
 11824 ;; Hardware stack levels used: 1
 11825 ;; Hardware stack levels required when called: 5
 11826 ;; This function calls:
 11827 ;;		_I2C1_MasterEnableRestart
 11828 ;; This function is called by:
 11829 ;;		_I2C1_DO_TX
 11830 ;;		_I2C1_MasterFsm
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834     095E                     _I2C1_DO_SEND_RESTART_READ:	
 11835                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 11836                           
 11837                           
 11838                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 11839                           
 11840                           ;incstack = 0
 11841                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 11842     095E  3189  213F         	fcall	_I2C1_MasterEnableRestart
 11843                           
 11844                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 11845     0960  3001               	movlw	1
 11846     0961  0008               	return
 11847     0962                     __end_of_I2C1_DO_SEND_RESTART_READ:
 11848                           
 11849                           	psect	text31
 11850     09D5                     __ptext31:	
 11851 ;; *************** function _I2C1_DO_RCEN *****************
 11852 ;; Defined at:
 11853 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;		None
 11856 ;; Auto vars:     Size  Location     Type
 11857 ;;		None
 11858 ;; Return value:  Size  Location     Type
 11859 ;;                  1    wreg      enum E10721
 11860 ;; Registers used:
 11861 ;;		wreg, status,2, status,0, pclath, cstack
 11862 ;; Tracked objects:
 11863 ;;		On entry : 3F/0
 11864 ;;		On exit  : 3F/3
 11865 ;;		Unchanged: 0/0
 11866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11871 ;;Total ram usage:        0 bytes
 11872 ;; Hardware stack levels used: 1
 11873 ;; Hardware stack levels required when called: 5
 11874 ;; This function calls:
 11875 ;;		_I2C1_MasterStartRx
 11876 ;; This function is called by:
 11877 ;;		_I2C1_MasterFsm
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881     09D5                     _I2C1_DO_RCEN:	
 11882                           ;psect for function _I2C1_DO_RCEN
 11883                           
 11884                           
 11885                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 11886                           
 11887                           ;incstack = 0
 11888                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11889     09D5  0141               	movlb	1	; select bank1
 11890     09D6  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 11891                           
 11892                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 11893     09D7  3189  2145         	fcall	_I2C1_MasterStartRx
 11894                           
 11895                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 11896     09D9  3004               	movlw	4
 11897     09DA  0008               	return
 11898     09DB                     __end_of_I2C1_DO_RCEN:
 11899                           
 11900                           	psect	text32
 11901     0753                     __ptext32:	
 11902 ;; *************** function _I2C1_DO_RX *****************
 11903 ;; Defined at:
 11904 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 11905 ;; Parameters:    Size  Location     Type
 11906 ;;		None
 11907 ;; Auto vars:     Size  Location     Type
 11908 ;;		None
 11909 ;; Return value:  Size  Location     Type
 11910 ;;                  1    wreg      enum E10721
 11911 ;; Registers used:
 11912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11913 ;; Tracked objects:
 11914 ;;		On entry : 3F/0
 11915 ;;		On exit  : 3F/3
 11916 ;;		Unchanged: 0/0
 11917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;Total ram usage:        2 bytes
 11923 ;; Hardware stack levels used: 1
 11924 ;; Hardware stack levels required when called: 7
 11925 ;; This function calls:
 11926 ;;		NULL
 11927 ;;		_I2C1_CallbackReturnReset
 11928 ;;		_I2C1_CallbackReturnStop
 11929 ;;		_I2C1_DO_RX_NACK_RESTART
 11930 ;;		_I2C1_DO_RX_NACK_STOP
 11931 ;;		_I2C1_MasterGetRxData
 11932 ;;		_I2C1_MasterSendAck
 11933 ;;		_rd1RegCompleteHandler
 11934 ;;		_rd2RegCompleteHandler
 11935 ;;		_rdBlkRegCompleteHandler
 11936 ;;		_wr1RegCompleteHandler
 11937 ;;		_wr2RegCompleteHandler
 11938 ;; This function is called by:
 11939 ;;		_I2C1_MasterFsm
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943     0753                     _I2C1_DO_RX:	
 11944                           ;psect for function _I2C1_DO_RX
 11945                           
 11946                           
 11947                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 11948                           
 11949                           ;incstack = 0
 11950                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11951     0753  0141               	movlb	1	; select bank1
 11952     0754  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 11953     0755  0086               	movwf	6
 11954     0756  0187               	clrf	7
 11955     0757  3189  2148  3187   	fcall	_I2C1_MasterGetRxData
 11956     075A  0081               	movwf	1
 11957     075B  3001               	movlw	1
 11958     075C  0140               	movlb	0	; select bank0
 11959     075D  00A7               	movwf	??_I2C1_DO_RX
 11960     075E  0827               	movf	??_I2C1_DO_RX,w
 11961     075F  0141               	movlb	1	; select bank1
 11962     0760  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 11963                           
 11964                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 11965     0761  3001               	movlw	1
 11966     0762  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 11967     0763  3000               	movlw	0
 11968     0764  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 11969     0765  0838               	movf	(_I2C1_Status^(0+128)+24),w
 11970     0766  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 11971     0767  1903               	btfsc	3,2
 11972     0768  2F6D               	goto	l529
 11973                           
 11974                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 11975     0769  3189  215A         	fcall	_I2C1_MasterSendAck
 11976                           
 11977                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 11978     076B  3005               	movlw	5
 11979     076C  0008               	return
 11980     076D                     l529:	
 11981                           ;mcc_generated_files/i2c1_master.c: 386:     else
 11982                           
 11983                           
 11984                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 11985     076D  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 11986                           
 11987                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 11988     076E  2F75               	goto	l4801
 11989     076F                     l4791:
 11990                           
 11991                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 11992     076F  3189  2176         	fcall	_I2C1_DO_RX_NACK_RESTART
 11993     0771  0008               	return
 11994     0772                     l4795:
 11995                           
 11996                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 11997     0772  3189  2172         	fcall	_I2C1_DO_RX_NACK_STOP
 11998     0774  0008               	return
 11999     0775                     l4801:
 12000     0775  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 12001     0776  0140               	movlb	0	; select bank0
 12002     0777  00A6               	movwf	I2C1_CallbackReturnReset@funPtr
 12003     0778  0141               	movlb	1	; select bank1
 12004     0779  0821               	movf	(_I2C1_Status+1)^(0+128),w
 12005     077A  008A               	movwf	10
 12006     077B  0820               	movf	_I2C1_Status^(0+128),w
 12007     077C  000A               	callw
 12008     077D  3187               	pagesel	$
 12009     077E  0140               	movlb	0	; select bank0
 12010     077F  00A7               	movwf	??_I2C1_DO_RX
 12011     0780  01A8               	clrf	??_I2C1_DO_RX+1
 12012                           
 12013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12014                           ; Switch size 1, requested type "simple"
 12015                           ; Number of cases is 1, Range of values is 0 to 0
 12016                           ; switch strategies available:
 12017                           ; Name         Instructions Cycles
 12018                           ; simple_byte            4     3 (average)
 12019                           ; direct_byte            8     6 (fixed)
 12020                           ; jumptable            260     6 (fixed)
 12021                           ;	Chosen strategy is simple_byte
 12022     0781  0828               	movf	??_I2C1_DO_RX+1,w
 12023     0782  3A00               	xorlw	0	; case 0
 12024     0783  1903               	skipnz
 12025     0784  2F86               	goto	l5881
 12026     0785  2F72               	goto	l4795
 12027     0786                     l5881:
 12028                           
 12029                           ; Switch size 1, requested type "simple"
 12030                           ; Number of cases is 4, Range of values is 1 to 4
 12031                           ; switch strategies available:
 12032                           ; Name         Instructions Cycles
 12033                           ; simple_byte           13     7 (average)
 12034                           ; direct_byte           17     9 (fixed)
 12035                           ; jumptable            263     9 (fixed)
 12036                           ;	Chosen strategy is simple_byte
 12037     0786  0827               	movf	??_I2C1_DO_RX,w
 12038     0787  3A01               	xorlw	1	; case 1
 12039     0788  1903               	skipnz
 12040     0789  2F72               	goto	l4795
 12041     078A  3A03               	xorlw	3	; case 2
 12042     078B  1903               	skipnz
 12043     078C  2F6F               	goto	l4791
 12044     078D  3A01               	xorlw	1	; case 3
 12045     078E  1903               	skipnz
 12046     078F  2F6F               	goto	l4791
 12047     0790  3A07               	xorlw	7	; case 4
 12048     0791  1903               	skipnz
 12049     0792  2F72               	goto	l4795
 12050     0793  2F72               	goto	l4795
 12051     0794  0008               	return
 12052     0795                     __end_of_I2C1_DO_RX:
 12053                           
 12054                           	psect	text33
 12055     0705                     __ptext33:	
 12056 ;; *************** function _I2C1_DO_TX *****************
 12057 ;; Defined at:
 12058 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      enum E10721
 12065 ;; Registers used:
 12066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12067 ;; Tracked objects:
 12068 ;;		On entry : 3F/0
 12069 ;;		On exit  : 3D/1
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;Total ram usage:        2 bytes
 12077 ;; Hardware stack levels used: 1
 12078 ;; Hardware stack levels required when called: 7
 12079 ;; This function calls:
 12080 ;;		NULL
 12081 ;;		_I2C1_CallbackReturnReset
 12082 ;;		_I2C1_CallbackReturnStop
 12083 ;;		_I2C1_DO_SEND_RESTART_READ
 12084 ;;		_I2C1_DO_SEND_RESTART_WRITE
 12085 ;;		_I2C1_DO_SEND_STOP
 12086 ;;		_I2C1_MasterIsNack
 12087 ;;		_I2C1_MasterSendTxData
 12088 ;;		_rd1RegCompleteHandler
 12089 ;;		_rd2RegCompleteHandler
 12090 ;;		_rdBlkRegCompleteHandler
 12091 ;;		_wr1RegCompleteHandler
 12092 ;;		_wr2RegCompleteHandler
 12093 ;; This function is called by:
 12094 ;;		_I2C1_MasterFsm
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098     0705                     _I2C1_DO_TX:	
 12099                           ;psect for function _I2C1_DO_TX
 12100                           
 12101                           
 12102                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 12103                           
 12104                           ;incstack = 0
 12105                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12106     0705  3189  21CF  3187   	fcall	_I2C1_MasterIsNack
 12107     0708  3A00               	xorlw	0
 12108     0709  1D03               	btfss	3,2
 12109     070A  2F15               	goto	l4761
 12110     070B  2F38               	goto	l513
 12111     070C                     l4747:
 12112                           
 12113                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 12114     070C  3189  215E         	fcall	_I2C1_DO_SEND_RESTART_READ
 12115     070E  0008               	return
 12116     070F                     l4751:
 12117                           
 12118                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 12119     070F  3189  2162         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 12120     0711  0008               	return
 12121     0712                     l4755:
 12122                           
 12123                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 12124     0712  3189  216A         	fcall	_I2C1_DO_SEND_STOP
 12125     0714  0008               	return
 12126     0715                     l4761:
 12127     0715  0141               	movlb	1	; select bank1
 12128     0716  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 12129     0717  0140               	movlb	0	; select bank0
 12130     0718  00A6               	movwf	I2C1_CallbackReturnReset@funPtr
 12131     0719  3006               	movlw	6
 12132     071A  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 12133     071B  0086               	movwf	6
 12134     071C  0187               	clrf	7
 12135     071D  3F41               	moviw [1]fsr1
 12136     071E  008A               	movwf	10
 12137     071F  3F40               	moviw [0]fsr1
 12138     0720  000A               	callw
 12139     0721  3187               	pagesel	$
 12140     0722  0140               	movlb	0	; select bank0
 12141     0723  00A7               	movwf	??_I2C1_DO_TX
 12142     0724  01A8               	clrf	??_I2C1_DO_TX+1
 12143                           
 12144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12145                           ; Switch size 1, requested type "simple"
 12146                           ; Number of cases is 1, Range of values is 0 to 0
 12147                           ; switch strategies available:
 12148                           ; Name         Instructions Cycles
 12149                           ; simple_byte            4     3 (average)
 12150                           ; direct_byte            8     6 (fixed)
 12151                           ; jumptable            260     6 (fixed)
 12152                           ;	Chosen strategy is simple_byte
 12153     0725  0828               	movf	??_I2C1_DO_TX+1,w
 12154     0726  3A00               	xorlw	0	; case 0
 12155     0727  1903               	skipnz
 12156     0728  2F2A               	goto	l5883
 12157     0729  2F12               	goto	l4755
 12158     072A                     l5883:
 12159                           
 12160                           ; Switch size 1, requested type "simple"
 12161                           ; Number of cases is 4, Range of values is 1 to 4
 12162                           ; switch strategies available:
 12163                           ; Name         Instructions Cycles
 12164                           ; simple_byte           13     7 (average)
 12165                           ; direct_byte           17     9 (fixed)
 12166                           ; jumptable            263     9 (fixed)
 12167                           ;	Chosen strategy is simple_byte
 12168     072A  0827               	movf	??_I2C1_DO_TX,w
 12169     072B  3A01               	xorlw	1	; case 1
 12170     072C  1903               	skipnz
 12171     072D  2F12               	goto	l4755
 12172     072E  3A03               	xorlw	3	; case 2
 12173     072F  1903               	skipnz
 12174     0730  2F0C               	goto	l4747
 12175     0731  3A01               	xorlw	1	; case 3
 12176     0732  1903               	skipnz
 12177     0733  2F0F               	goto	l4751
 12178     0734  3A07               	xorlw	7	; case 4
 12179     0735  1903               	skipnz
 12180     0736  2F12               	goto	l4755
 12181     0737  2F12               	goto	l4755
 12182     0738                     l513:	
 12183                           ;mcc_generated_files/i2c1_master.c: 370:     else
 12184                           
 12185                           
 12186                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 12187     0738  0141               	movlb	1	; select bank1
 12188     0739  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 12189                           
 12190                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 12191     073A  3017               	movlw	23
 12192     073B  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 12193     073C  0086               	movwf	6
 12194     073D  0187               	clrf	7
 12195     073E  3F40               	moviw [0]fsr1
 12196     073F  0084               	movwf	4
 12197     0740  0185               	clrf	5
 12198     0741  0A81               	incf	1,f
 12199     0742  0800               	movf	0,w
 12200     0743  3189  2190  3187   	fcall	_I2C1_MasterSendTxData
 12201                           
 12202                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 12203     0746  3001               	movlw	1
 12204     0747  0141               	movlb	1	; select bank1
 12205     0748  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 12206     0749  3000               	movlw	0
 12207     074A  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 12208     074B  0838               	movf	(_I2C1_Status^(0+128)+24),w
 12209     074C  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 12210     074D  1D03               	btfss	3,2
 12211     074E  2F51               	goto	l4769
 12212     074F  3006               	movlw	6
 12213     0750  0008               	return
 12214     0751                     l4769:
 12215     0751  3003               	movlw	3
 12216     0752  0008               	return
 12217     0753                     __end_of_I2C1_DO_TX:
 12218                           
 12219                           	psect	text34
 12220     09E7                     __ptext34:	
 12221 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 12222 ;; Defined at:
 12223 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;		None
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;		None
 12228 ;; Return value:  Size  Location     Type
 12229 ;;                  1    wreg      enum E10721
 12230 ;; Registers used:
 12231 ;;		wreg, status,2, status,0, pclath, cstack
 12232 ;; Tracked objects:
 12233 ;;		On entry : 3F/0
 12234 ;;		On exit  : 3F/3
 12235 ;;		Unchanged: 0/0
 12236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;Total ram usage:        0 bytes
 12242 ;; Hardware stack levels used: 1
 12243 ;; Hardware stack levels required when called: 5
 12244 ;; This function calls:
 12245 ;;		_I2C1_MasterSendTxData
 12246 ;; This function is called by:
 12247 ;;		_I2C1_MasterFsm
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251     09E7                     _I2C1_DO_SEND_ADR_WRITE:	
 12252                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 12253                           
 12254                           
 12255                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 12256                           
 12257                           ;incstack = 0
 12258                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 12259     09E7  0141               	movlb	1	; select bank1
 12260     09E8  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 12261                           
 12262                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 12263     09E9  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 12264     09EA  3189  2190         	fcall	_I2C1_MasterSendTxData
 12265                           
 12266                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 12267     09EC  3003               	movlw	3
 12268     09ED  0008               	return
 12269     09EE                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 12270                           
 12271                           	psect	text35
 12272     09EE                     __ptext35:	
 12273 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 12274 ;; Defined at:
 12275 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;		None
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  1    wreg      enum E10721
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0, pclath, cstack
 12284 ;; Tracked objects:
 12285 ;;		On entry : 3F/0
 12286 ;;		On exit  : 3F/3
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;Total ram usage:        0 bytes
 12294 ;; Hardware stack levels used: 1
 12295 ;; Hardware stack levels required when called: 5
 12296 ;; This function calls:
 12297 ;;		_I2C1_MasterSendTxData
 12298 ;; This function is called by:
 12299 ;;		_I2C1_MasterFsm
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303     09EE                     _I2C1_DO_SEND_ADR_READ:	
 12304                           ;psect for function _I2C1_DO_SEND_ADR_READ
 12305                           
 12306                           
 12307                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 12308                           
 12309                           ;incstack = 0
 12310                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 12311     09EE  0141               	movlb	1	; select bank1
 12312     09EF  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 12313                           
 12314                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 12315     09F0  1403               	setc
 12316     09F1  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 12317     09F2  3189  2190         	fcall	_I2C1_MasterSendTxData
 12318                           
 12319                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 12320     09F4  3005               	movlw	5
 12321     09F5  0008               	return
 12322     09F6                     __end_of_I2C1_DO_SEND_ADR_READ:
 12323                           
 12324                           	psect	text36
 12325     0995                     __ptext36:	
 12326 ;; *************** function _I2C1_DO_IDLE *****************
 12327 ;; Defined at:
 12328 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;		None
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;		None
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  1    wreg      enum E10721
 12335 ;; Registers used:
 12336 ;;		wreg, status,2
 12337 ;; Tracked objects:
 12338 ;;		On entry : 3F/0
 12339 ;;		On exit  : 3F/1
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12346 ;;Total ram usage:        0 bytes
 12347 ;; Hardware stack levels used: 1
 12348 ;; Hardware stack levels required when called: 4
 12349 ;; This function calls:
 12350 ;;		Nothing
 12351 ;; This function is called by:
 12352 ;;		_I2C1_MasterFsm
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356     0995                     _I2C1_DO_IDLE:	
 12357                           ;psect for function _I2C1_DO_IDLE
 12358                           
 12359                           
 12360                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 12361                           
 12362                           ;incstack = 0
 12363                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 12364     0995  0141               	movlb	1	; select bank1
 12365     0996  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 12366                           
 12367                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 12368     0997  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 12369                           
 12370                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 12371     0998  300E               	movlw	14
 12372     0999  0008               	return
 12373     099A                     __end_of_I2C1_DO_IDLE:
 12374                           
 12375                           	psect	text37
 12376     0DC2                     __ptext37:	
 12377 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 12378 ;; Defined at:
 12379 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;		None
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;		None
 12384 ;; Return value:  Size  Location     Type
 12385 ;;                  1    wreg      enum E10721
 12386 ;; Registers used:
 12387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12388 ;; Tracked objects:
 12389 ;;		On entry : 3F/0
 12390 ;;		On exit  : 32/2
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12396 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12397 ;;Total ram usage:        2 bytes
 12398 ;; Hardware stack levels used: 1
 12399 ;; Hardware stack levels required when called: 7
 12400 ;; This function calls:
 12401 ;;		NULL
 12402 ;;		_I2C1_CallbackReturnReset
 12403 ;;		_I2C1_CallbackReturnStop
 12404 ;;		_I2C1_DO_SEND_RESTART
 12405 ;;		_I2C1_DO_SEND_STOP
 12406 ;;		_I2C1_MasterSetIrq
 12407 ;;		_rd1RegCompleteHandler
 12408 ;;		_rd2RegCompleteHandler
 12409 ;;		_rdBlkRegCompleteHandler
 12410 ;;		_wr1RegCompleteHandler
 12411 ;;		_wr2RegCompleteHandler
 12412 ;; This function is called by:
 12413 ;;		_I2C1_MasterFsm
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417     0DC2                     _I2C1_DO_TX_EMPTY:	
 12418                           ;psect for function _I2C1_DO_TX_EMPTY
 12419                           
 12420                           
 12421                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 12422                           
 12423                           ;incstack = 0
 12424                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12425     0DC2  0141               	movlb	1	; select bank1
 12426     0DC3  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 12427                           
 12428                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 12429     0DC4  2DCF               	goto	l4833
 12430     0DC5                     l4817:
 12431                           
 12432                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 12433     0DC5  3189  2166         	fcall	_I2C1_DO_SEND_RESTART
 12434     0DC7  0008               	return
 12435     0DC8                     l4821:
 12436                           
 12437                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 12438     0DC8  3189  214B         	fcall	_I2C1_MasterSetIrq
 12439                           
 12440                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 12441     0DCA  3003               	movlw	3
 12442     0DCB  0008               	return
 12443     0DCC                     l4827:
 12444                           
 12445                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 12446     0DCC  3189  216A         	fcall	_I2C1_DO_SEND_STOP
 12447     0DCE  0008               	return
 12448     0DCF                     l4833:
 12449     0DCF  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 12450     0DD0  0140               	movlb	0	; select bank0
 12451     0DD1  00A6               	movwf	I2C1_CallbackReturnReset@funPtr
 12452     0DD2  0141               	movlb	1	; select bank1
 12453     0DD3  0821               	movf	(_I2C1_Status+1)^(0+128),w
 12454     0DD4  008A               	movwf	10
 12455     0DD5  0820               	movf	_I2C1_Status^(0+128),w
 12456     0DD6  000A               	callw
 12457     0DD7  318D               	pagesel	$
 12458     0DD8  0140               	movlb	0	; select bank0
 12459     0DD9  00A7               	movwf	??_I2C1_DO_TX_EMPTY
 12460     0DDA  01A8               	clrf	??_I2C1_DO_TX_EMPTY+1
 12461                           
 12462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12463                           ; Switch size 1, requested type "simple"
 12464                           ; Number of cases is 1, Range of values is 0 to 0
 12465                           ; switch strategies available:
 12466                           ; Name         Instructions Cycles
 12467                           ; simple_byte            4     3 (average)
 12468                           ; direct_byte            8     6 (fixed)
 12469                           ; jumptable            260     6 (fixed)
 12470                           ;	Chosen strategy is simple_byte
 12471     0DDB  0828               	movf	??_I2C1_DO_TX_EMPTY+1,w
 12472     0DDC  3A00               	xorlw	0	; case 0
 12473     0DDD  1903               	skipnz
 12474     0DDE  2DE0               	goto	l5885
 12475     0DDF  2DCC               	goto	l4827
 12476     0DE0                     l5885:
 12477                           
 12478                           ; Switch size 1, requested type "simple"
 12479                           ; Number of cases is 4, Range of values is 1 to 4
 12480                           ; switch strategies available:
 12481                           ; Name         Instructions Cycles
 12482                           ; simple_byte           13     7 (average)
 12483                           ; direct_byte           17     9 (fixed)
 12484                           ; jumptable            263     9 (fixed)
 12485                           ;	Chosen strategy is simple_byte
 12486     0DE0  0827               	movf	??_I2C1_DO_TX_EMPTY,w
 12487     0DE1  3A01               	xorlw	1	; case 1
 12488     0DE2  1903               	skipnz
 12489     0DE3  2DCC               	goto	l4827
 12490     0DE4  3A03               	xorlw	3	; case 2
 12491     0DE5  1903               	skipnz
 12492     0DE6  2DC5               	goto	l4817
 12493     0DE7  3A01               	xorlw	1	; case 3
 12494     0DE8  1903               	skipnz
 12495     0DE9  2DC5               	goto	l4817
 12496     0DEA  3A07               	xorlw	7	; case 4
 12497     0DEB  1903               	skipnz
 12498     0DEC  2DC8               	goto	l4821
 12499     0DED  2DCC               	goto	l4827
 12500     0DEE  0008               	return
 12501     0DEF                     __end_of_I2C1_DO_TX_EMPTY:
 12502                           
 12503                           	psect	text38
 12504     094B                     __ptext38:	
 12505 ;; *************** function _I2C1_MasterSetIrq *****************
 12506 ;; Defined at:
 12507 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;		None
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;		None
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      void 
 12514 ;; Registers used:
 12515 ;;		None
 12516 ;; Tracked objects:
 12517 ;;		On entry : 3F/0
 12518 ;;		On exit  : 3F/E
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12525 ;;Total ram usage:        0 bytes
 12526 ;; Hardware stack levels used: 1
 12527 ;; Hardware stack levels required when called: 4
 12528 ;; This function calls:
 12529 ;;		Nothing
 12530 ;; This function is called by:
 12531 ;;		_I2C1_DO_TX_EMPTY
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535     094B                     _I2C1_MasterSetIrq:	
 12536                           ;psect for function _I2C1_MasterSetIrq
 12537                           
 12538                           
 12539                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 12540                           
 12541                           ;incstack = 0
 12542                           ; Regs used in _I2C1_MasterSetIrq: []
 12543     094B  014E               	movlb	14	; select bank14
 12544     094C  140F               	bsf	15,0	;volatile
 12545     094D  0008               	return
 12546     094E                     __end_of_I2C1_MasterSetIrq:
 12547                           
 12548                           	psect	text39
 12549     09CF                     __ptext39:	
 12550 ;; *************** function _I2C1_MasterIsNack *****************
 12551 ;; Defined at:
 12552 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;		None
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;		None
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      _Bool 
 12559 ;; Registers used:
 12560 ;;		wreg, status,2, status,0
 12561 ;; Tracked objects:
 12562 ;;		On entry : 3E/1
 12563 ;;		On exit  : 3F/3
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;Total ram usage:        0 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; Hardware stack levels required when called: 4
 12573 ;; This function calls:
 12574 ;;		Nothing
 12575 ;; This function is called by:
 12576 ;;		_I2C1_MasterFsm
 12577 ;;		_I2C1_DO_TX
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581     09CF                     _I2C1_MasterIsNack:	
 12582                           ;psect for function _I2C1_MasterIsNack
 12583                           
 12584                           
 12585                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 12586                           
 12587                           ;incstack = 0
 12588                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 12589     09CF  0143               	movlb	3	; select bank3
 12590     09D0  0E11               	swapf	17,w	;volatile
 12591     09D1  0C89               	rrf	9,f
 12592     09D2  0C89               	rrf	9,f
 12593     09D3  3901               	andlw	1
 12594     09D4  0008               	return
 12595     09D5                     __end_of_I2C1_MasterIsNack:
 12596                           
 12597                           	psect	text40
 12598     0990                     __ptext40:	
 12599 ;; *************** function _I2C1_MasterSendTxData *****************
 12600 ;; Defined at:
 12601 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;  data            1    wreg     unsigned char 
 12604 ;; Auto vars:     Size  Location     Type
 12605 ;;  data            1    4[COMMON] unsigned char 
 12606 ;; Return value:  Size  Location     Type
 12607 ;;                  1    wreg      void 
 12608 ;; Registers used:
 12609 ;;		wreg
 12610 ;; Tracked objects:
 12611 ;;		On entry : 3F/1
 12612 ;;		On exit  : 3F/3
 12613 ;;		Unchanged: 0/0
 12614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12619 ;;Total ram usage:        1 bytes
 12620 ;; Hardware stack levels used: 1
 12621 ;; Hardware stack levels required when called: 4
 12622 ;; This function calls:
 12623 ;;		Nothing
 12624 ;; This function is called by:
 12625 ;;		_I2C1_DO_SEND_ADR_READ
 12626 ;;		_I2C1_DO_SEND_ADR_WRITE
 12627 ;;		_I2C1_DO_TX
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631     0990                     _I2C1_MasterSendTxData:	
 12632                           ;psect for function _I2C1_MasterSendTxData
 12633                           
 12634                           
 12635                           ;incstack = 0
 12636                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 12637                           ;I2C1_MasterSendTxData@data stored from wreg
 12638     0990  00F4               	movwf	I2C1_MasterSendTxData@data
 12639                           
 12640                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 12641     0991  0874               	movf	I2C1_MasterSendTxData@data,w
 12642     0992  0143               	movlb	3	; select bank3
 12643     0993  008C               	movwf	12	;volatile
 12644     0994  0008               	return
 12645     0995                     __end_of_I2C1_MasterSendTxData:
 12646                           
 12647                           	psect	text41
 12648     095A                     __ptext41:	
 12649 ;; *************** function _I2C1_MasterSendAck *****************
 12650 ;; Defined at:
 12651 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 12652 ;; Parameters:    Size  Location     Type
 12653 ;;		None
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;		None
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  1    wreg      void 
 12658 ;; Registers used:
 12659 ;;		None
 12660 ;; Tracked objects:
 12661 ;;		On entry : 3E/0
 12662 ;;		On exit  : 3F/3
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12669 ;;Total ram usage:        0 bytes
 12670 ;; Hardware stack levels used: 1
 12671 ;; Hardware stack levels required when called: 4
 12672 ;; This function calls:
 12673 ;;		Nothing
 12674 ;; This function is called by:
 12675 ;;		_I2C1_DO_RX
 12676 ;;		_I2C1_DO_RX_ACK
 12677 ;; This function uses a non-reentrant model
 12678 ;;
 12679                           
 12680     095A                     _I2C1_MasterSendAck:	
 12681                           ;psect for function _I2C1_MasterSendAck
 12682                           
 12683                           
 12684                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 12685                           
 12686                           ;incstack = 0
 12687                           ; Regs used in _I2C1_MasterSendAck: []
 12688     095A  0143               	movlb	3	; select bank3
 12689     095B  1291               	bcf	17,5	;volatile
 12690                           
 12691                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 12692     095C  1611               	bsf	17,4	;volatile
 12693     095D  0008               	return
 12694     095E                     __end_of_I2C1_MasterSendAck:
 12695                           
 12696                           	psect	text42
 12697     0948                     __ptext42:	
 12698 ;; *************** function _I2C1_MasterGetRxData *****************
 12699 ;; Defined at:
 12700 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;		None
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;		None
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  1    wreg      unsigned char 
 12707 ;; Registers used:
 12708 ;;		wreg
 12709 ;; Tracked objects:
 12710 ;;		On entry : 3F/1
 12711 ;;		On exit  : 3F/3
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;Total ram usage:        0 bytes
 12719 ;; Hardware stack levels used: 1
 12720 ;; Hardware stack levels required when called: 4
 12721 ;; This function calls:
 12722 ;;		Nothing
 12723 ;; This function is called by:
 12724 ;;		_I2C1_DO_RX
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728     0948                     _I2C1_MasterGetRxData:	
 12729                           ;psect for function _I2C1_MasterGetRxData
 12730                           
 12731                           
 12732                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 12733                           
 12734                           ;incstack = 0
 12735                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 12736     0948  0143               	movlb	3	; select bank3
 12737     0949  080C               	movf	12,w	;volatile
 12738     094A  0008               	return
 12739     094B                     __end_of_I2C1_MasterGetRxData:
 12740                           
 12741                           	psect	text43
 12742     0956                     __ptext43:	
 12743 ;; *************** function _I2C1_MasterSendNack *****************
 12744 ;; Defined at:
 12745 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;		None
 12748 ;; Auto vars:     Size  Location     Type
 12749 ;;		None
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  1    wreg      void 
 12752 ;; Registers used:
 12753 ;;		None
 12754 ;; Tracked objects:
 12755 ;;		On entry : 3F/0
 12756 ;;		On exit  : 3F/3
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;Total ram usage:        0 bytes
 12764 ;; Hardware stack levels used: 1
 12765 ;; Hardware stack levels required when called: 4
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_I2C1_DO_RX_NACK_STOP
 12770 ;;		_I2C1_DO_RX_NACK_RESTART
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774     0956                     _I2C1_MasterSendNack:	
 12775                           ;psect for function _I2C1_MasterSendNack
 12776                           
 12777                           
 12778                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 12779                           
 12780                           ;incstack = 0
 12781                           ; Regs used in _I2C1_MasterSendNack: []
 12782     0956  0143               	movlb	3	; select bank3
 12783     0957  1691               	bsf	17,5	;volatile
 12784                           
 12785                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 12786     0958  1611               	bsf	17,4	;volatile
 12787     0959  0008               	return
 12788     095A                     __end_of_I2C1_MasterSendNack:
 12789                           
 12790                           	psect	text44
 12791     0945                     __ptext44:	
 12792 ;; *************** function _I2C1_MasterStartRx *****************
 12793 ;; Defined at:
 12794 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;		None
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;		None
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  1    wreg      void 
 12801 ;; Registers used:
 12802 ;;		None
 12803 ;; Tracked objects:
 12804 ;;		On entry : 3F/1
 12805 ;;		On exit  : 3F/3
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12812 ;;Total ram usage:        0 bytes
 12813 ;; Hardware stack levels used: 1
 12814 ;; Hardware stack levels required when called: 4
 12815 ;; This function calls:
 12816 ;;		Nothing
 12817 ;; This function is called by:
 12818 ;;		_I2C1_DO_RCEN
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822     0945                     _I2C1_MasterStartRx:	
 12823                           ;psect for function _I2C1_MasterStartRx
 12824                           
 12825                           
 12826                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 12827                           
 12828                           ;incstack = 0
 12829                           ; Regs used in _I2C1_MasterStartRx: []
 12830     0945  0143               	movlb	3	; select bank3
 12831     0946  1591               	bsf	17,3	;volatile
 12832     0947  0008               	return
 12833     0948                     __end_of_I2C1_MasterStartRx:
 12834                           
 12835                           	psect	text45
 12836     0925                     __ptext45:	
 12837 ;; *************** function _I2C1_CallbackReturnReset *****************
 12838 ;; Defined at:
 12839 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;  funPtr          1    6[BANK0 ] PTR void 
 12842 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12843 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      enum E363
 12848 ;; Registers used:
 12849 ;;		wreg
 12850 ;; Tracked objects:
 12851 ;;		On entry : 3E/1
 12852 ;;		On exit  : 3E/0
 12853 ;;		Unchanged: 3E/0
 12854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12855 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;Total ram usage:        1 bytes
 12860 ;; Hardware stack levels used: 1
 12861 ;; Hardware stack levels required when called: 4
 12862 ;; This function calls:
 12863 ;;		Nothing
 12864 ;; This function is called by:
 12865 ;;		_I2C1_Open
 12866 ;;		_I2C1_DO_TX
 12867 ;;		_I2C1_DO_RX
 12868 ;;		_I2C1_DO_TX_EMPTY
 12869 ;;		_I2C1_DO_ADDRESS_NACK
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873     0925                     _I2C1_CallbackReturnReset:	
 12874                           ;psect for function _I2C1_CallbackReturnReset
 12875                           
 12876                           
 12877                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 12878                           
 12879                           ;incstack = 0
 12880                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 12881     0925  3005               	movlw	5
 12882     0926  0008               	return
 12883     0927                     __end_of_I2C1_CallbackReturnReset:
 12884                           
 12885                           	psect	text46
 12886     0923                     __ptext46:	
 12887 ;; *************** function _I2C1_CallbackReturnStop *****************
 12888 ;; Defined at:
 12889 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  funPtr          1    6[BANK0 ] PTR void 
 12892 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12893 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12894 ;; Auto vars:     Size  Location     Type
 12895 ;;		None
 12896 ;; Return value:  Size  Location     Type
 12897 ;;                  1    wreg      enum E363
 12898 ;; Registers used:
 12899 ;;		wreg
 12900 ;; Tracked objects:
 12901 ;;		On entry : 3E/1
 12902 ;;		On exit  : 3E/0
 12903 ;;		Unchanged: 3E/0
 12904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12905 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12909 ;;Total ram usage:        1 bytes
 12910 ;; Hardware stack levels used: 1
 12911 ;; Hardware stack levels required when called: 4
 12912 ;; This function calls:
 12913 ;;		Nothing
 12914 ;; This function is called by:
 12915 ;;		_I2C1_Open
 12916 ;;		_I2C1_SetCallback
 12917 ;;		_I2C1_DO_TX
 12918 ;;		_I2C1_DO_RX
 12919 ;;		_I2C1_DO_TX_EMPTY
 12920 ;;		_I2C1_DO_ADDRESS_NACK
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924     0923                     _I2C1_CallbackReturnStop:	
 12925                           ;psect for function _I2C1_CallbackReturnStop
 12926                           
 12927                           
 12928                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 12929                           
 12930                           ;incstack = 0
 12931                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 12932     0923  3001               	movlw	1
 12933     0924  0008               	return
 12934     0925                     __end_of_I2C1_CallbackReturnStop:
 12935                           
 12936                           	psect	text47
 12937     0B9B                     __ptext47:	
 12938 ;; *************** function _rdBlkRegCompleteHandler *****************
 12939 ;; Defined at:
 12940 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;  ptr             1    6[BANK0 ] PTR void 
 12943 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12944 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;		None
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  1    wreg      enum E363
 12949 ;; Registers used:
 12950 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12951 ;; Tracked objects:
 12952 ;;		On entry : 3E/1
 12953 ;;		On exit  : 3F/0
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12956 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;Total ram usage:        1 bytes
 12961 ;; Hardware stack levels used: 1
 12962 ;; Hardware stack levels required when called: 6
 12963 ;; This function calls:
 12964 ;;		_I2C1_SetBuffer
 12965 ;;		_I2C1_SetDataCompleteCallback
 12966 ;; This function is called by:
 12967 ;;		_I2C1_DO_TX
 12968 ;;		_I2C1_DO_RX
 12969 ;;		_I2C1_DO_TX_EMPTY
 12970 ;;		_I2C1_DO_ADDRESS_NACK
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974     0B9B                     _rdBlkRegCompleteHandler:	
 12975                           ;psect for function _rdBlkRegCompleteHandler
 12976                           
 12977                           
 12978                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 12979                           
 12980                           ;incstack = 0
 12981                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12982     0B9B  0140               	movlb	0	; select bank0
 12983     0B9C  0826               	movf	rdBlkRegCompleteHandler@ptr,w
 12984     0B9D  0086               	movwf	6
 12985     0B9E  0187               	clrf	7
 12986     0B9F  3F40               	moviw [0]fsr1
 12987     0BA0  00F4               	movwf	I2C1_SetBuffer@bufferSize
 12988     0BA1  3F41               	moviw [1]fsr1
 12989     0BA2  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 12990     0BA3  0826               	movf	rdBlkRegCompleteHandler@ptr,w
 12991     0BA4  3E02               	addlw	2
 12992     0BA5  0086               	movwf	6
 12993     0BA6  0187               	clrf	7
 12994     0BA7  0801               	movf	1,w
 12995     0BA8  318A  226F  318B   	fcall	_I2C1_SetBuffer
 12996                           
 12997                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12998     0BAB  3000               	movlw	0
 12999     0BAC  0140               	movlb	0	; select bank0
 13000     0BAD  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13001     0BAE  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13002     0BAF  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13003     0BB0  318A  2214         	fcall	_I2C1_SetDataCompleteCallback
 13004                           
 13005                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 13006     0BB2  3002               	movlw	2
 13007     0BB3  0008               	return
 13008     0BB4                     __end_of_rdBlkRegCompleteHandler:
 13009                           
 13010                           	psect	text48
 13011     0B04                     __ptext48:	
 13012 ;; *************** function _wr1RegCompleteHandler *****************
 13013 ;; Defined at:
 13014 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  ptr             1    6[BANK0 ] PTR void 
 13017 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13018 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;		None
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      enum E363
 13023 ;; Registers used:
 13024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 3E/1
 13027 ;;		On exit  : 3F/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13030 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;Total ram usage:        1 bytes
 13035 ;; Hardware stack levels used: 1
 13036 ;; Hardware stack levels required when called: 6
 13037 ;; This function calls:
 13038 ;;		_I2C1_SetBuffer
 13039 ;;		_I2C1_SetDataCompleteCallback
 13040 ;; This function is called by:
 13041 ;;		_I2C1_DO_TX
 13042 ;;		_I2C1_DO_RX
 13043 ;;		_I2C1_DO_TX_EMPTY
 13044 ;;		_I2C1_DO_ADDRESS_NACK
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048     0B04                     _wr1RegCompleteHandler:	
 13049                           ;psect for function _wr1RegCompleteHandler
 13050                           
 13051                           
 13052                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 13053                           
 13054                           ;incstack = 0
 13055                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13056     0B04  3001               	movlw	1
 13057     0B05  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13058     0B06  3000               	movlw	0
 13059     0B07  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13060     0B08  0140               	movlb	0	; select bank0
 13061     0B09  0826               	movf	wr1RegCompleteHandler@ptr,w
 13062     0B0A  318A  226F  318B   	fcall	_I2C1_SetBuffer
 13063                           
 13064                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13065     0B0D  3000               	movlw	0
 13066     0B0E  0140               	movlb	0	; select bank0
 13067     0B0F  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13068     0B10  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13069     0B11  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13070     0B12  318A  2214         	fcall	_I2C1_SetDataCompleteCallback
 13071                           
 13072                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 13073     0B14  3004               	movlw	4
 13074     0B15  0008               	return
 13075     0B16                     __end_of_wr1RegCompleteHandler:
 13076                           
 13077                           	psect	text49
 13078     0AF2                     __ptext49:	
 13079 ;; *************** function _rd2RegCompleteHandler *****************
 13080 ;; Defined at:
 13081 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13082 ;; Parameters:    Size  Location     Type
 13083 ;;  ptr             1    6[BANK0 ] PTR void 
 13084 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13085 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13086 ;; Auto vars:     Size  Location     Type
 13087 ;;		None
 13088 ;; Return value:  Size  Location     Type
 13089 ;;                  1    wreg      enum E363
 13090 ;; Registers used:
 13091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13092 ;; Tracked objects:
 13093 ;;		On entry : 3E/1
 13094 ;;		On exit  : 3F/0
 13095 ;;		Unchanged: 0/0
 13096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13097 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13100 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13101 ;;Total ram usage:        1 bytes
 13102 ;; Hardware stack levels used: 1
 13103 ;; Hardware stack levels required when called: 6
 13104 ;; This function calls:
 13105 ;;		_I2C1_SetBuffer
 13106 ;;		_I2C1_SetDataCompleteCallback
 13107 ;; This function is called by:
 13108 ;;		_I2C1_DO_TX
 13109 ;;		_I2C1_DO_RX
 13110 ;;		_I2C1_DO_TX_EMPTY
 13111 ;;		_I2C1_DO_ADDRESS_NACK
 13112 ;; This function uses a non-reentrant model
 13113 ;;
 13114                           
 13115     0AF2                     _rd2RegCompleteHandler:	
 13116                           ;psect for function _rd2RegCompleteHandler
 13117                           
 13118                           
 13119                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 13120                           
 13121                           ;incstack = 0
 13122                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13123     0AF2  3002               	movlw	2
 13124     0AF3  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13125     0AF4  3000               	movlw	0
 13126     0AF5  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13127     0AF6  0140               	movlb	0	; select bank0
 13128     0AF7  0826               	movf	rd2RegCompleteHandler@ptr,w
 13129     0AF8  318A  226F  318A   	fcall	_I2C1_SetBuffer
 13130                           
 13131                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13132     0AFB  3000               	movlw	0
 13133     0AFC  0140               	movlb	0	; select bank0
 13134     0AFD  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13135     0AFE  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13136     0AFF  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13137     0B00  318A  2214         	fcall	_I2C1_SetDataCompleteCallback
 13138                           
 13139                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 13140     0B02  3002               	movlw	2
 13141     0B03  0008               	return
 13142     0B04                     __end_of_rd2RegCompleteHandler:
 13143                           
 13144                           	psect	text50
 13145     0AE0                     __ptext50:	
 13146 ;; *************** function _rd1RegCompleteHandler *****************
 13147 ;; Defined at:
 13148 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;  ptr             1    6[BANK0 ] PTR void 
 13151 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13152 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;		None
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      enum E363
 13157 ;; Registers used:
 13158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 3E/1
 13161 ;;		On exit  : 3F/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13164 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;Total ram usage:        1 bytes
 13169 ;; Hardware stack levels used: 1
 13170 ;; Hardware stack levels required when called: 6
 13171 ;; This function calls:
 13172 ;;		_I2C1_SetBuffer
 13173 ;;		_I2C1_SetDataCompleteCallback
 13174 ;; This function is called by:
 13175 ;;		_I2C1_DO_TX
 13176 ;;		_I2C1_DO_RX
 13177 ;;		_I2C1_DO_TX_EMPTY
 13178 ;;		_I2C1_DO_ADDRESS_NACK
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           
 13182     0AE0                     _rd1RegCompleteHandler:	
 13183                           ;psect for function _rd1RegCompleteHandler
 13184                           
 13185                           
 13186                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 13187                           
 13188                           ;incstack = 0
 13189                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13190     0AE0  3001               	movlw	1
 13191     0AE1  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13192     0AE2  3000               	movlw	0
 13193     0AE3  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13194     0AE4  0140               	movlb	0	; select bank0
 13195     0AE5  0826               	movf	rd1RegCompleteHandler@ptr,w
 13196     0AE6  318A  226F  318A   	fcall	_I2C1_SetBuffer
 13197                           
 13198                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13199     0AE9  3000               	movlw	0
 13200     0AEA  0140               	movlb	0	; select bank0
 13201     0AEB  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13202     0AEC  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13203     0AED  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13204     0AEE  318A  2214         	fcall	_I2C1_SetDataCompleteCallback
 13205                           
 13206                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 13207     0AF0  3002               	movlw	2
 13208     0AF1  0008               	return
 13209     0AF2                     __end_of_rd1RegCompleteHandler:
 13210                           
 13211                           	psect	text51
 13212     0ACE                     __ptext51:	
 13213 ;; *************** function _wr2RegCompleteHandler *****************
 13214 ;; Defined at:
 13215 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13216 ;; Parameters:    Size  Location     Type
 13217 ;;  ptr             1    6[BANK0 ] PTR void 
 13218 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13219 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;		None
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  1    wreg      enum E363
 13224 ;; Registers used:
 13225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13226 ;; Tracked objects:
 13227 ;;		On entry : 3E/1
 13228 ;;		On exit  : 3F/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13231 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;Total ram usage:        1 bytes
 13236 ;; Hardware stack levels used: 1
 13237 ;; Hardware stack levels required when called: 6
 13238 ;; This function calls:
 13239 ;;		_I2C1_SetBuffer
 13240 ;;		_I2C1_SetDataCompleteCallback
 13241 ;; This function is called by:
 13242 ;;		_I2C1_DO_TX
 13243 ;;		_I2C1_DO_RX
 13244 ;;		_I2C1_DO_TX_EMPTY
 13245 ;;		_I2C1_DO_ADDRESS_NACK
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249     0ACE                     _wr2RegCompleteHandler:	
 13250                           ;psect for function _wr2RegCompleteHandler
 13251                           
 13252                           
 13253                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 13254                           
 13255                           ;incstack = 0
 13256                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13257     0ACE  3002               	movlw	2
 13258     0ACF  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13259     0AD0  3000               	movlw	0
 13260     0AD1  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13261     0AD2  0140               	movlb	0	; select bank0
 13262     0AD3  0826               	movf	wr2RegCompleteHandler@ptr,w
 13263     0AD4  318A  226F  318A   	fcall	_I2C1_SetBuffer
 13264                           
 13265                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13266     0AD7  3000               	movlw	0
 13267     0AD8  0140               	movlb	0	; select bank0
 13268     0AD9  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13269     0ADA  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13270     0ADB  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13271     0ADC  318A  2214         	fcall	_I2C1_SetDataCompleteCallback
 13272                           
 13273                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 13274     0ADE  3004               	movlw	4
 13275     0ADF  0008               	return
 13276     0AE0                     __end_of_wr2RegCompleteHandler:
 13277                           
 13278                           	psect	text52
 13279     0A14                     __ptext52:	
 13280 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 13281 ;; Defined at:
 13282 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  cb              2    3[BANK0 ] PTR FTN(PTR void ,)enum 
 13285 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13286 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13287 ;;  ptr             1    5[BANK0 ] PTR void 
 13288 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13289 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;		None
 13292 ;; Return value:  Size  Location     Type
 13293 ;;                  1    wreg      void 
 13294 ;; Registers used:
 13295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13296 ;; Tracked objects:
 13297 ;;		On entry : 3F/0
 13298 ;;		On exit  : 3F/0
 13299 ;;		Unchanged: 0/0
 13300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13301 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13304 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;Total ram usage:        3 bytes
 13306 ;; Hardware stack levels used: 1
 13307 ;; Hardware stack levels required when called: 5
 13308 ;; This function calls:
 13309 ;;		_I2C1_SetCallback
 13310 ;; This function is called by:
 13311 ;;		_rd1RegCompleteHandler
 13312 ;;		_rd2RegCompleteHandler
 13313 ;;		_wr1RegCompleteHandler
 13314 ;;		_wr2RegCompleteHandler
 13315 ;;		_rdBlkRegCompleteHandler
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319     0A14                     _I2C1_SetDataCompleteCallback:	
 13320                           ;psect for function _I2C1_SetDataCompleteCallback
 13321                           
 13322                           
 13323                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 13324                           
 13325                           ;incstack = 0
 13326                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 13327     0A14  0824               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 13328     0A15  00A1               	movwf	I2C1_SetCallback@cb+1
 13329     0A16  0823               	movf	I2C1_SetDataCompleteCallback@cb,w
 13330     0A17  00A0               	movwf	I2C1_SetCallback@cb
 13331     0A18  0825               	movf	I2C1_SetDataCompleteCallback@ptr,w
 13332     0A19  00A2               	movwf	I2C1_SetCallback@ptr
 13333     0A1A  3000               	movlw	0
 13334     0A1B  318C  243F         	fcall	_I2C1_SetCallback
 13335     0A1D  0008               	return
 13336     0A1E                     __end_of_I2C1_SetDataCompleteCallback:
 13337                           
 13338                           	psect	text53
 13339     0C3F                     __ptext53:	
 13340 ;; *************** function _I2C1_SetCallback *****************
 13341 ;; Defined at:
 13342 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;  idx             1    wreg     enum E10739
 13345 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 13346 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13347 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13348 ;;  ptr             1    2[BANK0 ] PTR void 
 13349 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13350 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13351 ;; Auto vars:     Size  Location     Type
 13352 ;;  idx             1    4[COMMON] enum E10739
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  1    wreg      void 
 13355 ;; Registers used:
 13356 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13357 ;; Tracked objects:
 13358 ;;		On entry : 3F/0
 13359 ;;		On exit  : 3F/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13362 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;Total ram usage:        4 bytes
 13367 ;; Hardware stack levels used: 1
 13368 ;; Hardware stack levels required when called: 4
 13369 ;; This function calls:
 13370 ;;		Nothing
 13371 ;; This function is called by:
 13372 ;;		_I2C1_SetDataCompleteCallback
 13373 ;;		_I2C1_SetAddressNackCallback
 13374 ;; This function uses a non-reentrant model
 13375 ;;
 13376                           
 13377     0C3F                     _I2C1_SetCallback:	
 13378                           ;psect for function _I2C1_SetCallback
 13379                           
 13380                           
 13381                           ;incstack = 0
 13382                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 13383                           ;I2C1_SetCallback@idx stored from wreg
 13384     0C3F  00F4               	movwf	I2C1_SetCallback@idx
 13385                           
 13386                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 13387     0C40  0820               	movf	I2C1_SetCallback@cb,w
 13388     0C41  0421               	iorwf	I2C1_SetCallback@cb+1,w
 13389     0C42  1903               	btfsc	3,2
 13390     0C43  2C53               	goto	l4603
 13391                           
 13392                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 13393     0C44  3574               	lslf	I2C1_SetCallback@idx,w
 13394     0C45  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 13395     0C46  0086               	movwf	6
 13396     0C47  0187               	clrf	7
 13397     0C48  0820               	movf	I2C1_SetCallback@cb,w
 13398     0C49  3FC0               	movwi [0]fsr1
 13399     0C4A  0821               	movf	I2C1_SetCallback@cb+1,w
 13400     0C4B  3FC1               	movwi [1]fsr1
 13401                           
 13402                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 13403     0C4C  0874               	movf	I2C1_SetCallback@idx,w
 13404     0C4D  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 13405     0C4E  0086               	movwf	6
 13406     0C4F  0187               	clrf	7
 13407     0C50  0822               	movf	I2C1_SetCallback@ptr,w
 13408     0C51  0081               	movwf	1
 13409                           
 13410                           ;mcc_generated_files/i2c1_master.c: 304:     }
 13411     0C52  0008               	return
 13412     0C53                     l4603:
 13413                           
 13414                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 13415     0C53  3574               	lslf	I2C1_SetCallback@idx,w
 13416     0C54  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 13417     0C55  0086               	movwf	6
 13418     0C56  0187               	clrf	7
 13419     0C57  3023               	movlw	low _I2C1_CallbackReturnStop
 13420     0C58  3FC0               	movwi [0]fsr1
 13421     0C59  3009               	movlw	high _I2C1_CallbackReturnStop
 13422     0C5A  3FC1               	movwi [1]fsr1
 13423                           
 13424                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 13425     0C5B  0874               	movf	I2C1_SetCallback@idx,w
 13426     0C5C  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 13427     0C5D  0086               	movwf	6
 13428     0C5E  0187               	clrf	7
 13429     0C5F  0181               	clrf	1
 13430     0C60  0008               	return
 13431     0C61                     __end_of_I2C1_SetCallback:
 13432                           
 13433                           	psect	text54
 13434     0A6F                     __ptext54:	
 13435 ;; *************** function _I2C1_SetBuffer *****************
 13436 ;; Defined at:
 13437 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 13438 ;; Parameters:    Size  Location     Type
 13439 ;;  buffer          1    wreg     PTR void 
 13440 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 13441 ;;		 -> writeINA220@Txbuffer(3), readINA220@regadd(1), readINA220@buff(2), I2C1_ReadDataBlock@reg(1), 
 13442 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@
      +data(2), 
 13443 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 13444 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 13445 ;;  bufferSize      2    4[COMMON] unsigned int 
 13446 ;; Auto vars:     Size  Location     Type
 13447 ;;  buffer          1    0[BANK0 ] PTR void 
 13448 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 13449 ;;		 -> writeINA220@Txbuffer(3), readINA220@regadd(1), readINA220@buff(2), I2C1_ReadDataBlock@reg(1), 
 13450 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@
      +data(2), 
 13451 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 13452 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1    wreg      void 
 13455 ;; Registers used:
 13456 ;;		wreg
 13457 ;; Tracked objects:
 13458 ;;		On entry : 3F/0
 13459 ;;		On exit  : 3F/1
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;Total ram usage:        3 bytes
 13467 ;; Hardware stack levels used: 1
 13468 ;; Hardware stack levels required when called: 4
 13469 ;; This function calls:
 13470 ;;		Nothing
 13471 ;; This function is called by:
 13472 ;;		_I2C1_WriteNBytes
 13473 ;;		_I2C1_ReadNBytes
 13474 ;;		_rd1RegCompleteHandler
 13475 ;;		_rd2RegCompleteHandler
 13476 ;;		_wr1RegCompleteHandler
 13477 ;;		_wr2RegCompleteHandler
 13478 ;;		_rdBlkRegCompleteHandler
 13479 ;; This function uses a non-reentrant model
 13480 ;;
 13481                           
 13482     0A6F                     _I2C1_SetBuffer:	
 13483                           ;psect for function _I2C1_SetBuffer
 13484                           
 13485                           
 13486                           ;incstack = 0
 13487                           ; Regs used in _I2C1_SetBuffer: [wreg]
 13488                           ;I2C1_SetBuffer@buffer stored from wreg
 13489     0A6F  00A0               	movwf	I2C1_SetBuffer@buffer
 13490                           
 13491                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 13492     0A70  0141               	movlb	1	; select bank1
 13493     0A71  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 13494     0A72  0008               	return
 13495                           
 13496                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 13497     0A73  0140               	movlb	0	; select bank0
 13498     0A74  0820               	movf	I2C1_SetBuffer@buffer,w
 13499     0A75  0141               	movlb	1	; select bank1
 13500     0A76  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 13501                           
 13502                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 13503     0A77  0875               	movf	I2C1_SetBuffer@bufferSize+1,w
 13504     0A78  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 13505     0A79  0874               	movf	I2C1_SetBuffer@bufferSize,w
 13506     0A7A  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 13507                           
 13508                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 13509     0A7B  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 13510     0A7C  0008               	return
 13511     0A7D                     __end_of_I2C1_SetBuffer:
 13512                           
 13513                           	psect	text55
 13514     0942                     __ptext55:	
 13515 ;; *************** function _I2C1_MasterStop *****************
 13516 ;; Defined at:
 13517 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;		None
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;		None
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  1    wreg      void 
 13524 ;; Registers used:
 13525 ;;		None
 13526 ;; Tracked objects:
 13527 ;;		On entry : 3F/0
 13528 ;;		On exit  : 3F/3
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;Total ram usage:        0 bytes
 13536 ;; Hardware stack levels used: 1
 13537 ;; Hardware stack levels required when called: 4
 13538 ;; This function calls:
 13539 ;;		Nothing
 13540 ;; This function is called by:
 13541 ;;		_I2C1_DO_SEND_STOP
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545     0942                     _I2C1_MasterStop:	
 13546                           ;psect for function _I2C1_MasterStop
 13547                           
 13548                           
 13549                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 13550                           
 13551                           ;incstack = 0
 13552                           ; Regs used in _I2C1_MasterStop: []
 13553     0942  0143               	movlb	3	; select bank3
 13554     0943  1511               	bsf	17,2	;volatile
 13555     0944  0008               	return
 13556     0945                     __end_of_I2C1_MasterStop:
 13557                           
 13558                           	psect	text56
 13559     093F                     __ptext56:	
 13560 ;; *************** function _I2C1_MasterEnableRestart *****************
 13561 ;; Defined at:
 13562 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 13563 ;; Parameters:    Size  Location     Type
 13564 ;;		None
 13565 ;; Auto vars:     Size  Location     Type
 13566 ;;		None
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  1    wreg      void 
 13569 ;; Registers used:
 13570 ;;		None
 13571 ;; Tracked objects:
 13572 ;;		On entry : 3F/0
 13573 ;;		On exit  : 3F/3
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13580 ;;Total ram usage:        0 bytes
 13581 ;; Hardware stack levels used: 1
 13582 ;; Hardware stack levels required when called: 4
 13583 ;; This function calls:
 13584 ;;		Nothing
 13585 ;; This function is called by:
 13586 ;;		_I2C1_DO_SEND_RESTART_READ
 13587 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13588 ;;		_I2C1_DO_SEND_RESTART
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592     093F                     _I2C1_MasterEnableRestart:	
 13593                           ;psect for function _I2C1_MasterEnableRestart
 13594                           
 13595                           
 13596                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 13597                           
 13598                           ;incstack = 0
 13599                           ; Regs used in _I2C1_MasterEnableRestart: []
 13600     093F  0143               	movlb	3	; select bank3
 13601     0940  1491               	bsf	17,1	;volatile
 13602     0941  0008               	return
 13603     0942                     __end_of_I2C1_MasterEnableRestart:
 13604                           
 13605                           	psect	text57
 13606     093C                     __ptext57:	
 13607 ;; *************** function _I2C1_MasterStart *****************
 13608 ;; Defined at:
 13609 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 13610 ;; Parameters:    Size  Location     Type
 13611 ;;		None
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;		None
 13614 ;; Return value:  Size  Location     Type
 13615 ;;                  1    wreg      void 
 13616 ;; Registers used:
 13617 ;;		None
 13618 ;; Tracked objects:
 13619 ;;		On entry : 3F/1
 13620 ;;		On exit  : 3F/3
 13621 ;;		Unchanged: 0/0
 13622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;Total ram usage:        0 bytes
 13628 ;; Hardware stack levels used: 1
 13629 ;; Hardware stack levels required when called: 4
 13630 ;; This function calls:
 13631 ;;		Nothing
 13632 ;; This function is called by:
 13633 ;;		_I2C1_MasterOperation
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637     093C                     _I2C1_MasterStart:	
 13638                           ;psect for function _I2C1_MasterStart
 13639                           
 13640                           
 13641                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 13642                           
 13643                           ;incstack = 0
 13644                           ; Regs used in _I2C1_MasterStart: []
 13645     093C  0143               	movlb	3	; select bank3
 13646     093D  1411               	bsf	17,0	;volatile
 13647     093E  0008               	return
 13648     093F                     __end_of_I2C1_MasterStart:
 13649                           
 13650                           	psect	text58
 13651     0B3E                     __ptext58:	
 13652 ;; *************** function _I2C1_Close *****************
 13653 ;; Defined at:
 13654 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;		None
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  returnValue     1    4[COMMON] enum E358
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      enum E358
 13661 ;; Registers used:
 13662 ;;		wreg, status,2, status,0, pclath, cstack
 13663 ;; Tracked objects:
 13664 ;;		On entry : 3E/0
 13665 ;;		On exit  : 3F/1
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13672 ;;Total ram usage:        1 bytes
 13673 ;; Hardware stack levels used: 1
 13674 ;; Hardware stack levels required when called: 5
 13675 ;; This function calls:
 13676 ;;		_I2C1_MasterClearIrq
 13677 ;;		_I2C1_MasterClose
 13678 ;;		_I2C1_MasterDisableIrq
 13679 ;; This function is called by:
 13680 ;;		_I2C1_WriteNBytes
 13681 ;;		_I2C1_ReadNBytes
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685     0B3E                     _I2C1_Close:	
 13686                           ;psect for function _I2C1_Close
 13687                           
 13688                           
 13689                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 13690                           
 13691                           ;incstack = 0
 13692                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 13693     0B3E  01F4               	clrf	I2C1_Close@returnValue
 13694     0B3F  0AF4               	incf	I2C1_Close@returnValue,f
 13695                           
 13696                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 13697     0B40  0141               	movlb	1	; select bank1
 13698     0B41  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 13699     0B42  2B51               	goto	l4983
 13700                           
 13701                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 13702     0B43  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 13703                           
 13704                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 13705     0B44  30FF               	movlw	255
 13706     0B45  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 13707                           
 13708                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 13709     0B46  3189  2136  318B   	fcall	_I2C1_MasterClearIrq
 13710                           
 13711                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 13712     0B49  3189  2121  318B   	fcall	_I2C1_MasterDisableIrq
 13713                           
 13714                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 13715     0B4C  3189  2139         	fcall	_I2C1_MasterClose
 13716                           
 13717                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 13718     0B4E  0141               	movlb	1	; select bank1
 13719     0B4F  083B               	movf	(_I2C1_Status^(0+128)+27),w
 13720     0B50  00F4               	movwf	I2C1_Close@returnValue
 13721     0B51                     l4983:
 13722                           
 13723                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 13724     0B51  0874               	movf	I2C1_Close@returnValue,w
 13725     0B52  0008               	return
 13726     0B53                     __end_of_I2C1_Close:
 13727                           
 13728                           	psect	text59
 13729     0921                     __ptext59:	
 13730 ;; *************** function _I2C1_MasterDisableIrq *****************
 13731 ;; Defined at:
 13732 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;		None
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;		None
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  1    wreg      void 
 13739 ;; Registers used:
 13740 ;;		None
 13741 ;; Tracked objects:
 13742 ;;		On entry : 3F/E
 13743 ;;		On exit  : 3F/E
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;Total ram usage:        0 bytes
 13751 ;; Hardware stack levels used: 1
 13752 ;; Hardware stack levels required when called: 4
 13753 ;; This function calls:
 13754 ;;		Nothing
 13755 ;; This function is called by:
 13756 ;;		_I2C1_Close
 13757 ;; This function uses a non-reentrant model
 13758 ;;
 13759                           
 13760     0921                     _I2C1_MasterDisableIrq:	
 13761                           ;psect for function _I2C1_MasterDisableIrq
 13762                           
 13763                           
 13764                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 13765                           
 13766                           ;incstack = 0
 13767                           ; Regs used in _I2C1_MasterDisableIrq: []
 13768     0921  1019               	bcf	25,0	;volatile
 13769     0922  0008               	return
 13770     0923                     __end_of_I2C1_MasterDisableIrq:
 13771                           
 13772                           	psect	text60
 13773     0939                     __ptext60:	
 13774 ;; *************** function _I2C1_MasterClose *****************
 13775 ;; Defined at:
 13776 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;		None
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;		None
 13781 ;; Return value:  Size  Location     Type
 13782 ;;                  1    wreg      void 
 13783 ;; Registers used:
 13784 ;;		None
 13785 ;; Tracked objects:
 13786 ;;		On entry : 3F/E
 13787 ;;		On exit  : 3F/3
 13788 ;;		Unchanged: 0/0
 13789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;Total ram usage:        0 bytes
 13795 ;; Hardware stack levels used: 1
 13796 ;; Hardware stack levels required when called: 4
 13797 ;; This function calls:
 13798 ;;		Nothing
 13799 ;; This function is called by:
 13800 ;;		_I2C1_Close
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804     0939                     _I2C1_MasterClose:	
 13805                           ;psect for function _I2C1_MasterClose
 13806                           
 13807                           
 13808                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 13809                           
 13810                           ;incstack = 0
 13811                           ; Regs used in _I2C1_MasterClose: []
 13812     0939  0143               	movlb	3	; select bank3
 13813     093A  1290               	bcf	16,5	;volatile
 13814     093B  0008               	return
 13815     093C                     __end_of_I2C1_MasterClose:
 13816                           
 13817                           	psect	text61
 13818     0936                     __ptext61:	
 13819 ;; *************** function _I2C1_MasterClearIrq *****************
 13820 ;; Defined at:
 13821 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;		None
 13824 ;; Auto vars:     Size  Location     Type
 13825 ;;		None
 13826 ;; Return value:  Size  Location     Type
 13827 ;;                  1    wreg      void 
 13828 ;; Registers used:
 13829 ;;		None
 13830 ;; Tracked objects:
 13831 ;;		On entry : 30/1
 13832 ;;		On exit  : 3F/E
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13839 ;;Total ram usage:        0 bytes
 13840 ;; Hardware stack levels used: 1
 13841 ;; Hardware stack levels required when called: 4
 13842 ;; This function calls:
 13843 ;;		Nothing
 13844 ;; This function is called by:
 13845 ;;		_I2C1_Open
 13846 ;;		_I2C1_Close
 13847 ;;		_I2C1_MasterFsm
 13848 ;; This function uses a non-reentrant model
 13849 ;;
 13850                           
 13851     0936                     _I2C1_MasterClearIrq:	
 13852                           ;psect for function _I2C1_MasterClearIrq
 13853                           
 13854                           
 13855                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 13856                           
 13857                           ;incstack = 0
 13858                           ; Regs used in _I2C1_MasterClearIrq: []
 13859     0936  014E               	movlb	14	; select bank14
 13860     0937  100F               	bcf	15,0	;volatile
 13861     0938  0008               	return
 13862     0939                     __end_of_I2C1_MasterClearIrq:
 13863                           
 13864                           	psect	text62
 13865     0D6D                     __ptext62:	
 13866 ;; *************** function _getHis *****************
 13867 ;; Defined at:
 13868 ;;		line 167 in file "sensor.c"
 13869 ;; Parameters:    Size  Location     Type
 13870 ;;  data            2   32[BANK0 ] PTR struct .
 13871 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 13872 ;;		 -> panel.sensor_data(46), panel(59), 
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;  i               1   36[BANK0 ] unsigned char 
 13875 ;;  aux             1   37[BANK0 ] unsigned char 
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  1    wreg      void 
 13878 ;; Registers used:
 13879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13880 ;; Tracked objects:
 13881 ;;		On entry : 3F/0
 13882 ;;		On exit  : 3F/0
 13883 ;;		Unchanged: 0/0
 13884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13887 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;Total ram usage:        6 bytes
 13890 ;; Hardware stack levels used: 1
 13891 ;; Hardware stack levels required when called: 7
 13892 ;; This function calls:
 13893 ;;		_sendSensorData
 13894 ;; This function is called by:
 13895 ;;		_processCommand
 13896 ;; This function uses a non-reentrant model
 13897 ;;
 13898                           
 13899     0D6D                     _getHis:	
 13900                           ;psect for function _getHis
 13901                           
 13902                           
 13903                           ;sensor.c: 167: void getHis(measure_data_t *data);sensor.c: 168: {;sensor.c: 169:     ui
      +                          nt8_t aux;;sensor.c: 170:     aux = data->pWrite;
 13904                           
 13905                           ;incstack = 0
 13906                           ; Regs used in _getHis: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13907     0D6D  0840               	movf	getHis@data,w
 13908     0D6E  0086               	movwf	6
 13909     0D6F  0841               	movf	getHis@data+1,w
 13910     0D70  0087               	movwf	7
 13911     0D71  3156               	addfsr 1,22
 13912     0D72  0801               	movf	1,w
 13913     0D73  00C5               	movwf	getHis@aux
 13914                           
 13915                           ;sensor.c: 171:     for(uint8_t i=0; i<8; i++)
 13916     0D74  01C4               	clrf	getHis@i
 13917     0D75                     l5535:
 13918                           
 13919                           ;sensor.c: 172:     {;sensor.c: 173:         sendSensorData(data->hist[aux]);
 13920     0D75  0845               	movf	getHis@aux,w
 13921     0D76  00C2               	movwf	??_getHis
 13922     0D77  01C3               	clrf	??_getHis+1
 13923     0D78  35C2               	lslf	??_getHis,f
 13924     0D79  0DC3               	rlf	??_getHis+1,f
 13925     0D7A  0842               	movf	??_getHis,w
 13926     0D7B  0740               	addwf	getHis@data,w
 13927     0D7C  0086               	movwf	6
 13928     0D7D  0843               	movf	??_getHis+1,w
 13929     0D7E  3D41               	addwfc	getHis@data+1,w
 13930     0D7F  0087               	movwf	7
 13931     0D80  3F40               	moviw [0]fsr1
 13932     0D81  00B4               	movwf	sendSensorData@sensor_data
 13933     0D82  3F41               	moviw [1]fsr1
 13934     0D83  00B5               	movwf	sendSensorData@sensor_data+1
 13935     0D84  318D  25EF  318D   	fcall	_sendSensorData
 13936                           
 13937                           ;sensor.c: 174:         if(aux == 0)
 13938     0D87  0845               	movf	getHis@aux,w
 13939                           
 13940                           ;sensor.c: 175:         {;sensor.c: 176:             aux = 8;
 13941     0D88  3008               	movlw	8
 13942     0D89  1903               	btfsc	3,2
 13943     0D8A  00C5               	movwf	getHis@aux
 13944                           
 13945                           ;sensor.c: 178:         aux--;
 13946     0D8B  3001               	movlw	1
 13947     0D8C  02C5               	subwf	getHis@aux,f
 13948                           
 13949                           ;sensor.c: 179:     }
 13950     0D8D  3001               	movlw	1
 13951     0D8E  00C2               	movwf	??_getHis
 13952     0D8F  0842               	movf	??_getHis,w
 13953     0D90  07C4               	addwf	getHis@i,f
 13954     0D91  3008               	movlw	8
 13955     0D92  0244               	subwf	getHis@i,w
 13956     0D93  1803               	btfsc	3,0
 13957     0D94  0008               	return
 13958     0D95  2D75               	goto	l5535
 13959     0D96                     __end_of_getHis:
 13960                           
 13961                           	psect	text63
 13962     0DEF                     __ptext63:	
 13963 ;; *************** function _sendSensorData *****************
 13964 ;; Defined at:
 13965 ;;		line 29 in file "device.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;  sensor_data     2   20[BANK0 ] short 
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  packet          8   24[BANK0 ] struct .
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      void 
 13972 ;; Registers used:
 13973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13974 ;; Tracked objects:
 13975 ;;		On entry : 3F/0
 13976 ;;		On exit  : 3F/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;Total ram usage:       12 bytes
 13984 ;; Hardware stack levels used: 1
 13985 ;; Hardware stack levels required when called: 6
 13986 ;; This function calls:
 13987 ;;		_int16ToString
 13988 ;;		_sendPacket
 13989 ;;		_stringlen
 13990 ;; This function is called by:
 13991 ;;		_getHis
 13992 ;;		_processCommand
 13993 ;; This function uses a non-reentrant model
 13994 ;;
 13995                           
 13996     0DEF                     _sendSensorData:	
 13997                           ;psect for function _sendSensorData
 13998                           
 13999                           
 14000                           ;device.c: 29: void sendSensorData(int16_t sensor_data);device.c: 30: {;device.c: 31:   
      +                            data_packet_t packet = {.preamble = "L>"};
 14001                           
 14002                           ;incstack = 0
 14003                           ; Regs used in _sendSensorData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14004     0DEF  30D0               	movlw	low sendSensorData@F11035
 14005     0DF0  0086               	movwf	6
 14006     0DF1  3000               	movlw	high sendSensorData@F11035
 14007     0DF2  0087               	movwf	7
 14008     0DF3  3038               	movlw	low sendSensorData@packet
 14009     0DF4  0084               	movwf	4
 14010     0DF5  3000               	movlw	high sendSensorData@packet
 14011     0DF6  0085               	movwf	5
 14012     0DF7  3008               	movlw	8
 14013     0DF8  00B6               	movwf	??_sendSensorData
 14014     0DF9                     u2930:
 14015     0DF9  0016               	moviw fsr1++
 14016     0DFA  001A               	movwi fsr0++
 14017     0DFB  0BB6               	decfsz	??_sendSensorData,f
 14018     0DFC  2DF9               	goto	u2930
 14019                           
 14020                           ;device.c: 32:     int16ToString(sensor_data, packet.value);
 14021     0DFD  0835               	movf	sendSensorData@sensor_data+1,w
 14022     0DFE  00A8               	movwf	int16ToString@value+1
 14023     0DFF  0834               	movf	sendSensorData@sensor_data,w
 14024     0E00  00A7               	movwf	int16ToString@value
 14025     0E01  303A               	movlw	(low ((sendSensorData@packet| 0+2)))& (0+255)
 14026     0E02  00A9               	movwf	int16ToString@data
 14027     0E03  3184  244D  318D   	fcall	_int16ToString
 14028                           
 14029                           ;device.c: 34:     sendPacket((char*)&packet, (2 +stringlen(packet.value)));
 14030     0E06  303A               	movlw	(low ((sendSensorData@packet| 0+2)))& (0+255)
 14031     0E07  318B  2382  318D   	fcall	_stringlen
 14032     0E0A  3E02               	addlw	2
 14033     0E0B  00B6               	movwf	??_sendSensorData
 14034     0E0C  3000               	movlw	0
 14035     0E0D  1803               	skipnc
 14036     0E0E  3001               	movlw	1
 14037     0E0F  00B7               	movwf	??_sendSensorData+1
 14038     0E10  0836               	movf	??_sendSensorData,w
 14039     0E11  00A2               	movwf	sendPacket@byteCount
 14040     0E12  0837               	movf	??_sendSensorData+1,w
 14041     0E13  00A3               	movwf	sendPacket@byteCount+1
 14042     0E14  0D89               	rlf	9,f
 14043     0E15  3B89               	subwfb	9,f
 14044     0E16  0989               	comf	9,f
 14045     0E17  00A4               	movwf	sendPacket@byteCount+2
 14046     0E18  00A5               	movwf	sendPacket@byteCount+3
 14047     0E19  3038               	movlw	(low (sendSensorData@packet| 0))& (0+255)
 14048     0E1A  3186  260F         	fcall	_sendPacket
 14049     0E1C  0008               	return
 14050     0E1D                     __end_of_sendSensorData:
 14051                           
 14052                           	psect	text64
 14053     0B82                     __ptext64:	
 14054 ;; *************** function _stringlen *****************
 14055 ;; Defined at:
 14056 ;;		line 69 in file "device.c"
 14057 ;; Parameters:    Size  Location     Type
 14058 ;;  str             1    wreg     PTR const unsigned char 
 14059 ;;		 -> packet.value(6), sendSensorData@packet(8), main@packet(11), 
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;  str             1    0[BANK0 ] PTR const unsigned char 
 14062 ;;		 -> packet.value(6), sendSensorData@packet(8), main@packet(11), 
 14063 ;;  idx             1    1[BANK0 ] unsigned char 
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      unsigned char 
 14066 ;; Registers used:
 14067 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 3F/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;Total ram usage:        3 bytes
 14078 ;; Hardware stack levels used: 1
 14079 ;; Hardware stack levels required when called: 4
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		_sendSensorData
 14084 ;;		_processCommand
 14085 ;; This function uses a non-reentrant model
 14086 ;;
 14087                           
 14088     0B82                     _stringlen:	
 14089                           ;psect for function _stringlen
 14090                           
 14091                           
 14092                           ;incstack = 0
 14093                           ; Regs used in _stringlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14094                           ;stringlen@str stored from wreg
 14095     0B82  0140               	movlb	0	; select bank0
 14096     0B83  00A0               	movwf	stringlen@str
 14097                           
 14098                           ;device.c: 69: uint8_t stringlen(const char* str);device.c: 70: {;device.c: 71:  uint8_t
      +                           idx = 0;
 14099     0B84  01A1               	clrf	stringlen@idx
 14100                           
 14101                           ;device.c: 73:  for(idx = 0; idx < 255; idx++)
 14102     0B85  01A1               	clrf	stringlen@idx
 14103     0B86                     l5155:
 14104                           
 14105                           ;device.c: 74:  {;device.c: 75:   if(*str == 0)
 14106     0B86  0820               	movf	stringlen@str,w
 14107     0B87  0086               	movwf	6
 14108     0B88  0187               	clrf	7
 14109     0B89  0801               	movf	1,w
 14110     0B8A  1D03               	btfss	3,2
 14111     0B8B  2B8E               	goto	l5161
 14112                           
 14113                           ;device.c: 76:    return idx;
 14114     0B8C  0821               	movf	stringlen@idx,w
 14115     0B8D  0008               	return
 14116     0B8E                     l5161:
 14117                           
 14118                           ;device.c: 77:         str++;
 14119     0B8E  3001               	movlw	1
 14120     0B8F  00F4               	movwf	??_stringlen
 14121     0B90  0874               	movf	??_stringlen,w
 14122     0B91  07A0               	addwf	stringlen@str,f
 14123                           
 14124                           ;device.c: 78:  }
 14125     0B92  3001               	movlw	1
 14126     0B93  00F4               	movwf	??_stringlen
 14127     0B94  0874               	movf	??_stringlen,w
 14128     0B95  07A1               	addwf	stringlen@idx,f
 14129     0B96  0A21               	incf	stringlen@idx,w
 14130     0B97  1D03               	btfss	3,2
 14131     0B98  2B86               	goto	l5155
 14132                           
 14133                           ;device.c: 79:  return -1;
 14134     0B99  30FF               	movlw	255
 14135     0B9A  0008               	return
 14136     0B9B                     __end_of_stringlen:
 14137                           
 14138                           	psect	text65
 14139     060F                     __ptext65:	
 14140 ;; *************** function _sendPacket *****************
 14141 ;; Defined at:
 14142 ;;		line 20 in file "communication.c"
 14143 ;; Parameters:    Size  Location     Type
 14144 ;;  str             1    wreg     PTR const unsigned char 
 14145 ;;		 -> sendSensorData@packet(8), sendSensorInfo@packet(7), 
 14146 ;;  byteCount       4    2[BANK0 ] unsigned long 
 14147 ;; Auto vars:     Size  Location     Type
 14148 ;;  str             1   12[BANK0 ] PTR const unsigned char 
 14149 ;;		 -> sendSensorData@packet(8), sendSensorInfo@packet(7), 
 14150 ;;  i               2   10[BANK0 ] int 
 14151 ;; Return value:  Size  Location     Type
 14152 ;;                  1    wreg      void 
 14153 ;; Registers used:
 14154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14155 ;; Tracked objects:
 14156 ;;		On entry : 3F/0
 14157 ;;		On exit  : 3F/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14160 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;Total ram usage:       11 bytes
 14165 ;; Hardware stack levels used: 1
 14166 ;; Hardware stack levels required when called: 5
 14167 ;; This function calls:
 14168 ;;		_EUSART1_Write
 14169 ;;		_EUSART1_is_tx_done
 14170 ;;		_EUSART1_is_tx_ready
 14171 ;;		_TxDeviceDisable
 14172 ;;		_TxDeviceEnable
 14173 ;; This function is called by:
 14174 ;;		_sendSensorInfo
 14175 ;;		_sendSensorData
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179     060F                     _sendPacket:	
 14180                           ;psect for function _sendPacket
 14181                           
 14182                           
 14183                           ;incstack = 0
 14184                           ; Regs used in _sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14185                           ;sendPacket@str stored from wreg
 14186     060F  00AC               	movwf	sendPacket@str
 14187                           
 14188                           ;communication.c: 20: void sendPacket(const char *str, uint32_t byteCount);communication
      +                          .c: 21: {;communication.c: 22:     TxDeviceEnable();
 14189     0610  3189  211F  3186   	fcall	_TxDeviceEnable
 14190                           
 14191                           ;communication.c: 24:     for(int i=0; i<byteCount; i++)
 14192     0613  01AA               	clrf	sendPacket@i
 14193     0614  01AB               	clrf	sendPacket@i+1
 14194     0615                     l5097:
 14195     0615  082A               	movf	sendPacket@i,w
 14196     0616  00A6               	movwf	??_sendPacket
 14197     0617  082B               	movf	sendPacket@i+1,w
 14198     0618  00A7               	movwf	??_sendPacket+1
 14199     0619  3000               	movlw	0
 14200     061A  1BA7               	btfsc	??_sendPacket+1,7
 14201     061B  30FF               	movlw	255
 14202     061C  00A8               	movwf	??_sendPacket+2
 14203     061D  00A9               	movwf	??_sendPacket+3
 14204     061E  0825               	movf	sendPacket@byteCount+3,w
 14205     061F  0229               	subwf	??_sendPacket+3,w
 14206     0620  1D03               	skipz
 14207     0621  2E2C               	goto	u2825
 14208     0622  0824               	movf	sendPacket@byteCount+2,w
 14209     0623  0228               	subwf	??_sendPacket+2,w
 14210     0624  1D03               	skipz
 14211     0625  2E2C               	goto	u2825
 14212     0626  0823               	movf	sendPacket@byteCount+1,w
 14213     0627  0227               	subwf	??_sendPacket+1,w
 14214     0628  1D03               	skipz
 14215     0629  2E2C               	goto	u2825
 14216     062A  0822               	movf	sendPacket@byteCount,w
 14217     062B  0226               	subwf	??_sendPacket,w
 14218     062C                     u2825:
 14219     062C  1803               	btfsc	3,0
 14220     062D  2E4E               	goto	l5099
 14221                           
 14222                           ;communication.c: 25:     {;communication.c: 26:         if(EUSART1_is_tx_ready())
 14223     062E  318A  2232  3186   	fcall	_EUSART1_is_tx_ready
 14224     0631  3A00               	xorlw	0
 14225     0632  1903               	skipnz
 14226     0633  2E48               	goto	l5095
 14227                           
 14228                           ;communication.c: 27:         {;communication.c: 29:             EUSART1_Write(*str);
 14229     0634  0140               	movlb	0	; select bank0
 14230     0635  082C               	movf	sendPacket@str,w
 14231     0636  0086               	movwf	6
 14232     0637  0187               	clrf	7
 14233     0638  0801               	movf	1,w
 14234     0639  318A  220A  3186   	fcall	_EUSART1_Write
 14235     063C                     l5091:	
 14236                           ;communication.c: 30:             while(!EUSART1_is_tx_done());
 14237                           
 14238     063C  3189  2152  3186   	fcall	_EUSART1_is_tx_done
 14239     063F  3A00               	xorlw	0
 14240     0640  1903               	skipnz
 14241     0641  2E3C               	goto	l5091
 14242                           
 14243                           ;communication.c: 31:             do { LATCbits.LATC3 = 0; } while(0);
 14244     0642  0140               	movlb	0	; select bank0
 14245     0643  119A               	bcf	26,3	;volatile
 14246                           
 14247                           ;communication.c: 32:             str++;
 14248     0644  3001               	movlw	1
 14249     0645  00A6               	movwf	??_sendPacket
 14250     0646  0826               	movf	??_sendPacket,w
 14251     0647  07AC               	addwf	sendPacket@str,f
 14252     0648                     l5095:
 14253                           
 14254                           ;communication.c: 34:     }
 14255     0648  3001               	movlw	1
 14256     0649  0140               	movlb	0	; select bank0
 14257     064A  07AA               	addwf	sendPacket@i,f
 14258     064B  3000               	movlw	0
 14259     064C  3DAB               	addwfc	sendPacket@i+1,f
 14260     064D  2E15               	goto	l5097
 14261     064E                     l5099:
 14262                           
 14263                           ;communication.c: 35:     if(EUSART1_is_tx_ready())
 14264     064E  318A  2232  3186   	fcall	_EUSART1_is_tx_ready
 14265     0651  3A00               	xorlw	0
 14266     0652  1903               	skipnz
 14267     0653  2E60               	goto	l5105
 14268                           
 14269                           ;communication.c: 36:         {;communication.c: 37:             EUSART1_Write('\n');
 14270     0654  300A               	movlw	10
 14271     0655  318A  220A  3186   	fcall	_EUSART1_Write
 14272     0658                     l5103:	
 14273                           ;communication.c: 38:             while(!EUSART1_is_tx_done());
 14274                           
 14275     0658  3189  2152  3186   	fcall	_EUSART1_is_tx_done
 14276     065B  3A00               	xorlw	0
 14277     065C  1903               	skipnz
 14278     065D  2E58               	goto	l5103
 14279                           
 14280                           ;communication.c: 39:             do { LATCbits.LATC3 = 0; } while(0);
 14281     065E  0140               	movlb	0	; select bank0
 14282     065F  119A               	bcf	26,3	;volatile
 14283     0660                     l5105:
 14284                           
 14285                           ;communication.c: 41:     TxDeviceDisable();
 14286     0660  3189  2133         	fcall	_TxDeviceDisable
 14287     0662  0008               	return
 14288     0663                     __end_of_sendPacket:
 14289                           
 14290                           	psect	text66
 14291     091F                     __ptext66:	
 14292 ;; *************** function _TxDeviceEnable *****************
 14293 ;; Defined at:
 14294 ;;		line 67 in file "communication.c"
 14295 ;; Parameters:    Size  Location     Type
 14296 ;;		None
 14297 ;; Auto vars:     Size  Location     Type
 14298 ;;		None
 14299 ;; Return value:  Size  Location     Type
 14300 ;;                  1    wreg      void 
 14301 ;; Registers used:
 14302 ;;		None
 14303 ;; Tracked objects:
 14304 ;;		On entry : 3F/0
 14305 ;;		On exit  : 3F/0
 14306 ;;		Unchanged: 0/0
 14307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14312 ;;Total ram usage:        0 bytes
 14313 ;; Hardware stack levels used: 1
 14314 ;; Hardware stack levels required when called: 4
 14315 ;; This function calls:
 14316 ;;		Nothing
 14317 ;; This function is called by:
 14318 ;;		_sendPacket
 14319 ;; This function uses a non-reentrant model
 14320 ;;
 14321                           
 14322     091F                     _TxDeviceEnable:	
 14323                           ;psect for function _TxDeviceEnable
 14324                           
 14325                           
 14326                           ;communication.c: 69:     LATCbits.LATC3 = 1;
 14327                           
 14328                           ;incstack = 0
 14329                           ; Regs used in _TxDeviceEnable: []
 14330     091F  159A               	bsf	26,3	;volatile
 14331     0920  0008               	return
 14332     0921                     __end_of_TxDeviceEnable:
 14333                           
 14334                           	psect	text67
 14335     0933                     __ptext67:	
 14336 ;; *************** function _TxDeviceDisable *****************
 14337 ;; Defined at:
 14338 ;;		line 72 in file "communication.c"
 14339 ;; Parameters:    Size  Location     Type
 14340 ;;		None
 14341 ;; Auto vars:     Size  Location     Type
 14342 ;;		None
 14343 ;; Return value:  Size  Location     Type
 14344 ;;                  1    wreg      void 
 14345 ;; Registers used:
 14346 ;;		None
 14347 ;; Tracked objects:
 14348 ;;		On entry : 31/E
 14349 ;;		On exit  : 3F/0
 14350 ;;		Unchanged: 0/0
 14351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14356 ;;Total ram usage:        0 bytes
 14357 ;; Hardware stack levels used: 1
 14358 ;; Hardware stack levels required when called: 4
 14359 ;; This function calls:
 14360 ;;		Nothing
 14361 ;; This function is called by:
 14362 ;;		_main
 14363 ;;		_sendPacket
 14364 ;; This function uses a non-reentrant model
 14365 ;;
 14366                           
 14367     0933                     _TxDeviceDisable:	
 14368                           ;psect for function _TxDeviceDisable
 14369                           
 14370                           
 14371                           ;communication.c: 74:     LATCbits.LATC3 = 0;
 14372                           
 14373                           ;incstack = 0
 14374                           ; Regs used in _TxDeviceDisable: []
 14375     0933  0140               	movlb	0	; select bank0
 14376     0934  119A               	bcf	26,3	;volatile
 14377     0935  0008               	return
 14378     0936                     __end_of_TxDeviceDisable:
 14379                           
 14380                           	psect	text68
 14381     0A32                     __ptext68:	
 14382 ;; *************** function _EUSART1_is_tx_ready *****************
 14383 ;; Defined at:
 14384 ;;		line 119 in file "mcc_generated_files/eusart1.c"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;		None
 14387 ;; Auto vars:     Size  Location     Type
 14388 ;;		None
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  1    wreg      _Bool 
 14391 ;; Registers used:
 14392 ;;		wreg, status,2
 14393 ;; Tracked objects:
 14394 ;;		On entry : 3F/0
 14395 ;;		On exit  : 33/2
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14402 ;;Total ram usage:        1 bytes
 14403 ;; Hardware stack levels used: 1
 14404 ;; Hardware stack levels required when called: 4
 14405 ;; This function calls:
 14406 ;;		Nothing
 14407 ;; This function is called by:
 14408 ;;		_sendPacket
 14409 ;; This function uses a non-reentrant model
 14410 ;;
 14411                           
 14412     0A32                     _EUSART1_is_tx_ready:	
 14413                           ;psect for function _EUSART1_is_tx_ready
 14414                           
 14415                           
 14416                           ;mcc_generated_files/eusart1.c: 121:     return (_Bool)(PIR3bits.TX1IF && TX1STAbits.TXE
      +                          N);
 14417                           
 14418                           ;incstack = 0
 14419                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2]
 14420     0A32  01F4               	clrf	_EUSART1_is_tx_ready$357
 14421     0A33  014E               	movlb	14	; select bank14
 14422     0A34  1E0F               	btfss	15,4	;volatile
 14423     0A35  2A3B               	goto	l4999
 14424     0A36  0142               	movlb	2	; select bank2
 14425     0A37  1E9E               	btfss	30,5	;volatile
 14426     0A38  2A3B               	goto	l4999
 14427     0A39  01F4               	clrf	_EUSART1_is_tx_ready$357
 14428     0A3A  0AF4               	incf	_EUSART1_is_tx_ready$357,f
 14429     0A3B                     l4999:
 14430     0A3B  0874               	movf	_EUSART1_is_tx_ready$357,w
 14431     0A3C  0008               	return
 14432     0A3D                     __end_of_EUSART1_is_tx_ready:
 14433                           
 14434                           	psect	text69
 14435     0952                     __ptext69:	
 14436 ;; *************** function _EUSART1_is_tx_done *****************
 14437 ;; Defined at:
 14438 ;;		line 129 in file "mcc_generated_files/eusart1.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;		None
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;		None
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  1    wreg      _Bool 
 14445 ;; Registers used:
 14446 ;;		wreg, status,2, status,0
 14447 ;; Tracked objects:
 14448 ;;		On entry : 3D/2
 14449 ;;		On exit  : 3F/2
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;Total ram usage:        0 bytes
 14457 ;; Hardware stack levels used: 1
 14458 ;; Hardware stack levels required when called: 4
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_sendPacket
 14463 ;; This function uses a non-reentrant model
 14464 ;;
 14465                           
 14466     0952                     _EUSART1_is_tx_done:	
 14467                           ;psect for function _EUSART1_is_tx_done
 14468                           
 14469                           
 14470                           ;mcc_generated_files/eusart1.c: 131:     return TX1STAbits.TRMT;
 14471                           
 14472                           ;incstack = 0
 14473                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 14474     0952  0142               	movlb	2	; select bank2
 14475     0953  0C1E               	rrf	30,w	;volatile
 14476     0954  3901               	andlw	1
 14477     0955  0008               	return
 14478     0956                     __end_of_EUSART1_is_tx_done:
 14479                           
 14480                           	psect	text70
 14481     0A0A                     __ptext70:	
 14482 ;; *************** function _EUSART1_Write *****************
 14483 ;; Defined at:
 14484 ;;		line 159 in file "mcc_generated_files/eusart1.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;  txData          1    wreg     unsigned char 
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;  txData          1    4[COMMON] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      void 
 14491 ;; Registers used:
 14492 ;;		wreg
 14493 ;; Tracked objects:
 14494 ;;		On entry : 31/0
 14495 ;;		On exit  : 3F/2
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;Total ram usage:        1 bytes
 14503 ;; Hardware stack levels used: 1
 14504 ;; Hardware stack levels required when called: 4
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_sendPacket
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512     0A0A                     _EUSART1_Write:	
 14513                           ;psect for function _EUSART1_Write
 14514                           
 14515                           
 14516                           ;incstack = 0
 14517                           ; Regs used in _EUSART1_Write: [wreg]
 14518                           ;EUSART1_Write@txData stored from wreg
 14519     0A0A  00F4               	movwf	EUSART1_Write@txData
 14520                           
 14521                           ;mcc_generated_files/eusart1.c: 159: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 160: {;mcc_generated_files/eusart1.c: 161:     do { LATCbits.LATC3 = 1; }
      +                           while(0);
 14522     0A0B  0140               	movlb	0	; select bank0
 14523     0A0C  159A               	bsf	26,3	;volatile
 14524     0A0D                     l196:	
 14525                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:     }
 14526                           
 14527                           
 14528                           ;mcc_generated_files/eusart1.c: 162:     while(0 == PIR3bits.TX1IF)
 14529     0A0D  014E               	movlb	14	; select bank14
 14530     0A0E  1E0F               	btfss	15,4	;volatile
 14531     0A0F  2A0D               	goto	l196
 14532                           
 14533                           ;mcc_generated_files/eusart1.c: 166:     TX1REG = txData;
 14534     0A10  0874               	movf	EUSART1_Write@txData,w
 14535     0A11  0142               	movlb	2	; select bank2
 14536     0A12  009A               	movwf	26	;volatile
 14537     0A13  0008               	return
 14538     0A14                     __end_of_EUSART1_Write:
 14539                           
 14540                           	psect	text71
 14541     044D                     __ptext71:	
 14542 ;; *************** function _int16ToString *****************
 14543 ;; Defined at:
 14544 ;;		line 88 in file "device.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;  value           2    7[BANK0 ] short 
 14547 ;;  data            1    9[BANK0 ] PTR unsigned char 
 14548 ;;		 -> sendSensorData@packet(8), 
 14549 ;; Auto vars:     Size  Location     Type
 14550 ;;  i               2   14[BANK0 ] int 
 14551 ;;  divisor         2   18[BANK0 ] unsigned short 
 14552 ;;  dividend        2   16[BANK0 ] short 
 14553 ;;  result          2   12[BANK0 ] short 
 14554 ;;  flag_0          1   11[BANK0 ] _Bool 
 14555 ;; Return value:  Size  Location     Type
 14556 ;;                  1    wreg      void 
 14557 ;; Registers used:
 14558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14559 ;; Tracked objects:
 14560 ;;		On entry : 3F/0
 14561 ;;		On exit  : 0/0
 14562 ;;		Unchanged: 0/0
 14563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14564 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14565 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14567 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14568 ;;Total ram usage:       13 bytes
 14569 ;; Hardware stack levels used: 1
 14570 ;; Hardware stack levels required when called: 5
 14571 ;; This function calls:
 14572 ;;		___lwdiv
 14573 ;;		___lwmod
 14574 ;; This function is called by:
 14575 ;;		_sendSensorData
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579     044D                     _int16ToString:	
 14580                           ;psect for function _int16ToString
 14581                           
 14582                           
 14583                           ;device.c: 88: void int16ToString(int16_t value, char *data);device.c: 89: {;device.c: 9
      +                          0:     uint16_t divisor = 10000;
 14584                           
 14585                           ;incstack = 0
 14586                           ; Regs used in _int16ToString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14587     044D  3010               	movlw	16
 14588     044E  00B2               	movwf	int16ToString@divisor
 14589     044F  3027               	movlw	39
 14590     0450  00B3               	movwf	int16ToString@divisor+1
 14591                           
 14592                           ;device.c: 91:     int16_t dividend = value;
 14593     0451  0828               	movf	int16ToString@value+1,w
 14594     0452  00B1               	movwf	int16ToString@dividend+1
 14595     0453  0827               	movf	int16ToString@value,w
 14596     0454  00B0               	movwf	int16ToString@dividend
 14597                           
 14598                           ;device.c: 92:     int16_t result;;device.c: 93:     _Bool flag_0 = 0;
 14599     0455  01AB               	clrf	int16ToString@flag_0
 14600                           
 14601                           ;device.c: 94:     if((value == 0)||(value == 0xFFFF))
 14602     0456  0827               	movf	int16ToString@value,w
 14603     0457  0428               	iorwf	int16ToString@value+1,w
 14604     0458  1903               	btfsc	3,2
 14605     0459  2C60               	goto	l5115
 14606     045A  0A27               	incf	int16ToString@value,w
 14607     045B  1D03               	skipz
 14608     045C  2C66               	goto	l1177
 14609     045D  0A28               	incf	int16ToString@value+1,w
 14610     045E  1D03               	btfss	3,2
 14611     045F  2C66               	goto	l1177
 14612     0460                     l5115:
 14613                           
 14614                           ;device.c: 95:     {;device.c: 96:         *data = '0';
 14615     0460  0829               	movf	int16ToString@data,w
 14616     0461  0086               	movwf	6
 14617     0462  0187               	clrf	7
 14618     0463  3030               	movlw	48
 14619     0464  0081               	movwf	1
 14620                           
 14621                           ;device.c: 97:     }
 14622     0465  0008               	return
 14623     0466                     l1177:	
 14624                           ;device.c: 98:     else
 14625                           
 14626                           
 14627                           ;device.c: 99:     {;device.c: 100:         if(value < 0)
 14628     0466  1FA8               	btfss	int16ToString@value+1,7
 14629     0467  2C75               	goto	l5123
 14630                           
 14631                           ;device.c: 101:         {;device.c: 102:             *data = '-';
 14632     0468  0829               	movf	int16ToString@data,w
 14633     0469  0086               	movwf	6
 14634     046A  0187               	clrf	7
 14635     046B  302D               	movlw	45
 14636     046C  0081               	movwf	1
 14637                           
 14638                           ;device.c: 103:             dividend =~ value;
 14639     046D  0927               	comf	int16ToString@value,w
 14640     046E  00B0               	movwf	int16ToString@dividend
 14641     046F  0928               	comf	int16ToString@value+1,w
 14642     0470  00B1               	movwf	int16ToString@dividend+1
 14643                           
 14644                           ;device.c: 104:             data++;
 14645     0471  3001               	movlw	1
 14646     0472  00AA               	movwf	??_int16ToString
 14647     0473  082A               	movf	??_int16ToString,w
 14648     0474  07A9               	addwf	int16ToString@data,f
 14649     0475                     l5123:
 14650                           
 14651                           ;device.c: 106:         for(int i=0; i<5; i++)
 14652     0475  01AE               	clrf	int16ToString@i
 14653     0476  01AF               	clrf	int16ToString@i+1
 14654     0477                     l5129:
 14655                           
 14656                           ;device.c: 107:         {;device.c: 108:             result = dividend / divisor;
 14657     0477  0140               	movlb	0	; select bank0
 14658     0478  0833               	movf	int16ToString@divisor+1,w
 14659     0479  00A1               	movwf	___lwdiv@divisor+1
 14660     047A  0832               	movf	int16ToString@divisor,w
 14661     047B  00A0               	movwf	___lwdiv@divisor
 14662     047C  0831               	movf	int16ToString@dividend+1,w
 14663     047D  00A3               	movwf	___lwdiv@dividend+1
 14664     047E  0830               	movf	int16ToString@dividend,w
 14665     047F  00A2               	movwf	___lwdiv@dividend
 14666     0480  318E  26B2  3184   	fcall	___lwdiv
 14667     0483  0821               	movf	?___lwdiv+1,w
 14668     0484  00AD               	movwf	int16ToString@result+1
 14669     0485  0820               	movf	?___lwdiv,w
 14670     0486  00AC               	movwf	int16ToString@result
 14671                           
 14672                           ;device.c: 109:             if((result > 0) || (flag_0 == 1))
 14673     0487  082D               	movf	int16ToString@result+1,w
 14674     0488  3A80               	xorlw	128
 14675     0489  00AA               	movwf	??_int16ToString
 14676     048A  3080               	movlw	128
 14677     048B  022A               	subwf	??_int16ToString,w
 14678     048C  1D03               	skipz
 14679     048D  2C90               	goto	u2885
 14680     048E  3001               	movlw	1
 14681     048F  022C               	subwf	int16ToString@result,w
 14682     0490                     u2885:
 14683     0490  1803               	skipnc
 14684     0491  2C96               	goto	l5135
 14685     0492  0140               	movlb	0	; select bank0
 14686     0493  032B               	decf	int16ToString@flag_0,w
 14687     0494  1D03               	btfss	3,2
 14688     0495  2CA3               	goto	l5141
 14689     0496                     l5135:
 14690                           
 14691                           ;device.c: 110:             {;device.c: 111:                 *data = '0'+result;
 14692     0496  0140               	movlb	0	; select bank0
 14693     0497  0829               	movf	int16ToString@data,w
 14694     0498  0086               	movwf	6
 14695     0499  0187               	clrf	7
 14696     049A  082C               	movf	int16ToString@result,w
 14697     049B  3E30               	addlw	48
 14698     049C  0081               	movwf	1
 14699                           
 14700                           ;device.c: 112:                 data++;
 14701     049D  3001               	movlw	1
 14702     049E  00AA               	movwf	??_int16ToString
 14703     049F  082A               	movf	??_int16ToString,w
 14704     04A0  07A9               	addwf	int16ToString@data,f
 14705                           
 14706                           ;device.c: 113:                 flag_0 = 1;
 14707     04A1  01AB               	clrf	int16ToString@flag_0
 14708     04A2  0AAB               	incf	int16ToString@flag_0,f
 14709     04A3                     l5141:
 14710                           
 14711                           ;device.c: 115:             dividend = dividend % divisor;
 14712     04A3  0833               	movf	int16ToString@divisor+1,w
 14713     04A4  00A1               	movwf	___lwmod@divisor+1
 14714     04A5  0832               	movf	int16ToString@divisor,w
 14715     04A6  00A0               	movwf	___lwmod@divisor
 14716     04A7  0831               	movf	int16ToString@dividend+1,w
 14717     04A8  00A3               	movwf	___lwmod@dividend+1
 14718     04A9  0830               	movf	int16ToString@dividend,w
 14719     04AA  00A2               	movwf	___lwmod@dividend
 14720     04AB  318D  2596  3184   	fcall	___lwmod
 14721     04AE  0821               	movf	?___lwmod+1,w
 14722     04AF  00B1               	movwf	int16ToString@dividend+1
 14723     04B0  0820               	movf	?___lwmod,w
 14724     04B1  00B0               	movwf	int16ToString@dividend
 14725                           
 14726                           ;device.c: 116:             divisor /= 10;
 14727     04B2  300A               	movlw	10
 14728     04B3  00A0               	movwf	___lwdiv@divisor
 14729     04B4  3000               	movlw	0
 14730     04B5  00A1               	movwf	___lwdiv@divisor+1
 14731     04B6  0833               	movf	int16ToString@divisor+1,w
 14732     04B7  00A3               	movwf	___lwdiv@dividend+1
 14733     04B8  0832               	movf	int16ToString@divisor,w
 14734     04B9  00A2               	movwf	___lwdiv@dividend
 14735     04BA  318E  26B2  3184   	fcall	___lwdiv
 14736     04BD  0821               	movf	?___lwdiv+1,w
 14737     04BE  00B3               	movwf	int16ToString@divisor+1
 14738     04BF  0820               	movf	?___lwdiv,w
 14739     04C0  00B2               	movwf	int16ToString@divisor
 14740                           
 14741                           ;device.c: 117:         }
 14742     04C1  3001               	movlw	1
 14743     04C2  07AE               	addwf	int16ToString@i,f
 14744     04C3  3000               	movlw	0
 14745     04C4  3DAF               	addwfc	int16ToString@i+1,f
 14746     04C5  082F               	movf	int16ToString@i+1,w
 14747     04C6  3A80               	xorlw	128
 14748     04C7  00AA               	movwf	??_int16ToString
 14749     04C8  3080               	movlw	128
 14750     04C9  022A               	subwf	??_int16ToString,w
 14751     04CA  1D03               	skipz
 14752     04CB  2CCE               	goto	u2905
 14753     04CC  3005               	movlw	5
 14754     04CD  022E               	subwf	int16ToString@i,w
 14755     04CE                     u2905:
 14756     04CE  1803               	btfsc	3,0
 14757     04CF  0008               	return
 14758     04D0  2C77               	goto	l5129
 14759     04D1                     __end_of_int16ToString:
 14760                           
 14761                           	psect	text72
 14762     0D96                     __ptext72:	
 14763 ;; *************** function ___lwmod *****************
 14764 ;; Defined at:
 14765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
 14766 ;; Parameters:    Size  Location     Type
 14767 ;;  divisor         2    0[BANK0 ] unsigned int 
 14768 ;;  dividend        2    2[BANK0 ] unsigned int 
 14769 ;; Auto vars:     Size  Location     Type
 14770 ;;  counter         1    5[COMMON] unsigned char 
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  2    0[BANK0 ] unsigned int 
 14773 ;; Registers used:
 14774 ;;		wreg, status,2, status,0
 14775 ;; Tracked objects:
 14776 ;;		On entry : 3F/0
 14777 ;;		On exit  : 3F/0
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14780 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;Total ram usage:        6 bytes
 14785 ;; Hardware stack levels used: 1
 14786 ;; Hardware stack levels required when called: 4
 14787 ;; This function calls:
 14788 ;;		Nothing
 14789 ;; This function is called by:
 14790 ;;		_int16ToString
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794     0D96                     ___lwmod:	
 14795                           ;psect for function ___lwmod
 14796                           
 14797                           
 14798                           ;incstack = 0
 14799                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14800     0D96  0820               	movf	___lwmod@divisor,w
 14801     0D97  0421               	iorwf	___lwmod@divisor+1,w
 14802     0D98  1903               	btfsc	3,2
 14803     0D99  2DBD               	goto	l5057
 14804     0D9A  01F5               	clrf	___lwmod@counter
 14805     0D9B  0AF5               	incf	___lwmod@counter,f
 14806     0D9C                     l5047:
 14807     0D9C  1BA1               	btfsc	___lwmod@divisor+1,7
 14808     0D9D  2DA8               	goto	l5049
 14809     0D9E  3001               	movlw	1
 14810     0D9F                     u2715:
 14811     0D9F  35A0               	lslf	___lwmod@divisor,f
 14812     0DA0  0DA1               	rlf	___lwmod@divisor+1,f
 14813     0DA1  0B89               	decfsz	9,f
 14814     0DA2  2D9F               	goto	u2715
 14815     0DA3  3001               	movlw	1
 14816     0DA4  00F4               	movwf	??___lwmod
 14817     0DA5  0874               	movf	??___lwmod,w
 14818     0DA6  07F5               	addwf	___lwmod@counter,f
 14819     0DA7  2D9C               	goto	l5047
 14820     0DA8                     l5049:
 14821     0DA8  0821               	movf	___lwmod@divisor+1,w
 14822     0DA9  0223               	subwf	___lwmod@dividend+1,w
 14823     0DAA  1D03               	skipz
 14824     0DAB  2DAE               	goto	u2735
 14825     0DAC  0820               	movf	___lwmod@divisor,w
 14826     0DAD  0222               	subwf	___lwmod@dividend,w
 14827     0DAE                     u2735:
 14828     0DAE  1C03               	skipc
 14829     0DAF  2DB4               	goto	l5053
 14830     0DB0  0820               	movf	___lwmod@divisor,w
 14831     0DB1  02A2               	subwf	___lwmod@dividend,f
 14832     0DB2  0821               	movf	___lwmod@divisor+1,w
 14833     0DB3  3BA3               	subwfb	___lwmod@dividend+1,f
 14834     0DB4                     l5053:
 14835     0DB4  3001               	movlw	1
 14836     0DB5                     u2745:
 14837     0DB5  36A1               	lsrf	___lwmod@divisor+1,f
 14838     0DB6  0CA0               	rrf	___lwmod@divisor,f
 14839     0DB7  0B89               	decfsz	9,f
 14840     0DB8  2DB5               	goto	u2745
 14841     0DB9  3001               	movlw	1
 14842     0DBA  02F5               	subwf	___lwmod@counter,f
 14843     0DBB  1D03               	btfss	3,2
 14844     0DBC  2DA8               	goto	l5049
 14845     0DBD                     l5057:
 14846     0DBD  0823               	movf	___lwmod@dividend+1,w
 14847     0DBE  00A1               	movwf	?___lwmod+1
 14848     0DBF  0822               	movf	___lwmod@dividend,w
 14849     0DC0  00A0               	movwf	?___lwmod
 14850     0DC1  0008               	return
 14851     0DC2                     __end_of___lwmod:
 14852                           
 14853                           	psect	text73
 14854     0EB2                     __ptext73:	
 14855 ;; *************** function ___lwdiv *****************
 14856 ;; Defined at:
 14857 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
 14858 ;; Parameters:    Size  Location     Type
 14859 ;;  divisor         2    0[BANK0 ] unsigned int 
 14860 ;;  dividend        2    2[BANK0 ] unsigned int 
 14861 ;; Auto vars:     Size  Location     Type
 14862 ;;  quotient        2    5[BANK0 ] unsigned int 
 14863 ;;  counter         1    4[BANK0 ] unsigned char 
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  2    0[BANK0 ] unsigned int 
 14866 ;; Registers used:
 14867 ;;		wreg, status,2, status,0
 14868 ;; Tracked objects:
 14869 ;;		On entry : 3F/0
 14870 ;;		On exit  : 3F/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;Total ram usage:        8 bytes
 14878 ;; Hardware stack levels used: 1
 14879 ;; Hardware stack levels required when called: 4
 14880 ;; This function calls:
 14881 ;;		Nothing
 14882 ;; This function is called by:
 14883 ;;		_int16ToString
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           
 14887     0EB2                     ___lwdiv:	
 14888                           ;psect for function ___lwdiv
 14889                           
 14890                           
 14891                           ;incstack = 0
 14892                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14893     0EB2  01A5               	clrf	___lwdiv@quotient
 14894     0EB3  01A6               	clrf	___lwdiv@quotient+1
 14895     0EB4  0820               	movf	___lwdiv@divisor,w
 14896     0EB5  0421               	iorwf	___lwdiv@divisor+1,w
 14897     0EB6  1903               	btfsc	3,2
 14898     0EB7  2EE1               	goto	l5035
 14899     0EB8  01A4               	clrf	___lwdiv@counter
 14900     0EB9  0AA4               	incf	___lwdiv@counter,f
 14901     0EBA                     l5023:
 14902     0EBA  1BA1               	btfsc	___lwdiv@divisor+1,7
 14903     0EBB  2EC6               	goto	l5025
 14904     0EBC  3001               	movlw	1
 14905     0EBD                     u2645:
 14906     0EBD  35A0               	lslf	___lwdiv@divisor,f
 14907     0EBE  0DA1               	rlf	___lwdiv@divisor+1,f
 14908     0EBF  0B89               	decfsz	9,f
 14909     0EC0  2EBD               	goto	u2645
 14910     0EC1  3001               	movlw	1
 14911     0EC2  00F4               	movwf	??___lwdiv
 14912     0EC3  0874               	movf	??___lwdiv,w
 14913     0EC4  07A4               	addwf	___lwdiv@counter,f
 14914     0EC5  2EBA               	goto	l5023
 14915     0EC6                     l5025:
 14916     0EC6  3001               	movlw	1
 14917     0EC7                     u2665:
 14918     0EC7  35A5               	lslf	___lwdiv@quotient,f
 14919     0EC8  0DA6               	rlf	___lwdiv@quotient+1,f
 14920     0EC9  0B89               	decfsz	9,f
 14921     0ECA  2EC7               	goto	u2665
 14922     0ECB  0821               	movf	___lwdiv@divisor+1,w
 14923     0ECC  0223               	subwf	___lwdiv@dividend+1,w
 14924     0ECD  1D03               	skipz
 14925     0ECE  2ED1               	goto	u2675
 14926     0ECF  0820               	movf	___lwdiv@divisor,w
 14927     0ED0  0222               	subwf	___lwdiv@dividend,w
 14928     0ED1                     u2675:
 14929     0ED1  1C03               	skipc
 14930     0ED2  2ED8               	goto	l5031
 14931     0ED3  0820               	movf	___lwdiv@divisor,w
 14932     0ED4  02A2               	subwf	___lwdiv@dividend,f
 14933     0ED5  0821               	movf	___lwdiv@divisor+1,w
 14934     0ED6  3BA3               	subwfb	___lwdiv@dividend+1,f
 14935     0ED7  1425               	bsf	___lwdiv@quotient,0
 14936     0ED8                     l5031:
 14937     0ED8  3001               	movlw	1
 14938     0ED9                     u2685:
 14939     0ED9  36A1               	lsrf	___lwdiv@divisor+1,f
 14940     0EDA  0CA0               	rrf	___lwdiv@divisor,f
 14941     0EDB  0B89               	decfsz	9,f
 14942     0EDC  2ED9               	goto	u2685
 14943     0EDD  3001               	movlw	1
 14944     0EDE  02A4               	subwf	___lwdiv@counter,f
 14945     0EDF  1D03               	btfss	3,2
 14946     0EE0  2EC6               	goto	l5025
 14947     0EE1                     l5035:
 14948     0EE1  0826               	movf	___lwdiv@quotient+1,w
 14949     0EE2  00A1               	movwf	?___lwdiv+1
 14950     0EE3  0825               	movf	___lwdiv@quotient,w
 14951     0EE4  00A0               	movwf	?___lwdiv
 14952     0EE5  0008               	return
 14953     0EE6                     __end_of___lwdiv:
 14954                           
 14955                           	psect	text74
 14956     09C9                     __ptext74:	
 14957 ;; *************** function _TMR0_Reload *****************
 14958 ;; Defined at:
 14959 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;		None
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;		None
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  1    wreg      void 
 14966 ;; Registers used:
 14967 ;;		wreg
 14968 ;; Tracked objects:
 14969 ;;		On entry : 3F/0
 14970 ;;		On exit  : 3F/B
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;Total ram usage:        0 bytes
 14978 ;; Hardware stack levels used: 1
 14979 ;; Hardware stack levels required when called: 4
 14980 ;; This function calls:
 14981 ;;		Nothing
 14982 ;; This function is called by:
 14983 ;;		_processCommand
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987     09C9                     _TMR0_Reload:	
 14988                           ;psect for function _TMR0_Reload
 14989                           
 14990                           
 14991                           ;mcc_generated_files/tmr0.c: 130:     TMR0H = timer0ReloadVal16bit >> 8;
 14992                           
 14993                           ;incstack = 0
 14994                           ; Regs used in _TMR0_Reload: [wreg]
 14995     09C9  0877               	movf	_timer0ReloadVal16bit+1,w	;volatile
 14996     09CA  014B               	movlb	11	; select bank11
 14997     09CB  009D               	movwf	29	;volatile
 14998                           
 14999                           ;mcc_generated_files/tmr0.c: 131:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 15000     09CC  0876               	movf	_timer0ReloadVal16bit,w	;volatile
 15001     09CD  009C               	movwf	28	;volatile
 15002     09CE  0008               	return
 15003     09CF                     __end_of_TMR0_Reload:
 15004                           
 15005                           	psect	text75
 15006     0D1D                     __ptext75:	
 15007 ;; *************** function _initRxBuffer *****************
 15008 ;; Defined at:
 15009 ;;		line 8 in file "communication.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;  buf             1    wreg     PTR unsigned char 
 15012 ;;		 -> main@packet(11), 
 15013 ;;  size            4    0[BANK0 ] unsigned long 
 15014 ;; Auto vars:     Size  Location     Type
 15015 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 15016 ;;		 -> main@packet(11), 
 15017 ;;  i               2    9[BANK0 ] int 
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  1    wreg      void 
 15020 ;; Registers used:
 15021 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15022 ;; Tracked objects:
 15023 ;;		On entry : 3F/0
 15024 ;;		On exit  : 3F/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15027 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15028 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15030 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;Total ram usage:       11 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; Hardware stack levels required when called: 4
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		_main
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041     0D1D                     _initRxBuffer:	
 15042                           ;psect for function _initRxBuffer
 15043                           
 15044                           
 15045                           ;incstack = 0
 15046                           ; Regs used in _initRxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 15047                           ;initRxBuffer@buf stored from wreg
 15048     0D1D  00A8               	movwf	initRxBuffer@buf
 15049                           
 15050                           ;communication.c: 8: void initRxBuffer(char* buf, uint32_t size);communication.c: 9: {;c
      +                          ommunication.c: 10:     for(int i=0; i<size; i++)
 15051     0D1E  01A9               	clrf	initRxBuffer@i
 15052     0D1F  01AA               	clrf	initRxBuffer@i+1
 15053     0D20                     l5561:
 15054     0D20  0829               	movf	initRxBuffer@i,w
 15055     0D21  00A4               	movwf	??_initRxBuffer
 15056     0D22  082A               	movf	initRxBuffer@i+1,w
 15057     0D23  00A5               	movwf	??_initRxBuffer+1
 15058     0D24  3000               	movlw	0
 15059     0D25  1BA5               	btfsc	??_initRxBuffer+1,7
 15060     0D26  30FF               	movlw	255
 15061     0D27  00A6               	movwf	??_initRxBuffer+2
 15062     0D28  00A7               	movwf	??_initRxBuffer+3
 15063     0D29  0823               	movf	initRxBuffer@size+3,w
 15064     0D2A  0227               	subwf	??_initRxBuffer+3,w
 15065     0D2B  1D03               	skipz
 15066     0D2C  2D37               	goto	u3275
 15067     0D2D  0822               	movf	initRxBuffer@size+2,w
 15068     0D2E  0226               	subwf	??_initRxBuffer+2,w
 15069     0D2F  1D03               	skipz
 15070     0D30  2D37               	goto	u3275
 15071     0D31  0821               	movf	initRxBuffer@size+1,w
 15072     0D32  0225               	subwf	??_initRxBuffer+1,w
 15073     0D33  1D03               	skipz
 15074     0D34  2D37               	goto	u3275
 15075     0D35  0820               	movf	initRxBuffer@size,w
 15076     0D36  0224               	subwf	??_initRxBuffer,w
 15077     0D37                     u3275:
 15078     0D37  1803               	btfsc	3,0
 15079     0D38  0008               	return
 15080                           
 15081                           ;communication.c: 11:     {;communication.c: 12:         buf[i]='\0';
 15082     0D39  0829               	movf	initRxBuffer@i,w
 15083     0D3A  0728               	addwf	initRxBuffer@buf,w
 15084     0D3B  00A4               	movwf	??_initRxBuffer
 15085     0D3C  0824               	movf	??_initRxBuffer,w
 15086     0D3D  0086               	movwf	6
 15087     0D3E  0187               	clrf	7
 15088     0D3F  0181               	clrf	1
 15089                           
 15090                           ;communication.c: 13:     }
 15091     0D40  3001               	movlw	1
 15092     0D41  07A9               	addwf	initRxBuffer@i,f
 15093     0D42  3000               	movlw	0
 15094     0D43  3DAA               	addwfc	initRxBuffer@i+1,f
 15095     0D44  2D20               	goto	l5561
 15096     0D45                     __end_of_initRxBuffer:
 15097                           
 15098                           	psect	text76
 15099     0F1A                     __ptext76:	
 15100 ;; *************** function _getMetrics *****************
 15101 ;; Defined at:
 15102 ;;		line 100 in file "sensor.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;  device          2   30[BANK0 ] PTR struct .
 15105 ;;		 -> cons(59), battery(59), panel(59), 
 15106 ;; Auto vars:     Size  Location     Type
 15107 ;;		None
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  1    wreg      void 
 15110 ;; Registers used:
 15111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15112 ;; Tracked objects:
 15113 ;;		On entry : 3F/0
 15114 ;;		On exit  : 3F/0
 15115 ;;		Unchanged: 0/0
 15116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15121 ;;Total ram usage:        2 bytes
 15122 ;; Hardware stack levels used: 1
 15123 ;; Hardware stack levels required when called: 6
 15124 ;; This function calls:
 15125 ;;		_getMax
 15126 ;;		_getMed
 15127 ;;		_getMin
 15128 ;; This function is called by:
 15129 ;;		_main
 15130 ;; This function uses a non-reentrant model
 15131 ;;
 15132                           
 15133     0F1A                     _getMetrics:	
 15134                           ;psect for function _getMetrics
 15135                           
 15136                           
 15137                           ;sensor.c: 100: void getMetrics(sensor_t *device);sensor.c: 101: {;sensor.c: 102:     ge
      +                          tMax(&device->sensor_data.current);
 15138                           
 15139                           ;incstack = 0
 15140                           ; Regs used in _getMetrics: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15141     0F1A  083E               	movf	getMetrics@device,w
 15142     0F1B  3E24               	addlw	36
 15143     0F1C  00F4               	movwf	getMax@data
 15144     0F1D  3000               	movlw	0
 15145     0F1E  3D3F               	addwfc	getMetrics@device+1,w
 15146     0F1F  00F5               	movwf	getMax@data+1
 15147     0F20  3186  26B4  318F   	fcall	_getMax
 15148                           
 15149                           ;sensor.c: 103:     getMin(&device->sensor_data.current);
 15150     0F23  083E               	movf	getMetrics@device,w
 15151     0F24  3E24               	addlw	36
 15152     0F25  00F4               	movwf	getMin@data
 15153     0F26  3000               	movlw	0
 15154     0F27  3D3F               	addwfc	getMetrics@device+1,w
 15155     0F28  00F5               	movwf	getMin@data+1
 15156     0F29  3186  2663  318F   	fcall	_getMin
 15157                           
 15158                           ;sensor.c: 104:     getMed(&device->sensor_data.current);
 15159     0F2C  083E               	movf	getMetrics@device,w
 15160     0F2D  3E24               	addlw	36
 15161     0F2E  00AE               	movwf	getMed@data
 15162     0F2F  3000               	movlw	0
 15163     0F30  3D3F               	addwfc	getMetrics@device+1,w
 15164     0F31  00AF               	movwf	getMed@data+1
 15165     0F32  3185  25B5  318F   	fcall	_getMed
 15166                           
 15167                           ;sensor.c: 105:     getMax(&device->sensor_data.voltage);
 15168     0F35  083E               	movf	getMetrics@device,w
 15169     0F36  3E0D               	addlw	13
 15170     0F37  00F4               	movwf	getMax@data
 15171     0F38  3000               	movlw	0
 15172     0F39  3D3F               	addwfc	getMetrics@device+1,w
 15173     0F3A  00F5               	movwf	getMax@data+1
 15174     0F3B  3186  26B4  318F   	fcall	_getMax
 15175                           
 15176                           ;sensor.c: 106:     getMin(&device->sensor_data.voltage);
 15177     0F3E  083E               	movf	getMetrics@device,w
 15178     0F3F  3E0D               	addlw	13
 15179     0F40  00F4               	movwf	getMin@data
 15180     0F41  3000               	movlw	0
 15181     0F42  3D3F               	addwfc	getMetrics@device+1,w
 15182     0F43  00F5               	movwf	getMin@data+1
 15183     0F44  3186  2663  318F   	fcall	_getMin
 15184                           
 15185                           ;sensor.c: 107:     getMed(&device->sensor_data.voltage);
 15186     0F47  083E               	movf	getMetrics@device,w
 15187     0F48  3E0D               	addlw	13
 15188     0F49  00AE               	movwf	getMed@data
 15189     0F4A  3000               	movlw	0
 15190     0F4B  3D3F               	addwfc	getMetrics@device+1,w
 15191     0F4C  00AF               	movwf	getMed@data+1
 15192     0F4D  3185  25B5         	fcall	_getMed
 15193     0F4F  0008               	return
 15194     0F50                     __end_of_getMetrics:
 15195                           
 15196                           	psect	text77
 15197     0663                     __ptext77:	
 15198 ;; *************** function _getMin *****************
 15199 ;; Defined at:
 15200 ;;		line 130 in file "sensor.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;  data            2    4[COMMON] PTR struct .
 15203 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 15204 ;;		 -> panel.sensor_data(46), panel(59), 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  i               1    7[BANK0 ] unsigned char 
 15207 ;;  aux             1    8[BANK0 ] unsigned char 
 15208 ;; Return value:  Size  Location     Type
 15209 ;;                  1    wreg      void 
 15210 ;; Registers used:
 15211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15212 ;; Tracked objects:
 15213 ;;		On entry : 3F/0
 15214 ;;		On exit  : 3F/0
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15219 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15220 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15221 ;;Total ram usage:       11 bytes
 15222 ;; Hardware stack levels used: 1
 15223 ;; Hardware stack levels required when called: 4
 15224 ;; This function calls:
 15225 ;;		Nothing
 15226 ;; This function is called by:
 15227 ;;		_getMetrics
 15228 ;;		_processCommand
 15229 ;; This function uses a non-reentrant model
 15230 ;;
 15231                           
 15232     0663                     _getMin:	
 15233                           ;psect for function _getMin
 15234                           
 15235                           
 15236                           ;sensor.c: 130: void getMin(measure_data_t *data);sensor.c: 131: {;sensor.c: 132:     ui
      +                          nt8_t aux;;sensor.c: 133:     aux = data->pWrite;
 15237                           
 15238                           ;incstack = 0
 15239                           ; Regs used in _getMin: [wreg-fsr1h+status,2+status,0]
 15240     0663  0874               	movf	getMin@data,w
 15241     0664  0086               	movwf	6
 15242     0665  0875               	movf	getMin@data+1,w
 15243     0666  0087               	movwf	7
 15244     0667  3156               	addfsr 1,22
 15245     0668  0801               	movf	1,w
 15246     0669  00A8               	movwf	getMin@aux
 15247                           
 15248                           ;sensor.c: 135:     for(uint8_t i=0; i<8; i++)
 15249     066A  01A7               	clrf	getMin@i
 15250     066B                     l5493:
 15251                           
 15252                           ;sensor.c: 136:     {;sensor.c: 137:         if(data->min > data->hist[aux])
 15253     066B  0874               	movf	getMin@data,w
 15254     066C  0086               	movwf	6
 15255     066D  0875               	movf	getMin@data+1,w
 15256     066E  0087               	movwf	7
 15257     066F  3152               	addfsr 1,18
 15258     0670  3F40               	moviw [0]fsr1
 15259     0671  00A0               	movwf	??_getMin
 15260     0672  3F41               	moviw [1]fsr1
 15261     0673  00A1               	movwf	??_getMin+1
 15262     0674  0828               	movf	getMin@aux,w
 15263     0675  00A2               	movwf	??_getMin+2
 15264     0676  01A3               	clrf	??_getMin+3
 15265     0677  35A2               	lslf	??_getMin+2,f
 15266     0678  0DA3               	rlf	??_getMin+3,f
 15267     0679  0822               	movf	??_getMin+2,w
 15268     067A  0774               	addwf	getMin@data,w
 15269     067B  0086               	movwf	6
 15270     067C  0823               	movf	??_getMin+3,w
 15271     067D  3D75               	addwfc	getMin@data+1,w
 15272     067E  0087               	movwf	7
 15273     067F  3F40               	moviw [0]fsr1
 15274     0680  00A4               	movwf	??_getMin+4
 15275     0681  3F41               	moviw [1]fsr1
 15276     0682  00A5               	movwf	??_getMin+5
 15277     0683  0825               	movf	??_getMin+5,w
 15278     0684  3A80               	xorlw	128
 15279     0685  00A6               	movwf	??_getMin+6
 15280     0686  0821               	movf	??_getMin+1,w
 15281     0687  3A80               	xorlw	128
 15282     0688  0226               	subwf	??_getMin+6,w
 15283     0689  1D03               	skipz
 15284     068A  2E8D               	goto	u3205
 15285     068B  0820               	movf	??_getMin,w
 15286     068C  0224               	subwf	??_getMin+4,w
 15287     068D                     u3205:
 15288     068D  1803               	skipnc
 15289     068E  2EA4               	goto	l5497
 15290                           
 15291                           ;sensor.c: 138:         {;sensor.c: 139:             data->min = data->hist[aux];
 15292     068F  0140               	movlb	0	; select bank0
 15293     0690  0828               	movf	getMin@aux,w
 15294     0691  00A0               	movwf	??_getMin
 15295     0692  01A1               	clrf	??_getMin+1
 15296     0693  35A0               	lslf	??_getMin,f
 15297     0694  0DA1               	rlf	??_getMin+1,f
 15298     0695  0820               	movf	??_getMin,w
 15299     0696  0774               	addwf	getMin@data,w
 15300     0697  0086               	movwf	6
 15301     0698  0821               	movf	??_getMin+1,w
 15302     0699  3D75               	addwfc	getMin@data+1,w
 15303     069A  0087               	movwf	7
 15304     069B  0874               	movf	getMin@data,w
 15305     069C  0084               	movwf	4
 15306     069D  0875               	movf	getMin@data+1,w
 15307     069E  0085               	movwf	5
 15308     069F  3112               	addfsr 0,18
 15309     06A0  3F40               	moviw [0]fsr1
 15310     06A1  3F80               	movwi [0]fsr0
 15311     06A2  3F41               	moviw [1]fsr1
 15312     06A3  3F81               	movwi [1]fsr0
 15313     06A4                     l5497:
 15314                           
 15315                           ;sensor.c: 141:         if(aux == 0)
 15316     06A4  0140               	movlb	0	; select bank0
 15317     06A5  0828               	movf	getMin@aux,w
 15318                           
 15319                           ;sensor.c: 142:         {;sensor.c: 143:             aux = 8;
 15320     06A6  3008               	movlw	8
 15321     06A7  1903               	btfsc	3,2
 15322     06A8  00A8               	movwf	getMin@aux
 15323                           
 15324                           ;sensor.c: 145:         aux--;
 15325     06A9  3001               	movlw	1
 15326     06AA  02A8               	subwf	getMin@aux,f
 15327                           
 15328                           ;sensor.c: 146:     }
 15329     06AB  3001               	movlw	1
 15330     06AC  00A0               	movwf	??_getMin
 15331     06AD  0820               	movf	??_getMin,w
 15332     06AE  07A7               	addwf	getMin@i,f
 15333     06AF  3008               	movlw	8
 15334     06B0  0227               	subwf	getMin@i,w
 15335     06B1  1803               	btfsc	3,0
 15336     06B2  0008               	return
 15337     06B3  2E6B               	goto	l5493
 15338     06B4                     __end_of_getMin:
 15339                           
 15340                           	psect	text78
 15341     05B5                     __ptext78:	
 15342 ;; *************** function _getMed *****************
 15343 ;; Defined at:
 15344 ;;		line 150 in file "sensor.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;  data            2   14[BANK0 ] PTR struct .
 15347 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 15348 ;;		 -> panel.sensor_data(46), panel(59), 
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;  i               1   28[BANK0 ] unsigned char 
 15351 ;;  buff            4   24[BANK0 ] long 
 15352 ;;  aux             1   29[BANK0 ] unsigned char 
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 3F/0
 15359 ;;		On exit  : 3F/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15363 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15365 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;Total ram usage:       16 bytes
 15367 ;; Hardware stack levels used: 1
 15368 ;; Hardware stack levels required when called: 5
 15369 ;; This function calls:
 15370 ;;		___aldiv
 15371 ;; This function is called by:
 15372 ;;		_getMetrics
 15373 ;;		_processCommand
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377     05B5                     _getMed:	
 15378                           ;psect for function _getMed
 15379                           
 15380                           
 15381                           ;sensor.c: 150: void getMed(measure_data_t *data);sensor.c: 151: {;sensor.c: 152:     in
      +                          t32_t buff = 0;
 15382                           
 15383                           ;incstack = 0
 15384                           ; Regs used in _getMed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15385     05B5  3000               	movlw	0
 15386     05B6  00BB               	movwf	getMed@buff+3
 15387     05B7  3000               	movlw	0
 15388     05B8  00BA               	movwf	getMed@buff+2
 15389     05B9  3000               	movlw	0
 15390     05BA  00B9               	movwf	getMed@buff+1
 15391     05BB  3000               	movlw	0
 15392     05BC  00B8               	movwf	getMed@buff
 15393                           
 15394                           ;sensor.c: 153:     uint8_t aux;;sensor.c: 154:     aux = data->pWrite;
 15395     05BD  082E               	movf	getMed@data,w
 15396     05BE  0086               	movwf	6
 15397     05BF  082F               	movf	getMed@data+1,w
 15398     05C0  0087               	movwf	7
 15399     05C1  3156               	addfsr 1,22
 15400     05C2  0801               	movf	1,w
 15401     05C3  00BD               	movwf	getMed@aux
 15402                           
 15403                           ;sensor.c: 155:     for(uint8_t i=0; i<8; i++)
 15404     05C4  01BC               	clrf	getMed@i
 15405     05C5                     l5515:
 15406                           
 15407                           ;sensor.c: 156:     {;sensor.c: 157:         buff += data->hist[aux];
 15408     05C5  083D               	movf	getMed@aux,w
 15409     05C6  00B0               	movwf	??_getMed
 15410     05C7  01B1               	clrf	??_getMed+1
 15411     05C8  35B0               	lslf	??_getMed,f
 15412     05C9  0DB1               	rlf	??_getMed+1,f
 15413     05CA  0830               	movf	??_getMed,w
 15414     05CB  072E               	addwf	getMed@data,w
 15415     05CC  0086               	movwf	6
 15416     05CD  0831               	movf	??_getMed+1,w
 15417     05CE  3D2F               	addwfc	getMed@data+1,w
 15418     05CF  0087               	movwf	7
 15419     05D0  3F40               	moviw [0]fsr1
 15420     05D1  00B2               	movwf	??_getMed+2
 15421     05D2  3F41               	moviw [1]fsr1
 15422     05D3  00B3               	movwf	??_getMed+3
 15423     05D4  0832               	movf	??_getMed+2,w
 15424     05D5  00B4               	movwf	??_getMed+4
 15425     05D6  0833               	movf	??_getMed+3,w
 15426     05D7  00B5               	movwf	??_getMed+5
 15427     05D8  3000               	movlw	0
 15428     05D9  1BB5               	btfsc	??_getMed+5,7
 15429     05DA  30FF               	movlw	255
 15430     05DB  00B6               	movwf	??_getMed+6
 15431     05DC  00B7               	movwf	??_getMed+7
 15432     05DD  0834               	movf	??_getMed+4,w
 15433     05DE  07B8               	addwf	getMed@buff,f
 15434     05DF  0835               	movf	??_getMed+5,w
 15435     05E0  3DB9               	addwfc	getMed@buff+1,f
 15436     05E1  0836               	movf	??_getMed+6,w
 15437     05E2  3DBA               	addwfc	getMed@buff+2,f
 15438     05E3  0837               	movf	??_getMed+7,w
 15439     05E4  3DBB               	addwfc	getMed@buff+3,f
 15440                           
 15441                           ;sensor.c: 158:         if(aux == 0)
 15442     05E5  083D               	movf	getMed@aux,w
 15443                           
 15444                           ;sensor.c: 159:         {;sensor.c: 160:             aux = 8;
 15445     05E6  3008               	movlw	8
 15446     05E7  1903               	btfsc	3,2
 15447     05E8  00BD               	movwf	getMed@aux
 15448                           
 15449                           ;sensor.c: 162:         aux--;
 15450     05E9  3001               	movlw	1
 15451     05EA  02BD               	subwf	getMed@aux,f
 15452                           
 15453                           ;sensor.c: 163:     }
 15454     05EB  3001               	movlw	1
 15455     05EC  00B0               	movwf	??_getMed
 15456     05ED  0830               	movf	??_getMed,w
 15457     05EE  07BC               	addwf	getMed@i,f
 15458     05EF  3008               	movlw	8
 15459     05F0  023C               	subwf	getMed@i,w
 15460     05F1  1C03               	skipc
 15461     05F2  2DC5               	goto	l5515
 15462                           
 15463                           ;sensor.c: 164:     data->med = buff/8;
 15464     05F3  3000               	movlw	0
 15465     05F4  00A3               	movwf	___aldiv@divisor+3
 15466     05F5  3000               	movlw	0
 15467     05F6  00A2               	movwf	___aldiv@divisor+2
 15468     05F7  3000               	movlw	0
 15469     05F8  00A1               	movwf	___aldiv@divisor+1
 15470     05F9  3008               	movlw	8
 15471     05FA  00A0               	movwf	___aldiv@divisor
 15472     05FB  083B               	movf	getMed@buff+3,w
 15473     05FC  00A7               	movwf	___aldiv@dividend+3
 15474     05FD  083A               	movf	getMed@buff+2,w
 15475     05FE  00A6               	movwf	___aldiv@dividend+2
 15476     05FF  0839               	movf	getMed@buff+1,w
 15477     0600  00A5               	movwf	___aldiv@dividend+1
 15478     0601  0838               	movf	getMed@buff,w
 15479     0602  00A4               	movwf	___aldiv@dividend
 15480     0603  3184  24D1         	fcall	___aldiv
 15481     0605  082E               	movf	getMed@data,w
 15482     0606  0086               	movwf	6
 15483     0607  082F               	movf	getMed@data+1,w
 15484     0608  0087               	movwf	7
 15485     0609  3154               	addfsr 1,20
 15486     060A  0820               	movf	?___aldiv,w
 15487     060B  3FC0               	movwi [0]fsr1
 15488     060C  0821               	movf	?___aldiv+1,w
 15489     060D  3FC1               	movwi [1]fsr1
 15490     060E  0008               	return
 15491     060F                     __end_of_getMed:
 15492                           
 15493                           	psect	text79
 15494     04D1                     __ptext79:	
 15495 ;; *************** function ___aldiv *****************
 15496 ;; Defined at:
 15497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
 15498 ;; Parameters:    Size  Location     Type
 15499 ;;  divisor         4    0[BANK0 ] long 
 15500 ;;  dividend        4    4[BANK0 ] long 
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;  quotient        4   10[BANK0 ] long 
 15503 ;;  sign            1    9[BANK0 ] unsigned char 
 15504 ;;  counter         1    8[BANK0 ] unsigned char 
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  4    0[BANK0 ] long 
 15507 ;; Registers used:
 15508 ;;		wreg, status,2, status,0
 15509 ;; Tracked objects:
 15510 ;;		On entry : 3F/0
 15511 ;;		On exit  : 3F/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15514 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15517 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15518 ;;Total ram usage:       15 bytes
 15519 ;; Hardware stack levels used: 1
 15520 ;; Hardware stack levels required when called: 4
 15521 ;; This function calls:
 15522 ;;		Nothing
 15523 ;; This function is called by:
 15524 ;;		_getMed
 15525 ;; This function uses a non-reentrant model
 15526 ;;
 15527                           
 15528     04D1                     ___aldiv:	
 15529                           ;psect for function ___aldiv
 15530                           
 15531                           
 15532                           ;incstack = 0
 15533                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 15534     04D1  01A9               	clrf	___aldiv@sign
 15535     04D2  1FA3               	btfss	___aldiv@divisor+3,7
 15536     04D3  2CE1               	goto	l1518
 15537     04D4  09A0               	comf	___aldiv@divisor,f
 15538     04D5  09A1               	comf	___aldiv@divisor+1,f
 15539     04D6  09A2               	comf	___aldiv@divisor+2,f
 15540     04D7  09A3               	comf	___aldiv@divisor+3,f
 15541     04D8  0AA0               	incf	___aldiv@divisor,f
 15542     04D9  1903               	skipnz
 15543     04DA  0AA1               	incf	___aldiv@divisor+1,f
 15544     04DB  1903               	skipnz
 15545     04DC  0AA2               	incf	___aldiv@divisor+2,f
 15546     04DD  1903               	skipnz
 15547     04DE  0AA3               	incf	___aldiv@divisor+3,f
 15548     04DF  01A9               	clrf	___aldiv@sign
 15549     04E0  0AA9               	incf	___aldiv@sign,f
 15550     04E1                     l1518:
 15551     04E1  1FA7               	btfss	___aldiv@dividend+3,7
 15552     04E2  2CF2               	goto	l5223
 15553     04E3  09A4               	comf	___aldiv@dividend,f
 15554     04E4  09A5               	comf	___aldiv@dividend+1,f
 15555     04E5  09A6               	comf	___aldiv@dividend+2,f
 15556     04E6  09A7               	comf	___aldiv@dividend+3,f
 15557     04E7  0AA4               	incf	___aldiv@dividend,f
 15558     04E8  1903               	skipnz
 15559     04E9  0AA5               	incf	___aldiv@dividend+1,f
 15560     04EA  1903               	skipnz
 15561     04EB  0AA6               	incf	___aldiv@dividend+2,f
 15562     04EC  1903               	skipnz
 15563     04ED  0AA7               	incf	___aldiv@dividend+3,f
 15564     04EE  3001               	movlw	1
 15565     04EF  00F4               	movwf	??___aldiv
 15566     04F0  0874               	movf	??___aldiv,w
 15567     04F1  06A9               	xorwf	___aldiv@sign,f
 15568     04F2                     l5223:
 15569     04F2  3000               	movlw	0
 15570     04F3  00AD               	movwf	___aldiv@quotient+3
 15571     04F4  3000               	movlw	0
 15572     04F5  00AC               	movwf	___aldiv@quotient+2
 15573     04F6  3000               	movlw	0
 15574     04F7  00AB               	movwf	___aldiv@quotient+1
 15575     04F8  3000               	movlw	0
 15576     04F9  00AA               	movwf	___aldiv@quotient
 15577     04FA  0823               	movf	___aldiv@divisor+3,w
 15578     04FB  0422               	iorwf	___aldiv@divisor+2,w
 15579     04FC  0421               	iorwf	___aldiv@divisor+1,w
 15580     04FD  0420               	iorwf	___aldiv@divisor,w
 15581     04FE  1903               	skipnz
 15582     04FF  2D3B               	goto	l5245
 15583     0500  01A8               	clrf	___aldiv@counter
 15584     0501  0AA8               	incf	___aldiv@counter,f
 15585     0502                     l5231:
 15586     0502  1BA3               	btfsc	___aldiv@divisor+3,7
 15587     0503  2D10               	goto	l5233
 15588     0504  3001               	movlw	1
 15589     0505                     u3015:
 15590     0505  35A0               	lslf	___aldiv@divisor,f
 15591     0506  0DA1               	rlf	___aldiv@divisor+1,f
 15592     0507  0DA2               	rlf	___aldiv@divisor+2,f
 15593     0508  0DA3               	rlf	___aldiv@divisor+3,f
 15594     0509  0B89               	decfsz	9,f
 15595     050A  2D05               	goto	u3015
 15596     050B  3001               	movlw	1
 15597     050C  00F4               	movwf	??___aldiv
 15598     050D  0874               	movf	??___aldiv,w
 15599     050E  07A8               	addwf	___aldiv@counter,f
 15600     050F  2D02               	goto	l5231
 15601     0510                     l5233:
 15602     0510  3001               	movlw	1
 15603     0511                     u3035:
 15604     0511  35AA               	lslf	___aldiv@quotient,f
 15605     0512  0DAB               	rlf	___aldiv@quotient+1,f
 15606     0513  0DAC               	rlf	___aldiv@quotient+2,f
 15607     0514  0DAD               	rlf	___aldiv@quotient+3,f
 15608     0515  0B89               	decfsz	9,f
 15609     0516  2D11               	goto	u3035
 15610     0517  0823               	movf	___aldiv@divisor+3,w
 15611     0518  0227               	subwf	___aldiv@dividend+3,w
 15612     0519  1D03               	skipz
 15613     051A  2D25               	goto	u3045
 15614     051B  0822               	movf	___aldiv@divisor+2,w
 15615     051C  0226               	subwf	___aldiv@dividend+2,w
 15616     051D  1D03               	skipz
 15617     051E  2D25               	goto	u3045
 15618     051F  0821               	movf	___aldiv@divisor+1,w
 15619     0520  0225               	subwf	___aldiv@dividend+1,w
 15620     0521  1D03               	skipz
 15621     0522  2D25               	goto	u3045
 15622     0523  0820               	movf	___aldiv@divisor,w
 15623     0524  0224               	subwf	___aldiv@dividend,w
 15624     0525                     u3045:
 15625     0525  1C03               	skipc
 15626     0526  2D30               	goto	l5241
 15627     0527  0820               	movf	___aldiv@divisor,w
 15628     0528  02A4               	subwf	___aldiv@dividend,f
 15629     0529  0821               	movf	___aldiv@divisor+1,w
 15630     052A  3BA5               	subwfb	___aldiv@dividend+1,f
 15631     052B  0822               	movf	___aldiv@divisor+2,w
 15632     052C  3BA6               	subwfb	___aldiv@dividend+2,f
 15633     052D  0823               	movf	___aldiv@divisor+3,w
 15634     052E  3BA7               	subwfb	___aldiv@dividend+3,f
 15635     052F  142A               	bsf	___aldiv@quotient,0
 15636     0530                     l5241:
 15637     0530  3001               	movlw	1
 15638     0531                     u3055:
 15639     0531  36A3               	lsrf	___aldiv@divisor+3,f
 15640     0532  0CA2               	rrf	___aldiv@divisor+2,f
 15641     0533  0CA1               	rrf	___aldiv@divisor+1,f
 15642     0534  0CA0               	rrf	___aldiv@divisor,f
 15643     0535  0B89               	decfsz	9,f
 15644     0536  2D31               	goto	u3055
 15645     0537  3001               	movlw	1
 15646     0538  02A8               	subwf	___aldiv@counter,f
 15647     0539  1D03               	btfss	3,2
 15648     053A  2D10               	goto	l5233
 15649     053B                     l5245:
 15650     053B  0829               	movf	___aldiv@sign,w
 15651     053C  1903               	btfsc	3,2
 15652     053D  2D49               	goto	l5249
 15653     053E  09AA               	comf	___aldiv@quotient,f
 15654     053F  09AB               	comf	___aldiv@quotient+1,f
 15655     0540  09AC               	comf	___aldiv@quotient+2,f
 15656     0541  09AD               	comf	___aldiv@quotient+3,f
 15657     0542  0AAA               	incf	___aldiv@quotient,f
 15658     0543  1903               	skipnz
 15659     0544  0AAB               	incf	___aldiv@quotient+1,f
 15660     0545  1903               	skipnz
 15661     0546  0AAC               	incf	___aldiv@quotient+2,f
 15662     0547  1903               	skipnz
 15663     0548  0AAD               	incf	___aldiv@quotient+3,f
 15664     0549                     l5249:
 15665     0549  082D               	movf	___aldiv@quotient+3,w
 15666     054A  00A3               	movwf	?___aldiv+3
 15667     054B  082C               	movf	___aldiv@quotient+2,w
 15668     054C  00A2               	movwf	?___aldiv+2
 15669     054D  082B               	movf	___aldiv@quotient+1,w
 15670     054E  00A1               	movwf	?___aldiv+1
 15671     054F  082A               	movf	___aldiv@quotient,w
 15672     0550  00A0               	movwf	?___aldiv
 15673     0551  0008               	return
 15674     0552                     __end_of___aldiv:
 15675                           
 15676                           	psect	text80
 15677     06B4                     __ptext80:	
 15678 ;; *************** function _getMax *****************
 15679 ;; Defined at:
 15680 ;;		line 110 in file "sensor.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  data            2    4[COMMON] PTR struct .
 15683 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 15684 ;;		 -> panel.sensor_data(46), panel(59), 
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;  i               1    7[BANK0 ] unsigned char 
 15687 ;;  aux             1    8[BANK0 ] unsigned char 
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  1    wreg      void 
 15690 ;; Registers used:
 15691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15692 ;; Tracked objects:
 15693 ;;		On entry : 3F/0
 15694 ;;		On exit  : 3F/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;Total ram usage:       11 bytes
 15702 ;; Hardware stack levels used: 1
 15703 ;; Hardware stack levels required when called: 4
 15704 ;; This function calls:
 15705 ;;		Nothing
 15706 ;; This function is called by:
 15707 ;;		_getMetrics
 15708 ;;		_processCommand
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712     06B4                     _getMax:	
 15713                           ;psect for function _getMax
 15714                           
 15715                           
 15716                           ;sensor.c: 110: void getMax(measure_data_t *data);sensor.c: 111: {;sensor.c: 112:     ui
      +                          nt8_t aux;;sensor.c: 113:     aux = data->pWrite;
 15717                           
 15718                           ;incstack = 0
 15719                           ; Regs used in _getMax: [wreg-fsr1h+status,2+status,0]
 15720     06B4  0874               	movf	getMax@data,w
 15721     06B5  0086               	movwf	6
 15722     06B6  0875               	movf	getMax@data+1,w
 15723     06B7  0087               	movwf	7
 15724     06B8  3156               	addfsr 1,22
 15725     06B9  0801               	movf	1,w
 15726     06BA  00A8               	movwf	getMax@aux
 15727                           
 15728                           ;sensor.c: 115:     for(uint8_t i=0; i<8; i++)
 15729     06BB  01A7               	clrf	getMax@i
 15730     06BC                     l5473:
 15731                           
 15732                           ;sensor.c: 116:     {;sensor.c: 117:         if(data->max < data->hist[aux])
 15733     06BC  0828               	movf	getMax@aux,w
 15734     06BD  00A0               	movwf	??_getMax
 15735     06BE  01A1               	clrf	??_getMax+1
 15736     06BF  35A0               	lslf	??_getMax,f
 15737     06C0  0DA1               	rlf	??_getMax+1,f
 15738     06C1  0820               	movf	??_getMax,w
 15739     06C2  0774               	addwf	getMax@data,w
 15740     06C3  0086               	movwf	6
 15741     06C4  0821               	movf	??_getMax+1,w
 15742     06C5  3D75               	addwfc	getMax@data+1,w
 15743     06C6  0087               	movwf	7
 15744     06C7  3F40               	moviw [0]fsr1
 15745     06C8  00A2               	movwf	??_getMax+2
 15746     06C9  3F41               	moviw [1]fsr1
 15747     06CA  00A3               	movwf	??_getMax+3
 15748     06CB  0874               	movf	getMax@data,w
 15749     06CC  0086               	movwf	6
 15750     06CD  0875               	movf	getMax@data+1,w
 15751     06CE  0087               	movwf	7
 15752     06CF  3150               	addfsr 1,16
 15753     06D0  3F40               	moviw [0]fsr1
 15754     06D1  00A4               	movwf	??_getMax+4
 15755     06D2  3F41               	moviw [1]fsr1
 15756     06D3  00A5               	movwf	??_getMax+5
 15757     06D4  0825               	movf	??_getMax+5,w
 15758     06D5  3A80               	xorlw	128
 15759     06D6  00A6               	movwf	??_getMax+6
 15760     06D7  0823               	movf	??_getMax+3,w
 15761     06D8  3A80               	xorlw	128
 15762     06D9  0226               	subwf	??_getMax+6,w
 15763     06DA  1D03               	skipz
 15764     06DB  2EDE               	goto	u3175
 15765     06DC  0822               	movf	??_getMax+2,w
 15766     06DD  0224               	subwf	??_getMax+4,w
 15767     06DE                     u3175:
 15768     06DE  1803               	skipnc
 15769     06DF  2EF5               	goto	l5477
 15770                           
 15771                           ;sensor.c: 118:         {;sensor.c: 119:             data->max = data->hist[aux];
 15772     06E0  0140               	movlb	0	; select bank0
 15773     06E1  0828               	movf	getMax@aux,w
 15774     06E2  00A0               	movwf	??_getMax
 15775     06E3  01A1               	clrf	??_getMax+1
 15776     06E4  35A0               	lslf	??_getMax,f
 15777     06E5  0DA1               	rlf	??_getMax+1,f
 15778     06E6  0820               	movf	??_getMax,w
 15779     06E7  0774               	addwf	getMax@data,w
 15780     06E8  0086               	movwf	6
 15781     06E9  0821               	movf	??_getMax+1,w
 15782     06EA  3D75               	addwfc	getMax@data+1,w
 15783     06EB  0087               	movwf	7
 15784     06EC  0874               	movf	getMax@data,w
 15785     06ED  0084               	movwf	4
 15786     06EE  0875               	movf	getMax@data+1,w
 15787     06EF  0085               	movwf	5
 15788     06F0  3110               	addfsr 0,16
 15789     06F1  3F40               	moviw [0]fsr1
 15790     06F2  3F80               	movwi [0]fsr0
 15791     06F3  3F41               	moviw [1]fsr1
 15792     06F4  3F81               	movwi [1]fsr0
 15793     06F5                     l5477:
 15794                           
 15795                           ;sensor.c: 121:         if(aux == 0)
 15796     06F5  0140               	movlb	0	; select bank0
 15797     06F6  0828               	movf	getMax@aux,w
 15798                           
 15799                           ;sensor.c: 122:         {;sensor.c: 123:             aux = 8;
 15800     06F7  3008               	movlw	8
 15801     06F8  1903               	btfsc	3,2
 15802     06F9  00A8               	movwf	getMax@aux
 15803                           
 15804                           ;sensor.c: 125:         aux--;
 15805     06FA  3001               	movlw	1
 15806     06FB  02A8               	subwf	getMax@aux,f
 15807                           
 15808                           ;sensor.c: 126:     }
 15809     06FC  3001               	movlw	1
 15810     06FD  00A0               	movwf	??_getMax
 15811     06FE  0820               	movf	??_getMax,w
 15812     06FF  07A7               	addwf	getMax@i,f
 15813     0700  3008               	movlw	8
 15814     0701  0227               	subwf	getMax@i,w
 15815     0702  1803               	btfsc	3,0
 15816     0703  0008               	return
 15817     0704  2EBC               	goto	l5473
 15818     0705                     __end_of_getMax:
 15819                           
 15820                           	psect	text81
 15821     0930                     __ptext81:	
 15822 ;; *************** function _TMR4_Stop *****************
 15823 ;; Defined at:
 15824 ;;		line 120 in file "mcc_generated_files/tmr4.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      void 
 15831 ;; Registers used:
 15832 ;;		None
 15833 ;; Tracked objects:
 15834 ;;		On entry : 3F/0
 15835 ;;		On exit  : 3F/5
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;Total ram usage:        0 bytes
 15843 ;; Hardware stack levels used: 1
 15844 ;; Hardware stack levels required when called: 4
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_main
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852     0930                     _TMR4_Stop:	
 15853                           ;psect for function _TMR4_Stop
 15854                           
 15855                           
 15856                           ;mcc_generated_files/tmr4.c: 123:     T4CONbits.TMR4ON = 0;
 15857                           
 15858                           ;incstack = 0
 15859                           ; Regs used in _TMR4_Stop: []
 15860     0930  0145               	movlb	5	; select bank5
 15861     0931  1394               	bcf	20,7	;volatile
 15862     0932  0008               	return
 15863     0933                     __end_of_TMR4_Stop:
 15864                           
 15865                           	psect	text82
 15866     092D                     __ptext82:	
 15867 ;; *************** function _TMR4_Start *****************
 15868 ;; Defined at:
 15869 ;;		line 109 in file "mcc_generated_files/tmr4.c"
 15870 ;; Parameters:    Size  Location     Type
 15871 ;;		None
 15872 ;; Auto vars:     Size  Location     Type
 15873 ;;		None
 15874 ;; Return value:  Size  Location     Type
 15875 ;;                  1    wreg      void 
 15876 ;; Registers used:
 15877 ;;		None
 15878 ;; Tracked objects:
 15879 ;;		On entry : 3F/0
 15880 ;;		On exit  : 3F/5
 15881 ;;		Unchanged: 0/0
 15882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15887 ;;Total ram usage:        0 bytes
 15888 ;; Hardware stack levels used: 1
 15889 ;; Hardware stack levels required when called: 4
 15890 ;; This function calls:
 15891 ;;		Nothing
 15892 ;; This function is called by:
 15893 ;;		_main
 15894 ;; This function uses a non-reentrant model
 15895 ;;
 15896                           
 15897     092D                     _TMR4_Start:	
 15898                           ;psect for function _TMR4_Start
 15899                           
 15900                           
 15901                           ;mcc_generated_files/tmr4.c: 112:     T4CONbits.TMR4ON = 1;
 15902                           
 15903                           ;incstack = 0
 15904                           ; Regs used in _TMR4_Start: []
 15905     092D  0145               	movlb	5	; select bank5
 15906     092E  1794               	bsf	20,7	;volatile
 15907     092F  0008               	return
 15908     0930                     __end_of_TMR4_Start:
 15909                           
 15910                           	psect	text83
 15911     091D                     __ptext83:	
 15912 ;; *************** function _TMR2_Stop *****************
 15913 ;; Defined at:
 15914 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;		None
 15917 ;; Auto vars:     Size  Location     Type
 15918 ;;		None
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      void 
 15921 ;; Registers used:
 15922 ;;		None
 15923 ;; Tracked objects:
 15924 ;;		On entry : 3F/5
 15925 ;;		On exit  : 3F/5
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;Total ram usage:        0 bytes
 15933 ;; Hardware stack levels used: 1
 15934 ;; Hardware stack levels required when called: 4
 15935 ;; This function calls:
 15936 ;;		Nothing
 15937 ;; This function is called by:
 15938 ;;		_main
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942     091D                     _TMR2_Stop:	
 15943                           ;psect for function _TMR2_Stop
 15944                           
 15945                           
 15946                           ;mcc_generated_files/tmr2.c: 123:     T2CONbits.TMR2ON = 0;
 15947                           
 15948                           ;incstack = 0
 15949                           ; Regs used in _TMR2_Stop: []
 15950     091D  138E               	bcf	14,7	;volatile
 15951     091E  0008               	return
 15952     091F                     __end_of_TMR2_Stop:
 15953                           
 15954                           	psect	text84
 15955     091B                     __ptext84:	
 15956 ;; *************** function _TMR2_Start *****************
 15957 ;; Defined at:
 15958 ;;		line 109 in file "mcc_generated_files/tmr2.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;		None
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;		None
 15963 ;; Return value:  Size  Location     Type
 15964 ;;                  1    wreg      void 
 15965 ;; Registers used:
 15966 ;;		None
 15967 ;; Tracked objects:
 15968 ;;		On entry : 3F/5
 15969 ;;		On exit  : 3F/5
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;Total ram usage:        0 bytes
 15977 ;; Hardware stack levels used: 1
 15978 ;; Hardware stack levels required when called: 4
 15979 ;; This function calls:
 15980 ;;		Nothing
 15981 ;; This function is called by:
 15982 ;;		_main
 15983 ;; This function uses a non-reentrant model
 15984 ;;
 15985                           
 15986     091B                     _TMR2_Start:	
 15987                           ;psect for function _TMR2_Start
 15988                           
 15989                           
 15990                           ;mcc_generated_files/tmr2.c: 112:     T2CONbits.TMR2ON = 1;
 15991                           
 15992                           ;incstack = 0
 15993                           ; Regs used in _TMR2_Start: []
 15994     091B  178E               	bsf	14,7	;volatile
 15995     091C  0008               	return
 15996     091D                     __end_of_TMR2_Start:
 15997                           
 15998                           	psect	text85
 15999     0C21                     __ptext85:	
 16000 ;; *************** function _SYSTEM_Initialize *****************
 16001 ;; Defined at:
 16002 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16003 ;; Parameters:    Size  Location     Type
 16004 ;;		None
 16005 ;; Auto vars:     Size  Location     Type
 16006 ;;		None
 16007 ;; Return value:  Size  Location     Type
 16008 ;;                  1    wreg      void 
 16009 ;; Registers used:
 16010 ;;		wreg, status,2, status,0, pclath, cstack
 16011 ;; Tracked objects:
 16012 ;;		On entry : B3F/0
 16013 ;;		On exit  : 3F/E
 16014 ;;		Unchanged: 0/0
 16015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16020 ;;Total ram usage:        0 bytes
 16021 ;; Hardware stack levels used: 1
 16022 ;; Hardware stack levels required when called: 6
 16023 ;; This function calls:
 16024 ;;		_CMP1_Initialize
 16025 ;;		_DAC1_Initialize
 16026 ;;		_EUSART1_Initialize
 16027 ;;		_I2C1_Initialize
 16028 ;;		_OSCILLATOR_Initialize
 16029 ;;		_PIN_MANAGER_Initialize
 16030 ;;		_PMD_Initialize
 16031 ;;		_TMR0_Initialize
 16032 ;;		_TMR2_Initialize
 16033 ;;		_TMR4_Initialize
 16034 ;; This function is called by:
 16035 ;;		_main
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           
 16039     0C21                     _SYSTEM_Initialize:	
 16040                           ;psect for function _SYSTEM_Initialize
 16041                           
 16042                           
 16043                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16044                           
 16045                           ;incstack = 0
 16046                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16047     0C21  318A  22AC  318C   	fcall	_PMD_Initialize
 16048                           
 16049                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16050     0C24  3189  21F6  318C   	fcall	_I2C1_Initialize
 16051                           
 16052                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16053     0C27  318C  24F5  318C   	fcall	_PIN_MANAGER_Initialize
 16054                           
 16055                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16056     0C2A  318A  2200  318C   	fcall	_OSCILLATOR_Initialize
 16057                           
 16058                           ;mcc_generated_files/mcc.c: 56:     CMP1_Initialize();
 16059     0C2D  318A  227D  318C   	fcall	_CMP1_Initialize
 16060                           
 16061                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
 16062     0C30  318B  2329  318C   	fcall	_TMR4_Initialize
 16063                           
 16064                           ;mcc_generated_files/mcc.c: 58:     DAC1_Initialize();
 16065     0C33  3189  21A5  318C   	fcall	_DAC1_Initialize
 16066                           
 16067                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 16068     0C36  318B  2353  318C   	fcall	_TMR2_Initialize
 16069                           
 16070                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 16071     0C39  318B  236A  318C   	fcall	_TMR0_Initialize
 16072                           
 16073                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
 16074     0C3C  318E  261D         	fcall	_EUSART1_Initialize
 16075     0C3E  0008               	return
 16076     0C3F                     __end_of_SYSTEM_Initialize:
 16077                           
 16078                           	psect	text86
 16079     0B29                     __ptext86:	
 16080 ;; *************** function _TMR4_Initialize *****************
 16081 ;; Defined at:
 16082 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;		None
 16085 ;; Auto vars:     Size  Location     Type
 16086 ;;		None
 16087 ;; Return value:  Size  Location     Type
 16088 ;;                  1    wreg      void 
 16089 ;; Registers used:
 16090 ;;		wreg, status,2, status,0, pclath, cstack
 16091 ;; Tracked objects:
 16092 ;;		On entry : B3F/E
 16093 ;;		On exit  : B3F/5
 16094 ;;		Unchanged: B00/0
 16095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16100 ;;Total ram usage:        0 bytes
 16101 ;; Hardware stack levels used: 1
 16102 ;; Hardware stack levels required when called: 5
 16103 ;; This function calls:
 16104 ;;		_TMR4_SetInterruptHandler
 16105 ;; This function is called by:
 16106 ;;		_SYSTEM_Initialize
 16107 ;; This function uses a non-reentrant model
 16108 ;;
 16109                           
 16110     0B29                     _TMR4_Initialize:	
 16111                           ;psect for function _TMR4_Initialize
 16112                           
 16113                           
 16114                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x04;
 16115                           
 16116                           ;incstack = 0
 16117                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16118     0B29  3004               	movlw	4
 16119     0B2A  0145               	movlb	5	; select bank5
 16120     0B2B  0096               	movwf	22	;volatile
 16121                           
 16122                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 16123     0B2C  0195               	clrf	21	;volatile
 16124                           
 16125                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 16126     0B2D  0197               	clrf	23	;volatile
 16127                           
 16128                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0x78;
 16129     0B2E  3078               	movlw	120
 16130     0B2F  0093               	movwf	19	;volatile
 16131                           
 16132                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 16133     0B30  0192               	clrf	18	;volatile
 16134                           
 16135                           ;mcc_generated_files/tmr4.c: 85:     PIR4bits.TMR4IF = 0;
 16136     0B31  014E               	movlb	14	; select bank14
 16137     0B32  1190               	bcf	16,3	;volatile
 16138                           
 16139                           ;mcc_generated_files/tmr4.c: 88:     PIE4bits.TMR4IE = 1;
 16140     0B33  159A               	bsf	26,3	;volatile
 16141                           
 16142                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 16143     0B34  3019               	movlw	low _TMR4_DefaultInterruptHandler
 16144     0B35  00F4               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 16145     0B36  3009               	movlw	high _TMR4_DefaultInterruptHandler
 16146     0B37  00F5               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 16147     0B38  3189  21C3         	fcall	_TMR4_SetInterruptHandler
 16148                           
 16149                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0x79;
 16150     0B3A  3079               	movlw	121
 16151     0B3B  0145               	movlb	5	; select bank5
 16152     0B3C  0094               	movwf	20	;volatile
 16153     0B3D  0008               	return
 16154     0B3E                     __end_of_TMR4_Initialize:
 16155                           
 16156                           	psect	text87
 16157     09C3                     __ptext87:	
 16158 ;; *************** function _TMR4_SetInterruptHandler *****************
 16159 ;; Defined at:
 16160 ;;		line 179 in file "mcc_generated_files/tmr4.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 16163 ;;		 -> TMR4_DefaultInterruptHandler(1), 
 16164 ;; Auto vars:     Size  Location     Type
 16165 ;;		None
 16166 ;; Return value:  Size  Location     Type
 16167 ;;                  1    wreg      void 
 16168 ;; Registers used:
 16169 ;;		wreg
 16170 ;; Tracked objects:
 16171 ;;		On entry : B3F/E
 16172 ;;		On exit  : B3F/0
 16173 ;;		Unchanged: B00/0
 16174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16179 ;;Total ram usage:        2 bytes
 16180 ;; Hardware stack levels used: 1
 16181 ;; Hardware stack levels required when called: 4
 16182 ;; This function calls:
 16183 ;;		Nothing
 16184 ;; This function is called by:
 16185 ;;		_TMR4_Initialize
 16186 ;; This function uses a non-reentrant model
 16187 ;;
 16188                           
 16189     09C3                     _TMR4_SetInterruptHandler:	
 16190                           ;psect for function _TMR4_SetInterruptHandler
 16191                           
 16192                           
 16193                           ;mcc_generated_files/tmr4.c: 180:     TMR4_InterruptHandler = InterruptHandler;
 16194                           
 16195                           ;incstack = 0
 16196                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 16197     09C3  0875               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 16198     09C4  0140               	movlb	0	; select bank0
 16199     09C5  00E3               	movwf	_TMR4_InterruptHandler+1
 16200     09C6  0874               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 16201     09C7  00E2               	movwf	_TMR4_InterruptHandler
 16202     09C8  0008               	return
 16203     09C9                     __end_of_TMR4_SetInterruptHandler:
 16204                           
 16205                           	psect	text88
 16206     0B53                     __ptext88:	
 16207 ;; *************** function _TMR2_Initialize *****************
 16208 ;; Defined at:
 16209 ;;		line 65 in file "mcc_generated_files/tmr2.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;		None
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;		None
 16214 ;; Return value:  Size  Location     Type
 16215 ;;                  1    wreg      void 
 16216 ;; Registers used:
 16217 ;;		wreg, status,2, status,0, pclath, cstack
 16218 ;; Tracked objects:
 16219 ;;		On entry : B3F/12
 16220 ;;		On exit  : B3F/5
 16221 ;;		Unchanged: B00/0
 16222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16227 ;;Total ram usage:        0 bytes
 16228 ;; Hardware stack levels used: 1
 16229 ;; Hardware stack levels required when called: 5
 16230 ;; This function calls:
 16231 ;;		_TMR2_SetInterruptHandler
 16232 ;; This function is called by:
 16233 ;;		_SYSTEM_Initialize
 16234 ;; This function uses a non-reentrant model
 16235 ;;
 16236                           
 16237     0B53                     _TMR2_Initialize:	
 16238                           ;psect for function _TMR2_Initialize
 16239                           
 16240                           
 16241                           ;mcc_generated_files/tmr2.c: 70:     T2CLKCON = 0x04;
 16242                           
 16243                           ;incstack = 0
 16244                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16245     0B53  3004               	movlw	4
 16246     0B54  0145               	movlb	5	; select bank5
 16247     0B55  0090               	movwf	16	;volatile
 16248                           
 16249                           ;mcc_generated_files/tmr2.c: 73:     T2HLT = 0x11;
 16250     0B56  3011               	movlw	17
 16251     0B57  008F               	movwf	15	;volatile
 16252                           
 16253                           ;mcc_generated_files/tmr2.c: 76:     T2RST = 0x02;
 16254     0B58  3002               	movlw	2
 16255     0B59  0091               	movwf	17	;volatile
 16256                           
 16257                           ;mcc_generated_files/tmr2.c: 79:     T2PR = 0x2F;
 16258     0B5A  302F               	movlw	47
 16259     0B5B  008D               	movwf	13	;volatile
 16260                           
 16261                           ;mcc_generated_files/tmr2.c: 82:     T2TMR = 0x00;
 16262     0B5C  018C               	clrf	12	;volatile
 16263                           
 16264                           ;mcc_generated_files/tmr2.c: 85:     PIR4bits.TMR2IF = 0;
 16265     0B5D  014E               	movlb	14	; select bank14
 16266     0B5E  1090               	bcf	16,1	;volatile
 16267                           
 16268                           ;mcc_generated_files/tmr2.c: 88:     PIE4bits.TMR2IE = 1;
 16269     0B5F  149A               	bsf	26,1	;volatile
 16270                           
 16271                           ;mcc_generated_files/tmr2.c: 91:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 16272     0B60  3017               	movlw	low _TMR2_DefaultInterruptHandler
 16273     0B61  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 16274     0B62  3009               	movlw	high _TMR2_DefaultInterruptHandler
 16275     0B63  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 16276     0B64  3189  21BD         	fcall	_TMR2_SetInterruptHandler
 16277                           
 16278                           ;mcc_generated_files/tmr2.c: 94:     T2CON = 0x60;
 16279     0B66  3060               	movlw	96
 16280     0B67  0145               	movlb	5	; select bank5
 16281     0B68  008E               	movwf	14	;volatile
 16282     0B69  0008               	return
 16283     0B6A                     __end_of_TMR2_Initialize:
 16284                           
 16285                           	psect	text89
 16286     09BD                     __ptext89:	
 16287 ;; *************** function _TMR2_SetInterruptHandler *****************
 16288 ;; Defined at:
 16289 ;;		line 179 in file "mcc_generated_files/tmr2.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 16292 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;		None
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  1    wreg      void 
 16297 ;; Registers used:
 16298 ;;		wreg
 16299 ;; Tracked objects:
 16300 ;;		On entry : B3F/E
 16301 ;;		On exit  : B3F/0
 16302 ;;		Unchanged: B00/0
 16303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;Total ram usage:        2 bytes
 16309 ;; Hardware stack levels used: 1
 16310 ;; Hardware stack levels required when called: 4
 16311 ;; This function calls:
 16312 ;;		Nothing
 16313 ;; This function is called by:
 16314 ;;		_TMR2_Initialize
 16315 ;; This function uses a non-reentrant model
 16316 ;;
 16317                           
 16318     09BD                     _TMR2_SetInterruptHandler:	
 16319                           ;psect for function _TMR2_SetInterruptHandler
 16320                           
 16321                           
 16322                           ;mcc_generated_files/tmr2.c: 180:     TMR2_InterruptHandler = InterruptHandler;
 16323                           
 16324                           ;incstack = 0
 16325                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 16326     09BD  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 16327     09BE  0140               	movlb	0	; select bank0
 16328     09BF  00E5               	movwf	_TMR2_InterruptHandler+1
 16329     09C0  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 16330     09C1  00E4               	movwf	_TMR2_InterruptHandler
 16331     09C2  0008               	return
 16332     09C3                     __end_of_TMR2_SetInterruptHandler:
 16333                           
 16334                           	psect	text90
 16335     0B6A                     __ptext90:	
 16336 ;; *************** function _TMR0_Initialize *****************
 16337 ;; Defined at:
 16338 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;		None
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;		None
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  1    wreg      void 
 16345 ;; Registers used:
 16346 ;;		wreg, status,2, status,0, pclath, cstack
 16347 ;; Tracked objects:
 16348 ;;		On entry : B3F/5
 16349 ;;		On exit  : B3F/B
 16350 ;;		Unchanged: B00/0
 16351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;Total ram usage:        0 bytes
 16357 ;; Hardware stack levels used: 1
 16358 ;; Hardware stack levels required when called: 5
 16359 ;; This function calls:
 16360 ;;		_TMR0_SetInterruptHandler
 16361 ;; This function is called by:
 16362 ;;		_SYSTEM_Initialize
 16363 ;; This function uses a non-reentrant model
 16364 ;;
 16365                           
 16366     0B6A                     _TMR0_Initialize:	
 16367                           ;psect for function _TMR0_Initialize
 16368                           
 16369                           
 16370                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x48;
 16371                           
 16372                           ;incstack = 0
 16373                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16374     0B6A  3048               	movlw	72
 16375     0B6B  014B               	movlb	11	; select bank11
 16376     0B6C  009F               	movwf	31	;volatile
 16377                           
 16378                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFF;
 16379     0B6D  30FF               	movlw	255
 16380     0B6E  009D               	movwf	29	;volatile
 16381                           
 16382                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xCD;
 16383     0B6F  30CD               	movlw	205
 16384     0B70  009C               	movwf	28	;volatile
 16385                           
 16386                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16387     0B71  081D               	movf	29,w	;volatile
 16388     0B72  00F7               	movwf	_timer0ReloadVal16bit+1	;volatile
 16389     0B73  081C               	movf	28,w	;volatile
 16390     0B74  00F6               	movwf	_timer0ReloadVal16bit	;volatile
 16391                           
 16392                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
 16393     0B75  014E               	movlb	14	; select bank14
 16394     0B76  128C               	bcf	12,5	;volatile
 16395                           
 16396                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
 16397     0B77  1696               	bsf	22,5	;volatile
 16398                           
 16399                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 16400     0B78  302A               	movlw	low _TMR0_DefaultInterruptHandler
 16401     0B79  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16402     0B7A  3009               	movlw	high _TMR0_DefaultInterruptHandler
 16403     0B7B  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16404     0B7C  3189  21B7         	fcall	_TMR0_SetInterruptHandler
 16405                           
 16406                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
 16407     0B7E  3090               	movlw	144
 16408     0B7F  014B               	movlb	11	; select bank11
 16409     0B80  009E               	movwf	30	;volatile
 16410     0B81  0008               	return
 16411     0B82                     __end_of_TMR0_Initialize:
 16412                           
 16413                           	psect	text91
 16414     09B7                     __ptext91:	
 16415 ;; *************** function _TMR0_SetInterruptHandler *****************
 16416 ;; Defined at:
 16417 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 16418 ;; Parameters:    Size  Location     Type
 16419 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 16420 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 16421 ;; Auto vars:     Size  Location     Type
 16422 ;;		None
 16423 ;; Return value:  Size  Location     Type
 16424 ;;                  1    wreg      void 
 16425 ;; Registers used:
 16426 ;;		wreg
 16427 ;; Tracked objects:
 16428 ;;		On entry : B3F/E
 16429 ;;		On exit  : B3F/0
 16430 ;;		Unchanged: B00/0
 16431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;Total ram usage:        2 bytes
 16437 ;; Hardware stack levels used: 1
 16438 ;; Hardware stack levels required when called: 4
 16439 ;; This function calls:
 16440 ;;		Nothing
 16441 ;; This function is called by:
 16442 ;;		_TMR0_Initialize
 16443 ;; This function uses a non-reentrant model
 16444 ;;
 16445                           
 16446     09B7                     _TMR0_SetInterruptHandler:	
 16447                           ;psect for function _TMR0_SetInterruptHandler
 16448                           
 16449                           
 16450                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
 16451                           
 16452                           ;incstack = 0
 16453                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16454     09B7  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16455     09B8  0140               	movlb	0	; select bank0
 16456     09B9  00E1               	movwf	_TMR0_InterruptHandler+1
 16457     09BA  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16458     09BB  00E0               	movwf	_TMR0_InterruptHandler
 16459     09BC  0008               	return
 16460     09BD                     __end_of_TMR0_SetInterruptHandler:
 16461                           
 16462                           	psect	text92
 16463     0AAC                     __ptext92:	
 16464 ;; *************** function _PMD_Initialize *****************
 16465 ;; Defined at:
 16466 ;;		line 80 in file "mcc_generated_files/mcc.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;		None
 16469 ;; Auto vars:     Size  Location     Type
 16470 ;;		None
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  1    wreg      void 
 16473 ;; Registers used:
 16474 ;;		wreg, status,2
 16475 ;; Tracked objects:
 16476 ;;		On entry : B3F/0
 16477 ;;		On exit  : B3F/F
 16478 ;;		Unchanged: B00/0
 16479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;Total ram usage:        0 bytes
 16485 ;; Hardware stack levels used: 1
 16486 ;; Hardware stack levels required when called: 4
 16487 ;; This function calls:
 16488 ;;		Nothing
 16489 ;; This function is called by:
 16490 ;;		_SYSTEM_Initialize
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494     0AAC                     _PMD_Initialize:	
 16495                           ;psect for function _PMD_Initialize
 16496                           
 16497                           
 16498                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x47;
 16499                           
 16500                           ;incstack = 0
 16501                           ; Regs used in _PMD_Initialize: [wreg+status,2]
 16502     0AAC  3047               	movlw	71
 16503     0AAD  014F               	movlb	15	; select bank15
 16504     0AAE  0096               	movwf	22	;volatile
 16505                           
 16506                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x6A;
 16507     0AAF  306A               	movlw	106
 16508     0AB0  0097               	movwf	23	;volatile
 16509                           
 16510                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x80;
 16511     0AB1  3080               	movlw	128
 16512     0AB2  0098               	movwf	24	;volatile
 16513                           
 16514                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x25;
 16515     0AB3  3025               	movlw	37
 16516     0AB4  0099               	movwf	25	;volatile
 16517                           
 16518                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x6F;
 16519     0AB5  306F               	movlw	111
 16520     0AB6  009A               	movwf	26	;volatile
 16521                           
 16522                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x60;
 16523     0AB7  3060               	movlw	96
 16524     0AB8  009B               	movwf	27	;volatile
 16525                           
 16526                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 16527     0AB9  019C               	clrf	28	;volatile
 16528                           
 16529                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x3F;
 16530     0ABA  303F               	movlw	63
 16531     0ABB  009D               	movwf	29	;volatile
 16532     0ABC  0008               	return
 16533     0ABD                     __end_of_PMD_Initialize:
 16534                           
 16535                           	psect	text93
 16536     0CF5                     __ptext93:	
 16537 ;; *************** function _PIN_MANAGER_Initialize *****************
 16538 ;; Defined at:
 16539 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;		None
 16542 ;; Auto vars:     Size  Location     Type
 16543 ;;		None
 16544 ;; Return value:  Size  Location     Type
 16545 ;;                  1    wreg      void 
 16546 ;; Registers used:
 16547 ;;		wreg, status,2
 16548 ;; Tracked objects:
 16549 ;;		On entry : B3F/3
 16550 ;;		On exit  : B3F/3D
 16551 ;;		Unchanged: B00/0
 16552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16557 ;;Total ram usage:        0 bytes
 16558 ;; Hardware stack levels used: 1
 16559 ;; Hardware stack levels required when called: 4
 16560 ;; This function calls:
 16561 ;;		Nothing
 16562 ;; This function is called by:
 16563 ;;		_SYSTEM_Initialize
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567     0CF5                     _PIN_MANAGER_Initialize:	
 16568                           ;psect for function _PIN_MANAGER_Initialize
 16569                           
 16570                           
 16571                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 16572                           
 16573                           ;incstack = 0
 16574                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16575     0CF5  0140               	movlb	0	; select bank0
 16576     0CF6  0198               	clrf	24	;volatile
 16577                           
 16578                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
 16579     0CF7  019A               	clrf	26	;volatile
 16580                           
 16581                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0C;
 16582     0CF8  300C               	movlw	12
 16583     0CF9  0092               	movwf	18	;volatile
 16584                           
 16585                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x27;
 16586     0CFA  3027               	movlw	39
 16587     0CFB  0094               	movwf	20	;volatile
 16588                           
 16589                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x04;
 16590     0CFC  3004               	movlw	4
 16591     0CFD  017E               	movlb	62	; select bank62
 16592     0CFE  00CE               	movwf	78	;volatile
 16593                           
 16594                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x04;
 16595     0CFF  3004               	movlw	4
 16596     0D00  00B8               	movwf	56	;volatile
 16597                           
 16598                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
 16599     0D01  01B9               	clrf	57	;volatile
 16600                           
 16601                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
 16602     0D02  01CF               	clrf	79	;volatile
 16603                           
 16604                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
 16605     0D03  01BA               	clrf	58	;volatile
 16606                           
 16607                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
 16608     0D04  01D0               	clrf	80	;volatile
 16609                           
 16610                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
 16611     0D05  3037               	movlw	55
 16612     0D06  00BB               	movwf	59	;volatile
 16613                           
 16614                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
 16615     0D07  303F               	movlw	63
 16616     0D08  00D1               	movwf	81	;volatile
 16617                           
 16618                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
 16619     0D09  303F               	movlw	63
 16620     0D0A  00BC               	movwf	60	;volatile
 16621                           
 16622                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
 16623     0D0B  303F               	movlw	63
 16624     0D0C  00D2               	movwf	82	;volatile
 16625                           
 16626                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x13;
 16627     0D0D  3013               	movlw	19
 16628     0D0E  00A0               	movwf	32	;volatile
 16629                           
 16630                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
 16631     0D0F  3010               	movlw	16
 16632     0D10  017D               	movlb	61	; select bank61
 16633     0D11  00C5               	movwf	69	;volatile
 16634                           
 16635                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x14;
 16636     0D12  3014               	movlw	20
 16637     0D13  017E               	movlb	62	; select bank62
 16638     0D14  00A1               	movwf	33	;volatile
 16639                           
 16640                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0F;
 16641     0D15  300F               	movlw	15
 16642     0D16  00A4               	movwf	36	;volatile
 16643                           
 16644                           ;mcc_generated_files/pin_manager.c: 110:     SSP1DATPPS = 0x11;
 16645     0D17  3011               	movlw	17
 16646     0D18  017D               	movlb	61	; select bank61
 16647     0D19  00C6               	movwf	70	;volatile
 16648                           
 16649                           ;mcc_generated_files/pin_manager.c: 111:     RX1DTPPS = 0x15;
 16650     0D1A  3015               	movlw	21
 16651     0D1B  00CB               	movwf	75	;volatile
 16652     0D1C  0008               	return
 16653     0D1D                     __end_of_PIN_MANAGER_Initialize:
 16654                           
 16655                           	psect	text94
 16656     0A00                     __ptext94:	
 16657 ;; *************** function _OSCILLATOR_Initialize *****************
 16658 ;; Defined at:
 16659 ;;		line 64 in file "mcc_generated_files/mcc.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;		None
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;		None
 16664 ;; Return value:  Size  Location     Type
 16665 ;;                  1    wreg      void 
 16666 ;; Registers used:
 16667 ;;		wreg, status,2
 16668 ;; Tracked objects:
 16669 ;;		On entry : B3F/3D
 16670 ;;		On exit  : B3F/11
 16671 ;;		Unchanged: B00/0
 16672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16677 ;;Total ram usage:        0 bytes
 16678 ;; Hardware stack levels used: 1
 16679 ;; Hardware stack levels required when called: 4
 16680 ;; This function calls:
 16681 ;;		Nothing
 16682 ;; This function is called by:
 16683 ;;		_SYSTEM_Initialize
 16684 ;; This function uses a non-reentrant model
 16685 ;;
 16686                           
 16687     0A00                     _OSCILLATOR_Initialize:	
 16688                           ;psect for function _OSCILLATOR_Initialize
 16689                           
 16690                           
 16691                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x60;
 16692                           
 16693                           ;incstack = 0
 16694                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16695     0A00  3060               	movlw	96
 16696     0A01  0151               	movlb	17	; select bank17
 16697     0A02  008D               	movwf	13	;volatile
 16698                           
 16699                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 16700     0A03  018F               	clrf	15	;volatile
 16701                           
 16702                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 16703     0A04  0191               	clrf	17	;volatile
 16704                           
 16705                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x00;
 16706     0A05  0193               	clrf	19	;volatile
 16707                           
 16708                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 16709     0A06  0192               	clrf	18	;volatile
 16710                           
 16711                           ;mcc_generated_files/mcc.c: 77:     CPUDOZE = 0x80;
 16712     0A07  3080               	movlw	128
 16713     0A08  008C               	movwf	12	;volatile
 16714     0A09  0008               	return
 16715     0A0A                     __end_of_OSCILLATOR_Initialize:
 16716                           
 16717                           	psect	text95
 16718     09F6                     __ptext95:	
 16719 ;; *************** function _I2C1_Initialize *****************
 16720 ;; Defined at:
 16721 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;		None
 16724 ;; Auto vars:     Size  Location     Type
 16725 ;;		None
 16726 ;; Return value:  Size  Location     Type
 16727 ;;                  1    wreg      void 
 16728 ;; Registers used:
 16729 ;;		wreg, status,2
 16730 ;; Tracked objects:
 16731 ;;		On entry : B3F/F
 16732 ;;		On exit  : B3F/3
 16733 ;;		Unchanged: B00/0
 16734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16739 ;;Total ram usage:        0 bytes
 16740 ;; Hardware stack levels used: 1
 16741 ;; Hardware stack levels required when called: 4
 16742 ;; This function calls:
 16743 ;;		Nothing
 16744 ;; This function is called by:
 16745 ;;		_SYSTEM_Initialize
 16746 ;; This function uses a non-reentrant model
 16747 ;;
 16748                           
 16749     09F6                     _I2C1_Initialize:	
 16750                           ;psect for function _I2C1_Initialize
 16751                           
 16752                           
 16753                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 16754                           
 16755                           ;incstack = 0
 16756                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16757     09F6  3080               	movlw	128
 16758     09F7  0143               	movlb	3	; select bank3
 16759     09F8  008F               	movwf	15	;volatile
 16760                           
 16761                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x28;
 16762     09F9  3028               	movlw	40
 16763     09FA  0090               	movwf	16	;volatile
 16764                           
 16765                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16766     09FB  0191               	clrf	17	;volatile
 16767                           
 16768                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x04;
 16769     09FC  3004               	movlw	4
 16770     09FD  008D               	movwf	13	;volatile
 16771                           
 16772                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16773     09FE  1290               	bcf	16,5	;volatile
 16774     09FF  0008               	return
 16775     0A00                     __end_of_I2C1_Initialize:
 16776                           
 16777                           	psect	text96
 16778     0E1D                     __ptext96:	
 16779 ;; *************** function _EUSART1_Initialize *****************
 16780 ;; Defined at:
 16781 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;		None
 16784 ;; Auto vars:     Size  Location     Type
 16785 ;;		None
 16786 ;; Return value:  Size  Location     Type
 16787 ;;                  1    wreg      void 
 16788 ;; Registers used:
 16789 ;;		wreg, status,2, status,0, pclath, cstack
 16790 ;; Tracked objects:
 16791 ;;		On entry : 3F/B
 16792 ;;		On exit  : 3F/E
 16793 ;;		Unchanged: 0/0
 16794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16799 ;;Total ram usage:        0 bytes
 16800 ;; Hardware stack levels used: 1
 16801 ;; Hardware stack levels required when called: 5
 16802 ;; This function calls:
 16803 ;;		_EUSART1_SetErrorHandler
 16804 ;;		_EUSART1_SetFramingErrorHandler
 16805 ;;		_EUSART1_SetOverrunErrorHandler
 16806 ;;		_EUSART1_SetRxInterruptHandler
 16807 ;; This function is called by:
 16808 ;;		_SYSTEM_Initialize
 16809 ;; This function uses a non-reentrant model
 16810 ;;
 16811                           
 16812     0E1D                     _EUSART1_Initialize:	
 16813                           ;psect for function _EUSART1_Initialize
 16814                           
 16815                           
 16816                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 16817                           
 16818                           ;incstack = 0
 16819                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16820     0E1D  014E               	movlb	14	; select bank14
 16821     0E1E  1299               	bcf	25,5	;volatile
 16822                           
 16823                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 16824     0E1F  30CE               	movlw	low _EUSART1_Receive_ISR
 16825     0E20  00F4               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16826     0E21  300C               	movlw	high _EUSART1_Receive_ISR
 16827     0E22  00F5               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16828     0E23  3189  21B1  318E   	fcall	_EUSART1_SetRxInterruptHandler
 16829                           
 16830                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x0A;
 16831     0E26  300A               	movlw	10
 16832     0E27  0142               	movlb	2	; select bank2
 16833     0E28  009F               	movwf	31	;volatile
 16834                           
 16835                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 16836     0E29  3090               	movlw	144
 16837     0E2A  009D               	movwf	29	;volatile
 16838                           
 16839                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x24;
 16840     0E2B  3024               	movlw	36
 16841     0E2C  009E               	movwf	30	;volatile
 16842                           
 16843                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x19;
 16844     0E2D  3019               	movlw	25
 16845     0E2E  009B               	movwf	27	;volatile
 16846                           
 16847                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 16848     0E2F  019C               	clrf	28	;volatile
 16849                           
 16850                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 16851     0E30  3000               	movlw	0
 16852     0E31  00F4               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 16853     0E32  3000               	movlw	0
 16854     0E33  00F5               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 16855     0E34  3189  21AB  318E   	fcall	_EUSART1_SetFramingErrorHandler
 16856                           
 16857                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 16858     0E37  304E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 16859     0E38  00F4               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 16860     0E39  3009               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 16861     0E3A  00F5               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 16862     0E3B  3189  218B  318E   	fcall	_EUSART1_SetOverrunErrorHandler
 16863                           
 16864                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 16865     0E3E  3027               	movlw	low _EUSART1_DefaultErrorHandler
 16866     0E3F  00F4               	movwf	EUSART1_SetErrorHandler@interruptHandler
 16867     0E40  3009               	movlw	high _EUSART1_DefaultErrorHandler
 16868     0E41  00F5               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 16869     0E42  3189  2186         	fcall	_EUSART1_SetErrorHandler
 16870                           
 16871                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 16872     0E44  0140               	movlb	0	; select bank0
 16873     0E45  01E8               	clrf	_eusart1RxLastError	;volatile
 16874                           
 16875                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 16876     0E46  01F9               	clrf	_eusart1RxHead	;volatile
 16877                           
 16878                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 16879     0E47  01F8               	clrf	_eusart1RxTail	;volatile
 16880                           
 16881                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 16882     0E48  01EA               	clrf	_eusart1RxCount	;volatile
 16883                           
 16884                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 16885     0E49  014E               	movlb	14	; select bank14
 16886     0E4A  1699               	bsf	25,5	;volatile
 16887     0E4B  0008               	return
 16888     0E4C                     __end_of_EUSART1_Initialize:
 16889                           
 16890                           	psect	text97
 16891     09B1                     __ptext97:	
 16892 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16893 ;; Defined at:
 16894 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 16895 ;; Parameters:    Size  Location     Type
 16896 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 16897 ;;		 -> EUSART1_Receive_ISR(1), 
 16898 ;; Auto vars:     Size  Location     Type
 16899 ;;		None
 16900 ;; Return value:  Size  Location     Type
 16901 ;;                  1    wreg      void 
 16902 ;; Registers used:
 16903 ;;		wreg
 16904 ;; Tracked objects:
 16905 ;;		On entry : 3F/E
 16906 ;;		On exit  : 3F/0
 16907 ;;		Unchanged: 0/0
 16908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16913 ;;Total ram usage:        2 bytes
 16914 ;; Hardware stack levels used: 1
 16915 ;; Hardware stack levels required when called: 4
 16916 ;; This function calls:
 16917 ;;		Nothing
 16918 ;; This function is called by:
 16919 ;;		_EUSART1_Initialize
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923     09B1                     _EUSART1_SetRxInterruptHandler:	
 16924                           ;psect for function _EUSART1_SetRxInterruptHandler
 16925                           
 16926                           
 16927                           ;mcc_generated_files/eusart1.c: 243:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16928                           
 16929                           ;incstack = 0
 16930                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16931     09B1  0875               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16932     09B2  0140               	movlb	0	; select bank0
 16933     09B3  00E7               	movwf	_EUSART1_RxDefaultInterruptHandler+1
 16934     09B4  0874               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16935     09B5  00E6               	movwf	_EUSART1_RxDefaultInterruptHandler
 16936     09B6  0008               	return
 16937     09B7                     __end_of_EUSART1_SetRxInterruptHandler:
 16938                           
 16939                           	psect	text98
 16940     098B                     __ptext98:	
 16941 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 16942 ;; Defined at:
 16943 ;;		line 233 in file "mcc_generated_files/eusart1.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 16946 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      void 
 16951 ;; Registers used:
 16952 ;;		wreg
 16953 ;; Tracked objects:
 16954 ;;		On entry : 3F/1
 16955 ;;		On exit  : 3F/1
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16962 ;;Total ram usage:        2 bytes
 16963 ;; Hardware stack levels used: 1
 16964 ;; Hardware stack levels required when called: 4
 16965 ;; This function calls:
 16966 ;;		Nothing
 16967 ;; This function is called by:
 16968 ;;		_EUSART1_Initialize
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972     098B                     _EUSART1_SetOverrunErrorHandler:	
 16973                           ;psect for function _EUSART1_SetOverrunErrorHandler
 16974                           
 16975                           
 16976                           ;mcc_generated_files/eusart1.c: 234:     EUSART1_OverrunErrorHandler = interruptHandler;
 16977                           
 16978                           ;incstack = 0
 16979                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 16980     098B  0875               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 16981     098C  00ED               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
 16982     098D  0874               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 16983     098E  00EC               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
 16984     098F  0008               	return
 16985     0990                     __end_of_EUSART1_SetOverrunErrorHandler:
 16986                           
 16987                           	psect	text99
 16988     09AB                     __ptext99:	
 16989 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 16990 ;; Defined at:
 16991 ;;		line 229 in file "mcc_generated_files/eusart1.c"
 16992 ;; Parameters:    Size  Location     Type
 16993 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 16994 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 16995 ;; Auto vars:     Size  Location     Type
 16996 ;;		None
 16997 ;; Return value:  Size  Location     Type
 16998 ;;                  1    wreg      void 
 16999 ;; Registers used:
 17000 ;;		wreg
 17001 ;; Tracked objects:
 17002 ;;		On entry : 3F/2
 17003 ;;		On exit  : 3F/1
 17004 ;;		Unchanged: 0/0
 17005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17010 ;;Total ram usage:        2 bytes
 17011 ;; Hardware stack levels used: 1
 17012 ;; Hardware stack levels required when called: 4
 17013 ;; This function calls:
 17014 ;;		Nothing
 17015 ;; This function is called by:
 17016 ;;		_EUSART1_Initialize
 17017 ;; This function uses a non-reentrant model
 17018 ;;
 17019                           
 17020     09AB                     _EUSART1_SetFramingErrorHandler:	
 17021                           ;psect for function _EUSART1_SetFramingErrorHandler
 17022                           
 17023                           
 17024                           ;mcc_generated_files/eusart1.c: 230:     EUSART1_FramingErrorHandler = interruptHandler;
 17025                           
 17026                           ;incstack = 0
 17027                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17028     09AB  0875               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17029     09AC  0141               	movlb	1	; select bank1
 17030     09AD  00EF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
 17031     09AE  0874               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17032     09AF  00EE               	movwf	_EUSART1_FramingErrorHandler^(0+128)
 17033     09B0  0008               	return
 17034     09B1                     __end_of_EUSART1_SetFramingErrorHandler:
 17035                           
 17036                           	psect	text100
 17037     0986                     __ptext100:	
 17038 ;; *************** function _EUSART1_SetErrorHandler *****************
 17039 ;; Defined at:
 17040 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 17043 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17044 ;; Auto vars:     Size  Location     Type
 17045 ;;		None
 17046 ;; Return value:  Size  Location     Type
 17047 ;;                  1    wreg      void 
 17048 ;; Registers used:
 17049 ;;		wreg
 17050 ;; Tracked objects:
 17051 ;;		On entry : 3F/1
 17052 ;;		On exit  : 3F/1
 17053 ;;		Unchanged: 0/0
 17054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17059 ;;Total ram usage:        2 bytes
 17060 ;; Hardware stack levels used: 1
 17061 ;; Hardware stack levels required when called: 4
 17062 ;; This function calls:
 17063 ;;		Nothing
 17064 ;; This function is called by:
 17065 ;;		_EUSART1_Initialize
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069     0986                     _EUSART1_SetErrorHandler:	
 17070                           ;psect for function _EUSART1_SetErrorHandler
 17071                           
 17072                           
 17073                           ;mcc_generated_files/eusart1.c: 238:     EUSART1_ErrorHandler = interruptHandler;
 17074                           
 17075                           ;incstack = 0
 17076                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17077     0986  0875               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17078     0987  00EB               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
 17079     0988  0874               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17080     0989  00EA               	movwf	_EUSART1_ErrorHandler^(0+128)
 17081     098A  0008               	return
 17082     098B                     __end_of_EUSART1_SetErrorHandler:
 17083                           
 17084                           	psect	text101
 17085     09A5                     __ptext101:	
 17086 ;; *************** function _DAC1_Initialize *****************
 17087 ;; Defined at:
 17088 ;;		line 58 in file "mcc_generated_files/dac1.c"
 17089 ;; Parameters:    Size  Location     Type
 17090 ;;		None
 17091 ;; Auto vars:     Size  Location     Type
 17092 ;;		None
 17093 ;; Return value:  Size  Location     Type
 17094 ;;                  1    wreg      void 
 17095 ;; Registers used:
 17096 ;;		wreg
 17097 ;; Tracked objects:
 17098 ;;		On entry : B3F/5
 17099 ;;		On exit  : B3F/12
 17100 ;;		Unchanged: B00/0
 17101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;Total ram usage:        0 bytes
 17107 ;; Hardware stack levels used: 1
 17108 ;; Hardware stack levels required when called: 4
 17109 ;; This function calls:
 17110 ;;		Nothing
 17111 ;; This function is called by:
 17112 ;;		_SYSTEM_Initialize
 17113 ;; This function uses a non-reentrant model
 17114 ;;
 17115                           
 17116     09A5                     _DAC1_Initialize:	
 17117                           ;psect for function _DAC1_Initialize
 17118                           
 17119                           
 17120                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0x80;
 17121                           
 17122                           ;incstack = 0
 17123                           ; Regs used in _DAC1_Initialize: [wreg]
 17124     09A5  3080               	movlw	128
 17125     09A6  0152               	movlb	18	; select bank18
 17126     09A7  008E               	movwf	14	;volatile
 17127                           
 17128                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x18;
 17129     09A8  3018               	movlw	24
 17130     09A9  008F               	movwf	15	;volatile
 17131     09AA  0008               	return
 17132     09AB                     __end_of_DAC1_Initialize:
 17133                           
 17134                           	psect	text102
 17135     0A7D                     __ptext102:	
 17136 ;; *************** function _CMP1_Initialize *****************
 17137 ;; Defined at:
 17138 ;;		line 61 in file "mcc_generated_files/cmp1.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;		None
 17141 ;; Auto vars:     Size  Location     Type
 17142 ;;		None
 17143 ;; Return value:  Size  Location     Type
 17144 ;;                  1    wreg      void 
 17145 ;; Registers used:
 17146 ;;		wreg
 17147 ;; Tracked objects:
 17148 ;;		On entry : B3F/11
 17149 ;;		On exit  : B3F/E
 17150 ;;		Unchanged: B00/0
 17151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;Total ram usage:        0 bytes
 17157 ;; Hardware stack levels used: 1
 17158 ;; Hardware stack levels required when called: 4
 17159 ;; This function calls:
 17160 ;;		Nothing
 17161 ;; This function is called by:
 17162 ;;		_SYSTEM_Initialize
 17163 ;; This function uses a non-reentrant model
 17164 ;;
 17165                           
 17166     0A7D                     _CMP1_Initialize:	
 17167                           ;psect for function _CMP1_Initialize
 17168                           
 17169                           
 17170                           ;mcc_generated_files/cmp1.c: 68:     PIE2bits.C1IE = 0;
 17171                           
 17172                           ;incstack = 0
 17173                           ; Regs used in _CMP1_Initialize: [wreg]
 17174     0A7D  014E               	movlb	14	; select bank14
 17175     0A7E  1018               	bcf	24,0	;volatile
 17176                           
 17177                           ;mcc_generated_files/cmp1.c: 71:     CM1CON0 = 0x80;
 17178     0A7F  3080               	movlw	128
 17179     0A80  0153               	movlb	19	; select bank19
 17180     0A81  0090               	movwf	16	;volatile
 17181                           
 17182                           ;mcc_generated_files/cmp1.c: 74:     CM1CON1 = 0x03;
 17183     0A82  3003               	movlw	3
 17184     0A83  0091               	movwf	17	;volatile
 17185                           
 17186                           ;mcc_generated_files/cmp1.c: 77:     CM1NCH = 0x02;
 17187     0A84  3002               	movlw	2
 17188     0A85  0092               	movwf	18	;volatile
 17189                           
 17190                           ;mcc_generated_files/cmp1.c: 80:     CM1PCH = 0x05;
 17191     0A86  3005               	movlw	5
 17192     0A87  0093               	movwf	19	;volatile
 17193                           
 17194                           ;mcc_generated_files/cmp1.c: 83:     PIR2bits.C1IF = 0;
 17195     0A88  014E               	movlb	14	; select bank14
 17196     0A89  100E               	bcf	14,0	;volatile
 17197                           
 17198                           ;mcc_generated_files/cmp1.c: 86:     PIE2bits.C1IE = 1;
 17199     0A8A  1418               	bsf	24,0	;volatile
 17200     0A8B  0008               	return
 17201     0A8C                     __end_of_CMP1_Initialize:
 17202                           
 17203                           	psect	intentry
 17204     0004                     __pintentry:	
 17205 ;; *************** function _INTERRUPT_InterruptManager *****************
 17206 ;; Defined at:
 17207 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17208 ;; Parameters:    Size  Location     Type
 17209 ;;		None
 17210 ;; Auto vars:     Size  Location     Type
 17211 ;;		None
 17212 ;; Return value:  Size  Location     Type
 17213 ;;                  1    wreg      void 
 17214 ;; Registers used:
 17215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 0/0
 17218 ;;		On exit  : 0/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17225 ;;Total ram usage:        0 bytes
 17226 ;; Hardware stack levels used: 1
 17227 ;; Hardware stack levels required when called: 3
 17228 ;; This function calls:
 17229 ;;		NULL
 17230 ;;		_CMP1_ISR
 17231 ;;		_EUSART1_Receive_ISR
 17232 ;;		_TMR0_ISR
 17233 ;;		_TMR2_ISR
 17234 ;;		_TMR4_ISR
 17235 ;; This function is called by:
 17236 ;;		Interrupt level 1
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240     0004                     _INTERRUPT_InterruptManager:
 17241                           
 17242                           ;incstack = 0
 17243     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17244                           
 17245                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17246     0005  3180               	pagesel	$
 17247                           
 17248                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17249     0006  014E               	movlb	14	; select bank14
 17250     0007  1A96               	btfsc	22,5	;volatile
 17251     0008  1E8C               	btfss	12,5	;volatile
 17252     0009  280E               	goto	i1l711
 17253                           
 17254                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17255     000A  318A  229B  3180   	fcall	_TMR0_ISR
 17256                           
 17257                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17258     000D  282E               	goto	i1l723
 17259     000E                     i1l711:	
 17260                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17261                           
 17262     000E  1F0B               	btfss	11,6	;volatile
 17263     000F  282E               	goto	i1l723
 17264                           
 17265                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 17266     0010  1818               	btfsc	24,0	;volatile
 17267     0011  1C0E               	btfss	14,0	;volatile
 17268     0012  2817               	goto	i1l714
 17269                           
 17270                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CMP1_ISR();
 17271     0013  318A  2261  3180   	fcall	_CMP1_ISR
 17272                           
 17273                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17274     0016  282E               	goto	i1l723
 17275     0017                     i1l714:	
 17276                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR4IE == 1 && PI
      +                          R4bits.TMR4IF == 1)
 17277                           
 17278     0017  199A               	btfsc	26,3	;volatile
 17279     0018  1D90               	btfss	16,3	;volatile
 17280     0019  281E               	goto	i1l716
 17281                           
 17282                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
 17283     001A  318A  2249  3180   	fcall	_TMR4_ISR
 17284                           
 17285                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17286     001D  282E               	goto	i1l723
 17287     001E                     i1l716:	
 17288                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 17289                           
 17290     001E  189A               	btfsc	26,1	;volatile
 17291     001F  1C90               	btfss	16,1	;volatile
 17292     0020  2825               	goto	i1l718
 17293                           
 17294                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR2_ISR();
 17295     0021  318A  223D  3180   	fcall	_TMR2_ISR
 17296                           
 17297                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17298     0024  282E               	goto	i1l723
 17299     0025                     i1l718:	
 17300                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17301                           
 17302     0025  1A99               	btfsc	25,5	;volatile
 17303     0026  1E8F               	btfss	15,5	;volatile
 17304     0027  282E               	goto	i1l723
 17305                           
 17306                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 17307     0028  0140               	movlb	0	; select bank0
 17308     0029  0867               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
 17309     002A  008A               	movwf	10
 17310     002B  0866               	movf	_EUSART1_RxDefaultInterruptHandler,w
 17311     002C  000A               	callw
 17312     002D  3180               	pagesel	$
 17313     002E                     i1l723:	
 17314                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17315                           
 17316     002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17317     002F  0009               	retfie
 17318     0030                     __end_of_INTERRUPT_InterruptManager:
 17319                           
 17320                           	psect	text104
 17321     0A49                     __ptext104:	
 17322 ;; *************** function _TMR4_ISR *****************
 17323 ;; Defined at:
 17324 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 17325 ;; Parameters:    Size  Location     Type
 17326 ;;		None
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;		None
 17329 ;; Return value:  Size  Location     Type
 17330 ;;                  1    wreg      void 
 17331 ;; Registers used:
 17332 ;;		wreg, status,2, status,0, pclath, cstack
 17333 ;; Tracked objects:
 17334 ;;		On entry : 3F/E
 17335 ;;		On exit  : 0/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;Total ram usage:        0 bytes
 17343 ;; Hardware stack levels used: 1
 17344 ;; Hardware stack levels required when called: 1
 17345 ;; This function calls:
 17346 ;;		NULL
 17347 ;;		_TMR4_DefaultInterruptHandler
 17348 ;; This function is called by:
 17349 ;;		_INTERRUPT_InterruptManager
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353     0A49                     _TMR4_ISR:	
 17354                           ;psect for function _TMR4_ISR
 17355                           
 17356                           
 17357                           ;mcc_generated_files/tmr4.c: 170:     PIR4bits.TMR4IF = 0;
 17358                           
 17359                           ;incstack = 0
 17360                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 17361     0A49  1190               	bcf	16,3	;volatile
 17362                           
 17363                           ;mcc_generated_files/tmr4.c: 172:     if(TMR4_InterruptHandler)
 17364     0A4A  0140               	movlb	0	; select bank0
 17365     0A4B  0862               	movf	_TMR4_InterruptHandler,w
 17366     0A4C  0463               	iorwf	_TMR4_InterruptHandler+1,w
 17367     0A4D  1903               	btfsc	3,2
 17368     0A4E  0008               	return
 17369                           
 17370                           ;mcc_generated_files/tmr4.c: 173:     {;mcc_generated_files/tmr4.c: 174:         TMR4_In
      +                          terruptHandler();
 17371     0A4F  0863               	movf	_TMR4_InterruptHandler+1,w
 17372     0A50  008A               	movwf	10
 17373     0A51  0862               	movf	_TMR4_InterruptHandler,w
 17374     0A52  000A               	callw
 17375     0A53  318A               	pagesel	$
 17376     0A54  0008               	return
 17377     0A55                     __end_of_TMR4_ISR:
 17378                           
 17379                           	psect	text105
 17380     0919                     __ptext105:	
 17381 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 17382 ;; Defined at:
 17383 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;		None
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;		None
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  1    wreg      void 
 17390 ;; Registers used:
 17391 ;;		None
 17392 ;; Tracked objects:
 17393 ;;		On entry : 3F/0
 17394 ;;		On exit  : 3F/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;Total ram usage:        0 bytes
 17402 ;; Hardware stack levels used: 1
 17403 ;; This function calls:
 17404 ;;		Nothing
 17405 ;; This function is called by:
 17406 ;;		_TMR4_Initialize
 17407 ;;		_TMR4_ISR
 17408 ;; This function uses a non-reentrant model
 17409 ;;
 17410                           
 17411     0919                     _TMR4_DefaultInterruptHandler:	
 17412                           ;psect for function _TMR4_DefaultInterruptHandler
 17413                           
 17414                           
 17415                           ;incstack = 0
 17416                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 17417                           ;mcc_generated_files/tmr4.c: 186:     do { LATAbits.LATA5 = 1; } while(0);
 17418     0919  1698               	bsf	24,5	;volatile
 17419     091A  0008               	return
 17420     091B                     __end_of_TMR4_DefaultInterruptHandler:
 17421                           
 17422                           	psect	text106
 17423     0A3D                     __ptext106:	
 17424 ;; *************** function _TMR2_ISR *****************
 17425 ;; Defined at:
 17426 ;;		line 166 in file "mcc_generated_files/tmr2.c"
 17427 ;; Parameters:    Size  Location     Type
 17428 ;;		None
 17429 ;; Auto vars:     Size  Location     Type
 17430 ;;		None
 17431 ;; Return value:  Size  Location     Type
 17432 ;;                  1    wreg      void 
 17433 ;; Registers used:
 17434 ;;		wreg, status,2, status,0, pclath, cstack
 17435 ;; Tracked objects:
 17436 ;;		On entry : 3F/E
 17437 ;;		On exit  : 0/0
 17438 ;;		Unchanged: 0/0
 17439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;Total ram usage:        0 bytes
 17445 ;; Hardware stack levels used: 1
 17446 ;; Hardware stack levels required when called: 1
 17447 ;; This function calls:
 17448 ;;		NULL
 17449 ;;		_TMR2_DefaultInterruptHandler
 17450 ;; This function is called by:
 17451 ;;		_INTERRUPT_InterruptManager
 17452 ;; This function uses a non-reentrant model
 17453 ;;
 17454                           
 17455     0A3D                     _TMR2_ISR:	
 17456                           ;psect for function _TMR2_ISR
 17457                           
 17458                           
 17459                           ;mcc_generated_files/tmr2.c: 170:     PIR4bits.TMR2IF = 0;
 17460                           
 17461                           ;incstack = 0
 17462                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 17463     0A3D  1090               	bcf	16,1	;volatile
 17464                           
 17465                           ;mcc_generated_files/tmr2.c: 172:     if(TMR2_InterruptHandler)
 17466     0A3E  0140               	movlb	0	; select bank0
 17467     0A3F  0864               	movf	_TMR2_InterruptHandler,w
 17468     0A40  0465               	iorwf	_TMR2_InterruptHandler+1,w
 17469     0A41  1903               	btfsc	3,2
 17470     0A42  0008               	return
 17471                           
 17472                           ;mcc_generated_files/tmr2.c: 173:     {;mcc_generated_files/tmr2.c: 174:         TMR2_In
      +                          terruptHandler();
 17473     0A43  0865               	movf	_TMR2_InterruptHandler+1,w
 17474     0A44  008A               	movwf	10
 17475     0A45  0864               	movf	_TMR2_InterruptHandler,w
 17476     0A46  000A               	callw
 17477     0A47  318A               	pagesel	$
 17478     0A48  0008               	return
 17479     0A49                     __end_of_TMR2_ISR:
 17480                           
 17481                           	psect	text107
 17482     0917                     __ptext107:	
 17483 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 17484 ;; Defined at:
 17485 ;;		line 183 in file "mcc_generated_files/tmr2.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;		None
 17488 ;; Auto vars:     Size  Location     Type
 17489 ;;		None
 17490 ;; Return value:  Size  Location     Type
 17491 ;;                  1    wreg      void 
 17492 ;; Registers used:
 17493 ;;		None
 17494 ;; Tracked objects:
 17495 ;;		On entry : 3F/0
 17496 ;;		On exit  : 3F/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17503 ;;Total ram usage:        0 bytes
 17504 ;; Hardware stack levels used: 1
 17505 ;; This function calls:
 17506 ;;		Nothing
 17507 ;; This function is called by:
 17508 ;;		_TMR2_Initialize
 17509 ;;		_TMR2_ISR
 17510 ;; This function uses a non-reentrant model
 17511 ;;
 17512                           
 17513     0917                     _TMR2_DefaultInterruptHandler:	
 17514                           ;psect for function _TMR2_DefaultInterruptHandler
 17515                           
 17516                           
 17517                           ;incstack = 0
 17518                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 17519                           ;mcc_generated_files/tmr2.c: 186:     do { LATAbits.LATA5 = 0; } while(0);
 17520     0917  1298               	bcf	24,5	;volatile
 17521     0918  0008               	return
 17522     0919                     __end_of_TMR2_DefaultInterruptHandler:
 17523                           
 17524                           	psect	text108
 17525     0A9B                     __ptext108:	
 17526 ;; *************** function _TMR0_ISR *****************
 17527 ;; Defined at:
 17528 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 17529 ;; Parameters:    Size  Location     Type
 17530 ;;		None
 17531 ;; Auto vars:     Size  Location     Type
 17532 ;;		None
 17533 ;; Return value:  Size  Location     Type
 17534 ;;                  1    wreg      void 
 17535 ;; Registers used:
 17536 ;;		wreg, status,2, status,0, pclath, cstack
 17537 ;; Tracked objects:
 17538 ;;		On entry : 3F/E
 17539 ;;		On exit  : 0/0
 17540 ;;		Unchanged: 0/0
 17541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17546 ;;Total ram usage:        0 bytes
 17547 ;; Hardware stack levels used: 1
 17548 ;; Hardware stack levels required when called: 1
 17549 ;; This function calls:
 17550 ;;		NULL
 17551 ;;		_TMR0_DefaultInterruptHandler
 17552 ;; This function is called by:
 17553 ;;		_INTERRUPT_InterruptManager
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557     0A9B                     _TMR0_ISR:	
 17558                           ;psect for function _TMR0_ISR
 17559                           
 17560                           
 17561                           ;mcc_generated_files/tmr0.c: 137:    PIR0bits.TMR0IF = 0;
 17562                           
 17563                           ;incstack = 0
 17564                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17565     0A9B  128C               	bcf	12,5	;volatile
 17566                           
 17567                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
 17568     0A9C  0877               	movf	_timer0ReloadVal16bit+1,w	;volatile
 17569     0A9D  014B               	movlb	11	; select bank11
 17570     0A9E  009D               	movwf	29	;volatile
 17571                           
 17572                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 17573     0A9F  0876               	movf	_timer0ReloadVal16bit,w	;volatile
 17574     0AA0  009C               	movwf	28	;volatile
 17575                           
 17576                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
 17577     0AA1  0140               	movlb	0	; select bank0
 17578     0AA2  0860               	movf	_TMR0_InterruptHandler,w
 17579     0AA3  0461               	iorwf	_TMR0_InterruptHandler+1,w
 17580     0AA4  1903               	btfsc	3,2
 17581     0AA5  0008               	return
 17582                           
 17583                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
 17584     0AA6  0861               	movf	_TMR0_InterruptHandler+1,w
 17585     0AA7  008A               	movwf	10
 17586     0AA8  0860               	movf	_TMR0_InterruptHandler,w
 17587     0AA9  000A               	callw
 17588     0AAA  318A               	pagesel	$
 17589     0AAB  0008               	return
 17590     0AAC                     __end_of_TMR0_ISR:
 17591                           
 17592                           	psect	text109
 17593     092A                     __ptext109:	
 17594 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17595 ;; Defined at:
 17596 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 17597 ;; Parameters:    Size  Location     Type
 17598 ;;		None
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;		None
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  1    wreg      void 
 17603 ;; Registers used:
 17604 ;;		None
 17605 ;; Tracked objects:
 17606 ;;		On entry : 3F/0
 17607 ;;		On exit  : 3F/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17614 ;;Total ram usage:        0 bytes
 17615 ;; Hardware stack levels used: 1
 17616 ;; This function calls:
 17617 ;;		Nothing
 17618 ;; This function is called by:
 17619 ;;		_TMR0_Initialize
 17620 ;;		_TMR0_ISR
 17621 ;; This function uses a non-reentrant model
 17622 ;;
 17623                           
 17624     092A                     _TMR0_DefaultInterruptHandler:	
 17625                           ;psect for function _TMR0_DefaultInterruptHandler
 17626                           
 17627                           
 17628                           ;mcc_generated_files/tmr0.c: 158:     measureTime = 1;
 17629                           
 17630                           ;incstack = 0
 17631                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17632     092A  01DF               	clrf	_measureTime
 17633     092B  0ADF               	incf	_measureTime,f
 17634     092C  0008               	return
 17635     092D                     __end_of_TMR0_DefaultInterruptHandler:
 17636                           
 17637                           	psect	text110
 17638     0CCE                     __ptext110:	
 17639 ;; *************** function _EUSART1_Receive_ISR *****************
 17640 ;; Defined at:
 17641 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 17642 ;; Parameters:    Size  Location     Type
 17643 ;;		None
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;		None
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      void 
 17648 ;; Registers used:
 17649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17650 ;; Tracked objects:
 17651 ;;		On entry : 3F/0
 17652 ;;		On exit  : 0/0
 17653 ;;		Unchanged: 0/0
 17654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17659 ;;Total ram usage:        0 bytes
 17660 ;; Hardware stack levels used: 1
 17661 ;; Hardware stack levels required when called: 2
 17662 ;; This function calls:
 17663 ;;		NULL
 17664 ;;		_EUSART1_DefaultErrorHandler
 17665 ;;		_EUSART1_DefaultOverrunErrorHandler
 17666 ;;		_EUSART1_RxDataHandler
 17667 ;; This function is called by:
 17668 ;;		_EUSART1_Initialize
 17669 ;;		_INTERRUPT_InterruptManager
 17670 ;; This function uses a non-reentrant model
 17671 ;;
 17672                           
 17673     0CCE                     _EUSART1_Receive_ISR:	
 17674                           ;psect for function _EUSART1_Receive_ISR
 17675                           
 17676                           
 17677                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 17678                           
 17679                           ;incstack = 0
 17680                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17681     0CCE  0879               	movf	_eusart1RxHead,w	;volatile
 17682     0CCF  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+768)))& (0+255)
 17683     0CD0  0086               	movwf	6
 17684     0CD1  3003               	movlw	3	; select bank6/7
 17685     0CD2  0087               	movwf	7
 17686     0CD3  0181               	clrf	1
 17687                           
 17688                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 17689     0CD4  0142               	movlb	2	; select bank2
 17690     0CD5  1C9D               	btfss	29,1	;volatile
 17691     0CD6  2CE3               	goto	i1l4231
 17692                           
 17693                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 17694     0CD7  0879               	movf	_eusart1RxHead,w	;volatile
 17695     0CD8  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+768)))& (0+255)
 17696     0CD9  0086               	movwf	6
 17697     0CDA  3003               	movlw	3	; select bank6/7
 17698     0CDB  0087               	movwf	7
 17699     0CDC  1501               	bsf	1,2
 17700                           
 17701                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 17702     0CDD  0141               	movlb	1	; select bank1
 17703     0CDE  086D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 17704     0CDF  008A               	movwf	10
 17705     0CE0  086C               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 17706     0CE1  000A               	callw
 17707     0CE2  318C               	pagesel	$
 17708     0CE3                     i1l4231:
 17709                           
 17710                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 17711     0CE3  0879               	movf	_eusart1RxHead,w	;volatile
 17712     0CE4  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+768)))& (0+255)
 17713     0CE5  0086               	movwf	6
 17714     0CE6  3003               	movlw	3	; select bank6/7
 17715     0CE7  0087               	movwf	7
 17716     0CE8  0801               	movf	1,w
 17717     0CE9  1903               	btfsc	3,2
 17718     0CEA  2CF2               	goto	i1l4235
 17719                           
 17720                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 17721     0CEB  0141               	movlb	1	; select bank1
 17722     0CEC  086B               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 17723     0CED  008A               	movwf	10
 17724     0CEE  086A               	movf	_EUSART1_ErrorHandler^(0+128),w
 17725     0CEF  000A               	callw
 17726     0CF0  318C               	pagesel	$
 17727                           
 17728                           ;mcc_generated_files/eusart1.c: 188:     } else {
 17729     0CF1  0008               	return
 17730     0CF2                     i1l4235:
 17731                           
 17732                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 17733     0CF2  3187  27D0         	fcall	_EUSART1_RxDataHandler
 17734     0CF4  0008               	return
 17735     0CF5                     __end_of_EUSART1_Receive_ISR:
 17736                           
 17737                           	psect	text111
 17738     094E                     __ptext111:	
 17739 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 17740 ;; Defined at:
 17741 ;;		line 217 in file "mcc_generated_files/eusart1.c"
 17742 ;; Parameters:    Size  Location     Type
 17743 ;;		None
 17744 ;; Auto vars:     Size  Location     Type
 17745 ;;		None
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  1    wreg      void 
 17748 ;; Registers used:
 17749 ;;		None
 17750 ;; Tracked objects:
 17751 ;;		On entry : 3F/1
 17752 ;;		On exit  : 3F/2
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17759 ;;Total ram usage:        0 bytes
 17760 ;; Hardware stack levels used: 1
 17761 ;; This function calls:
 17762 ;;		Nothing
 17763 ;; This function is called by:
 17764 ;;		_EUSART1_Initialize
 17765 ;;		_EUSART1_Receive_ISR
 17766 ;; This function uses a non-reentrant model
 17767 ;;
 17768                           
 17769     094E                     _EUSART1_DefaultOverrunErrorHandler:	
 17770                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 17771                           
 17772                           
 17773                           ;mcc_generated_files/eusart1.c: 220:     RC1STAbits.CREN = 0;
 17774                           
 17775                           ;incstack = 0
 17776                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 17777     094E  0142               	movlb	2	; select bank2
 17778     094F  121D               	bcf	29,4	;volatile
 17779                           
 17780                           ;mcc_generated_files/eusart1.c: 221:     RC1STAbits.CREN = 1;
 17781     0950  161D               	bsf	29,4	;volatile
 17782     0951  0008               	return
 17783     0952                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 17784                           
 17785                           	psect	text112
 17786     0927                     __ptext112:	
 17787 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 17788 ;; Defined at:
 17789 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 17790 ;; Parameters:    Size  Location     Type
 17791 ;;		None
 17792 ;; Auto vars:     Size  Location     Type
 17793 ;;		None
 17794 ;; Return value:  Size  Location     Type
 17795 ;;                  1    wreg      void 
 17796 ;; Registers used:
 17797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17798 ;; Tracked objects:
 17799 ;;		On entry : 3F/1
 17800 ;;		On exit  : 3D/0
 17801 ;;		Unchanged: 0/0
 17802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17807 ;;Total ram usage:        0 bytes
 17808 ;; Hardware stack levels used: 1
 17809 ;; Hardware stack levels required when called: 1
 17810 ;; This function calls:
 17811 ;;		_EUSART1_RxDataHandler
 17812 ;; This function is called by:
 17813 ;;		_EUSART1_Initialize
 17814 ;;		_EUSART1_Receive_ISR
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818     0927                     _EUSART1_DefaultErrorHandler:	
 17819                           ;psect for function _EUSART1_DefaultErrorHandler
 17820                           
 17821                           
 17822                           ;mcc_generated_files/eusart1.c: 226:     EUSART1_RxDataHandler();
 17823                           
 17824                           ;incstack = 0
 17825                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17826     0927  3187  27D0         	fcall	_EUSART1_RxDataHandler
 17827     0929  0008               	return
 17828     092A                     __end_of_EUSART1_DefaultErrorHandler:
 17829                           
 17830                           	psect	text113
 17831     07D0                     __ptext113:	
 17832 ;; *************** function _EUSART1_RxDataHandler *****************
 17833 ;; Defined at:
 17834 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;		None
 17837 ;; Auto vars:     Size  Location     Type
 17838 ;;  t               2    2[COMMON] int 
 17839 ;; Return value:  Size  Location     Type
 17840 ;;                  1    wreg      void 
 17841 ;; Registers used:
 17842 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17843 ;; Tracked objects:
 17844 ;;		On entry : 0/2
 17845 ;;		On exit  : 3D/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17852 ;;Total ram usage:        4 bytes
 17853 ;; Hardware stack levels used: 1
 17854 ;; This function calls:
 17855 ;;		Nothing
 17856 ;; This function is called by:
 17857 ;;		_EUSART1_Receive_ISR
 17858 ;;		_EUSART1_DefaultErrorHandler
 17859 ;; This function uses a non-reentrant model
 17860 ;;
 17861                           
 17862     07D0                     _EUSART1_RxDataHandler:	
 17863                           ;psect for function _EUSART1_RxDataHandler
 17864                           
 17865                           
 17866                           ;mcc_generated_files/eusart1.c: 197:     int t;;mcc_generated_files/eusart1.c: 198:     
      +                          eusart1RxBuffer[eusart1RxHead] = RC1REG;
 17867                           
 17868                           ;incstack = 0
 17869                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17870     07D0  0879               	movf	_eusart1RxHead,w
 17871     07D1  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 17872     07D2  0086               	movwf	6
 17873     07D3  3002               	movlw	2	; select bank5/6
 17874     07D4  0087               	movwf	7
 17875     07D5  0142               	movlb	2	; select bank2
 17876     07D6  0819               	movf	25,w	;volatile
 17877     07D7  0081               	movwf	1
 17878                           
 17879                           ;mcc_generated_files/eusart1.c: 199:     if(eusart1RxBuffer[eusart1RxHead])
 17880     07D8  0879               	movf	_eusart1RxHead,w
 17881     07D9  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 17882     07DA  0086               	movwf	6
 17883     07DB  3002               	movlw	2	; select bank5/6
 17884     07DC  0087               	movwf	7
 17885     07DD  0801               	movf	1,w
 17886     07DE  1903               	btfsc	3,2
 17887     07DF  0008               	return
 17888                           
 17889                           ;mcc_generated_files/eusart1.c: 200:     {;mcc_generated_files/eusart1.c: 201:         i
      +                          f(eusart1RxBuffer[eusart1RxHead] == 0x0A)
 17890     07E0  0879               	movf	_eusart1RxHead,w
 17891     07E1  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 17892     07E2  0086               	movwf	6
 17893     07E3  3002               	movlw	2	; select bank5/6
 17894     07E4  0087               	movwf	7
 17895     07E5  300A               	movlw	10
 17896     07E6  0601               	xorwf	1,w
 17897     07E7  1D03               	btfss	3,2
 17898     07E8  2FEE               	goto	i1l3837
 17899                           
 17900                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1PacketFinish++;
 17901     07E9  3001               	movlw	1
 17902     07EA  00F0               	movwf	??_EUSART1_RxDataHandler
 17903     07EB  0870               	movf	??_EUSART1_RxDataHandler,w
 17904     07EC  0140               	movlb	0	; select bank0
 17905     07ED  07E9               	addwf	_eusart1PacketFinish,f	;volatile
 17906     07EE                     i1l3837:
 17907                           
 17908                           ;mcc_generated_files/eusart1.c: 205:         t=eusart1RxHead;
 17909     07EE  0879               	movf	_eusart1RxHead,w	;volatile
 17910     07EF  00F0               	movwf	??_EUSART1_RxDataHandler
 17911     07F0  01F1               	clrf	??_EUSART1_RxDataHandler+1
 17912     07F1  0870               	movf	??_EUSART1_RxDataHandler,w
 17913     07F2  00F2               	movwf	EUSART1_RxDataHandler@t
 17914     07F3  0871               	movf	??_EUSART1_RxDataHandler+1,w
 17915     07F4  00F3               	movwf	EUSART1_RxDataHandler@t+1
 17916                           
 17917                           ;mcc_generated_files/eusart1.c: 206:         eusart1RxHead = (eusart1RxHead + 1)% 64;
 17918     07F5  0879               	movf	_eusart1RxHead,w	;volatile
 17919     07F6  3E01               	addlw	1
 17920     07F7  393F               	andlw	63
 17921     07F8  00F9               	movwf	_eusart1RxHead	;volatile
 17922                           
 17923                           ;mcc_generated_files/eusart1.c: 207:         if(eusart1RxHead == eusart1RxTail)
 17924     07F9  0879               	movf	_eusart1RxHead,w	;volatile
 17925     07FA  0678               	xorwf	_eusart1RxTail,w	;volatile
 17926     07FB  1D03               	skipz
 17927     07FC  0008               	return
 17928                           
 17929                           ;mcc_generated_files/eusart1.c: 208:         {;mcc_generated_files/eusart1.c: 209:      
      +                                 eusart1RxHead = t;
 17930     07FD  0872               	movf	EUSART1_RxDataHandler@t,w
 17931     07FE  00F9               	movwf	_eusart1RxHead	;volatile
 17932     07FF  0008               	return
 17933     0800                     __end_of_EUSART1_RxDataHandler:
 17934                           
 17935                           	psect	text114
 17936     0A61                     __ptext114:	
 17937 ;; *************** function _CMP1_ISR *****************
 17938 ;; Defined at:
 17939 ;;		line 94 in file "mcc_generated_files/cmp1.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;		None
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;		None
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      void 
 17946 ;; Registers used:
 17947 ;;		wreg, status,2, status,0, pclath, cstack
 17948 ;; Tracked objects:
 17949 ;;		On entry : 3F/E
 17950 ;;		On exit  : 3F/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;Total ram usage:        0 bytes
 17958 ;; Hardware stack levels used: 1
 17959 ;; Hardware stack levels required when called: 1
 17960 ;; This function calls:
 17961 ;;		_CMP1_GetOutputStatus
 17962 ;; This function is called by:
 17963 ;;		_INTERRUPT_InterruptManager
 17964 ;; This function uses a non-reentrant model
 17965 ;;
 17966                           
 17967     0A61                     _CMP1_ISR:	
 17968                           ;psect for function _CMP1_ISR
 17969                           
 17970                           
 17971                           ;mcc_generated_files/cmp1.c: 97:     PIR2bits.C1IF = 0;
 17972                           
 17973                           ;incstack = 0
 17974                           ; Regs used in _CMP1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17975     0A61  100E               	bcf	14,0	;volatile
 17976                           
 17977                           ;mcc_generated_files/cmp1.c: 98:     if(CMP1_GetOutputStatus())
 17978     0A62  3189  219F  318A   	fcall	_CMP1_GetOutputStatus
 17979     0A65  3A00               	xorlw	0
 17980     0A66  1903               	skipnz
 17981     0A67  2A6C               	goto	i1l4253
 17982                           
 17983                           ;mcc_generated_files/cmp1.c: 99:     {;mcc_generated_files/cmp1.c: 100:         status.b
      +                          eacon = 1;
 17984     0A68  0140               	movlb	0	; select bank0
 17985     0A69  01DC               	clrf	_status+4
 17986     0A6A  0ADC               	incf	_status+4,f
 17987                           
 17988                           ;mcc_generated_files/cmp1.c: 101:     }else
 17989     0A6B  0008               	return
 17990     0A6C                     i1l4253:
 17991                           
 17992                           ;mcc_generated_files/cmp1.c: 102:     {;mcc_generated_files/cmp1.c: 103:         status.
      +                          beacon = 0;
 17993     0A6C  0140               	movlb	0	; select bank0
 17994     0A6D  01DC               	clrf	_status+4
 17995     0A6E  0008               	return
 17996     0A6F                     __end_of_CMP1_ISR:
 17997                           
 17998                           	psect	text115
 17999     099F                     __ptext115:	
 18000 ;; *************** function _CMP1_GetOutputStatus *****************
 18001 ;; Defined at:
 18002 ;;		line 89 in file "mcc_generated_files/cmp1.c"
 18003 ;; Parameters:    Size  Location     Type
 18004 ;;		None
 18005 ;; Auto vars:     Size  Location     Type
 18006 ;;		None
 18007 ;; Return value:  Size  Location     Type
 18008 ;;                  1    wreg      _Bool 
 18009 ;; Registers used:
 18010 ;;		wreg, status,2, status,0
 18011 ;; Tracked objects:
 18012 ;;		On entry : 3F/E
 18013 ;;		On exit  : 3F/13
 18014 ;;		Unchanged: 0/0
 18015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18020 ;;Total ram usage:        0 bytes
 18021 ;; Hardware stack levels used: 1
 18022 ;; This function calls:
 18023 ;;		Nothing
 18024 ;; This function is called by:
 18025 ;;		_CMP1_ISR
 18026 ;; This function uses a non-reentrant model
 18027 ;;
 18028                           
 18029     099F                     _CMP1_GetOutputStatus:	
 18030                           ;psect for function _CMP1_GetOutputStatus
 18031                           
 18032                           
 18033                           ;mcc_generated_files/cmp1.c: 91:  return (CM1CON0bits.C1OUT);
 18034                           
 18035                           ;incstack = 0
 18036                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
 18037     099F  0153               	movlb	19	; select bank19
 18038     09A0  0E10               	swapf	16,w	;volatile
 18039     09A1  0C89               	rrf	9,f
 18040     09A2  0C89               	rrf	9,f
 18041     09A3  3901               	andlw	1
 18042     09A4  0008               	return
 18043     09A5                     __end_of_CMP1_GetOutputStatus:
 18044     007E                     btemp	set	126	;btemp
 18045     007E                     int$flags	set	126
 18046     007E                     wtemp0	set	126
 18047                           
 18048                           	psect	idloc
 18049                           
 18050                           ;Config register IDLOC0 @ 0x8000
 18051                           ;	unspecified, using default values
 18052     8000                     	org	32768
 18053     8000  3FFF               	dw	16383
 18054                           
 18055                           ;Config register IDLOC1 @ 0x8001
 18056                           ;	unspecified, using default values
 18057     8001                     	org	32769
 18058     8001  3FFF               	dw	16383
 18059                           
 18060                           ;Config register IDLOC2 @ 0x8002
 18061                           ;	unspecified, using default values
 18062     8002                     	org	32770
 18063     8002  3FFF               	dw	16383
 18064                           
 18065                           ;Config register IDLOC3 @ 0x8003
 18066                           ;	unspecified, using default values
 18067     8003                     	org	32771
 18068     8003  3FFF               	dw	16383
 18069                           
 18070                           	psect	config
 18071                           
 18072                           ;Config register CONFIG1 @ 0x8007
 18073                           ;	External Oscillator mode selection bits
 18074                           ;	FEXTOSC = OFF, Oscillator not enabled
 18075                           ;	Power-up default value for COSC bits
 18076                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18077                           ;	Clock Out Enable bit
 18078                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18079                           ;	Clock Switch Enable bit
 18080                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18081                           ;	Fail-Safe Clock Monitor Enable bit
 18082                           ;	FCMEN = ON, FSCM timer enabled
 18083     8007                     	org	32775
 18084     8007  3FEC               	dw	16364
 18085                           
 18086                           ;Config register CONFIG2 @ 0x8008
 18087                           ;	Master Clear Enable bit
 18088                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18089                           ;	Power-up Timer Enable bit
 18090                           ;	PWRTS = OFF, PWRT disabled
 18091                           ;	Low-Power BOR enable bit
 18092                           ;	LPBOREN = OFF, ULPBOR disabled
 18093                           ;	Brown-out reset enable bits
 18094                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18095                           ;	Brown-out Reset Voltage Selection
 18096                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 18097                           ;	Zero-cross detect disable
 18098                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 18099                           ;	Peripheral Pin Select one-way control
 18100                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18101                           ;	Stack Overflow/Underflow Reset Enable bit
 18102                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18103     8008                     	org	32776
 18104     8008  3FFF               	dw	16383
 18105                           
 18106                           ;Config register CONFIG3 @ 0x8009
 18107                           ;	WDT Period Select bits
 18108                           ;	WDTCPS = WDTCPS_10, Divider ratio 1:32768
 18109                           ;	WDT operating mode
 18110                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
 18111                           ;	WDT Window Select bits
 18112                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18113                           ;	WDT input clock selector
 18114                           ;	WDTCCS = SC, Software Control
 18115     8009                     	org	32777
 18116     8009  3FEA               	dw	16362
 18117                           
 18118                           ;Config register CONFIG4 @ 0x800A
 18119                           ;	Boot Block Size Selection bits
 18120                           ;	BBSIZE = BB512, 512 words boot block size
 18121                           ;	Boot Block Enable bit
 18122                           ;	BBEN = OFF, Boot Block disabled
 18123                           ;	SAF Enable bit
 18124                           ;	SAFEN = OFF, SAF disabled
 18125                           ;	Application Block Write Protection bit
 18126                           ;	WRTAPP = OFF, Application Block not write protected
 18127                           ;	Boot Block Write Protection bit
 18128                           ;	WRTB = OFF, Boot Block not write protected
 18129                           ;	Configuration Register Write Protection bit
 18130                           ;	WRTC = OFF, Configuration Register not write protected
 18131                           ;	Data EEPROM write protection bit
 18132                           ;	WRTD = OFF, Data EEPROM NOT write protected
 18133                           ;	Storage Area Flash Write Protection bit
 18134                           ;	WRTSAF = OFF, SAF not write protected
 18135                           ;	Low Voltage Programming Enable bit
 18136                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18137     800A                     	org	32778
 18138     800A  3FFF               	dw	16383
 18139                           
 18140                           ;Config register CONFIG5 @ 0x800B
 18141                           ;	UserNVM Program memory code protection bit
 18142                           ;	CP = OFF, UserNVM code protection disabled
 18143     800B                     	org	32779
 18144     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        218
    BSS         172
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     49      75
    BANK1            80     11      80
    BANK2            80      0      59
    BANK3            80      0      59
    BANK4            80      0      59
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_DO_TX$3450$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$3455	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$3450	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$3449	const PTR FTN()enum E10721 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    processCommand@data	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    processCommand@sensor	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    getHis@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMed@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMin@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMax@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMetrics@device	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    getINA220Data@device	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    writeINA220@pTxbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> writeINA220@Txbuffer(BANK0[3]), 

    readINA220@pTxbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> readINA220@regadd(BANK0[1]), 

    readINA220@pRxbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> readINA220@buff(BANK0[2]), 

    stringToInt16@string	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    int16ToString@data	PTR unsigned char  size(1) Largest target is 8
		 -> sendSensorData@packet(BANK0[8]), 

    stringlen@str	PTR const unsigned char  size(1) Largest target is 11
		 -> packet.value(COMMON[6]), sendSensorData@packet(BANK0[8]), main@packet(BANK1[11]), 

    stringCompare@buf	PTR const unsigned char  size(2) Largest target is 8
		 -> cons.sensor_info.address(BANK4[3]), cons.sensor_info(BANK4[8]), battery.sensor_info.address(BANK2[3]), battery.sensor_info(BANK2[8]), 
		 -> panel.sensor_info.address(BANK3[3]), panel.sensor_info(BANK3[8]), 

    stringCompare@str	PTR const unsigned char  size(1) Largest target is 11
		 -> main@packet.address(COMMON[3]), main@packet(BANK1[11]), 

    sendSensorInfo@sensor_info	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    receiveData@data	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    sendPacket@str	PTR const unsigned char  size(1) Largest target is 8
		 -> sendSensorData@packet(BANK0[8]), sendSensorInfo@packet(BANK0[7]), 

    initRxBuffer@buf	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), readINA220@buff(BANK0[2]), I2C1_ReadDataBlock@reg(COMMON[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), readINA220@buff(BANK0[2]), I2C1_ReadDataBlock@reg(COMMON[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), readINA220@buff(BANK0[2]), I2C1_ReadDataBlock@reg(COMMON[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E10721[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S94$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 2
		 -> readINA220@buff(BANK0[2]), 

    I2C1_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 3
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_receiveData
    _receiveData->_EUSART1_Read
    _processCommand->_getMax
    _processCommand->_getMin
    _processCommand->_sendSensorInfo
    _stringToInt16->___wmul
    _I2C1_WriteNBytes->_I2C1_Open
    _I2C1_WriteNBytes->_I2C1_SetBuffer
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_ReadNBytes->_I2C1_Open
    _I2C1_ReadNBytes->_I2C1_SetBuffer
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _wr2RegCompleteHandler->_I2C1_SetBuffer
    _wr1RegCompleteHandler->_I2C1_SetBuffer
    _rdBlkRegCompleteHandler->_I2C1_SetBuffer
    _rd2RegCompleteHandler->_I2C1_SetBuffer
    _rd1RegCompleteHandler->_I2C1_SetBuffer
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _sendPacket->_EUSART1_Write
    _sendPacket->_EUSART1_is_tx_ready
    _sendPacket->_stringlen
    _int16ToString->___lwmod
    _getMetrics->_getMax
    _getMetrics->_getMin
    _getMed->___aldiv
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_processCommand
    _processCommand->_getHis
    _stringToInt16->___wmul
    _sendSensorInfo->_sendPacket
    _getINA220Data->_readINA220
    _writeINA220->_I2C1_WriteNBytes
    _readINA220->_I2C1_ReadNBytes
    _readINA220->_I2C1_WriteNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_MasterRead->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _getHis->_sendSensorData
    _sendSensorData->_int16ToString
    _sendPacket->_stringlen
    _int16ToString->___lwdiv
    _getMetrics->_getMed
    _getMed->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  552894
                                             46 BANK0      3     3      0
                                              0 BANK1     11    11      0
                  _SYSTEM_Initialize
                         _TMR2_Start
                          _TMR2_Stop
                         _TMR4_Start
                          _TMR4_Stop
                    _TxDeviceDisable
                      _getINA220Data
                         _getMetrics
                       _initRxBuffer
                     _processCommand
                        _receiveData
                      _stringCompare
 ---------------------------------------------------------------------------------
 (1) _stringCompare                                        8     4      4     868
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _receiveData                                          5     4      1     427
                                              5 COMMON     1     0      1
                                              0 BANK0      4     4      0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _processCommand                                       8     5      3  281265
                                             38 BANK0      8     5      3
                        _TMR0_Reload
                             _getHis
                      _getINA220Data
                             _getMax
                             _getMed
                             _getMin
                     _sendSensorData
                     _sendSensorInfo
                      _stringToInt16
                          _stringlen
 ---------------------------------------------------------------------------------
 (2) _stringToInt16                                        8     6      2    2446
                                              4 BANK0      8     6      2
                             ___wmul
                          _stringlen (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1666
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _sendSensorInfo                                      12    10      2     697
                                              5 COMMON     1     1      0
                                             13 BANK0     11     9      2
                         _sendPacket
 ---------------------------------------------------------------------------------
 (2) _getINA220Data                                        8     6      2  266509
                                             28 BANK0      8     6      2
                         _readINA220
                        _writeINA220
 ---------------------------------------------------------------------------------
 (3) _writeINA220                                          8     5      3   89674
                                             17 BANK0      8     5      3
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _readINA220                                          11     9      2  175950
                                             17 BANK0     11     9      2
                    _I2C1_ReadNBytes
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteNBytes                                     4     1      3   88756
                                             13 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    1939
                                              3 BANK0      4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0   84785
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadNBytes                                      4     1      3   86637
                                             13 BANK0      4     1      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              4 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterRead                                      0     0      0   84785
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0   84785
                                             11 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0   84717
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0   84717
                                              9 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   21156
                                              7 BANK0      2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   21187
                                              7 BANK0      2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   21156
                                              7 BANK0      2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   21156
                                              7 BANK0      2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    4164
                                              6 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    4164
                                              6 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4195
                                              6 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    4164
                                              6 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    4164
                                              6 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _I2C1_SetDataCompleteCallback                        3     0      3    2659
                                              3 BANK0      3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3     997
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    1474
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              6 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     305
                                              6 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              4 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getHis                                               6     4      2    4091
                                             32 BANK0      6     4      2
                     _sendSensorData
 ---------------------------------------------------------------------------------
 (2) _sendSensorData                                      12    10      2    3810
                                             20 BANK0     12    10      2
                      _int16ToString
                         _sendPacket
                          _stringlen
 ---------------------------------------------------------------------------------
 (2) _stringlen                                            3     3      0     280
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _sendPacket                                          11     7      4     422
                                              2 BANK0     11     7      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                    _TxDeviceDisable
                     _TxDeviceEnable
                          _stringlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _TxDeviceEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TxDeviceDisable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_tx_ready                                  1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _int16ToString                                       13    10      3    1787
                                              7 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initRxBuffer                                        11     7      4     256
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _getMetrics                                           2     0      2    2330
                                             30 BANK0      2     0      2
                             _getMax
                             _getMed
                             _getMin
 ---------------------------------------------------------------------------------
 (2) _getMin                                              11     9      2     485
                                              4 COMMON     2     0      2
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) _getMed                                              16    14      2    1054
                                             14 BANK0     16    14      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _getMax                                              11     9      2     485
                                              4 COMMON     2     0      2
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     847
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     484
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          0     0      0      46
                                NULL *
                           _CMP1_ISR
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0       0
                                NULL *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR2_ISR                                            0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0      46
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0      23
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               4     4      0      23
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (15) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (14) _CMP1_ISR                                            0     0      0       0
               _CMP1_GetOutputStatus
 ---------------------------------------------------------------------------------
 (15) _CMP1_GetOutputStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR2_Start
   _TMR2_Stop
   _TMR4_Start
   _TMR4_Stop
   _TxDeviceDisable
   _getINA220Data
     _readINA220
       _I2C1_ReadNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterRead
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   NULL(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   NULL(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   NULL(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C1_DO_TX_EMPTY *
                   NULL(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetBuffer
       _I2C1_WriteNBytes
         _I2C1_Close
         _I2C1_MasterWrite
           _I2C1_MasterOperation
         _I2C1_Open
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
     _writeINA220
       _I2C1_WriteNBytes
   _getMetrics
     _getMax
     _getMed
       ___aldiv
     _getMin
   _initRxBuffer
   _processCommand
     _TMR0_Reload
     _getHis
       _sendSensorData
         _int16ToString
           ___lwdiv
           ___lwmod
         _sendPacket
           _EUSART1_Write
           _EUSART1_is_tx_done
           _EUSART1_is_tx_ready
           _TxDeviceDisable
           _TxDeviceEnable
           _stringlen (ARG)
         _stringlen
     _getINA220Data
     _getMax
     _getMed
     _getMin
     _sendSensorData
     _sendSensorInfo
       _sendPacket
     _stringToInt16
       ___wmul
       _stringlen (ARG)
     _stringlen
   _receiveData
     _EUSART1_Read
   _stringCompare

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _CMP1_ISR *
     _CMP1_GetOutputStatus
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     1D6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     31      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      B      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3B      10       73.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      3B      12       73.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      3B      14       73.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      40      16       80.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      40      18       80.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1D6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 22 10:29:39 2024

              __end_of_TMR2_SetInterruptHandler 09C3                             readINA220@pRxbuffer 0035  
                           readINA220@pTxbuffer 0036                               ??_CMP1_Initialize 0074  
                           ___wmul@multiplicand 0022                                 _DAC1_Initialize 09A5  
                                           l513 0738                                             l196 0A0D  
                                           l447 0E7D                                             l529 076D  
                                           l670 097A                           ?_I2C1_MasterOperation 0070  
                               _TMR2_Initialize 0B53                                             wreg 0009  
                        ?_I2C1_MasterSendTxData 0070                            _I2C1_DO_RX_NACK_STOP 0972  
                          receiveData@charCount 0023                       ?_I2C1_MasterEnableRestart 0070  
                               initRxBuffer@buf 0028                            I2C1_SetBuffer@buffer 0020  
                                   _status_prev 0051                                            l1050 021C  
                                          l1052 0250                         ??_rd2RegCompleteHandler 0076  
                                          l1301 0202                                            l1061 02C0  
                                          l1053 026C                                            l1063 02CF  
                                          l1056 02C3                                            l1068 02CC  
                                          l1245 03D8                                            l1246 0430  
                                          l1177 0466                                            l1453 0BD6  
                                          l1518 04E1                                            l1295 0182  
                                          l5031 0ED8                                            l5023 0EBA  
                                          l5103 0658                                            l5025 0EC6  
                                          l5105 0660                                            l5201 0BD0  
                                          l5035 0EE1                                            l5123 0475  
                                          l5115 0460                                            l5053 0DB4  
                                          l5141 04A3                                            l5231 0502  
                                          l5223 04F2                                            l5047 0D9C  
                                          l5135 0496                                            l5071 0CC7  
                                          l5063 0CA9                                            l5241 0530  
                                          l5233 0510                                            l5049 0DA8  
                                          l5057 0DBD                                            l5129 0477  
                                          l5161 0B8E                                            l5081 0C1A  
                                          l5091 063C                                            l5155 0B86  
                                          l4603 0C53                                            l5075 0C06  
                                          l5245 053B                                            l5095 0648  
                                          l5249 0549                                            l5097 0615  
                                          l4801 0775                                            l5515 05C5  
                                          l5099 064E                                            l5427 0F60  
                                          l5611 0107                                            l5603 0093  
                                          l4821 0DC8                                            l5445 0564  
                                          l5621 0170                                            l5613 0132  
                                          l5605 009A                                            l5277 0ABD  
                                          l5701 02C1                                            l5535 0D75  
                                          l4751 070F                                            l5631 0198  
                                          l5607 00A1                                            l5711 02DD  
                                          l5473 06BC                                            l5561 0D20  
                                          l4817 0DC5                                            l4833 0DCF  
                                          l4761 0715                                            l4921 0BFA  
                                          l5457 0567                                            l5633 01A5  
                                          l5625 0180                                            l5609 00DC  
                                          l5705 02CD                                            l4827 0DCC  
                                          l4755 0712                                            l4747 070C  
                                          l4923 0BFD                                            l5459 05A1  
                                          l5635 01B2                                            l5619 015E  
                                          l5731 0338                                            l5723 0310  
                                          l5715 02E5                                            l5477 06F5  
                                          l5493 066B                                            l4861 0D4D  
                                          l5629 0185                                            l5573 0C77  
                                          l5565 0C63                                            l5717 02E8  
                                          l4791 076F                                            l4927 0C02  
                                          l5639 01D4                                            l5727 031F  
                                          l5497 06A4                                            l4769 0751  
                                          l4857 0D4A                                            l4795 0772  
                                          l4867 0D50                                            l4883 0C92  
                                          l5595 0E84                                            l5691 0288  
                                          l4893 0A1E                                            l5597 0EAE  
                                          l5589 0EA1                                            l4983 0B51  
                                          l5881 0786                                            l5697 02B7  
                                          l5883 072A                                            l5875 0190  
                                          l5885 0DE0                                            l5877 01DC  
                                          l4999 0A3B                                            l5879 0D64  
                                          _LATA 0018                                            u3110 0F5A  
                                          u3015 0505                                            _LATC 001A  
                                          u3035 0511                                            u3045 0525  
                                          u3205 068D                                            u3125 0F7B  
                                          u3055 0531                                            u3320 020D  
                                          _T2PR 028D                                            u3315 0E8E  
                                          u3175 06DE                                            _T4PR 0293  
                                          u3275 0D37                                            u2715 0D9F  
                                          u2645 0EBD                                            u3445 02F4  
                                          u2735 0DAE                                            u3455 030B  
                                          u2665 0EC7                                            u2745 0DB5  
                                          u2905 04CE                                            u2825 062C  
                                          u3465 031A                                            u2930 0DF9  
                                          u2675 0ED1                                            u3475 0333  
                                          _PMD0 0796                                            u2685 0ED9  
                                          u3485 034C                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            u3497 0357  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u2955 0BD7                                            _PMD7 079D  
                                          u2885 0490                                            u2965 0BDC  
                                          _WPUA 1F39                                            _WPUC 1F4F  
                       ??_wr2RegCompleteHandler 0076                                ??_I2C1_MasterFsm 0029  
                                 _EUSART1_Write 0A0A                       ??_I2C1_CallbackReturnStop 0076  
                                          _cons 0220                                            _main 0203  
                                 ?_EUSART1_Read 0070                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                          start 0030                                ??_I2C1_SetBuffer 0076  
                              __end_of_CMP1_ISR 0A6F                      ??_TMR4_SetInterruptHandler 0076  
                                   _writeINA220 0B16                       sendSensorData@sensor_data 0034  
                              initRxBuffer@size 0020                   I2C1_CallbackReturnStop@funPtr 0026  
                       __end_of_TMR0_Initialize 0B82                  ??_TMR0_DefaultInterruptHandler 0070  
                             stringToInt16@sign 0026                   __end_of_OSCILLATOR_Initialize 0A0A  
                             ??_I2C1_ReadNBytes 0076                           _eusart1RxStatusBuffer 0320  
                               __end_of___aldiv 0552                               __end_of_I2C1_Open 0E7F  
                                         ?_main 0070                                           _T2CON 028E  
                        I2C1_ReadNBytes@address 0030                                           _T4CON 0294  
                                         _T2HLT 028F                                           _T4HLT 0295  
                               __end_of___lwdiv 0EE6                                           _T2TMR 028C  
                                         _T2RST 0291                                 __end_of___lwmod 0DC2  
                                         _T4TMR 0292                                           i1l711 000E  
                                         i1l714 0017                                           _T4RST 0297  
                                         i1l723 002E                                           i1l716 001E  
                                         i1l718 0025                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                _TxDeviceEnable 091F                                           _TRISA 0012  
                                         _TRISC 0014                          ??_I2C1_MasterGetRxData 0074  
                         ?_I2C1_DO_RX_NACK_STOP 0070                                 _TMR4_Initialize 0B29  
                     ?_TMR0_SetInterruptHandler 0074                               ??_I2C1_MasterRead 0076  
                    ??_I2C1_CallbackReturnReset 0076                               ??_I2C1_MasterOpen 0074  
                             ??_I2C1_MasterStop 0074                               ??_I2C1_Initialize 0074  
                              __end_of_TMR0_ISR 0AAC                                __end_of_TMR2_ISR 0A49  
                              __end_of_TMR4_ISR 0A55                                     ?_TMR2_Start 0070  
                                         _panel 01A0                                     ?_TMR4_Start 0070  
                                ?_EUSART1_Write 0070                                           pclath 000A  
                                ??_EUSART1_Read 0074                                           status 0003  
                                         wtemp0 007E                                    ??_I2C1_DO_RX 0027  
                                  ??_I2C1_DO_TX 0027                                    ?_receiveData 0075  
            _EUSART1_DefaultFramingErrorHandler 0000                          ??_I2C1_DO_ADDRESS_NACK 0027  
                                  ??_I2C1_Close 0074                             sendPacket@byteCount 0022  
                  __end_of_CMP1_GetOutputStatus 09A5                                   _fsmStateTable 1000  
                               __initialization 0032                      __end_of_EUSART1_Initialize 0E4C  
                                  __end_of_main 0352                         __end_of_DAC1_Initialize 09AB  
                       __end_of_TMR2_Initialize 0B6A                     ?_INTERRUPT_InterruptManager 0070  
                        __end_of_TxDeviceEnable 0921                          ??_I2C1_MasterOperation 0076  
                      _TMR2_SetInterruptHandler 09BD                                          ??_main 004E  
                                 ?_initRxBuffer 0020                                  _sendSensorData 0DEF  
                                _sendSensorInfo 0F50                              __end_of_I2C1_DO_RX 0795  
                            __end_of_I2C1_DO_TX 0753                              __end_of_I2C1_Close 0B53  
                      __end_of_I2C1_WriteNBytes 0CCE                                          _CM1NCH 0992  
                                        _CM1PCH 0993                                          _ANSELA 1F38  
                                        _ANSELC 1F4E                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RC0PPS 1F20                                          _RC1PPS 1F21  
                                        _RC1STA 011D                                          _RC4PPS 1F24  
                                        _ODCONA 1F3A                                          _ODCONC 1F50  
                                        i1l4231 0CE3                                          i1l4235 0CF2  
                                        i1l4253 0A6C                                          i1l3837 07EE  
                                        _INLVLA 1F3C                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                               ?_I2C1_MasterClose 0070  
                               _TxDeviceDisable 0933                         ??_I2C1_MasterDisableIrq 0074  
                             ?_I2C1_MasterStart 0070                               ?_I2C1_MasterWrite 0070  
                      ?_I2C1_MasterWaitForEvent 0070                              ??_I2C1_MasterClose 0074  
                              _I2C1_DO_TX_EMPTY 0DC2                              ??_I2C1_MasterStart 0074  
                              ??_processCommand 0049                           processCommand@command 004D  
                            ??_I2C1_MasterWrite 0076                                    ?_TMR0_Reload 0070  
                                     ??___aldiv 0074                                          ___wmul 0BCE  
                             __end_of_TMR2_Stop 091F                               __end_of_TMR4_Stop 0933  
                                        _getMed 05B5                                          _getHis 0D6D  
                                        _getMax 06B4                                          _getMin 0663  
                                     ??___lwdiv 0074                                       ??___lwmod 0074  
                      ?_EUSART1_SetErrorHandler 0074                          __end_of_sendSensorData 0E1D  
                              ?_TMR0_Initialize 0070                         __end_of_TMR4_Initialize 0B3E  
                        __end_of_sendSensorInfo 0F8A                                  ??_initRxBuffer 0024  
              ??_EUSART1_SetOverrunErrorHandler 0076                 ?_EUSART1_SetOverrunErrorHandler 0074  
                               ?_TxDeviceEnable 0070                                          _status 0058  
                      ??_I2C1_DO_SEND_ADR_WRITE 0075                               ?_I2C1_SetCallback 0020  
                        ??_I2C1_DO_RX_NACK_STOP 0074            __end_of_TMR4_DefaultInterruptHandler 091B  
                  _TMR4_DefaultInterruptHandler 0919                           _I2C1_DO_SEND_ADR_READ 09EE  
                                _PMD_Initialize 0AAC                   ?_I2C1_SetDataCompleteCallback 0023  
                            ??_I2C1_SetCallback 0074                           __end_of_int16ToString 04D1  
                                     ?_CMP1_ISR 0070                                 ??_EUSART1_Write 0074  
      TMR0_SetInterruptHandler@InterruptHandler 0074        TMR4_SetInterruptHandler@InterruptHandler 0074  
      TMR2_SetInterruptHandler@InterruptHandler 0074                               readINA220@address 0031  
                               _eusart1RxBuffer 02A0                         _I2C1_DO_RX_NACK_RESTART 0976  
                           I2C1_WriteNBytes@len 002E                               _SYSTEM_Initialize 0C21  
                I2C1_SetDataCompleteCallback@cb 0023                         __end_of__initialization 008C  
                               _CMP1_Initialize 0A7D                 I2C1_MasterOperation@returnValue 002C  
                            ?_SYSTEM_Initialize 0070                                   ??_I2C1_Poller 0076  
                 __end_of_EUSART1_RxDataHandler 0800                         _rdBlkRegCompleteHandler 0B9B  
                                 _stringCompare 0E7F                                  __pcstackCOMMON 0070  
                                  __pidataBANK0 0A8C                                    __pidataBANK1 0BB4  
                                  __pidataBANK2 0795                                    __pidataBANK3 0FC5  
                                  __pidataBANK4 0F8A                             ??_SYSTEM_Initialize 0076  
              __end_of_I2C1_MasterEnableRestart 0942                                ?_DAC1_Initialize 0070  
                                     ?_TMR0_ISR 0070                                   _stringToInt16 0552  
                                     ?_TMR2_ISR 0070                            sendSensorData@F11035 00D0  
                                     ?_TMR4_ISR 0070                                 ?_sendSensorData 0034  
                           getINA220Data@device 003C                                ?_TMR2_Initialize 0070  
                               ?_sendSensorInfo 002D                          __end_of_PMD_Initialize 0ABD  
                  ??_I2C1_DO_SEND_RESTART_WRITE 0074                         ??_I2C1_MasterSendTxData 0074  
                          __end_of_EUSART1_Read 0ACE                     __end_of_EUSART1_Receive_ISR 0CF5  
                 ?_TMR4_DefaultInterruptHandler 0070                           __end_of_I2C1_DO_RESET 099F  
                          _CMP1_GetOutputStatus 099F                                      ??_CMP1_ISR 0070  
                       __end_of_TxDeviceDisable 0936                       __end_of_SYSTEM_Initialize 0C3F  
                                 _eusart1RxHead 0079                                   _eusart1RxTail 0078  
                                    __pbssBANK0 0068                                      __pbssBANK1 00A0  
                                    __pbssBANK5 02A0                                      __pbssBANK6 0320  
               __end_of_I2C1_MasterWaitForEvent 097E                 ??_EUSART1_SetRxInterruptHandler 0076  
                 __end_of_rd2RegCompleteHandler 0B04                            I2C1_Open@returnValue 0075  
                          writeINA220@pTxbuffer 0035                            sendSensorData@packet 0038  
                 __end_of_wr2RegCompleteHandler 0AE0                           _TMR4_InterruptHandler 0062  
                         _rd1RegCompleteHandler 0AE0                                 _I2C1_ReadNBytes 0C05  
                             _I2C1_DO_SEND_STOP 096A                                  ?_stringCompare 0020  
                         stringToInt16@multiple 0027                           _wr1RegCompleteHandler 0B04  
               __end_of_EUSART1_SetErrorHandler 098B                             stringToInt16@result 0029  
                                  ?_writeINA220 0031                                      __pmaintext 0203  
                      rd1RegCompleteHandler@ptr 0026                             stringToInt16@string 002B  
                           stringToInt16@strlen 0024                                     sendPacket@i 002A  
                                ?_stringToInt16 0024                __end_of_TMR0_SetInterruptHandler 09BD  
                            ?_I2C1_DO_SEND_STOP 0070                                         ?___wmul 0020  
                                    ??_TMR0_ISR 0070                                      ??_TMR2_ISR 0070  
                                    ??_TMR4_ISR 0070                                 _I2C1_MasterRead 097E  
                                       ?_getMed 002E                                         ?_getHis 0040  
                                       ?_getMax 0074                                         ?_getMin 0074  
                               _I2C1_MasterOpen 0A55                                      __pintentry 0004  
                               _I2C1_MasterStop 0942                                 _I2C1_Initialize 09F6  
                                       _CM1CON0 0990                                         _CM1CON1 0991  
                           __end_of_I2C1_Poller 0A28                                   sendPacket@str 002C  
                                    _getMetrics 0F1A                                ?_TMR4_Initialize 0070  
                     sendSensorInfo@sensor_info 002D                                 ?_PMD_Initialize 0070  
                        ?_I2C1_DO_SEND_ADR_READ 0070                             ??_I2C1_DO_SEND_STOP 0074  
        __end_of_EUSART1_SetFramingErrorHandler 09B1                  _EUSART1_SetFramingErrorHandler 09AB  
                                int16ToString@i 002E                                         _CPUDOZE 088C  
                  ?_EUSART1_DefaultErrorHandler 0070                               _I2C1_MasterIsNack 09CF  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                     _I2C1_Open 0E4C                       ??_I2C1_DO_RX_NACK_RESTART 0074  
                         ?_CMP1_GetOutputStatus 0070                                         _OSCTUNE 0892  
                             _I2C1_MasterSetIrq 094B                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                                    ??_TMR2_Start 0074  
                            ?_I2C1_MasterIsNack 0070                      ?_I2C1_DO_SEND_RESTART_READ 0070  
                       __end_of_CMP1_Initialize 0A8C                                    ??_TMR4_Start 0074  
                ??_I2C1_SetDataCompleteCallback 0075                              ?_I2C1_MasterSetIrq 0070  
                                       _BuffReg 00BD                                      _readINA220 0EE6  
                          __end_of_initRxBuffer 0D45                             ??_I2C1_MasterIsNack 0074  
                     __end_of_I2C1_DO_SEND_STOP 096E                       ??_rdBlkRegCompleteHandler 0076  
                            I2C1_SetCallback@cb 0020                             int16ToString@flag_0 002B  
                           ??_I2C1_MasterSetIrq 0074                      ??_TMR2_SetInterruptHandler 0076  
                           int16ToString@result 002C                                         ___aldiv 04D1  
                                       ___lwdiv 0EB2                                         ___lwmod 0D96  
                            __end_of_TMR2_Start 091D                      __end_of_EUSART1_is_tx_done 0956  
                                 ?_I2C1_DO_IDLE 0070                              __end_of_TMR4_Start 0930  
                                       _battery 0120                                   ?_I2C1_DO_RCEN 0070  
                           _EUSART1_is_tx_ready 0A32                                         __ptext1 0E7F  
                                       __ptext2 0C61                                         __ptext3 0ABD  
                                       __ptext4 0090                                         __ptext5 0552  
                                       __ptext6 0BCE                                         __ptext7 0F50  
                                       __ptext8 0352                                         __ptext9 0B16  
                      _I2C1_MasterEnableRestart 093F                       __end_of_I2C1_MasterIsNack 09D5  
                                 _getINA220Data 0352                    ?_I2C1_SetAddressNackCallback 0023  
                         _OSCILLATOR_Initialize 0A00                                       _T2CONbits 028E  
                     __end_of_I2C1_MasterSetIrq 094E                        __end_of_I2C1_DO_TX_EMPTY 0DEF  
                              ___aldiv@dividend 0024                                       _T4CONbits 0294  
                            _EUSART1_Initialize 0E1D                        ??_PIN_MANAGER_Initialize 0074  
                      wr1RegCompleteHandler@ptr 0026                                      ?_I2C1_Open 0070  
                                       getMed@i 003C                                         getHis@i 0044  
                     ?_TMR4_SetInterruptHandler 0074                                         getMax@i 0027  
                                       getMin@i 0027                                    stringlen@idx 0021  
                                  stringlen@str 0020                   ??_EUSART1_DefaultErrorHandler 0074  
                              stringCompare@buf 0020                                stringCompare@idx 0024  
                              stringCompare@str 0026                        ?_I2C1_CallbackReturnStop 0026  
                             ?_I2C1_WriteNBytes 002D                            sendSensorInfo@F11030 00D8  
                              ?_TxDeviceDisable 0070                                         clrloop0 09DC  
                                    _sendPacket 060F               __end_of_I2C1_DO_SEND_RESTART_READ 0962  
                          end_of_initialization 008C                      __end_of_I2C1_MasterSendAck 095E  
                       __end_of_I2C1_ReadNBytes 0C21                             _I2C1_MasterClearIrq 0936  
                ??_TMR4_DefaultInterruptHandler 0070                             ?_EUSART1_Initialize 0070  
                            ??_I2C1_WriteNBytes 0076                            ?_EUSART1_is_tx_ready 0070  
                                       init_ram 09E1                      __end_of_I2C1_MasterStartRx 0948  
                   _EUSART1_OverrunErrorHandler 00EC                          ?_rd1RegCompleteHandler 0026  
                                       initloop 09E2                                   readINA220@ret 003A  
                        _I2C1_DO_SEND_ADR_WRITE 09E7                                      getMed@data 002E  
                                    getMed@buff 0038                                 ??_stringCompare 0074  
                                    getHis@data 0040                    __end_of_I2C1_DO_SEND_RESTART 096A  
                       __end_of_I2C1_MasterRead 0982                         __end_of_I2C1_MasterOpen 0A61  
                        ?_wr1RegCompleteHandler 0026                         __end_of_I2C1_MasterStop 0945  
                       __end_of_I2C1_Initialize 0A00           __end_of_EUSART1_SetRxInterruptHandler 09B7  
                 _EUSART1_SetRxInterruptHandler 09B1                                      getMax@data 0074  
                                   _I2C1_Poller 0A1E                                 ??_stringToInt16 0076  
                     ?_I2C1_CallbackReturnReset 0026                   __end_of_I2C1_MasterDisableIrq 0923  
                                    getMin@data 0074                                     _I2C1_Status 00A0  
                               receiveData@data 0021                                ___aldiv@quotient 002A  
                              ??_TxDeviceEnable 0074                             _I2C1_MasterSendNack 0956  
                                    main@F11067 00C5             __end_of_I2C1_SetAddressNackCallback 0A32  
                   _I2C1_SetAddressNackCallback 0A28                            ?_I2C1_MasterClearIrq 0070  
                                ??_I2C1_DO_IDLE 0074                            ??_EUSART1_Initialize 0076  
                                ??_I2C1_DO_RCEN 0074              __end_of_I2C1_DO_SEND_RESTART_WRITE 0966  
                                   ?_getMetrics 003E                      _I2C1_DO_SEND_RESTART_WRITE 0962  
                                ?_getINA220Data 003C                        _TMR0_SetInterruptHandler 09B7  
                                     _TMR2_Stop 091D                 __end_of_rdBlkRegCompleteHandler 0BB4  
                          sendSensorInfo@packet 002F                                       _TMR4_Stop 0930  
                             __end_of_stringlen 0B9B                            I2C1_WriteNBytes@data 002D  
                        ??_CMP1_GetOutputStatus 0070                   ??_I2C1_SetAddressNackCallback 0075  
               I2C1_SetDataCompleteCallback@ptr 0025                  I2C1_CallbackReturnReset@funPtr 0026  
                          ?_I2C1_MasterSendNack 0070                             EUSART1_Write@txData 0074  
                              ?_CMP1_Initialize 0070                           ??_EUSART1_is_tx_ready 0074  
                                   _CM1CON0bits 0990                                     ?_readINA220 0031  
                    rdBlkRegCompleteHandler@ptr 0026                                    _EUSART1_Read 0ABD  
                                    main@packet 00DF                                ??_sendSensorData 0036  
                              ??_sendSensorInfo 0075                            _timer0ReloadVal16bit 0076  
                         ??_I2C1_MasterClearIrq 0074            __end_of_TMR2_DefaultInterruptHandler 0919  
                  _TMR2_DefaultInterruptHandler 0917                                  __end_of___wmul 0BE9  
                                _I2C1_DO_RX_ACK 096E                                  __end_of_getMed 060F  
                                __end_of_getHis 0D96                                  __end_of_getMax 0705  
                                __end_of_getMin 06B4                                      ?_TMR2_Stop 0070  
                        ?_OSCILLATOR_Initialize 0070                                      ?_TMR4_Stop 0070  
               __end_of_I2C1_CallbackReturnStop 0925                                    receiveData@c 0022  
                 __end_of_I2C1_MasterSendTxData 0995                             start_initialization 0032  
                              getMetrics@device 003E                                     ??_I2C1_Open 0074  
                         ??_I2C1_MasterSendNack 0074                           int16ToString@dividend 0030  
 EUSART1_SetRxInterruptHandler@interruptHandler 0074                                     ?_sendPacket 0022  
                         __end_of_EUSART1_Write 0A14                                ?_I2C1_ReadNBytes 002D  
                      I2C1_SetBuffer@bufferSize 0074                                ?_I2C1_MasterRead 0070  
                              ?_I2C1_MasterOpen 0070                                ?_I2C1_MasterStop 0070  
                              ?_I2C1_Initialize 0070                                ??_PMD_Initialize 0074  
                        __end_of_I2C1_DO_RX_ACK 0972                                        ??___wmul 0074  
                          processCommand@sensor 0047                           _EUSART1_RxDataHandler 07D0  
                       ??_I2C1_DO_SEND_ADR_READ 0074                                        ??_getMed 0030  
                                      ??_getHis 0042                                        ??_getMax 0020  
                                      ??_getMin 0020                  ?_EUSART1_SetRxInterruptHandler 0074  
                                   __pdataBANK0 0051                                     __pdataBANK1 00C5  
                                   __pdataBANK2 0120                                     __pdataBANK3 01A0  
                                   __pdataBANK4 0220                                 ??_getINA220Data 003E  
                 ?_TMR2_DefaultInterruptHandler 0070                                I2C1_Open@address 0074  
                                _eusart1RxCount 006A                                    _initRxBuffer 0D1D  
                              readINA220@regadd 0039                                     __pbssCOMMON 0076  
                          _I2C1_DO_SEND_RESTART 0966               _EUSART1_RxDefaultInterruptHandler 0066  
                                     ___latbits 0002                             writeINA220@Txbuffer 0036  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00DF  
                   ??_I2C1_DO_SEND_RESTART_READ 0074                             _eusart1PacketFinish 0069  
                          __end_of_I2C1_DO_IDLE 099A                ??_EUSART1_SetFramingErrorHandler 0076  
               ?_EUSART1_SetFramingErrorHandler 0074                            __end_of_I2C1_DO_RCEN 09DB  
                                 ??_receiveData 0020                   I2C1_SetAddressNackCallback@cb 0023  
                         _TMR0_InterruptHandler 0060                                       __pnvBANK0 0060  
                                     __pnvBANK1 00EA                           _rd2RegCompleteHandler 0AF2  
                         __end_of_fsmStateTable 1020                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 0CF5                           _wr2RegCompleteHandler 0ACE  
                       _EUSART1_is_tx_ready$357 0074                      ??_I2C1_MasterEnableRestart 0074  
                      rd2RegCompleteHandler@ptr 0026                                  _I2C1_MasterFsm 0C83  
                                      ?___aldiv 0020                __end_of_TMR4_SetInterruptHandler 09C9  
                               ?_I2C1_DO_RX_ACK 0070                                       __ptext100 0986  
                                     __ptext101 09A5                                       __ptext110 0CCE  
                                     __ptext102 0A7D                                       __ptext111 094E  
                                     __ptext112 0927                                       __ptext104 0A49  
                                     __ptext113 07D0                                       __ptext105 0919  
                                     __ptext114 0A61                                       __ptext106 0A3D  
                                     __ptext115 099F                                       __ptext107 0917  
                                     __ptext108 0A9B                                       __ptext109 092A  
                                      ?___lwdiv 0020                                        ?___lwmod 0020  
                       _I2C1_MasterWaitForEvent 097A                                _I2C1_MasterClose 0939  
                                      _DAC1CON0 090E                                        _DAC1CON1 090F  
                                _I2C1_SetBuffer 0A6F                    ??_INTERRUPT_InterruptManager 0074  
                                   ??_TMR2_Stop 0074                                _I2C1_MasterStart 093C  
                                   ??_TMR4_Stop 0074                                _I2C1_MasterWrite 0982  
                                      _BAUD1CON 011F      __end_of_EUSART1_DefaultOverrunErrorHandler 0952  
          ??_EUSART1_DefaultOverrunErrorHandler 0070             ?_EUSART1_DefaultOverrunErrorHandler 0070  
            _EUSART1_DefaultOverrunErrorHandler 094E                           ?_I2C1_DO_SEND_RESTART 0070  
                          _EUSART1_ErrorHandler 00EA                               ?_I2C1_DO_TX_EMPTY 0070  
                            int16ToString@value 0027                         _EUSART1_SetErrorHandler 0986  
                                      _CMP1_ISR 0A61                __end_of_I2C1_CallbackReturnReset 0927  
                                 _int16ToString 044D                                ___lwdiv@quotient 0025  
                            ??_I2C1_DO_TX_EMPTY 0027                              _EUSART1_is_tx_done 0952  
                                      _T2CLKCON 0290                         ??_rd1RegCompleteHandler 0076  
                       ?_I2C1_DO_SEND_ADR_WRITE 0070                                        _T4CLKCON 0296  
                     I2C1_MasterSendTxData@data 0074                          EUSART1_RxDataHandler@t 0072  
                       ??_wr1RegCompleteHandler 0076                                 ___aldiv@divisor 0020  
                             ??_TMR0_Initialize 0076                                _I2C1_SetCallback 0C3F  
                               ___aldiv@counter 0028                                  ___wmul@product 0074  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0074  
                                      _LATCbits 001A                                      _I2C1_DO_RX 0753  
                                    _I2C1_DO_TX 0705                             ?_EUSART1_is_tx_done 0070  
                                     clear_ram0 09DB                                        _PIE0bits 0716  
                                      _PIE2bits 0718                                        _PIE3bits 0719  
                                      _PIE4bits 071A                                      _I2C1_Close 0B3E  
                                     getMed@aux 003D                                    ?_I2C1_Poller 0070  
                                     getHis@aux 0045                          __end_of_I2C1_MasterFsm 0CA8  
                  __end_of_I2C1_MasterGetRxData 094B                                       getMax@aux 0028  
                    ??_TMR0_SetInterruptHandler 0076                                        _PIR0bits 070C  
                                      _PIR2bits 070E                                        _PIR3bits 070F  
                                      _PIR4bits 0710                                       getMin@aux 0028  
                                 ??_TMR0_Reload 0074                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0070                              _I2C1_MasterSendAck 095A  
                     _I2C1_DO_SEND_RESTART_READ 095E                             __end_of_receiveData 0C83  
                                      _SSP1CON1 0190                                        _SSP1CON2 0191  
                                      _TMR0_ISR 0A9B                                        _TMR2_ISR 0A3D  
                                      _TMR4_ISR 0A49                          __end_of_I2C1_SetBuffer 0A7D  
                                      _SSP1STAT 018F            __end_of_I2C1_SetDataCompleteCallback 0A1E  
                  _I2C1_SetDataCompleteCallback 0A14                                    ??_getMetrics 0076  
                            _I2C1_MasterStartRx 0945                     ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                           ?_I2C1_MasterSendAck 0070                               ___wmul@multiplier 0020  
                      ?_I2C1_DO_RX_NACK_RESTART 0070                            ??_EUSART1_is_tx_done 0074  
                                 initRxBuffer@i 0029                             I2C1_ReadNBytes@data 002D  
                           ?_I2C1_MasterStartRx 0070                    __end_of_I2C1_DO_ADDRESS_NACK 0D6D  
                ??_TMR2_DefaultInterruptHandler 0070                       ?_TMR2_SetInterruptHandler 0074  
                      wr2RegCompleteHandler@ptr 0026                                  ?_int16ToString 0027  
                                     _stringlen 0B82                  __end_of_I2C1_DO_SEND_ADR_WRITE 09EE  
                                 _I2C1_DO_RESET 099A                              receiveData@maxdata 0075  
                         I2C1_Close@returnValue 0074                        ?_rdBlkRegCompleteHandler 0026  
                             ??_DAC1_Initialize 0074                             I2C1_SetCallback@idx 0074  
                           I2C1_SetCallback@ptr 0022                            ??_I2C1_MasterSendAck 0074  
                             ??_TMR2_Initialize 0076                                    ??_readINA220 0033  
                         EUSART1_Read@readValue 0074                            int16ToString@divisor 0032  
                        ?_rd2RegCompleteHandler 0026                              __end_of_getMetrics 0F50  
                  __end_of_I2C1_MasterOperation 0C05                          ?_wr2RegCompleteHandler 0026  
                          ??_I2C1_MasterStartRx 0074                           __end_of_stringCompare 0EB2  
                               ?_I2C1_MasterFsm 0070                           __end_of_stringToInt16 05B5  
                     ??_I2C1_MasterWaitForEvent 0074                                     _measureTime 005F  
                         _I2C1_MasterDisableIrq 0921                         ??_OSCILLATOR_Initialize 0074  
                               ?_I2C1_SetBuffer 0074                               sendSensorInfo@idx 0036  
                            writeINA220@address 0033                             __end_of_TMR0_Reload 09CF  
                             getINA220Data@buff 0042                        _TMR4_SetInterruptHandler 09C3  
                                _processCommand 0090                          ??_I2C1_DO_SEND_RESTART 0074  
                     ??_EUSART1_SetErrorHandler 0076             __end_of_EUSART1_DefaultErrorHandler 092A  
                   _EUSART1_DefaultErrorHandler 0927                              __end_of_readINA220 0F1A  
                   __end_of_EUSART1_is_tx_ready 0A3D                                 ___lwdiv@divisor 0020  
                                ?_I2C1_DO_RESET 0070                                      ?_stringlen 0070  
                               ___lwdiv@counter 0024                              writeINA220@regdata 0031  
                                      __ptext10 0EE6                                        __ptext11 0CA8  
                                      __ptext20 097A                                        __ptext12 0A28  
                                      __ptext21 0C83                                        __ptext13 0982  
                                      __ptext30 095E                                        __ptext22 0D45  
                                      __ptext14 0C05                                        __ptext31 09D5  
                                      __ptext23 099A                                        __ptext15 0E4C  
                                      __ptext40 0990                                        __ptext32 0753  
                                      __ptext24 0976                                        __ptext16 0A55  
                                      __ptext41 095A                                        __ptext33 0705  
                                      __ptext25 0972                                        __ptext17 097E  
                                      __ptext50 0AE0                                        __ptext42 0948  
                                      __ptext34 09E7                                        __ptext26 096E  
                                      __ptext18 0BE9                                        __ptext51 0ACE  
                                      __ptext43 0956                                        __ptext35 09EE  
                                      __ptext27 096A                                        __ptext19 0A1E  
                                      __ptext60 0939                                        __ptext52 0A14  
                                      __ptext44 0945                                        __ptext36 0995  
                                      __ptext28 0966                                        __ptext61 0936  
                                      __ptext53 0C3F                                        __ptext45 0925  
                                      __ptext37 0DC2                                        __ptext29 0962  
                                      __ptext70 0A0A                                        __ptext62 0D6D  
                                      __ptext54 0A6F                                        __ptext46 0923  
                                      __ptext38 094B                                        __ptext71 044D  
                                      __ptext63 0DEF                                        __ptext55 0942  
                                      __ptext47 0B9B                                        __ptext39 09CF  
                                      __ptext80 06B4                                        __ptext72 0D96  
                                      __ptext64 0B82                                        __ptext56 093F  
                                      __ptext48 0B04                                        __ptext81 0930  
                                      __ptext73 0EB2                                        __ptext65 060F  
                                      __ptext57 093C                                        __ptext49 0AF2  
                                      __ptext90 0B6A                                        __ptext82 092D  
                                      __ptext74 09C9                                        __ptext66 091F  
                                      __ptext58 0B3E                                        __ptext91 09B7  
                                      __ptext83 091D                                        __ptext75 0D1D  
                                      __ptext67 0933                                        __ptext59 0921  
                                      __ptext92 0AAC                                        __ptext84 091B  
                                      __ptext76 0F1A                                        __ptext68 0A32  
                                      __ptext93 0CF5                                        __ptext85 0C21  
                                      __ptext77 0663                                        __ptext69 0952  
                                      __ptext94 0A00                                        __ptext86 0B29  
                                      __ptext78 05B5                                        __ptext95 09F6  
                                      __ptext87 09C3                                        __ptext79 04D1  
                                      __ptext96 0E1D                                        __ptext88 0B53  
                                      __ptext97 09B1                                        __ptext89 09BD  
                                      __ptext98 098B                                        __ptext99 09AB  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                  ??_sendPacket 0026                               int16ToString@data 0029  
                      _I2C1_CallbackReturnReset 0925                               ??_TMR4_Initialize 0076  
                                   ?_I2C1_DO_RX 0070                                     ?_I2C1_DO_TX 0070  
                                   _receiveData 0C61            __end_of_TMR0_DefaultInterruptHandler 092D  
                  _TMR0_DefaultInterruptHandler 092A                     __end_of_I2C1_MasterClearIrq 0939  
                  __end_of_I2C1_DO_RX_NACK_STOP 0976                                     ?_I2C1_Close 0070  
                                 ??_writeINA220 0076                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0074                         stringCompare@byte_count 0022  
                                      int$flags 007E                 __end_of_I2C1_DO_RX_NACK_RESTART 097A  
                      I2C1_MasterOperation@read 002B              __end_of_INTERRUPT_InterruptManager 0030  
                    _INTERRUPT_InterruptManager 0004                          __end_of_processCommand 0203  
                            I2C1_ReadNBytes@len 002E                   __end_of_I2C1_DO_SEND_ADR_READ 09F6  
                            __end_of_sendPacket 0663                     _EUSART1_FramingErrorHandler 00EE  
                                  _I2C1_DO_IDLE 0995                             _EUSART1_Receive_ISR 0CCE  
                                  _I2C1_DO_RCEN 09D5                     __end_of_I2C1_MasterSendNack 095A  
                               ??_int16ToString 002A                                      _INTCONbits 000B  
                            processCommand@data 0046                  I2C1_SetAddressNackCallback@ptr 0025  
                          _I2C1_MasterGetRxData 0948                           _I2C1_MasterSendTxData 0990  
                                readINA220@buff 0037                                        intlevel1 0000  
                      __end_of_I2C1_MasterClose 093C                            ?_EUSART1_Receive_ISR 0070  
                             writeINA220@regadd 0034                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0070                        __end_of_I2C1_MasterStart 093F  
                      __end_of_I2C1_MasterWrite 0986                         I2C1_WriteNBytes@address 0030  
        __end_of_EUSART1_SetOverrunErrorHandler 0990                  _EUSART1_SetOverrunErrorHandler 098B  
                              ??_I2C1_DO_RX_ACK 0074                         _I2C1_CallbackReturnStop 0923  
                 ?_TMR0_DefaultInterruptHandler 0070                            _I2C1_DO_ADDRESS_NACK 0D45  
                        ?_I2C1_MasterDisableIrq 0070                                _I2C1_WriteNBytes 0CA8  
                                   _TMR0_Reload 09C9  EUSART1_SetFramingErrorHandler@interruptHandler 0074  
                             ??_TxDeviceDisable 0074                                 ?_processCommand 0046  
                           __end_of_writeINA220 0B29                              _eusart1RxLastError 0068  
                         __end_of_getINA220Data 044D                                   __pstringtext1 1000  
                      __end_of_I2C1_SetCallback 0C61                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ??_I2C1_DO_RESET 0074  
                               ___lwmod@divisor 0020                            _I2C1_MasterOperation 0BE9  
                               _TMR0_Initialize 0B6A                                 ___lwmod@counter 0075  
                                  ___aldiv@sign 0029                           ?_I2C1_MasterGetRxData 0070  
                                   ??_stringlen 0074                                      _TX1STAbits 011E  
                                    _TMR2_Start 091B                                      _TMR4_Start 092D  
                         ??_EUSART1_Receive_ISR 0074                  __end_of_PIN_MANAGER_Initialize 0D1D  
                 __end_of_rd1RegCompleteHandler 0AF2                   __end_of_wr1RegCompleteHandler 0B16  
                         _TMR2_InterruptHandler 0064                         ??_EUSART1_RxDataHandler 0070  
                         ?_I2C1_DO_ADDRESS_NACK 0070  
