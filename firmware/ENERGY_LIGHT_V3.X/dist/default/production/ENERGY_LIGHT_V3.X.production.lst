

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 19 14:42:58 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     9                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
    10                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    23                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text58,local,class=CODE,merge=1,delta=2
    88                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text62,local,class=CODE,merge=1,delta=2
    92                           	psect	text63,local,class=CODE,merge=1,delta=2
    93                           	psect	text64,local,class=CODE,merge=1,delta=2
    94                           	psect	text65,local,class=CODE,merge=1,delta=2
    95                           	psect	text66,local,class=CODE,merge=1,delta=2
    96                           	psect	text67,local,class=CODE,merge=1,delta=2
    97                           	psect	text68,local,class=CODE,merge=1,delta=2
    98                           	psect	text69,local,class=CODE,merge=1,delta=2
    99                           	psect	text70,local,class=CODE,merge=1,delta=2
   100                           	psect	text71,local,class=CODE,merge=1,delta=2
   101                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text74,local,class=CODE,merge=1,delta=2
   104                           	psect	text75,local,class=CODE,merge=1,delta=2
   105                           	psect	text76,local,class=CODE,merge=1,delta=2
   106                           	psect	text77,local,class=CODE,merge=1,delta=2
   107                           	psect	text78,local,class=CODE,merge=1,delta=2
   108                           	psect	text79,local,class=CODE,merge=1,delta=2,group=1
   109                           	psect	text80,local,class=CODE,merge=1,delta=2
   110                           	psect	text81,local,class=CODE,merge=1,delta=2
   111                           	psect	text82,local,class=CODE,merge=1,delta=2
   112                           	psect	text83,local,class=CODE,merge=1,delta=2
   113                           	psect	text84,local,class=CODE,merge=1,delta=2
   114                           	psect	text85,local,class=CODE,merge=1,delta=2
   115                           	psect	text86,local,class=CODE,merge=1,delta=2
   116                           	psect	text87,local,class=CODE,merge=1,delta=2
   117                           	psect	text88,local,class=CODE,merge=1,delta=2
   118                           	psect	text89,local,class=CODE,merge=1,delta=2
   119                           	psect	text90,local,class=CODE,merge=1,delta=2
   120                           	psect	text91,local,class=CODE,merge=1,delta=2
   121                           	psect	text92,local,class=CODE,merge=1,delta=2
   122                           	psect	text93,local,class=CODE,merge=1,delta=2
   123                           	psect	text94,local,class=CODE,merge=1,delta=2
   124                           	psect	text95,local,class=CODE,merge=1,delta=2
   125                           	psect	text96,local,class=CODE,merge=1,delta=2
   126                           	psect	text97,local,class=CODE,merge=1,delta=2
   127                           	psect	text98,local,class=CODE,merge=1,delta=2
   128                           	psect	text99,local,class=CODE,merge=1,delta=2
   129                           	psect	text100,local,class=CODE,merge=1,delta=2
   130                           	psect	text101,local,class=CODE,merge=1,delta=2
   131                           	psect	text102,local,class=CODE,merge=1,delta=2
   132                           	psect	intentry,global,class=CODE,delta=2
   133                           	psect	text104,local,class=CODE,merge=1,delta=2
   134                           	psect	text105,local,class=CODE,merge=1,delta=2
   135                           	psect	text106,local,class=CODE,merge=1,delta=2
   136                           	psect	text107,local,class=CODE,merge=1,delta=2
   137                           	psect	text108,local,class=CODE,merge=1,delta=2
   138                           	psect	text109,local,class=CODE,merge=1,delta=2
   139                           	psect	text110,local,class=CODE,merge=1,delta=2
   140                           	psect	text111,local,class=CODE,merge=1,delta=2
   141                           	psect	text112,local,class=CODE,merge=1,delta=2
   142                           	psect	text113,local,class=CODE,merge=1,delta=2
   143                           	psect	text114,local,class=CODE,merge=1,delta=2
   144                           	psect	text115,local,class=CODE,merge=1,delta=2
   145                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   146                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   147                           	dabs	1,0x7E,2
   148  0000                     
   149                           ; Generated 19/07/2022 GMT
   150                           ; 
   151                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   152                           ; All rights reserved.
   153                           ; 
   154                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   155                           ; 
   156                           ; Redistribution and use in source and binary forms, with or without modification, are
   157                           ; permitted provided that the following conditions are met:
   158                           ; 
   159                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   160                           ;        conditions and the following disclaimer.
   161                           ; 
   162                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   163                           ;        of conditions and the following disclaimer in the documentation and/or other
   164                           ;        materials provided with the distribution. Publication is not required when
   165                           ;        this file is used in an embedded application.
   166                           ; 
   167                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   168                           ;        software without specific prior written permission.
   169                           ; 
   170                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   171                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   172                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   173                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   174                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   175                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   176                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   177                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   178                           ; 
   179                           ; 
   180                           ; Code-generator required, PIC16F18425 Definitions
   181                           ; 
   182                           ; SFR Addresses
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000E                     	;# 
   197  0012                     	;# 
   198  0014                     	;# 
   199  0018                     	;# 
   200  001A                     	;# 
   201  008C                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  010F                     	;# 
   235  0110                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0113                     	;# 
   239  0114                     	;# 
   240  0115                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  0118                     	;# 
   244  0119                     	;# 
   245  0119                     	;# 
   246  0119                     	;# 
   247  011A                     	;# 
   248  011A                     	;# 
   249  011A                     	;# 
   250  011B                     	;# 
   251  011B                     	;# 
   252  011B                     	;# 
   253  011B                     	;# 
   254  011B                     	;# 
   255  011C                     	;# 
   256  011C                     	;# 
   257  011C                     	;# 
   258  011D                     	;# 
   259  011D                     	;# 
   260  011D                     	;# 
   261  011E                     	;# 
   262  011E                     	;# 
   263  011E                     	;# 
   264  011F                     	;# 
   265  011F                     	;# 
   266  011F                     	;# 
   267  011F                     	;# 
   268  011F                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  018E                     	;# 
   272  018F                     	;# 
   273  0190                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0196                     	;# 
   277  0197                     	;# 
   278  0198                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  020C                     	;# 
   284  020D                     	;# 
   285  020E                     	;# 
   286  020E                     	;# 
   287  020F                     	;# 
   288  020F                     	;# 
   289  0210                     	;# 
   290  0210                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0216                     	;# 
   300  0216                     	;# 
   301  0217                     	;# 
   302  0217                     	;# 
   303  0218                     	;# 
   304  0219                     	;# 
   305  021A                     	;# 
   306  021A                     	;# 
   307  021B                     	;# 
   308  021B                     	;# 
   309  021C                     	;# 
   310  021C                     	;# 
   311  021D                     	;# 
   312  021D                     	;# 
   313  021E                     	;# 
   314  021F                     	;# 
   315  028C                     	;# 
   316  028C                     	;# 
   317  028D                     	;# 
   318  028D                     	;# 
   319  028E                     	;# 
   320  028F                     	;# 
   321  0290                     	;# 
   322  0291                     	;# 
   323  0292                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0293                     	;# 
   327  0294                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0297                     	;# 
   331  0298                     	;# 
   332  0298                     	;# 
   333  0299                     	;# 
   334  0299                     	;# 
   335  029A                     	;# 
   336  029B                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  029F                     	;# 
   340  030C                     	;# 
   341  030C                     	;# 
   342  030D                     	;# 
   343  030E                     	;# 
   344  030F                     	;# 
   345  0310                     	;# 
   346  0310                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0314                     	;# 
   351  0314                     	;# 
   352  0315                     	;# 
   353  0316                     	;# 
   354  0317                     	;# 
   355  0318                     	;# 
   356  0318                     	;# 
   357  0319                     	;# 
   358  031A                     	;# 
   359  031B                     	;# 
   360  038C                     	;# 
   361  038C                     	;# 
   362  038D                     	;# 
   363  038E                     	;# 
   364  0390                     	;# 
   365  0390                     	;# 
   366  0391                     	;# 
   367  0392                     	;# 
   368  048C                     	;# 
   369  048C                     	;# 
   370  048D                     	;# 
   371  048E                     	;# 
   372  048F                     	;# 
   373  048F                     	;# 
   374  0490                     	;# 
   375  0491                     	;# 
   376  0492                     	;# 
   377  0492                     	;# 
   378  0493                     	;# 
   379  0494                     	;# 
   380  0495                     	;# 
   381  0495                     	;# 
   382  0496                     	;# 
   383  0497                     	;# 
   384  0498                     	;# 
   385  0499                     	;# 
   386  049A                     	;# 
   387  049B                     	;# 
   388  049C                     	;# 
   389  049D                     	;# 
   390  058C                     	;# 
   391  058C                     	;# 
   392  058D                     	;# 
   393  058E                     	;# 
   394  058F                     	;# 
   395  058F                     	;# 
   396  0590                     	;# 
   397  0591                     	;# 
   398  0592                     	;# 
   399  0593                     	;# 
   400  059C                     	;# 
   401  059C                     	;# 
   402  059D                     	;# 
   403  059D                     	;# 
   404  059E                     	;# 
   405  059F                     	;# 
   406  060C                     	;# 
   407  060C                     	;# 
   408  060D                     	;# 
   409  060D                     	;# 
   410  060E                     	;# 
   411  060F                     	;# 
   412  0610                     	;# 
   413  0611                     	;# 
   414  0612                     	;# 
   415  0613                     	;# 
   416  0614                     	;# 
   417  0616                     	;# 
   418  0616                     	;# 
   419  0617                     	;# 
   420  0617                     	;# 
   421  0618                     	;# 
   422  0619                     	;# 
   423  061A                     	;# 
   424  061B                     	;# 
   425  061C                     	;# 
   426  061D                     	;# 
   427  061E                     	;# 
   428  070C                     	;# 
   429  070D                     	;# 
   430  070E                     	;# 
   431  070F                     	;# 
   432  0710                     	;# 
   433  0711                     	;# 
   434  0712                     	;# 
   435  0713                     	;# 
   436  0714                     	;# 
   437  0716                     	;# 
   438  0717                     	;# 
   439  0718                     	;# 
   440  0719                     	;# 
   441  071A                     	;# 
   442  071B                     	;# 
   443  071C                     	;# 
   444  071D                     	;# 
   445  071E                     	;# 
   446  0796                     	;# 
   447  0797                     	;# 
   448  0798                     	;# 
   449  0799                     	;# 
   450  079A                     	;# 
   451  079B                     	;# 
   452  079C                     	;# 
   453  079D                     	;# 
   454  080C                     	;# 
   455  080D                     	;# 
   456  080E                     	;# 
   457  080F                     	;# 
   458  0810                     	;# 
   459  0811                     	;# 
   460  0812                     	;# 
   461  0813                     	;# 
   462  0814                     	;# 
   463  081A                     	;# 
   464  081A                     	;# 
   465  081B                     	;# 
   466  081C                     	;# 
   467  081C                     	;# 
   468  081D                     	;# 
   469  081E                     	;# 
   470  081F                     	;# 
   471  088C                     	;# 
   472  088D                     	;# 
   473  088E                     	;# 
   474  088F                     	;# 
   475  0890                     	;# 
   476  0891                     	;# 
   477  0892                     	;# 
   478  0893                     	;# 
   479  0895                     	;# 
   480  0896                     	;# 
   481  0897                     	;# 
   482  0898                     	;# 
   483  0899                     	;# 
   484  089A                     	;# 
   485  089B                     	;# 
   486  090C                     	;# 
   487  090E                     	;# 
   488  090F                     	;# 
   489  091F                     	;# 
   490  098F                     	;# 
   491  098F                     	;# 
   492  0990                     	;# 
   493  0991                     	;# 
   494  0992                     	;# 
   495  0993                     	;# 
   496  0994                     	;# 
   497  0995                     	;# 
   498  0996                     	;# 
   499  0997                     	;# 
   500  1E0F                     	;# 
   501  1E10                     	;# 
   502  1E11                     	;# 
   503  1E12                     	;# 
   504  1E13                     	;# 
   505  1E14                     	;# 
   506  1E15                     	;# 
   507  1E16                     	;# 
   508  1E17                     	;# 
   509  1E18                     	;# 
   510  1E19                     	;# 
   511  1E1A                     	;# 
   512  1E1B                     	;# 
   513  1E1C                     	;# 
   514  1E1D                     	;# 
   515  1E1E                     	;# 
   516  1E1F                     	;# 
   517  1E20                     	;# 
   518  1E21                     	;# 
   519  1E22                     	;# 
   520  1E23                     	;# 
   521  1E24                     	;# 
   522  1E25                     	;# 
   523  1E26                     	;# 
   524  1E27                     	;# 
   525  1E28                     	;# 
   526  1E29                     	;# 
   527  1E2A                     	;# 
   528  1E2B                     	;# 
   529  1E2C                     	;# 
   530  1E2D                     	;# 
   531  1E2E                     	;# 
   532  1E2F                     	;# 
   533  1E30                     	;# 
   534  1E31                     	;# 
   535  1E32                     	;# 
   536  1E33                     	;# 
   537  1E34                     	;# 
   538  1E35                     	;# 
   539  1E36                     	;# 
   540  1E37                     	;# 
   541  1E8F                     	;# 
   542  1E90                     	;# 
   543  1E91                     	;# 
   544  1E92                     	;# 
   545  1E93                     	;# 
   546  1E94                     	;# 
   547  1E95                     	;# 
   548  1E96                     	;# 
   549  1E97                     	;# 
   550  1E9C                     	;# 
   551  1E9D                     	;# 
   552  1E9E                     	;# 
   553  1EA1                     	;# 
   554  1EA2                     	;# 
   555  1EA3                     	;# 
   556  1EA4                     	;# 
   557  1EA9                     	;# 
   558  1EAA                     	;# 
   559  1EB1                     	;# 
   560  1EB2                     	;# 
   561  1EB8                     	;# 
   562  1EB9                     	;# 
   563  1EBA                     	;# 
   564  1EBB                     	;# 
   565  1EBC                     	;# 
   566  1EBD                     	;# 
   567  1EBE                     	;# 
   568  1EC3                     	;# 
   569  1EC5                     	;# 
   570  1EC6                     	;# 
   571  1EC7                     	;# 
   572  1EC8                     	;# 
   573  1EC9                     	;# 
   574  1ECA                     	;# 
   575  1ECB                     	;# 
   576  1ECC                     	;# 
   577  1F10                     	;# 
   578  1F11                     	;# 
   579  1F12                     	;# 
   580  1F14                     	;# 
   581  1F15                     	;# 
   582  1F20                     	;# 
   583  1F21                     	;# 
   584  1F22                     	;# 
   585  1F23                     	;# 
   586  1F24                     	;# 
   587  1F25                     	;# 
   588  1F38                     	;# 
   589  1F39                     	;# 
   590  1F3A                     	;# 
   591  1F3B                     	;# 
   592  1F3C                     	;# 
   593  1F3D                     	;# 
   594  1F3E                     	;# 
   595  1F3F                     	;# 
   596  1F4E                     	;# 
   597  1F4F                     	;# 
   598  1F50                     	;# 
   599  1F51                     	;# 
   600  1F52                     	;# 
   601  1F53                     	;# 
   602  1F54                     	;# 
   603  1F55                     	;# 
   604  1FE4                     	;# 
   605  1FE5                     	;# 
   606  1FE6                     	;# 
   607  1FE7                     	;# 
   608  1FE8                     	;# 
   609  1FE8                     	;# 
   610  1FE9                     	;# 
   611  1FEA                     	;# 
   612  1FEB                     	;# 
   613  1FED                     	;# 
   614  1FEE                     	;# 
   615  1FEF                     	;# 
   616  0000                     	;# 
   617  0001                     	;# 
   618  0002                     	;# 
   619  0003                     	;# 
   620  0004                     	;# 
   621  0005                     	;# 
   622  0006                     	;# 
   623  0007                     	;# 
   624  0008                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000E                     	;# 
   630  0012                     	;# 
   631  0014                     	;# 
   632  0018                     	;# 
   633  001A                     	;# 
   634  008C                     	;# 
   635  008C                     	;# 
   636  008D                     	;# 
   637  008E                     	;# 
   638  008E                     	;# 
   639  008F                     	;# 
   640  0090                     	;# 
   641  0090                     	;# 
   642  0091                     	;# 
   643  0092                     	;# 
   644  0092                     	;# 
   645  0093                     	;# 
   646  0094                     	;# 
   647  0094                     	;# 
   648  0095                     	;# 
   649  0096                     	;# 
   650  0096                     	;# 
   651  0097                     	;# 
   652  0098                     	;# 
   653  0099                     	;# 
   654  009A                     	;# 
   655  009B                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009D                     	;# 
   660  009E                     	;# 
   661  009F                     	;# 
   662  010C                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  010F                     	;# 
   668  0110                     	;# 
   669  0111                     	;# 
   670  0112                     	;# 
   671  0113                     	;# 
   672  0114                     	;# 
   673  0115                     	;# 
   674  0116                     	;# 
   675  0117                     	;# 
   676  0118                     	;# 
   677  0119                     	;# 
   678  0119                     	;# 
   679  0119                     	;# 
   680  011A                     	;# 
   681  011A                     	;# 
   682  011A                     	;# 
   683  011B                     	;# 
   684  011B                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011C                     	;# 
   689  011C                     	;# 
   690  011C                     	;# 
   691  011D                     	;# 
   692  011D                     	;# 
   693  011D                     	;# 
   694  011E                     	;# 
   695  011E                     	;# 
   696  011E                     	;# 
   697  011F                     	;# 
   698  011F                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  018C                     	;# 
   703  018D                     	;# 
   704  018E                     	;# 
   705  018F                     	;# 
   706  0190                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0198                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  020C                     	;# 
   717  020D                     	;# 
   718  020E                     	;# 
   719  020E                     	;# 
   720  020F                     	;# 
   721  020F                     	;# 
   722  0210                     	;# 
   723  0210                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0213                     	;# 
   728  0214                     	;# 
   729  0214                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0218                     	;# 
   737  0219                     	;# 
   738  021A                     	;# 
   739  021A                     	;# 
   740  021B                     	;# 
   741  021B                     	;# 
   742  021C                     	;# 
   743  021C                     	;# 
   744  021D                     	;# 
   745  021D                     	;# 
   746  021E                     	;# 
   747  021F                     	;# 
   748  028C                     	;# 
   749  028C                     	;# 
   750  028D                     	;# 
   751  028D                     	;# 
   752  028E                     	;# 
   753  028F                     	;# 
   754  0290                     	;# 
   755  0291                     	;# 
   756  0292                     	;# 
   757  0292                     	;# 
   758  0293                     	;# 
   759  0293                     	;# 
   760  0294                     	;# 
   761  0295                     	;# 
   762  0296                     	;# 
   763  0297                     	;# 
   764  0298                     	;# 
   765  0298                     	;# 
   766  0299                     	;# 
   767  0299                     	;# 
   768  029A                     	;# 
   769  029B                     	;# 
   770  029C                     	;# 
   771  029D                     	;# 
   772  029F                     	;# 
   773  030C                     	;# 
   774  030C                     	;# 
   775  030D                     	;# 
   776  030E                     	;# 
   777  030F                     	;# 
   778  0310                     	;# 
   779  0310                     	;# 
   780  0311                     	;# 
   781  0312                     	;# 
   782  0313                     	;# 
   783  0314                     	;# 
   784  0314                     	;# 
   785  0315                     	;# 
   786  0316                     	;# 
   787  0317                     	;# 
   788  0318                     	;# 
   789  0318                     	;# 
   790  0319                     	;# 
   791  031A                     	;# 
   792  031B                     	;# 
   793  038C                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0390                     	;# 
   799  0391                     	;# 
   800  0392                     	;# 
   801  048C                     	;# 
   802  048C                     	;# 
   803  048D                     	;# 
   804  048E                     	;# 
   805  048F                     	;# 
   806  048F                     	;# 
   807  0490                     	;# 
   808  0491                     	;# 
   809  0492                     	;# 
   810  0492                     	;# 
   811  0493                     	;# 
   812  0494                     	;# 
   813  0495                     	;# 
   814  0495                     	;# 
   815  0496                     	;# 
   816  0497                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049C                     	;# 
   822  049D                     	;# 
   823  058C                     	;# 
   824  058C                     	;# 
   825  058D                     	;# 
   826  058E                     	;# 
   827  058F                     	;# 
   828  058F                     	;# 
   829  0590                     	;# 
   830  0591                     	;# 
   831  0592                     	;# 
   832  0593                     	;# 
   833  059C                     	;# 
   834  059C                     	;# 
   835  059D                     	;# 
   836  059D                     	;# 
   837  059E                     	;# 
   838  059F                     	;# 
   839  060C                     	;# 
   840  060C                     	;# 
   841  060D                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0616                     	;# 
   852  0617                     	;# 
   853  0617                     	;# 
   854  0618                     	;# 
   855  0619                     	;# 
   856  061A                     	;# 
   857  061B                     	;# 
   858  061C                     	;# 
   859  061D                     	;# 
   860  061E                     	;# 
   861  070C                     	;# 
   862  070D                     	;# 
   863  070E                     	;# 
   864  070F                     	;# 
   865  0710                     	;# 
   866  0711                     	;# 
   867  0712                     	;# 
   868  0713                     	;# 
   869  0714                     	;# 
   870  0716                     	;# 
   871  0717                     	;# 
   872  0718                     	;# 
   873  0719                     	;# 
   874  071A                     	;# 
   875  071B                     	;# 
   876  071C                     	;# 
   877  071D                     	;# 
   878  071E                     	;# 
   879  0796                     	;# 
   880  0797                     	;# 
   881  0798                     	;# 
   882  0799                     	;# 
   883  079A                     	;# 
   884  079B                     	;# 
   885  079C                     	;# 
   886  079D                     	;# 
   887  080C                     	;# 
   888  080D                     	;# 
   889  080E                     	;# 
   890  080F                     	;# 
   891  0810                     	;# 
   892  0811                     	;# 
   893  0812                     	;# 
   894  0813                     	;# 
   895  0814                     	;# 
   896  081A                     	;# 
   897  081A                     	;# 
   898  081B                     	;# 
   899  081C                     	;# 
   900  081C                     	;# 
   901  081D                     	;# 
   902  081E                     	;# 
   903  081F                     	;# 
   904  088C                     	;# 
   905  088D                     	;# 
   906  088E                     	;# 
   907  088F                     	;# 
   908  0890                     	;# 
   909  0891                     	;# 
   910  0892                     	;# 
   911  0893                     	;# 
   912  0895                     	;# 
   913  0896                     	;# 
   914  0897                     	;# 
   915  0898                     	;# 
   916  0899                     	;# 
   917  089A                     	;# 
   918  089B                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  098F                     	;# 
   924  098F                     	;# 
   925  0990                     	;# 
   926  0991                     	;# 
   927  0992                     	;# 
   928  0993                     	;# 
   929  0994                     	;# 
   930  0995                     	;# 
   931  0996                     	;# 
   932  0997                     	;# 
   933  1E0F                     	;# 
   934  1E10                     	;# 
   935  1E11                     	;# 
   936  1E12                     	;# 
   937  1E13                     	;# 
   938  1E14                     	;# 
   939  1E15                     	;# 
   940  1E16                     	;# 
   941  1E17                     	;# 
   942  1E18                     	;# 
   943  1E19                     	;# 
   944  1E1A                     	;# 
   945  1E1B                     	;# 
   946  1E1C                     	;# 
   947  1E1D                     	;# 
   948  1E1E                     	;# 
   949  1E1F                     	;# 
   950  1E20                     	;# 
   951  1E21                     	;# 
   952  1E22                     	;# 
   953  1E23                     	;# 
   954  1E24                     	;# 
   955  1E25                     	;# 
   956  1E26                     	;# 
   957  1E27                     	;# 
   958  1E28                     	;# 
   959  1E29                     	;# 
   960  1E2A                     	;# 
   961  1E2B                     	;# 
   962  1E2C                     	;# 
   963  1E2D                     	;# 
   964  1E2E                     	;# 
   965  1E2F                     	;# 
   966  1E30                     	;# 
   967  1E31                     	;# 
   968  1E32                     	;# 
   969  1E33                     	;# 
   970  1E34                     	;# 
   971  1E35                     	;# 
   972  1E36                     	;# 
   973  1E37                     	;# 
   974  1E8F                     	;# 
   975  1E90                     	;# 
   976  1E91                     	;# 
   977  1E92                     	;# 
   978  1E93                     	;# 
   979  1E94                     	;# 
   980  1E95                     	;# 
   981  1E96                     	;# 
   982  1E97                     	;# 
   983  1E9C                     	;# 
   984  1E9D                     	;# 
   985  1E9E                     	;# 
   986  1EA1                     	;# 
   987  1EA2                     	;# 
   988  1EA3                     	;# 
   989  1EA4                     	;# 
   990  1EA9                     	;# 
   991  1EAA                     	;# 
   992  1EB1                     	;# 
   993  1EB2                     	;# 
   994  1EB8                     	;# 
   995  1EB9                     	;# 
   996  1EBA                     	;# 
   997  1EBB                     	;# 
   998  1EBC                     	;# 
   999  1EBD                     	;# 
  1000  1EBE                     	;# 
  1001  1EC3                     	;# 
  1002  1EC5                     	;# 
  1003  1EC6                     	;# 
  1004  1EC7                     	;# 
  1005  1EC8                     	;# 
  1006  1EC9                     	;# 
  1007  1ECA                     	;# 
  1008  1ECB                     	;# 
  1009  1ECC                     	;# 
  1010  1F10                     	;# 
  1011  1F11                     	;# 
  1012  1F12                     	;# 
  1013  1F14                     	;# 
  1014  1F15                     	;# 
  1015  1F20                     	;# 
  1016  1F21                     	;# 
  1017  1F22                     	;# 
  1018  1F23                     	;# 
  1019  1F24                     	;# 
  1020  1F25                     	;# 
  1021  1F38                     	;# 
  1022  1F39                     	;# 
  1023  1F3A                     	;# 
  1024  1F3B                     	;# 
  1025  1F3C                     	;# 
  1026  1F3D                     	;# 
  1027  1F3E                     	;# 
  1028  1F3F                     	;# 
  1029  1F4E                     	;# 
  1030  1F4F                     	;# 
  1031  1F50                     	;# 
  1032  1F51                     	;# 
  1033  1F52                     	;# 
  1034  1F53                     	;# 
  1035  1F54                     	;# 
  1036  1F55                     	;# 
  1037  1FE4                     	;# 
  1038  1FE5                     	;# 
  1039  1FE6                     	;# 
  1040  1FE7                     	;# 
  1041  1FE8                     	;# 
  1042  1FE8                     	;# 
  1043  1FE9                     	;# 
  1044  1FEA                     	;# 
  1045  1FEB                     	;# 
  1046  1FED                     	;# 
  1047  1FEE                     	;# 
  1048  1FEF                     	;# 
  1049  0000                     	;# 
  1050  0001                     	;# 
  1051  0002                     	;# 
  1052  0003                     	;# 
  1053  0004                     	;# 
  1054  0005                     	;# 
  1055  0006                     	;# 
  1056  0007                     	;# 
  1057  0008                     	;# 
  1058  0009                     	;# 
  1059  000A                     	;# 
  1060  000B                     	;# 
  1061  000C                     	;# 
  1062  000E                     	;# 
  1063  0012                     	;# 
  1064  0014                     	;# 
  1065  0018                     	;# 
  1066  001A                     	;# 
  1067  008C                     	;# 
  1068  008C                     	;# 
  1069  008D                     	;# 
  1070  008E                     	;# 
  1071  008E                     	;# 
  1072  008F                     	;# 
  1073  0090                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0092                     	;# 
  1078  0093                     	;# 
  1079  0094                     	;# 
  1080  0094                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0096                     	;# 
  1084  0097                     	;# 
  1085  0098                     	;# 
  1086  0099                     	;# 
  1087  009A                     	;# 
  1088  009B                     	;# 
  1089  009B                     	;# 
  1090  009C                     	;# 
  1091  009D                     	;# 
  1092  009D                     	;# 
  1093  009E                     	;# 
  1094  009F                     	;# 
  1095  010C                     	;# 
  1096  010C                     	;# 
  1097  010D                     	;# 
  1098  010E                     	;# 
  1099  010F                     	;# 
  1100  010F                     	;# 
  1101  0110                     	;# 
  1102  0111                     	;# 
  1103  0112                     	;# 
  1104  0113                     	;# 
  1105  0114                     	;# 
  1106  0115                     	;# 
  1107  0116                     	;# 
  1108  0117                     	;# 
  1109  0118                     	;# 
  1110  0119                     	;# 
  1111  0119                     	;# 
  1112  0119                     	;# 
  1113  011A                     	;# 
  1114  011A                     	;# 
  1115  011A                     	;# 
  1116  011B                     	;# 
  1117  011B                     	;# 
  1118  011B                     	;# 
  1119  011B                     	;# 
  1120  011B                     	;# 
  1121  011C                     	;# 
  1122  011C                     	;# 
  1123  011C                     	;# 
  1124  011D                     	;# 
  1125  011D                     	;# 
  1126  011D                     	;# 
  1127  011E                     	;# 
  1128  011E                     	;# 
  1129  011E                     	;# 
  1130  011F                     	;# 
  1131  011F                     	;# 
  1132  011F                     	;# 
  1133  011F                     	;# 
  1134  011F                     	;# 
  1135  018C                     	;# 
  1136  018D                     	;# 
  1137  018E                     	;# 
  1138  018F                     	;# 
  1139  0190                     	;# 
  1140  0191                     	;# 
  1141  0192                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0198                     	;# 
  1145  0199                     	;# 
  1146  019A                     	;# 
  1147  019B                     	;# 
  1148  019C                     	;# 
  1149  020C                     	;# 
  1150  020D                     	;# 
  1151  020E                     	;# 
  1152  020E                     	;# 
  1153  020F                     	;# 
  1154  020F                     	;# 
  1155  0210                     	;# 
  1156  0210                     	;# 
  1157  0211                     	;# 
  1158  0211                     	;# 
  1159  0212                     	;# 
  1160  0213                     	;# 
  1161  0214                     	;# 
  1162  0214                     	;# 
  1163  0215                     	;# 
  1164  0215                     	;# 
  1165  0216                     	;# 
  1166  0216                     	;# 
  1167  0217                     	;# 
  1168  0217                     	;# 
  1169  0218                     	;# 
  1170  0219                     	;# 
  1171  021A                     	;# 
  1172  021A                     	;# 
  1173  021B                     	;# 
  1174  021B                     	;# 
  1175  021C                     	;# 
  1176  021C                     	;# 
  1177  021D                     	;# 
  1178  021D                     	;# 
  1179  021E                     	;# 
  1180  021F                     	;# 
  1181  028C                     	;# 
  1182  028C                     	;# 
  1183  028D                     	;# 
  1184  028D                     	;# 
  1185  028E                     	;# 
  1186  028F                     	;# 
  1187  0290                     	;# 
  1188  0291                     	;# 
  1189  0292                     	;# 
  1190  0292                     	;# 
  1191  0293                     	;# 
  1192  0293                     	;# 
  1193  0294                     	;# 
  1194  0295                     	;# 
  1195  0296                     	;# 
  1196  0297                     	;# 
  1197  0298                     	;# 
  1198  0298                     	;# 
  1199  0299                     	;# 
  1200  0299                     	;# 
  1201  029A                     	;# 
  1202  029B                     	;# 
  1203  029C                     	;# 
  1204  029D                     	;# 
  1205  029F                     	;# 
  1206  030C                     	;# 
  1207  030C                     	;# 
  1208  030D                     	;# 
  1209  030E                     	;# 
  1210  030F                     	;# 
  1211  0310                     	;# 
  1212  0310                     	;# 
  1213  0311                     	;# 
  1214  0312                     	;# 
  1215  0313                     	;# 
  1216  0314                     	;# 
  1217  0314                     	;# 
  1218  0315                     	;# 
  1219  0316                     	;# 
  1220  0317                     	;# 
  1221  0318                     	;# 
  1222  0318                     	;# 
  1223  0319                     	;# 
  1224  031A                     	;# 
  1225  031B                     	;# 
  1226  038C                     	;# 
  1227  038C                     	;# 
  1228  038D                     	;# 
  1229  038E                     	;# 
  1230  0390                     	;# 
  1231  0390                     	;# 
  1232  0391                     	;# 
  1233  0392                     	;# 
  1234  048C                     	;# 
  1235  048C                     	;# 
  1236  048D                     	;# 
  1237  048E                     	;# 
  1238  048F                     	;# 
  1239  048F                     	;# 
  1240  0490                     	;# 
  1241  0491                     	;# 
  1242  0492                     	;# 
  1243  0492                     	;# 
  1244  0493                     	;# 
  1245  0494                     	;# 
  1246  0495                     	;# 
  1247  0495                     	;# 
  1248  0496                     	;# 
  1249  0497                     	;# 
  1250  0498                     	;# 
  1251  0499                     	;# 
  1252  049A                     	;# 
  1253  049B                     	;# 
  1254  049C                     	;# 
  1255  049D                     	;# 
  1256  058C                     	;# 
  1257  058C                     	;# 
  1258  058D                     	;# 
  1259  058E                     	;# 
  1260  058F                     	;# 
  1261  058F                     	;# 
  1262  0590                     	;# 
  1263  0591                     	;# 
  1264  0592                     	;# 
  1265  0593                     	;# 
  1266  059C                     	;# 
  1267  059C                     	;# 
  1268  059D                     	;# 
  1269  059D                     	;# 
  1270  059E                     	;# 
  1271  059F                     	;# 
  1272  060C                     	;# 
  1273  060C                     	;# 
  1274  060D                     	;# 
  1275  060D                     	;# 
  1276  060E                     	;# 
  1277  060F                     	;# 
  1278  0610                     	;# 
  1279  0611                     	;# 
  1280  0612                     	;# 
  1281  0613                     	;# 
  1282  0614                     	;# 
  1283  0616                     	;# 
  1284  0616                     	;# 
  1285  0617                     	;# 
  1286  0617                     	;# 
  1287  0618                     	;# 
  1288  0619                     	;# 
  1289  061A                     	;# 
  1290  061B                     	;# 
  1291  061C                     	;# 
  1292  061D                     	;# 
  1293  061E                     	;# 
  1294  070C                     	;# 
  1295  070D                     	;# 
  1296  070E                     	;# 
  1297  070F                     	;# 
  1298  0710                     	;# 
  1299  0711                     	;# 
  1300  0712                     	;# 
  1301  0713                     	;# 
  1302  0714                     	;# 
  1303  0716                     	;# 
  1304  0717                     	;# 
  1305  0718                     	;# 
  1306  0719                     	;# 
  1307  071A                     	;# 
  1308  071B                     	;# 
  1309  071C                     	;# 
  1310  071D                     	;# 
  1311  071E                     	;# 
  1312  0796                     	;# 
  1313  0797                     	;# 
  1314  0798                     	;# 
  1315  0799                     	;# 
  1316  079A                     	;# 
  1317  079B                     	;# 
  1318  079C                     	;# 
  1319  079D                     	;# 
  1320  080C                     	;# 
  1321  080D                     	;# 
  1322  080E                     	;# 
  1323  080F                     	;# 
  1324  0810                     	;# 
  1325  0811                     	;# 
  1326  0812                     	;# 
  1327  0813                     	;# 
  1328  0814                     	;# 
  1329  081A                     	;# 
  1330  081A                     	;# 
  1331  081B                     	;# 
  1332  081C                     	;# 
  1333  081C                     	;# 
  1334  081D                     	;# 
  1335  081E                     	;# 
  1336  081F                     	;# 
  1337  088C                     	;# 
  1338  088D                     	;# 
  1339  088E                     	;# 
  1340  088F                     	;# 
  1341  0890                     	;# 
  1342  0891                     	;# 
  1343  0892                     	;# 
  1344  0893                     	;# 
  1345  0895                     	;# 
  1346  0896                     	;# 
  1347  0897                     	;# 
  1348  0898                     	;# 
  1349  0899                     	;# 
  1350  089A                     	;# 
  1351  089B                     	;# 
  1352  090C                     	;# 
  1353  090E                     	;# 
  1354  090F                     	;# 
  1355  091F                     	;# 
  1356  098F                     	;# 
  1357  098F                     	;# 
  1358  0990                     	;# 
  1359  0991                     	;# 
  1360  0992                     	;# 
  1361  0993                     	;# 
  1362  0994                     	;# 
  1363  0995                     	;# 
  1364  0996                     	;# 
  1365  0997                     	;# 
  1366  1E0F                     	;# 
  1367  1E10                     	;# 
  1368  1E11                     	;# 
  1369  1E12                     	;# 
  1370  1E13                     	;# 
  1371  1E14                     	;# 
  1372  1E15                     	;# 
  1373  1E16                     	;# 
  1374  1E17                     	;# 
  1375  1E18                     	;# 
  1376  1E19                     	;# 
  1377  1E1A                     	;# 
  1378  1E1B                     	;# 
  1379  1E1C                     	;# 
  1380  1E1D                     	;# 
  1381  1E1E                     	;# 
  1382  1E1F                     	;# 
  1383  1E20                     	;# 
  1384  1E21                     	;# 
  1385  1E22                     	;# 
  1386  1E23                     	;# 
  1387  1E24                     	;# 
  1388  1E25                     	;# 
  1389  1E26                     	;# 
  1390  1E27                     	;# 
  1391  1E28                     	;# 
  1392  1E29                     	;# 
  1393  1E2A                     	;# 
  1394  1E2B                     	;# 
  1395  1E2C                     	;# 
  1396  1E2D                     	;# 
  1397  1E2E                     	;# 
  1398  1E2F                     	;# 
  1399  1E30                     	;# 
  1400  1E31                     	;# 
  1401  1E32                     	;# 
  1402  1E33                     	;# 
  1403  1E34                     	;# 
  1404  1E35                     	;# 
  1405  1E36                     	;# 
  1406  1E37                     	;# 
  1407  1E8F                     	;# 
  1408  1E90                     	;# 
  1409  1E91                     	;# 
  1410  1E92                     	;# 
  1411  1E93                     	;# 
  1412  1E94                     	;# 
  1413  1E95                     	;# 
  1414  1E96                     	;# 
  1415  1E97                     	;# 
  1416  1E9C                     	;# 
  1417  1E9D                     	;# 
  1418  1E9E                     	;# 
  1419  1EA1                     	;# 
  1420  1EA2                     	;# 
  1421  1EA3                     	;# 
  1422  1EA4                     	;# 
  1423  1EA9                     	;# 
  1424  1EAA                     	;# 
  1425  1EB1                     	;# 
  1426  1EB2                     	;# 
  1427  1EB8                     	;# 
  1428  1EB9                     	;# 
  1429  1EBA                     	;# 
  1430  1EBB                     	;# 
  1431  1EBC                     	;# 
  1432  1EBD                     	;# 
  1433  1EBE                     	;# 
  1434  1EC3                     	;# 
  1435  1EC5                     	;# 
  1436  1EC6                     	;# 
  1437  1EC7                     	;# 
  1438  1EC8                     	;# 
  1439  1EC9                     	;# 
  1440  1ECA                     	;# 
  1441  1ECB                     	;# 
  1442  1ECC                     	;# 
  1443  1F10                     	;# 
  1444  1F11                     	;# 
  1445  1F12                     	;# 
  1446  1F14                     	;# 
  1447  1F15                     	;# 
  1448  1F20                     	;# 
  1449  1F21                     	;# 
  1450  1F22                     	;# 
  1451  1F23                     	;# 
  1452  1F24                     	;# 
  1453  1F25                     	;# 
  1454  1F38                     	;# 
  1455  1F39                     	;# 
  1456  1F3A                     	;# 
  1457  1F3B                     	;# 
  1458  1F3C                     	;# 
  1459  1F3D                     	;# 
  1460  1F3E                     	;# 
  1461  1F3F                     	;# 
  1462  1F4E                     	;# 
  1463  1F4F                     	;# 
  1464  1F50                     	;# 
  1465  1F51                     	;# 
  1466  1F52                     	;# 
  1467  1F53                     	;# 
  1468  1F54                     	;# 
  1469  1F55                     	;# 
  1470  1FE4                     	;# 
  1471  1FE5                     	;# 
  1472  1FE6                     	;# 
  1473  1FE7                     	;# 
  1474  1FE8                     	;# 
  1475  1FE8                     	;# 
  1476  1FE9                     	;# 
  1477  1FEA                     	;# 
  1478  1FEB                     	;# 
  1479  1FED                     	;# 
  1480  1FEE                     	;# 
  1481  1FEF                     	;# 
  1482  0000                     	;# 
  1483  0001                     	;# 
  1484  0002                     	;# 
  1485  0003                     	;# 
  1486  0004                     	;# 
  1487  0005                     	;# 
  1488  0006                     	;# 
  1489  0007                     	;# 
  1490  0008                     	;# 
  1491  0009                     	;# 
  1492  000A                     	;# 
  1493  000B                     	;# 
  1494  000C                     	;# 
  1495  000E                     	;# 
  1496  0012                     	;# 
  1497  0014                     	;# 
  1498  0018                     	;# 
  1499  001A                     	;# 
  1500  008C                     	;# 
  1501  008C                     	;# 
  1502  008D                     	;# 
  1503  008E                     	;# 
  1504  008E                     	;# 
  1505  008F                     	;# 
  1506  0090                     	;# 
  1507  0090                     	;# 
  1508  0091                     	;# 
  1509  0092                     	;# 
  1510  0092                     	;# 
  1511  0093                     	;# 
  1512  0094                     	;# 
  1513  0094                     	;# 
  1514  0095                     	;# 
  1515  0096                     	;# 
  1516  0096                     	;# 
  1517  0097                     	;# 
  1518  0098                     	;# 
  1519  0099                     	;# 
  1520  009A                     	;# 
  1521  009B                     	;# 
  1522  009B                     	;# 
  1523  009C                     	;# 
  1524  009D                     	;# 
  1525  009D                     	;# 
  1526  009E                     	;# 
  1527  009F                     	;# 
  1528  010C                     	;# 
  1529  010C                     	;# 
  1530  010D                     	;# 
  1531  010E                     	;# 
  1532  010F                     	;# 
  1533  010F                     	;# 
  1534  0110                     	;# 
  1535  0111                     	;# 
  1536  0112                     	;# 
  1537  0113                     	;# 
  1538  0114                     	;# 
  1539  0115                     	;# 
  1540  0116                     	;# 
  1541  0117                     	;# 
  1542  0118                     	;# 
  1543  0119                     	;# 
  1544  0119                     	;# 
  1545  0119                     	;# 
  1546  011A                     	;# 
  1547  011A                     	;# 
  1548  011A                     	;# 
  1549  011B                     	;# 
  1550  011B                     	;# 
  1551  011B                     	;# 
  1552  011B                     	;# 
  1553  011B                     	;# 
  1554  011C                     	;# 
  1555  011C                     	;# 
  1556  011C                     	;# 
  1557  011D                     	;# 
  1558  011D                     	;# 
  1559  011D                     	;# 
  1560  011E                     	;# 
  1561  011E                     	;# 
  1562  011E                     	;# 
  1563  011F                     	;# 
  1564  011F                     	;# 
  1565  011F                     	;# 
  1566  011F                     	;# 
  1567  011F                     	;# 
  1568  018C                     	;# 
  1569  018D                     	;# 
  1570  018E                     	;# 
  1571  018F                     	;# 
  1572  0190                     	;# 
  1573  0191                     	;# 
  1574  0192                     	;# 
  1575  0196                     	;# 
  1576  0197                     	;# 
  1577  0198                     	;# 
  1578  0199                     	;# 
  1579  019A                     	;# 
  1580  019B                     	;# 
  1581  019C                     	;# 
  1582  020C                     	;# 
  1583  020D                     	;# 
  1584  020E                     	;# 
  1585  020E                     	;# 
  1586  020F                     	;# 
  1587  020F                     	;# 
  1588  0210                     	;# 
  1589  0210                     	;# 
  1590  0211                     	;# 
  1591  0211                     	;# 
  1592  0212                     	;# 
  1593  0213                     	;# 
  1594  0214                     	;# 
  1595  0214                     	;# 
  1596  0215                     	;# 
  1597  0215                     	;# 
  1598  0216                     	;# 
  1599  0216                     	;# 
  1600  0217                     	;# 
  1601  0217                     	;# 
  1602  0218                     	;# 
  1603  0219                     	;# 
  1604  021A                     	;# 
  1605  021A                     	;# 
  1606  021B                     	;# 
  1607  021B                     	;# 
  1608  021C                     	;# 
  1609  021C                     	;# 
  1610  021D                     	;# 
  1611  021D                     	;# 
  1612  021E                     	;# 
  1613  021F                     	;# 
  1614  028C                     	;# 
  1615  028C                     	;# 
  1616  028D                     	;# 
  1617  028D                     	;# 
  1618  028E                     	;# 
  1619  028F                     	;# 
  1620  0290                     	;# 
  1621  0291                     	;# 
  1622  0292                     	;# 
  1623  0292                     	;# 
  1624  0293                     	;# 
  1625  0293                     	;# 
  1626  0294                     	;# 
  1627  0295                     	;# 
  1628  0296                     	;# 
  1629  0297                     	;# 
  1630  0298                     	;# 
  1631  0298                     	;# 
  1632  0299                     	;# 
  1633  0299                     	;# 
  1634  029A                     	;# 
  1635  029B                     	;# 
  1636  029C                     	;# 
  1637  029D                     	;# 
  1638  029F                     	;# 
  1639  030C                     	;# 
  1640  030C                     	;# 
  1641  030D                     	;# 
  1642  030E                     	;# 
  1643  030F                     	;# 
  1644  0310                     	;# 
  1645  0310                     	;# 
  1646  0311                     	;# 
  1647  0312                     	;# 
  1648  0313                     	;# 
  1649  0314                     	;# 
  1650  0314                     	;# 
  1651  0315                     	;# 
  1652  0316                     	;# 
  1653  0317                     	;# 
  1654  0318                     	;# 
  1655  0318                     	;# 
  1656  0319                     	;# 
  1657  031A                     	;# 
  1658  031B                     	;# 
  1659  038C                     	;# 
  1660  038C                     	;# 
  1661  038D                     	;# 
  1662  038E                     	;# 
  1663  0390                     	;# 
  1664  0390                     	;# 
  1665  0391                     	;# 
  1666  0392                     	;# 
  1667  048C                     	;# 
  1668  048C                     	;# 
  1669  048D                     	;# 
  1670  048E                     	;# 
  1671  048F                     	;# 
  1672  048F                     	;# 
  1673  0490                     	;# 
  1674  0491                     	;# 
  1675  0492                     	;# 
  1676  0492                     	;# 
  1677  0493                     	;# 
  1678  0494                     	;# 
  1679  0495                     	;# 
  1680  0495                     	;# 
  1681  0496                     	;# 
  1682  0497                     	;# 
  1683  0498                     	;# 
  1684  0499                     	;# 
  1685  049A                     	;# 
  1686  049B                     	;# 
  1687  049C                     	;# 
  1688  049D                     	;# 
  1689  058C                     	;# 
  1690  058C                     	;# 
  1691  058D                     	;# 
  1692  058E                     	;# 
  1693  058F                     	;# 
  1694  058F                     	;# 
  1695  0590                     	;# 
  1696  0591                     	;# 
  1697  0592                     	;# 
  1698  0593                     	;# 
  1699  059C                     	;# 
  1700  059C                     	;# 
  1701  059D                     	;# 
  1702  059D                     	;# 
  1703  059E                     	;# 
  1704  059F                     	;# 
  1705  060C                     	;# 
  1706  060C                     	;# 
  1707  060D                     	;# 
  1708  060D                     	;# 
  1709  060E                     	;# 
  1710  060F                     	;# 
  1711  0610                     	;# 
  1712  0611                     	;# 
  1713  0612                     	;# 
  1714  0613                     	;# 
  1715  0614                     	;# 
  1716  0616                     	;# 
  1717  0616                     	;# 
  1718  0617                     	;# 
  1719  0617                     	;# 
  1720  0618                     	;# 
  1721  0619                     	;# 
  1722  061A                     	;# 
  1723  061B                     	;# 
  1724  061C                     	;# 
  1725  061D                     	;# 
  1726  061E                     	;# 
  1727  070C                     	;# 
  1728  070D                     	;# 
  1729  070E                     	;# 
  1730  070F                     	;# 
  1731  0710                     	;# 
  1732  0711                     	;# 
  1733  0712                     	;# 
  1734  0713                     	;# 
  1735  0714                     	;# 
  1736  0716                     	;# 
  1737  0717                     	;# 
  1738  0718                     	;# 
  1739  0719                     	;# 
  1740  071A                     	;# 
  1741  071B                     	;# 
  1742  071C                     	;# 
  1743  071D                     	;# 
  1744  071E                     	;# 
  1745  0796                     	;# 
  1746  0797                     	;# 
  1747  0798                     	;# 
  1748  0799                     	;# 
  1749  079A                     	;# 
  1750  079B                     	;# 
  1751  079C                     	;# 
  1752  079D                     	;# 
  1753  080C                     	;# 
  1754  080D                     	;# 
  1755  080E                     	;# 
  1756  080F                     	;# 
  1757  0810                     	;# 
  1758  0811                     	;# 
  1759  0812                     	;# 
  1760  0813                     	;# 
  1761  0814                     	;# 
  1762  081A                     	;# 
  1763  081A                     	;# 
  1764  081B                     	;# 
  1765  081C                     	;# 
  1766  081C                     	;# 
  1767  081D                     	;# 
  1768  081E                     	;# 
  1769  081F                     	;# 
  1770  088C                     	;# 
  1771  088D                     	;# 
  1772  088E                     	;# 
  1773  088F                     	;# 
  1774  0890                     	;# 
  1775  0891                     	;# 
  1776  0892                     	;# 
  1777  0893                     	;# 
  1778  0895                     	;# 
  1779  0896                     	;# 
  1780  0897                     	;# 
  1781  0898                     	;# 
  1782  0899                     	;# 
  1783  089A                     	;# 
  1784  089B                     	;# 
  1785  090C                     	;# 
  1786  090E                     	;# 
  1787  090F                     	;# 
  1788  091F                     	;# 
  1789  098F                     	;# 
  1790  098F                     	;# 
  1791  0990                     	;# 
  1792  0991                     	;# 
  1793  0992                     	;# 
  1794  0993                     	;# 
  1795  0994                     	;# 
  1796  0995                     	;# 
  1797  0996                     	;# 
  1798  0997                     	;# 
  1799  1E0F                     	;# 
  1800  1E10                     	;# 
  1801  1E11                     	;# 
  1802  1E12                     	;# 
  1803  1E13                     	;# 
  1804  1E14                     	;# 
  1805  1E15                     	;# 
  1806  1E16                     	;# 
  1807  1E17                     	;# 
  1808  1E18                     	;# 
  1809  1E19                     	;# 
  1810  1E1A                     	;# 
  1811  1E1B                     	;# 
  1812  1E1C                     	;# 
  1813  1E1D                     	;# 
  1814  1E1E                     	;# 
  1815  1E1F                     	;# 
  1816  1E20                     	;# 
  1817  1E21                     	;# 
  1818  1E22                     	;# 
  1819  1E23                     	;# 
  1820  1E24                     	;# 
  1821  1E25                     	;# 
  1822  1E26                     	;# 
  1823  1E27                     	;# 
  1824  1E28                     	;# 
  1825  1E29                     	;# 
  1826  1E2A                     	;# 
  1827  1E2B                     	;# 
  1828  1E2C                     	;# 
  1829  1E2D                     	;# 
  1830  1E2E                     	;# 
  1831  1E2F                     	;# 
  1832  1E30                     	;# 
  1833  1E31                     	;# 
  1834  1E32                     	;# 
  1835  1E33                     	;# 
  1836  1E34                     	;# 
  1837  1E35                     	;# 
  1838  1E36                     	;# 
  1839  1E37                     	;# 
  1840  1E8F                     	;# 
  1841  1E90                     	;# 
  1842  1E91                     	;# 
  1843  1E92                     	;# 
  1844  1E93                     	;# 
  1845  1E94                     	;# 
  1846  1E95                     	;# 
  1847  1E96                     	;# 
  1848  1E97                     	;# 
  1849  1E9C                     	;# 
  1850  1E9D                     	;# 
  1851  1E9E                     	;# 
  1852  1EA1                     	;# 
  1853  1EA2                     	;# 
  1854  1EA3                     	;# 
  1855  1EA4                     	;# 
  1856  1EA9                     	;# 
  1857  1EAA                     	;# 
  1858  1EB1                     	;# 
  1859  1EB2                     	;# 
  1860  1EB8                     	;# 
  1861  1EB9                     	;# 
  1862  1EBA                     	;# 
  1863  1EBB                     	;# 
  1864  1EBC                     	;# 
  1865  1EBD                     	;# 
  1866  1EBE                     	;# 
  1867  1EC3                     	;# 
  1868  1EC5                     	;# 
  1869  1EC6                     	;# 
  1870  1EC7                     	;# 
  1871  1EC8                     	;# 
  1872  1EC9                     	;# 
  1873  1ECA                     	;# 
  1874  1ECB                     	;# 
  1875  1ECC                     	;# 
  1876  1F10                     	;# 
  1877  1F11                     	;# 
  1878  1F12                     	;# 
  1879  1F14                     	;# 
  1880  1F15                     	;# 
  1881  1F20                     	;# 
  1882  1F21                     	;# 
  1883  1F22                     	;# 
  1884  1F23                     	;# 
  1885  1F24                     	;# 
  1886  1F25                     	;# 
  1887  1F38                     	;# 
  1888  1F39                     	;# 
  1889  1F3A                     	;# 
  1890  1F3B                     	;# 
  1891  1F3C                     	;# 
  1892  1F3D                     	;# 
  1893  1F3E                     	;# 
  1894  1F3F                     	;# 
  1895  1F4E                     	;# 
  1896  1F4F                     	;# 
  1897  1F50                     	;# 
  1898  1F51                     	;# 
  1899  1F52                     	;# 
  1900  1F53                     	;# 
  1901  1F54                     	;# 
  1902  1F55                     	;# 
  1903  1FE4                     	;# 
  1904  1FE5                     	;# 
  1905  1FE6                     	;# 
  1906  1FE7                     	;# 
  1907  1FE8                     	;# 
  1908  1FE8                     	;# 
  1909  1FE9                     	;# 
  1910  1FEA                     	;# 
  1911  1FEB                     	;# 
  1912  1FED                     	;# 
  1913  1FEE                     	;# 
  1914  1FEF                     	;# 
  1915  0000                     	;# 
  1916  0001                     	;# 
  1917  0002                     	;# 
  1918  0003                     	;# 
  1919  0004                     	;# 
  1920  0005                     	;# 
  1921  0006                     	;# 
  1922  0007                     	;# 
  1923  0008                     	;# 
  1924  0009                     	;# 
  1925  000A                     	;# 
  1926  000B                     	;# 
  1927  000C                     	;# 
  1928  000E                     	;# 
  1929  0012                     	;# 
  1930  0014                     	;# 
  1931  0018                     	;# 
  1932  001A                     	;# 
  1933  008C                     	;# 
  1934  008C                     	;# 
  1935  008D                     	;# 
  1936  008E                     	;# 
  1937  008E                     	;# 
  1938  008F                     	;# 
  1939  0090                     	;# 
  1940  0090                     	;# 
  1941  0091                     	;# 
  1942  0092                     	;# 
  1943  0092                     	;# 
  1944  0093                     	;# 
  1945  0094                     	;# 
  1946  0094                     	;# 
  1947  0095                     	;# 
  1948  0096                     	;# 
  1949  0096                     	;# 
  1950  0097                     	;# 
  1951  0098                     	;# 
  1952  0099                     	;# 
  1953  009A                     	;# 
  1954  009B                     	;# 
  1955  009B                     	;# 
  1956  009C                     	;# 
  1957  009D                     	;# 
  1958  009D                     	;# 
  1959  009E                     	;# 
  1960  009F                     	;# 
  1961  010C                     	;# 
  1962  010C                     	;# 
  1963  010D                     	;# 
  1964  010E                     	;# 
  1965  010F                     	;# 
  1966  010F                     	;# 
  1967  0110                     	;# 
  1968  0111                     	;# 
  1969  0112                     	;# 
  1970  0113                     	;# 
  1971  0114                     	;# 
  1972  0115                     	;# 
  1973  0116                     	;# 
  1974  0117                     	;# 
  1975  0118                     	;# 
  1976  0119                     	;# 
  1977  0119                     	;# 
  1978  0119                     	;# 
  1979  011A                     	;# 
  1980  011A                     	;# 
  1981  011A                     	;# 
  1982  011B                     	;# 
  1983  011B                     	;# 
  1984  011B                     	;# 
  1985  011B                     	;# 
  1986  011B                     	;# 
  1987  011C                     	;# 
  1988  011C                     	;# 
  1989  011C                     	;# 
  1990  011D                     	;# 
  1991  011D                     	;# 
  1992  011D                     	;# 
  1993  011E                     	;# 
  1994  011E                     	;# 
  1995  011E                     	;# 
  1996  011F                     	;# 
  1997  011F                     	;# 
  1998  011F                     	;# 
  1999  011F                     	;# 
  2000  011F                     	;# 
  2001  018C                     	;# 
  2002  018D                     	;# 
  2003  018E                     	;# 
  2004  018F                     	;# 
  2005  0190                     	;# 
  2006  0191                     	;# 
  2007  0192                     	;# 
  2008  0196                     	;# 
  2009  0197                     	;# 
  2010  0198                     	;# 
  2011  0199                     	;# 
  2012  019A                     	;# 
  2013  019B                     	;# 
  2014  019C                     	;# 
  2015  020C                     	;# 
  2016  020D                     	;# 
  2017  020E                     	;# 
  2018  020E                     	;# 
  2019  020F                     	;# 
  2020  020F                     	;# 
  2021  0210                     	;# 
  2022  0210                     	;# 
  2023  0211                     	;# 
  2024  0211                     	;# 
  2025  0212                     	;# 
  2026  0213                     	;# 
  2027  0214                     	;# 
  2028  0214                     	;# 
  2029  0215                     	;# 
  2030  0215                     	;# 
  2031  0216                     	;# 
  2032  0216                     	;# 
  2033  0217                     	;# 
  2034  0217                     	;# 
  2035  0218                     	;# 
  2036  0219                     	;# 
  2037  021A                     	;# 
  2038  021A                     	;# 
  2039  021B                     	;# 
  2040  021B                     	;# 
  2041  021C                     	;# 
  2042  021C                     	;# 
  2043  021D                     	;# 
  2044  021D                     	;# 
  2045  021E                     	;# 
  2046  021F                     	;# 
  2047  028C                     	;# 
  2048  028C                     	;# 
  2049  028D                     	;# 
  2050  028D                     	;# 
  2051  028E                     	;# 
  2052  028F                     	;# 
  2053  0290                     	;# 
  2054  0291                     	;# 
  2055  0292                     	;# 
  2056  0292                     	;# 
  2057  0293                     	;# 
  2058  0293                     	;# 
  2059  0294                     	;# 
  2060  0295                     	;# 
  2061  0296                     	;# 
  2062  0297                     	;# 
  2063  0298                     	;# 
  2064  0298                     	;# 
  2065  0299                     	;# 
  2066  0299                     	;# 
  2067  029A                     	;# 
  2068  029B                     	;# 
  2069  029C                     	;# 
  2070  029D                     	;# 
  2071  029F                     	;# 
  2072  030C                     	;# 
  2073  030C                     	;# 
  2074  030D                     	;# 
  2075  030E                     	;# 
  2076  030F                     	;# 
  2077  0310                     	;# 
  2078  0310                     	;# 
  2079  0311                     	;# 
  2080  0312                     	;# 
  2081  0313                     	;# 
  2082  0314                     	;# 
  2083  0314                     	;# 
  2084  0315                     	;# 
  2085  0316                     	;# 
  2086  0317                     	;# 
  2087  0318                     	;# 
  2088  0318                     	;# 
  2089  0319                     	;# 
  2090  031A                     	;# 
  2091  031B                     	;# 
  2092  038C                     	;# 
  2093  038C                     	;# 
  2094  038D                     	;# 
  2095  038E                     	;# 
  2096  0390                     	;# 
  2097  0390                     	;# 
  2098  0391                     	;# 
  2099  0392                     	;# 
  2100  048C                     	;# 
  2101  048C                     	;# 
  2102  048D                     	;# 
  2103  048E                     	;# 
  2104  048F                     	;# 
  2105  048F                     	;# 
  2106  0490                     	;# 
  2107  0491                     	;# 
  2108  0492                     	;# 
  2109  0492                     	;# 
  2110  0493                     	;# 
  2111  0494                     	;# 
  2112  0495                     	;# 
  2113  0495                     	;# 
  2114  0496                     	;# 
  2115  0497                     	;# 
  2116  0498                     	;# 
  2117  0499                     	;# 
  2118  049A                     	;# 
  2119  049B                     	;# 
  2120  049C                     	;# 
  2121  049D                     	;# 
  2122  058C                     	;# 
  2123  058C                     	;# 
  2124  058D                     	;# 
  2125  058E                     	;# 
  2126  058F                     	;# 
  2127  058F                     	;# 
  2128  0590                     	;# 
  2129  0591                     	;# 
  2130  0592                     	;# 
  2131  0593                     	;# 
  2132  059C                     	;# 
  2133  059C                     	;# 
  2134  059D                     	;# 
  2135  059D                     	;# 
  2136  059E                     	;# 
  2137  059F                     	;# 
  2138  060C                     	;# 
  2139  060C                     	;# 
  2140  060D                     	;# 
  2141  060D                     	;# 
  2142  060E                     	;# 
  2143  060F                     	;# 
  2144  0610                     	;# 
  2145  0611                     	;# 
  2146  0612                     	;# 
  2147  0613                     	;# 
  2148  0614                     	;# 
  2149  0616                     	;# 
  2150  0616                     	;# 
  2151  0617                     	;# 
  2152  0617                     	;# 
  2153  0618                     	;# 
  2154  0619                     	;# 
  2155  061A                     	;# 
  2156  061B                     	;# 
  2157  061C                     	;# 
  2158  061D                     	;# 
  2159  061E                     	;# 
  2160  070C                     	;# 
  2161  070D                     	;# 
  2162  070E                     	;# 
  2163  070F                     	;# 
  2164  0710                     	;# 
  2165  0711                     	;# 
  2166  0712                     	;# 
  2167  0713                     	;# 
  2168  0714                     	;# 
  2169  0716                     	;# 
  2170  0717                     	;# 
  2171  0718                     	;# 
  2172  0719                     	;# 
  2173  071A                     	;# 
  2174  071B                     	;# 
  2175  071C                     	;# 
  2176  071D                     	;# 
  2177  071E                     	;# 
  2178  0796                     	;# 
  2179  0797                     	;# 
  2180  0798                     	;# 
  2181  0799                     	;# 
  2182  079A                     	;# 
  2183  079B                     	;# 
  2184  079C                     	;# 
  2185  079D                     	;# 
  2186  080C                     	;# 
  2187  080D                     	;# 
  2188  080E                     	;# 
  2189  080F                     	;# 
  2190  0810                     	;# 
  2191  0811                     	;# 
  2192  0812                     	;# 
  2193  0813                     	;# 
  2194  0814                     	;# 
  2195  081A                     	;# 
  2196  081A                     	;# 
  2197  081B                     	;# 
  2198  081C                     	;# 
  2199  081C                     	;# 
  2200  081D                     	;# 
  2201  081E                     	;# 
  2202  081F                     	;# 
  2203  088C                     	;# 
  2204  088D                     	;# 
  2205  088E                     	;# 
  2206  088F                     	;# 
  2207  0890                     	;# 
  2208  0891                     	;# 
  2209  0892                     	;# 
  2210  0893                     	;# 
  2211  0895                     	;# 
  2212  0896                     	;# 
  2213  0897                     	;# 
  2214  0898                     	;# 
  2215  0899                     	;# 
  2216  089A                     	;# 
  2217  089B                     	;# 
  2218  090C                     	;# 
  2219  090E                     	;# 
  2220  090F                     	;# 
  2221  091F                     	;# 
  2222  098F                     	;# 
  2223  098F                     	;# 
  2224  0990                     	;# 
  2225  0991                     	;# 
  2226  0992                     	;# 
  2227  0993                     	;# 
  2228  0994                     	;# 
  2229  0995                     	;# 
  2230  0996                     	;# 
  2231  0997                     	;# 
  2232  1E0F                     	;# 
  2233  1E10                     	;# 
  2234  1E11                     	;# 
  2235  1E12                     	;# 
  2236  1E13                     	;# 
  2237  1E14                     	;# 
  2238  1E15                     	;# 
  2239  1E16                     	;# 
  2240  1E17                     	;# 
  2241  1E18                     	;# 
  2242  1E19                     	;# 
  2243  1E1A                     	;# 
  2244  1E1B                     	;# 
  2245  1E1C                     	;# 
  2246  1E1D                     	;# 
  2247  1E1E                     	;# 
  2248  1E1F                     	;# 
  2249  1E20                     	;# 
  2250  1E21                     	;# 
  2251  1E22                     	;# 
  2252  1E23                     	;# 
  2253  1E24                     	;# 
  2254  1E25                     	;# 
  2255  1E26                     	;# 
  2256  1E27                     	;# 
  2257  1E28                     	;# 
  2258  1E29                     	;# 
  2259  1E2A                     	;# 
  2260  1E2B                     	;# 
  2261  1E2C                     	;# 
  2262  1E2D                     	;# 
  2263  1E2E                     	;# 
  2264  1E2F                     	;# 
  2265  1E30                     	;# 
  2266  1E31                     	;# 
  2267  1E32                     	;# 
  2268  1E33                     	;# 
  2269  1E34                     	;# 
  2270  1E35                     	;# 
  2271  1E36                     	;# 
  2272  1E37                     	;# 
  2273  1E8F                     	;# 
  2274  1E90                     	;# 
  2275  1E91                     	;# 
  2276  1E92                     	;# 
  2277  1E93                     	;# 
  2278  1E94                     	;# 
  2279  1E95                     	;# 
  2280  1E96                     	;# 
  2281  1E97                     	;# 
  2282  1E9C                     	;# 
  2283  1E9D                     	;# 
  2284  1E9E                     	;# 
  2285  1EA1                     	;# 
  2286  1EA2                     	;# 
  2287  1EA3                     	;# 
  2288  1EA4                     	;# 
  2289  1EA9                     	;# 
  2290  1EAA                     	;# 
  2291  1EB1                     	;# 
  2292  1EB2                     	;# 
  2293  1EB8                     	;# 
  2294  1EB9                     	;# 
  2295  1EBA                     	;# 
  2296  1EBB                     	;# 
  2297  1EBC                     	;# 
  2298  1EBD                     	;# 
  2299  1EBE                     	;# 
  2300  1EC3                     	;# 
  2301  1EC5                     	;# 
  2302  1EC6                     	;# 
  2303  1EC7                     	;# 
  2304  1EC8                     	;# 
  2305  1EC9                     	;# 
  2306  1ECA                     	;# 
  2307  1ECB                     	;# 
  2308  1ECC                     	;# 
  2309  1F10                     	;# 
  2310  1F11                     	;# 
  2311  1F12                     	;# 
  2312  1F14                     	;# 
  2313  1F15                     	;# 
  2314  1F20                     	;# 
  2315  1F21                     	;# 
  2316  1F22                     	;# 
  2317  1F23                     	;# 
  2318  1F24                     	;# 
  2319  1F25                     	;# 
  2320  1F38                     	;# 
  2321  1F39                     	;# 
  2322  1F3A                     	;# 
  2323  1F3B                     	;# 
  2324  1F3C                     	;# 
  2325  1F3D                     	;# 
  2326  1F3E                     	;# 
  2327  1F3F                     	;# 
  2328  1F4E                     	;# 
  2329  1F4F                     	;# 
  2330  1F50                     	;# 
  2331  1F51                     	;# 
  2332  1F52                     	;# 
  2333  1F53                     	;# 
  2334  1F54                     	;# 
  2335  1F55                     	;# 
  2336  1FE4                     	;# 
  2337  1FE5                     	;# 
  2338  1FE6                     	;# 
  2339  1FE7                     	;# 
  2340  1FE8                     	;# 
  2341  1FE8                     	;# 
  2342  1FE9                     	;# 
  2343  1FEA                     	;# 
  2344  1FEB                     	;# 
  2345  1FED                     	;# 
  2346  1FEE                     	;# 
  2347  1FEF                     	;# 
  2348  0000                     	;# 
  2349  0001                     	;# 
  2350  0002                     	;# 
  2351  0003                     	;# 
  2352  0004                     	;# 
  2353  0005                     	;# 
  2354  0006                     	;# 
  2355  0007                     	;# 
  2356  0008                     	;# 
  2357  0009                     	;# 
  2358  000A                     	;# 
  2359  000B                     	;# 
  2360  000C                     	;# 
  2361  000E                     	;# 
  2362  0012                     	;# 
  2363  0014                     	;# 
  2364  0018                     	;# 
  2365  001A                     	;# 
  2366  008C                     	;# 
  2367  008C                     	;# 
  2368  008D                     	;# 
  2369  008E                     	;# 
  2370  008E                     	;# 
  2371  008F                     	;# 
  2372  0090                     	;# 
  2373  0090                     	;# 
  2374  0091                     	;# 
  2375  0092                     	;# 
  2376  0092                     	;# 
  2377  0093                     	;# 
  2378  0094                     	;# 
  2379  0094                     	;# 
  2380  0095                     	;# 
  2381  0096                     	;# 
  2382  0096                     	;# 
  2383  0097                     	;# 
  2384  0098                     	;# 
  2385  0099                     	;# 
  2386  009A                     	;# 
  2387  009B                     	;# 
  2388  009B                     	;# 
  2389  009C                     	;# 
  2390  009D                     	;# 
  2391  009D                     	;# 
  2392  009E                     	;# 
  2393  009F                     	;# 
  2394  010C                     	;# 
  2395  010C                     	;# 
  2396  010D                     	;# 
  2397  010E                     	;# 
  2398  010F                     	;# 
  2399  010F                     	;# 
  2400  0110                     	;# 
  2401  0111                     	;# 
  2402  0112                     	;# 
  2403  0113                     	;# 
  2404  0114                     	;# 
  2405  0115                     	;# 
  2406  0116                     	;# 
  2407  0117                     	;# 
  2408  0118                     	;# 
  2409  0119                     	;# 
  2410  0119                     	;# 
  2411  0119                     	;# 
  2412  011A                     	;# 
  2413  011A                     	;# 
  2414  011A                     	;# 
  2415  011B                     	;# 
  2416  011B                     	;# 
  2417  011B                     	;# 
  2418  011B                     	;# 
  2419  011B                     	;# 
  2420  011C                     	;# 
  2421  011C                     	;# 
  2422  011C                     	;# 
  2423  011D                     	;# 
  2424  011D                     	;# 
  2425  011D                     	;# 
  2426  011E                     	;# 
  2427  011E                     	;# 
  2428  011E                     	;# 
  2429  011F                     	;# 
  2430  011F                     	;# 
  2431  011F                     	;# 
  2432  011F                     	;# 
  2433  011F                     	;# 
  2434  018C                     	;# 
  2435  018D                     	;# 
  2436  018E                     	;# 
  2437  018F                     	;# 
  2438  0190                     	;# 
  2439  0191                     	;# 
  2440  0192                     	;# 
  2441  0196                     	;# 
  2442  0197                     	;# 
  2443  0198                     	;# 
  2444  0199                     	;# 
  2445  019A                     	;# 
  2446  019B                     	;# 
  2447  019C                     	;# 
  2448  020C                     	;# 
  2449  020D                     	;# 
  2450  020E                     	;# 
  2451  020E                     	;# 
  2452  020F                     	;# 
  2453  020F                     	;# 
  2454  0210                     	;# 
  2455  0210                     	;# 
  2456  0211                     	;# 
  2457  0211                     	;# 
  2458  0212                     	;# 
  2459  0213                     	;# 
  2460  0214                     	;# 
  2461  0214                     	;# 
  2462  0215                     	;# 
  2463  0215                     	;# 
  2464  0216                     	;# 
  2465  0216                     	;# 
  2466  0217                     	;# 
  2467  0217                     	;# 
  2468  0218                     	;# 
  2469  0219                     	;# 
  2470  021A                     	;# 
  2471  021A                     	;# 
  2472  021B                     	;# 
  2473  021B                     	;# 
  2474  021C                     	;# 
  2475  021C                     	;# 
  2476  021D                     	;# 
  2477  021D                     	;# 
  2478  021E                     	;# 
  2479  021F                     	;# 
  2480  028C                     	;# 
  2481  028C                     	;# 
  2482  028D                     	;# 
  2483  028D                     	;# 
  2484  028E                     	;# 
  2485  028F                     	;# 
  2486  0290                     	;# 
  2487  0291                     	;# 
  2488  0292                     	;# 
  2489  0292                     	;# 
  2490  0293                     	;# 
  2491  0293                     	;# 
  2492  0294                     	;# 
  2493  0295                     	;# 
  2494  0296                     	;# 
  2495  0297                     	;# 
  2496  0298                     	;# 
  2497  0298                     	;# 
  2498  0299                     	;# 
  2499  0299                     	;# 
  2500  029A                     	;# 
  2501  029B                     	;# 
  2502  029C                     	;# 
  2503  029D                     	;# 
  2504  029F                     	;# 
  2505  030C                     	;# 
  2506  030C                     	;# 
  2507  030D                     	;# 
  2508  030E                     	;# 
  2509  030F                     	;# 
  2510  0310                     	;# 
  2511  0310                     	;# 
  2512  0311                     	;# 
  2513  0312                     	;# 
  2514  0313                     	;# 
  2515  0314                     	;# 
  2516  0314                     	;# 
  2517  0315                     	;# 
  2518  0316                     	;# 
  2519  0317                     	;# 
  2520  0318                     	;# 
  2521  0318                     	;# 
  2522  0319                     	;# 
  2523  031A                     	;# 
  2524  031B                     	;# 
  2525  038C                     	;# 
  2526  038C                     	;# 
  2527  038D                     	;# 
  2528  038E                     	;# 
  2529  0390                     	;# 
  2530  0390                     	;# 
  2531  0391                     	;# 
  2532  0392                     	;# 
  2533  048C                     	;# 
  2534  048C                     	;# 
  2535  048D                     	;# 
  2536  048E                     	;# 
  2537  048F                     	;# 
  2538  048F                     	;# 
  2539  0490                     	;# 
  2540  0491                     	;# 
  2541  0492                     	;# 
  2542  0492                     	;# 
  2543  0493                     	;# 
  2544  0494                     	;# 
  2545  0495                     	;# 
  2546  0495                     	;# 
  2547  0496                     	;# 
  2548  0497                     	;# 
  2549  0498                     	;# 
  2550  0499                     	;# 
  2551  049A                     	;# 
  2552  049B                     	;# 
  2553  049C                     	;# 
  2554  049D                     	;# 
  2555  058C                     	;# 
  2556  058C                     	;# 
  2557  058D                     	;# 
  2558  058E                     	;# 
  2559  058F                     	;# 
  2560  058F                     	;# 
  2561  0590                     	;# 
  2562  0591                     	;# 
  2563  0592                     	;# 
  2564  0593                     	;# 
  2565  059C                     	;# 
  2566  059C                     	;# 
  2567  059D                     	;# 
  2568  059D                     	;# 
  2569  059E                     	;# 
  2570  059F                     	;# 
  2571  060C                     	;# 
  2572  060C                     	;# 
  2573  060D                     	;# 
  2574  060D                     	;# 
  2575  060E                     	;# 
  2576  060F                     	;# 
  2577  0610                     	;# 
  2578  0611                     	;# 
  2579  0612                     	;# 
  2580  0613                     	;# 
  2581  0614                     	;# 
  2582  0616                     	;# 
  2583  0616                     	;# 
  2584  0617                     	;# 
  2585  0617                     	;# 
  2586  0618                     	;# 
  2587  0619                     	;# 
  2588  061A                     	;# 
  2589  061B                     	;# 
  2590  061C                     	;# 
  2591  061D                     	;# 
  2592  061E                     	;# 
  2593  070C                     	;# 
  2594  070D                     	;# 
  2595  070E                     	;# 
  2596  070F                     	;# 
  2597  0710                     	;# 
  2598  0711                     	;# 
  2599  0712                     	;# 
  2600  0713                     	;# 
  2601  0714                     	;# 
  2602  0716                     	;# 
  2603  0717                     	;# 
  2604  0718                     	;# 
  2605  0719                     	;# 
  2606  071A                     	;# 
  2607  071B                     	;# 
  2608  071C                     	;# 
  2609  071D                     	;# 
  2610  071E                     	;# 
  2611  0796                     	;# 
  2612  0797                     	;# 
  2613  0798                     	;# 
  2614  0799                     	;# 
  2615  079A                     	;# 
  2616  079B                     	;# 
  2617  079C                     	;# 
  2618  079D                     	;# 
  2619  080C                     	;# 
  2620  080D                     	;# 
  2621  080E                     	;# 
  2622  080F                     	;# 
  2623  0810                     	;# 
  2624  0811                     	;# 
  2625  0812                     	;# 
  2626  0813                     	;# 
  2627  0814                     	;# 
  2628  081A                     	;# 
  2629  081A                     	;# 
  2630  081B                     	;# 
  2631  081C                     	;# 
  2632  081C                     	;# 
  2633  081D                     	;# 
  2634  081E                     	;# 
  2635  081F                     	;# 
  2636  088C                     	;# 
  2637  088D                     	;# 
  2638  088E                     	;# 
  2639  088F                     	;# 
  2640  0890                     	;# 
  2641  0891                     	;# 
  2642  0892                     	;# 
  2643  0893                     	;# 
  2644  0895                     	;# 
  2645  0896                     	;# 
  2646  0897                     	;# 
  2647  0898                     	;# 
  2648  0899                     	;# 
  2649  089A                     	;# 
  2650  089B                     	;# 
  2651  090C                     	;# 
  2652  090E                     	;# 
  2653  090F                     	;# 
  2654  091F                     	;# 
  2655  098F                     	;# 
  2656  098F                     	;# 
  2657  0990                     	;# 
  2658  0991                     	;# 
  2659  0992                     	;# 
  2660  0993                     	;# 
  2661  0994                     	;# 
  2662  0995                     	;# 
  2663  0996                     	;# 
  2664  0997                     	;# 
  2665  1E0F                     	;# 
  2666  1E10                     	;# 
  2667  1E11                     	;# 
  2668  1E12                     	;# 
  2669  1E13                     	;# 
  2670  1E14                     	;# 
  2671  1E15                     	;# 
  2672  1E16                     	;# 
  2673  1E17                     	;# 
  2674  1E18                     	;# 
  2675  1E19                     	;# 
  2676  1E1A                     	;# 
  2677  1E1B                     	;# 
  2678  1E1C                     	;# 
  2679  1E1D                     	;# 
  2680  1E1E                     	;# 
  2681  1E1F                     	;# 
  2682  1E20                     	;# 
  2683  1E21                     	;# 
  2684  1E22                     	;# 
  2685  1E23                     	;# 
  2686  1E24                     	;# 
  2687  1E25                     	;# 
  2688  1E26                     	;# 
  2689  1E27                     	;# 
  2690  1E28                     	;# 
  2691  1E29                     	;# 
  2692  1E2A                     	;# 
  2693  1E2B                     	;# 
  2694  1E2C                     	;# 
  2695  1E2D                     	;# 
  2696  1E2E                     	;# 
  2697  1E2F                     	;# 
  2698  1E30                     	;# 
  2699  1E31                     	;# 
  2700  1E32                     	;# 
  2701  1E33                     	;# 
  2702  1E34                     	;# 
  2703  1E35                     	;# 
  2704  1E36                     	;# 
  2705  1E37                     	;# 
  2706  1E8F                     	;# 
  2707  1E90                     	;# 
  2708  1E91                     	;# 
  2709  1E92                     	;# 
  2710  1E93                     	;# 
  2711  1E94                     	;# 
  2712  1E95                     	;# 
  2713  1E96                     	;# 
  2714  1E97                     	;# 
  2715  1E9C                     	;# 
  2716  1E9D                     	;# 
  2717  1E9E                     	;# 
  2718  1EA1                     	;# 
  2719  1EA2                     	;# 
  2720  1EA3                     	;# 
  2721  1EA4                     	;# 
  2722  1EA9                     	;# 
  2723  1EAA                     	;# 
  2724  1EB1                     	;# 
  2725  1EB2                     	;# 
  2726  1EB8                     	;# 
  2727  1EB9                     	;# 
  2728  1EBA                     	;# 
  2729  1EBB                     	;# 
  2730  1EBC                     	;# 
  2731  1EBD                     	;# 
  2732  1EBE                     	;# 
  2733  1EC3                     	;# 
  2734  1EC5                     	;# 
  2735  1EC6                     	;# 
  2736  1EC7                     	;# 
  2737  1EC8                     	;# 
  2738  1EC9                     	;# 
  2739  1ECA                     	;# 
  2740  1ECB                     	;# 
  2741  1ECC                     	;# 
  2742  1F10                     	;# 
  2743  1F11                     	;# 
  2744  1F12                     	;# 
  2745  1F14                     	;# 
  2746  1F15                     	;# 
  2747  1F20                     	;# 
  2748  1F21                     	;# 
  2749  1F22                     	;# 
  2750  1F23                     	;# 
  2751  1F24                     	;# 
  2752  1F25                     	;# 
  2753  1F38                     	;# 
  2754  1F39                     	;# 
  2755  1F3A                     	;# 
  2756  1F3B                     	;# 
  2757  1F3C                     	;# 
  2758  1F3D                     	;# 
  2759  1F3E                     	;# 
  2760  1F3F                     	;# 
  2761  1F4E                     	;# 
  2762  1F4F                     	;# 
  2763  1F50                     	;# 
  2764  1F51                     	;# 
  2765  1F52                     	;# 
  2766  1F53                     	;# 
  2767  1F54                     	;# 
  2768  1F55                     	;# 
  2769  1FE4                     	;# 
  2770  1FE5                     	;# 
  2771  1FE6                     	;# 
  2772  1FE7                     	;# 
  2773  1FE8                     	;# 
  2774  1FE8                     	;# 
  2775  1FE9                     	;# 
  2776  1FEA                     	;# 
  2777  1FEB                     	;# 
  2778  1FED                     	;# 
  2779  1FEE                     	;# 
  2780  1FEF                     	;# 
  2781  0000                     	;# 
  2782  0001                     	;# 
  2783  0002                     	;# 
  2784  0003                     	;# 
  2785  0004                     	;# 
  2786  0005                     	;# 
  2787  0006                     	;# 
  2788  0007                     	;# 
  2789  0008                     	;# 
  2790  0009                     	;# 
  2791  000A                     	;# 
  2792  000B                     	;# 
  2793  000C                     	;# 
  2794  000E                     	;# 
  2795  0012                     	;# 
  2796  0014                     	;# 
  2797  0018                     	;# 
  2798  001A                     	;# 
  2799  008C                     	;# 
  2800  008C                     	;# 
  2801  008D                     	;# 
  2802  008E                     	;# 
  2803  008E                     	;# 
  2804  008F                     	;# 
  2805  0090                     	;# 
  2806  0090                     	;# 
  2807  0091                     	;# 
  2808  0092                     	;# 
  2809  0092                     	;# 
  2810  0093                     	;# 
  2811  0094                     	;# 
  2812  0094                     	;# 
  2813  0095                     	;# 
  2814  0096                     	;# 
  2815  0096                     	;# 
  2816  0097                     	;# 
  2817  0098                     	;# 
  2818  0099                     	;# 
  2819  009A                     	;# 
  2820  009B                     	;# 
  2821  009B                     	;# 
  2822  009C                     	;# 
  2823  009D                     	;# 
  2824  009D                     	;# 
  2825  009E                     	;# 
  2826  009F                     	;# 
  2827  010C                     	;# 
  2828  010C                     	;# 
  2829  010D                     	;# 
  2830  010E                     	;# 
  2831  010F                     	;# 
  2832  010F                     	;# 
  2833  0110                     	;# 
  2834  0111                     	;# 
  2835  0112                     	;# 
  2836  0113                     	;# 
  2837  0114                     	;# 
  2838  0115                     	;# 
  2839  0116                     	;# 
  2840  0117                     	;# 
  2841  0118                     	;# 
  2842  0119                     	;# 
  2843  0119                     	;# 
  2844  0119                     	;# 
  2845  011A                     	;# 
  2846  011A                     	;# 
  2847  011A                     	;# 
  2848  011B                     	;# 
  2849  011B                     	;# 
  2850  011B                     	;# 
  2851  011B                     	;# 
  2852  011B                     	;# 
  2853  011C                     	;# 
  2854  011C                     	;# 
  2855  011C                     	;# 
  2856  011D                     	;# 
  2857  011D                     	;# 
  2858  011D                     	;# 
  2859  011E                     	;# 
  2860  011E                     	;# 
  2861  011E                     	;# 
  2862  011F                     	;# 
  2863  011F                     	;# 
  2864  011F                     	;# 
  2865  011F                     	;# 
  2866  011F                     	;# 
  2867  018C                     	;# 
  2868  018D                     	;# 
  2869  018E                     	;# 
  2870  018F                     	;# 
  2871  0190                     	;# 
  2872  0191                     	;# 
  2873  0192                     	;# 
  2874  0196                     	;# 
  2875  0197                     	;# 
  2876  0198                     	;# 
  2877  0199                     	;# 
  2878  019A                     	;# 
  2879  019B                     	;# 
  2880  019C                     	;# 
  2881  020C                     	;# 
  2882  020D                     	;# 
  2883  020E                     	;# 
  2884  020E                     	;# 
  2885  020F                     	;# 
  2886  020F                     	;# 
  2887  0210                     	;# 
  2888  0210                     	;# 
  2889  0211                     	;# 
  2890  0211                     	;# 
  2891  0212                     	;# 
  2892  0213                     	;# 
  2893  0214                     	;# 
  2894  0214                     	;# 
  2895  0215                     	;# 
  2896  0215                     	;# 
  2897  0216                     	;# 
  2898  0216                     	;# 
  2899  0217                     	;# 
  2900  0217                     	;# 
  2901  0218                     	;# 
  2902  0219                     	;# 
  2903  021A                     	;# 
  2904  021A                     	;# 
  2905  021B                     	;# 
  2906  021B                     	;# 
  2907  021C                     	;# 
  2908  021C                     	;# 
  2909  021D                     	;# 
  2910  021D                     	;# 
  2911  021E                     	;# 
  2912  021F                     	;# 
  2913  028C                     	;# 
  2914  028C                     	;# 
  2915  028D                     	;# 
  2916  028D                     	;# 
  2917  028E                     	;# 
  2918  028F                     	;# 
  2919  0290                     	;# 
  2920  0291                     	;# 
  2921  0292                     	;# 
  2922  0292                     	;# 
  2923  0293                     	;# 
  2924  0293                     	;# 
  2925  0294                     	;# 
  2926  0295                     	;# 
  2927  0296                     	;# 
  2928  0297                     	;# 
  2929  0298                     	;# 
  2930  0298                     	;# 
  2931  0299                     	;# 
  2932  0299                     	;# 
  2933  029A                     	;# 
  2934  029B                     	;# 
  2935  029C                     	;# 
  2936  029D                     	;# 
  2937  029F                     	;# 
  2938  030C                     	;# 
  2939  030C                     	;# 
  2940  030D                     	;# 
  2941  030E                     	;# 
  2942  030F                     	;# 
  2943  0310                     	;# 
  2944  0310                     	;# 
  2945  0311                     	;# 
  2946  0312                     	;# 
  2947  0313                     	;# 
  2948  0314                     	;# 
  2949  0314                     	;# 
  2950  0315                     	;# 
  2951  0316                     	;# 
  2952  0317                     	;# 
  2953  0318                     	;# 
  2954  0318                     	;# 
  2955  0319                     	;# 
  2956  031A                     	;# 
  2957  031B                     	;# 
  2958  038C                     	;# 
  2959  038C                     	;# 
  2960  038D                     	;# 
  2961  038E                     	;# 
  2962  0390                     	;# 
  2963  0390                     	;# 
  2964  0391                     	;# 
  2965  0392                     	;# 
  2966  048C                     	;# 
  2967  048C                     	;# 
  2968  048D                     	;# 
  2969  048E                     	;# 
  2970  048F                     	;# 
  2971  048F                     	;# 
  2972  0490                     	;# 
  2973  0491                     	;# 
  2974  0492                     	;# 
  2975  0492                     	;# 
  2976  0493                     	;# 
  2977  0494                     	;# 
  2978  0495                     	;# 
  2979  0495                     	;# 
  2980  0496                     	;# 
  2981  0497                     	;# 
  2982  0498                     	;# 
  2983  0499                     	;# 
  2984  049A                     	;# 
  2985  049B                     	;# 
  2986  049C                     	;# 
  2987  049D                     	;# 
  2988  058C                     	;# 
  2989  058C                     	;# 
  2990  058D                     	;# 
  2991  058E                     	;# 
  2992  058F                     	;# 
  2993  058F                     	;# 
  2994  0590                     	;# 
  2995  0591                     	;# 
  2996  0592                     	;# 
  2997  0593                     	;# 
  2998  059C                     	;# 
  2999  059C                     	;# 
  3000  059D                     	;# 
  3001  059D                     	;# 
  3002  059E                     	;# 
  3003  059F                     	;# 
  3004  060C                     	;# 
  3005  060C                     	;# 
  3006  060D                     	;# 
  3007  060D                     	;# 
  3008  060E                     	;# 
  3009  060F                     	;# 
  3010  0610                     	;# 
  3011  0611                     	;# 
  3012  0612                     	;# 
  3013  0613                     	;# 
  3014  0614                     	;# 
  3015  0616                     	;# 
  3016  0616                     	;# 
  3017  0617                     	;# 
  3018  0617                     	;# 
  3019  0618                     	;# 
  3020  0619                     	;# 
  3021  061A                     	;# 
  3022  061B                     	;# 
  3023  061C                     	;# 
  3024  061D                     	;# 
  3025  061E                     	;# 
  3026  070C                     	;# 
  3027  070D                     	;# 
  3028  070E                     	;# 
  3029  070F                     	;# 
  3030  0710                     	;# 
  3031  0711                     	;# 
  3032  0712                     	;# 
  3033  0713                     	;# 
  3034  0714                     	;# 
  3035  0716                     	;# 
  3036  0717                     	;# 
  3037  0718                     	;# 
  3038  0719                     	;# 
  3039  071A                     	;# 
  3040  071B                     	;# 
  3041  071C                     	;# 
  3042  071D                     	;# 
  3043  071E                     	;# 
  3044  0796                     	;# 
  3045  0797                     	;# 
  3046  0798                     	;# 
  3047  0799                     	;# 
  3048  079A                     	;# 
  3049  079B                     	;# 
  3050  079C                     	;# 
  3051  079D                     	;# 
  3052  080C                     	;# 
  3053  080D                     	;# 
  3054  080E                     	;# 
  3055  080F                     	;# 
  3056  0810                     	;# 
  3057  0811                     	;# 
  3058  0812                     	;# 
  3059  0813                     	;# 
  3060  0814                     	;# 
  3061  081A                     	;# 
  3062  081A                     	;# 
  3063  081B                     	;# 
  3064  081C                     	;# 
  3065  081C                     	;# 
  3066  081D                     	;# 
  3067  081E                     	;# 
  3068  081F                     	;# 
  3069  088C                     	;# 
  3070  088D                     	;# 
  3071  088E                     	;# 
  3072  088F                     	;# 
  3073  0890                     	;# 
  3074  0891                     	;# 
  3075  0892                     	;# 
  3076  0893                     	;# 
  3077  0895                     	;# 
  3078  0896                     	;# 
  3079  0897                     	;# 
  3080  0898                     	;# 
  3081  0899                     	;# 
  3082  089A                     	;# 
  3083  089B                     	;# 
  3084  090C                     	;# 
  3085  090E                     	;# 
  3086  090F                     	;# 
  3087  091F                     	;# 
  3088  098F                     	;# 
  3089  098F                     	;# 
  3090  0990                     	;# 
  3091  0991                     	;# 
  3092  0992                     	;# 
  3093  0993                     	;# 
  3094  0994                     	;# 
  3095  0995                     	;# 
  3096  0996                     	;# 
  3097  0997                     	;# 
  3098  1E0F                     	;# 
  3099  1E10                     	;# 
  3100  1E11                     	;# 
  3101  1E12                     	;# 
  3102  1E13                     	;# 
  3103  1E14                     	;# 
  3104  1E15                     	;# 
  3105  1E16                     	;# 
  3106  1E17                     	;# 
  3107  1E18                     	;# 
  3108  1E19                     	;# 
  3109  1E1A                     	;# 
  3110  1E1B                     	;# 
  3111  1E1C                     	;# 
  3112  1E1D                     	;# 
  3113  1E1E                     	;# 
  3114  1E1F                     	;# 
  3115  1E20                     	;# 
  3116  1E21                     	;# 
  3117  1E22                     	;# 
  3118  1E23                     	;# 
  3119  1E24                     	;# 
  3120  1E25                     	;# 
  3121  1E26                     	;# 
  3122  1E27                     	;# 
  3123  1E28                     	;# 
  3124  1E29                     	;# 
  3125  1E2A                     	;# 
  3126  1E2B                     	;# 
  3127  1E2C                     	;# 
  3128  1E2D                     	;# 
  3129  1E2E                     	;# 
  3130  1E2F                     	;# 
  3131  1E30                     	;# 
  3132  1E31                     	;# 
  3133  1E32                     	;# 
  3134  1E33                     	;# 
  3135  1E34                     	;# 
  3136  1E35                     	;# 
  3137  1E36                     	;# 
  3138  1E37                     	;# 
  3139  1E8F                     	;# 
  3140  1E90                     	;# 
  3141  1E91                     	;# 
  3142  1E92                     	;# 
  3143  1E93                     	;# 
  3144  1E94                     	;# 
  3145  1E95                     	;# 
  3146  1E96                     	;# 
  3147  1E97                     	;# 
  3148  1E9C                     	;# 
  3149  1E9D                     	;# 
  3150  1E9E                     	;# 
  3151  1EA1                     	;# 
  3152  1EA2                     	;# 
  3153  1EA3                     	;# 
  3154  1EA4                     	;# 
  3155  1EA9                     	;# 
  3156  1EAA                     	;# 
  3157  1EB1                     	;# 
  3158  1EB2                     	;# 
  3159  1EB8                     	;# 
  3160  1EB9                     	;# 
  3161  1EBA                     	;# 
  3162  1EBB                     	;# 
  3163  1EBC                     	;# 
  3164  1EBD                     	;# 
  3165  1EBE                     	;# 
  3166  1EC3                     	;# 
  3167  1EC5                     	;# 
  3168  1EC6                     	;# 
  3169  1EC7                     	;# 
  3170  1EC8                     	;# 
  3171  1EC9                     	;# 
  3172  1ECA                     	;# 
  3173  1ECB                     	;# 
  3174  1ECC                     	;# 
  3175  1F10                     	;# 
  3176  1F11                     	;# 
  3177  1F12                     	;# 
  3178  1F14                     	;# 
  3179  1F15                     	;# 
  3180  1F20                     	;# 
  3181  1F21                     	;# 
  3182  1F22                     	;# 
  3183  1F23                     	;# 
  3184  1F24                     	;# 
  3185  1F25                     	;# 
  3186  1F38                     	;# 
  3187  1F39                     	;# 
  3188  1F3A                     	;# 
  3189  1F3B                     	;# 
  3190  1F3C                     	;# 
  3191  1F3D                     	;# 
  3192  1F3E                     	;# 
  3193  1F3F                     	;# 
  3194  1F4E                     	;# 
  3195  1F4F                     	;# 
  3196  1F50                     	;# 
  3197  1F51                     	;# 
  3198  1F52                     	;# 
  3199  1F53                     	;# 
  3200  1F54                     	;# 
  3201  1F55                     	;# 
  3202  1FE4                     	;# 
  3203  1FE5                     	;# 
  3204  1FE6                     	;# 
  3205  1FE7                     	;# 
  3206  1FE8                     	;# 
  3207  1FE8                     	;# 
  3208  1FE9                     	;# 
  3209  1FEA                     	;# 
  3210  1FEB                     	;# 
  3211  1FED                     	;# 
  3212  1FEE                     	;# 
  3213  1FEF                     	;# 
  3214  0000                     	;# 
  3215  0001                     	;# 
  3216  0002                     	;# 
  3217  0003                     	;# 
  3218  0004                     	;# 
  3219  0005                     	;# 
  3220  0006                     	;# 
  3221  0007                     	;# 
  3222  0008                     	;# 
  3223  0009                     	;# 
  3224  000A                     	;# 
  3225  000B                     	;# 
  3226  000C                     	;# 
  3227  000E                     	;# 
  3228  0012                     	;# 
  3229  0014                     	;# 
  3230  0018                     	;# 
  3231  001A                     	;# 
  3232  008C                     	;# 
  3233  008C                     	;# 
  3234  008D                     	;# 
  3235  008E                     	;# 
  3236  008E                     	;# 
  3237  008F                     	;# 
  3238  0090                     	;# 
  3239  0090                     	;# 
  3240  0091                     	;# 
  3241  0092                     	;# 
  3242  0092                     	;# 
  3243  0093                     	;# 
  3244  0094                     	;# 
  3245  0094                     	;# 
  3246  0095                     	;# 
  3247  0096                     	;# 
  3248  0096                     	;# 
  3249  0097                     	;# 
  3250  0098                     	;# 
  3251  0099                     	;# 
  3252  009A                     	;# 
  3253  009B                     	;# 
  3254  009B                     	;# 
  3255  009C                     	;# 
  3256  009D                     	;# 
  3257  009D                     	;# 
  3258  009E                     	;# 
  3259  009F                     	;# 
  3260  010C                     	;# 
  3261  010C                     	;# 
  3262  010D                     	;# 
  3263  010E                     	;# 
  3264  010F                     	;# 
  3265  010F                     	;# 
  3266  0110                     	;# 
  3267  0111                     	;# 
  3268  0112                     	;# 
  3269  0113                     	;# 
  3270  0114                     	;# 
  3271  0115                     	;# 
  3272  0116                     	;# 
  3273  0117                     	;# 
  3274  0118                     	;# 
  3275  0119                     	;# 
  3276  0119                     	;# 
  3277  0119                     	;# 
  3278  011A                     	;# 
  3279  011A                     	;# 
  3280  011A                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011B                     	;# 
  3286  011C                     	;# 
  3287  011C                     	;# 
  3288  011C                     	;# 
  3289  011D                     	;# 
  3290  011D                     	;# 
  3291  011D                     	;# 
  3292  011E                     	;# 
  3293  011E                     	;# 
  3294  011E                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  011F                     	;# 
  3300  018C                     	;# 
  3301  018D                     	;# 
  3302  018E                     	;# 
  3303  018F                     	;# 
  3304  0190                     	;# 
  3305  0191                     	;# 
  3306  0192                     	;# 
  3307  0196                     	;# 
  3308  0197                     	;# 
  3309  0198                     	;# 
  3310  0199                     	;# 
  3311  019A                     	;# 
  3312  019B                     	;# 
  3313  019C                     	;# 
  3314  020C                     	;# 
  3315  020D                     	;# 
  3316  020E                     	;# 
  3317  020E                     	;# 
  3318  020F                     	;# 
  3319  020F                     	;# 
  3320  0210                     	;# 
  3321  0210                     	;# 
  3322  0211                     	;# 
  3323  0211                     	;# 
  3324  0212                     	;# 
  3325  0213                     	;# 
  3326  0214                     	;# 
  3327  0214                     	;# 
  3328  0215                     	;# 
  3329  0215                     	;# 
  3330  0216                     	;# 
  3331  0216                     	;# 
  3332  0217                     	;# 
  3333  0217                     	;# 
  3334  0218                     	;# 
  3335  0219                     	;# 
  3336  021A                     	;# 
  3337  021A                     	;# 
  3338  021B                     	;# 
  3339  021B                     	;# 
  3340  021C                     	;# 
  3341  021C                     	;# 
  3342  021D                     	;# 
  3343  021D                     	;# 
  3344  021E                     	;# 
  3345  021F                     	;# 
  3346  028C                     	;# 
  3347  028C                     	;# 
  3348  028D                     	;# 
  3349  028D                     	;# 
  3350  028E                     	;# 
  3351  028F                     	;# 
  3352  0290                     	;# 
  3353  0291                     	;# 
  3354  0292                     	;# 
  3355  0292                     	;# 
  3356  0293                     	;# 
  3357  0293                     	;# 
  3358  0294                     	;# 
  3359  0295                     	;# 
  3360  0296                     	;# 
  3361  0297                     	;# 
  3362  0298                     	;# 
  3363  0298                     	;# 
  3364  0299                     	;# 
  3365  0299                     	;# 
  3366  029A                     	;# 
  3367  029B                     	;# 
  3368  029C                     	;# 
  3369  029D                     	;# 
  3370  029F                     	;# 
  3371  030C                     	;# 
  3372  030C                     	;# 
  3373  030D                     	;# 
  3374  030E                     	;# 
  3375  030F                     	;# 
  3376  0310                     	;# 
  3377  0310                     	;# 
  3378  0311                     	;# 
  3379  0312                     	;# 
  3380  0313                     	;# 
  3381  0314                     	;# 
  3382  0314                     	;# 
  3383  0315                     	;# 
  3384  0316                     	;# 
  3385  0317                     	;# 
  3386  0318                     	;# 
  3387  0318                     	;# 
  3388  0319                     	;# 
  3389  031A                     	;# 
  3390  031B                     	;# 
  3391  038C                     	;# 
  3392  038C                     	;# 
  3393  038D                     	;# 
  3394  038E                     	;# 
  3395  0390                     	;# 
  3396  0390                     	;# 
  3397  0391                     	;# 
  3398  0392                     	;# 
  3399  048C                     	;# 
  3400  048C                     	;# 
  3401  048D                     	;# 
  3402  048E                     	;# 
  3403  048F                     	;# 
  3404  048F                     	;# 
  3405  0490                     	;# 
  3406  0491                     	;# 
  3407  0492                     	;# 
  3408  0492                     	;# 
  3409  0493                     	;# 
  3410  0494                     	;# 
  3411  0495                     	;# 
  3412  0495                     	;# 
  3413  0496                     	;# 
  3414  0497                     	;# 
  3415  0498                     	;# 
  3416  0499                     	;# 
  3417  049A                     	;# 
  3418  049B                     	;# 
  3419  049C                     	;# 
  3420  049D                     	;# 
  3421  058C                     	;# 
  3422  058C                     	;# 
  3423  058D                     	;# 
  3424  058E                     	;# 
  3425  058F                     	;# 
  3426  058F                     	;# 
  3427  0590                     	;# 
  3428  0591                     	;# 
  3429  0592                     	;# 
  3430  0593                     	;# 
  3431  059C                     	;# 
  3432  059C                     	;# 
  3433  059D                     	;# 
  3434  059D                     	;# 
  3435  059E                     	;# 
  3436  059F                     	;# 
  3437  060C                     	;# 
  3438  060C                     	;# 
  3439  060D                     	;# 
  3440  060D                     	;# 
  3441  060E                     	;# 
  3442  060F                     	;# 
  3443  0610                     	;# 
  3444  0611                     	;# 
  3445  0612                     	;# 
  3446  0613                     	;# 
  3447  0614                     	;# 
  3448  0616                     	;# 
  3449  0616                     	;# 
  3450  0617                     	;# 
  3451  0617                     	;# 
  3452  0618                     	;# 
  3453  0619                     	;# 
  3454  061A                     	;# 
  3455  061B                     	;# 
  3456  061C                     	;# 
  3457  061D                     	;# 
  3458  061E                     	;# 
  3459  070C                     	;# 
  3460  070D                     	;# 
  3461  070E                     	;# 
  3462  070F                     	;# 
  3463  0710                     	;# 
  3464  0711                     	;# 
  3465  0712                     	;# 
  3466  0713                     	;# 
  3467  0714                     	;# 
  3468  0716                     	;# 
  3469  0717                     	;# 
  3470  0718                     	;# 
  3471  0719                     	;# 
  3472  071A                     	;# 
  3473  071B                     	;# 
  3474  071C                     	;# 
  3475  071D                     	;# 
  3476  071E                     	;# 
  3477  0796                     	;# 
  3478  0797                     	;# 
  3479  0798                     	;# 
  3480  0799                     	;# 
  3481  079A                     	;# 
  3482  079B                     	;# 
  3483  079C                     	;# 
  3484  079D                     	;# 
  3485  080C                     	;# 
  3486  080D                     	;# 
  3487  080E                     	;# 
  3488  080F                     	;# 
  3489  0810                     	;# 
  3490  0811                     	;# 
  3491  0812                     	;# 
  3492  0813                     	;# 
  3493  0814                     	;# 
  3494  081A                     	;# 
  3495  081A                     	;# 
  3496  081B                     	;# 
  3497  081C                     	;# 
  3498  081C                     	;# 
  3499  081D                     	;# 
  3500  081E                     	;# 
  3501  081F                     	;# 
  3502  088C                     	;# 
  3503  088D                     	;# 
  3504  088E                     	;# 
  3505  088F                     	;# 
  3506  0890                     	;# 
  3507  0891                     	;# 
  3508  0892                     	;# 
  3509  0893                     	;# 
  3510  0895                     	;# 
  3511  0896                     	;# 
  3512  0897                     	;# 
  3513  0898                     	;# 
  3514  0899                     	;# 
  3515  089A                     	;# 
  3516  089B                     	;# 
  3517  090C                     	;# 
  3518  090E                     	;# 
  3519  090F                     	;# 
  3520  091F                     	;# 
  3521  098F                     	;# 
  3522  098F                     	;# 
  3523  0990                     	;# 
  3524  0991                     	;# 
  3525  0992                     	;# 
  3526  0993                     	;# 
  3527  0994                     	;# 
  3528  0995                     	;# 
  3529  0996                     	;# 
  3530  0997                     	;# 
  3531  1E0F                     	;# 
  3532  1E10                     	;# 
  3533  1E11                     	;# 
  3534  1E12                     	;# 
  3535  1E13                     	;# 
  3536  1E14                     	;# 
  3537  1E15                     	;# 
  3538  1E16                     	;# 
  3539  1E17                     	;# 
  3540  1E18                     	;# 
  3541  1E19                     	;# 
  3542  1E1A                     	;# 
  3543  1E1B                     	;# 
  3544  1E1C                     	;# 
  3545  1E1D                     	;# 
  3546  1E1E                     	;# 
  3547  1E1F                     	;# 
  3548  1E20                     	;# 
  3549  1E21                     	;# 
  3550  1E22                     	;# 
  3551  1E23                     	;# 
  3552  1E24                     	;# 
  3553  1E25                     	;# 
  3554  1E26                     	;# 
  3555  1E27                     	;# 
  3556  1E28                     	;# 
  3557  1E29                     	;# 
  3558  1E2A                     	;# 
  3559  1E2B                     	;# 
  3560  1E2C                     	;# 
  3561  1E2D                     	;# 
  3562  1E2E                     	;# 
  3563  1E2F                     	;# 
  3564  1E30                     	;# 
  3565  1E31                     	;# 
  3566  1E32                     	;# 
  3567  1E33                     	;# 
  3568  1E34                     	;# 
  3569  1E35                     	;# 
  3570  1E36                     	;# 
  3571  1E37                     	;# 
  3572  1E8F                     	;# 
  3573  1E90                     	;# 
  3574  1E91                     	;# 
  3575  1E92                     	;# 
  3576  1E93                     	;# 
  3577  1E94                     	;# 
  3578  1E95                     	;# 
  3579  1E96                     	;# 
  3580  1E97                     	;# 
  3581  1E9C                     	;# 
  3582  1E9D                     	;# 
  3583  1E9E                     	;# 
  3584  1EA1                     	;# 
  3585  1EA2                     	;# 
  3586  1EA3                     	;# 
  3587  1EA4                     	;# 
  3588  1EA9                     	;# 
  3589  1EAA                     	;# 
  3590  1EB1                     	;# 
  3591  1EB2                     	;# 
  3592  1EB8                     	;# 
  3593  1EB9                     	;# 
  3594  1EBA                     	;# 
  3595  1EBB                     	;# 
  3596  1EBC                     	;# 
  3597  1EBD                     	;# 
  3598  1EBE                     	;# 
  3599  1EC3                     	;# 
  3600  1EC5                     	;# 
  3601  1EC6                     	;# 
  3602  1EC7                     	;# 
  3603  1EC8                     	;# 
  3604  1EC9                     	;# 
  3605  1ECA                     	;# 
  3606  1ECB                     	;# 
  3607  1ECC                     	;# 
  3608  1F10                     	;# 
  3609  1F11                     	;# 
  3610  1F12                     	;# 
  3611  1F14                     	;# 
  3612  1F15                     	;# 
  3613  1F20                     	;# 
  3614  1F21                     	;# 
  3615  1F22                     	;# 
  3616  1F23                     	;# 
  3617  1F24                     	;# 
  3618  1F25                     	;# 
  3619  1F38                     	;# 
  3620  1F39                     	;# 
  3621  1F3A                     	;# 
  3622  1F3B                     	;# 
  3623  1F3C                     	;# 
  3624  1F3D                     	;# 
  3625  1F3E                     	;# 
  3626  1F3F                     	;# 
  3627  1F4E                     	;# 
  3628  1F4F                     	;# 
  3629  1F50                     	;# 
  3630  1F51                     	;# 
  3631  1F52                     	;# 
  3632  1F53                     	;# 
  3633  1F54                     	;# 
  3634  1F55                     	;# 
  3635  1FE4                     	;# 
  3636  1FE5                     	;# 
  3637  1FE6                     	;# 
  3638  1FE7                     	;# 
  3639  1FE8                     	;# 
  3640  1FE8                     	;# 
  3641  1FE9                     	;# 
  3642  1FEA                     	;# 
  3643  1FEB                     	;# 
  3644  1FED                     	;# 
  3645  1FEE                     	;# 
  3646  1FEF                     	;# 
  3647  0000                     	;# 
  3648  0001                     	;# 
  3649  0002                     	;# 
  3650  0003                     	;# 
  3651  0004                     	;# 
  3652  0005                     	;# 
  3653  0006                     	;# 
  3654  0007                     	;# 
  3655  0008                     	;# 
  3656  0009                     	;# 
  3657  000A                     	;# 
  3658  000B                     	;# 
  3659  000C                     	;# 
  3660  000E                     	;# 
  3661  0012                     	;# 
  3662  0014                     	;# 
  3663  0018                     	;# 
  3664  001A                     	;# 
  3665  008C                     	;# 
  3666  008C                     	;# 
  3667  008D                     	;# 
  3668  008E                     	;# 
  3669  008E                     	;# 
  3670  008F                     	;# 
  3671  0090                     	;# 
  3672  0090                     	;# 
  3673  0091                     	;# 
  3674  0092                     	;# 
  3675  0092                     	;# 
  3676  0093                     	;# 
  3677  0094                     	;# 
  3678  0094                     	;# 
  3679  0095                     	;# 
  3680  0096                     	;# 
  3681  0096                     	;# 
  3682  0097                     	;# 
  3683  0098                     	;# 
  3684  0099                     	;# 
  3685  009A                     	;# 
  3686  009B                     	;# 
  3687  009B                     	;# 
  3688  009C                     	;# 
  3689  009D                     	;# 
  3690  009D                     	;# 
  3691  009E                     	;# 
  3692  009F                     	;# 
  3693  010C                     	;# 
  3694  010C                     	;# 
  3695  010D                     	;# 
  3696  010E                     	;# 
  3697  010F                     	;# 
  3698  010F                     	;# 
  3699  0110                     	;# 
  3700  0111                     	;# 
  3701  0112                     	;# 
  3702  0113                     	;# 
  3703  0114                     	;# 
  3704  0115                     	;# 
  3705  0116                     	;# 
  3706  0117                     	;# 
  3707  0118                     	;# 
  3708  0119                     	;# 
  3709  0119                     	;# 
  3710  0119                     	;# 
  3711  011A                     	;# 
  3712  011A                     	;# 
  3713  011A                     	;# 
  3714  011B                     	;# 
  3715  011B                     	;# 
  3716  011B                     	;# 
  3717  011B                     	;# 
  3718  011B                     	;# 
  3719  011C                     	;# 
  3720  011C                     	;# 
  3721  011C                     	;# 
  3722  011D                     	;# 
  3723  011D                     	;# 
  3724  011D                     	;# 
  3725  011E                     	;# 
  3726  011E                     	;# 
  3727  011E                     	;# 
  3728  011F                     	;# 
  3729  011F                     	;# 
  3730  011F                     	;# 
  3731  011F                     	;# 
  3732  011F                     	;# 
  3733  018C                     	;# 
  3734  018D                     	;# 
  3735  018E                     	;# 
  3736  018F                     	;# 
  3737  0190                     	;# 
  3738  0191                     	;# 
  3739  0192                     	;# 
  3740  0196                     	;# 
  3741  0197                     	;# 
  3742  0198                     	;# 
  3743  0199                     	;# 
  3744  019A                     	;# 
  3745  019B                     	;# 
  3746  019C                     	;# 
  3747  020C                     	;# 
  3748  020D                     	;# 
  3749  020E                     	;# 
  3750  020E                     	;# 
  3751  020F                     	;# 
  3752  020F                     	;# 
  3753  0210                     	;# 
  3754  0210                     	;# 
  3755  0211                     	;# 
  3756  0211                     	;# 
  3757  0212                     	;# 
  3758  0213                     	;# 
  3759  0214                     	;# 
  3760  0214                     	;# 
  3761  0215                     	;# 
  3762  0215                     	;# 
  3763  0216                     	;# 
  3764  0216                     	;# 
  3765  0217                     	;# 
  3766  0217                     	;# 
  3767  0218                     	;# 
  3768  0219                     	;# 
  3769  021A                     	;# 
  3770  021A                     	;# 
  3771  021B                     	;# 
  3772  021B                     	;# 
  3773  021C                     	;# 
  3774  021C                     	;# 
  3775  021D                     	;# 
  3776  021D                     	;# 
  3777  021E                     	;# 
  3778  021F                     	;# 
  3779  028C                     	;# 
  3780  028C                     	;# 
  3781  028D                     	;# 
  3782  028D                     	;# 
  3783  028E                     	;# 
  3784  028F                     	;# 
  3785  0290                     	;# 
  3786  0291                     	;# 
  3787  0292                     	;# 
  3788  0292                     	;# 
  3789  0293                     	;# 
  3790  0293                     	;# 
  3791  0294                     	;# 
  3792  0295                     	;# 
  3793  0296                     	;# 
  3794  0297                     	;# 
  3795  0298                     	;# 
  3796  0298                     	;# 
  3797  0299                     	;# 
  3798  0299                     	;# 
  3799  029A                     	;# 
  3800  029B                     	;# 
  3801  029C                     	;# 
  3802  029D                     	;# 
  3803  029F                     	;# 
  3804  030C                     	;# 
  3805  030C                     	;# 
  3806  030D                     	;# 
  3807  030E                     	;# 
  3808  030F                     	;# 
  3809  0310                     	;# 
  3810  0310                     	;# 
  3811  0311                     	;# 
  3812  0312                     	;# 
  3813  0313                     	;# 
  3814  0314                     	;# 
  3815  0314                     	;# 
  3816  0315                     	;# 
  3817  0316                     	;# 
  3818  0317                     	;# 
  3819  0318                     	;# 
  3820  0318                     	;# 
  3821  0319                     	;# 
  3822  031A                     	;# 
  3823  031B                     	;# 
  3824  038C                     	;# 
  3825  038C                     	;# 
  3826  038D                     	;# 
  3827  038E                     	;# 
  3828  0390                     	;# 
  3829  0390                     	;# 
  3830  0391                     	;# 
  3831  0392                     	;# 
  3832  048C                     	;# 
  3833  048C                     	;# 
  3834  048D                     	;# 
  3835  048E                     	;# 
  3836  048F                     	;# 
  3837  048F                     	;# 
  3838  0490                     	;# 
  3839  0491                     	;# 
  3840  0492                     	;# 
  3841  0492                     	;# 
  3842  0493                     	;# 
  3843  0494                     	;# 
  3844  0495                     	;# 
  3845  0495                     	;# 
  3846  0496                     	;# 
  3847  0497                     	;# 
  3848  0498                     	;# 
  3849  0499                     	;# 
  3850  049A                     	;# 
  3851  049B                     	;# 
  3852  049C                     	;# 
  3853  049D                     	;# 
  3854  058C                     	;# 
  3855  058C                     	;# 
  3856  058D                     	;# 
  3857  058E                     	;# 
  3858  058F                     	;# 
  3859  058F                     	;# 
  3860  0590                     	;# 
  3861  0591                     	;# 
  3862  0592                     	;# 
  3863  0593                     	;# 
  3864  059C                     	;# 
  3865  059C                     	;# 
  3866  059D                     	;# 
  3867  059D                     	;# 
  3868  059E                     	;# 
  3869  059F                     	;# 
  3870  060C                     	;# 
  3871  060C                     	;# 
  3872  060D                     	;# 
  3873  060D                     	;# 
  3874  060E                     	;# 
  3875  060F                     	;# 
  3876  0610                     	;# 
  3877  0611                     	;# 
  3878  0612                     	;# 
  3879  0613                     	;# 
  3880  0614                     	;# 
  3881  0616                     	;# 
  3882  0616                     	;# 
  3883  0617                     	;# 
  3884  0617                     	;# 
  3885  0618                     	;# 
  3886  0619                     	;# 
  3887  061A                     	;# 
  3888  061B                     	;# 
  3889  061C                     	;# 
  3890  061D                     	;# 
  3891  061E                     	;# 
  3892  070C                     	;# 
  3893  070D                     	;# 
  3894  070E                     	;# 
  3895  070F                     	;# 
  3896  0710                     	;# 
  3897  0711                     	;# 
  3898  0712                     	;# 
  3899  0713                     	;# 
  3900  0714                     	;# 
  3901  0716                     	;# 
  3902  0717                     	;# 
  3903  0718                     	;# 
  3904  0719                     	;# 
  3905  071A                     	;# 
  3906  071B                     	;# 
  3907  071C                     	;# 
  3908  071D                     	;# 
  3909  071E                     	;# 
  3910  0796                     	;# 
  3911  0797                     	;# 
  3912  0798                     	;# 
  3913  0799                     	;# 
  3914  079A                     	;# 
  3915  079B                     	;# 
  3916  079C                     	;# 
  3917  079D                     	;# 
  3918  080C                     	;# 
  3919  080D                     	;# 
  3920  080E                     	;# 
  3921  080F                     	;# 
  3922  0810                     	;# 
  3923  0811                     	;# 
  3924  0812                     	;# 
  3925  0813                     	;# 
  3926  0814                     	;# 
  3927  081A                     	;# 
  3928  081A                     	;# 
  3929  081B                     	;# 
  3930  081C                     	;# 
  3931  081C                     	;# 
  3932  081D                     	;# 
  3933  081E                     	;# 
  3934  081F                     	;# 
  3935  088C                     	;# 
  3936  088D                     	;# 
  3937  088E                     	;# 
  3938  088F                     	;# 
  3939  0890                     	;# 
  3940  0891                     	;# 
  3941  0892                     	;# 
  3942  0893                     	;# 
  3943  0895                     	;# 
  3944  0896                     	;# 
  3945  0897                     	;# 
  3946  0898                     	;# 
  3947  0899                     	;# 
  3948  089A                     	;# 
  3949  089B                     	;# 
  3950  090C                     	;# 
  3951  090E                     	;# 
  3952  090F                     	;# 
  3953  091F                     	;# 
  3954  098F                     	;# 
  3955  098F                     	;# 
  3956  0990                     	;# 
  3957  0991                     	;# 
  3958  0992                     	;# 
  3959  0993                     	;# 
  3960  0994                     	;# 
  3961  0995                     	;# 
  3962  0996                     	;# 
  3963  0997                     	;# 
  3964  1E0F                     	;# 
  3965  1E10                     	;# 
  3966  1E11                     	;# 
  3967  1E12                     	;# 
  3968  1E13                     	;# 
  3969  1E14                     	;# 
  3970  1E15                     	;# 
  3971  1E16                     	;# 
  3972  1E17                     	;# 
  3973  1E18                     	;# 
  3974  1E19                     	;# 
  3975  1E1A                     	;# 
  3976  1E1B                     	;# 
  3977  1E1C                     	;# 
  3978  1E1D                     	;# 
  3979  1E1E                     	;# 
  3980  1E1F                     	;# 
  3981  1E20                     	;# 
  3982  1E21                     	;# 
  3983  1E22                     	;# 
  3984  1E23                     	;# 
  3985  1E24                     	;# 
  3986  1E25                     	;# 
  3987  1E26                     	;# 
  3988  1E27                     	;# 
  3989  1E28                     	;# 
  3990  1E29                     	;# 
  3991  1E2A                     	;# 
  3992  1E2B                     	;# 
  3993  1E2C                     	;# 
  3994  1E2D                     	;# 
  3995  1E2E                     	;# 
  3996  1E2F                     	;# 
  3997  1E30                     	;# 
  3998  1E31                     	;# 
  3999  1E32                     	;# 
  4000  1E33                     	;# 
  4001  1E34                     	;# 
  4002  1E35                     	;# 
  4003  1E36                     	;# 
  4004  1E37                     	;# 
  4005  1E8F                     	;# 
  4006  1E90                     	;# 
  4007  1E91                     	;# 
  4008  1E92                     	;# 
  4009  1E93                     	;# 
  4010  1E94                     	;# 
  4011  1E95                     	;# 
  4012  1E96                     	;# 
  4013  1E97                     	;# 
  4014  1E9C                     	;# 
  4015  1E9D                     	;# 
  4016  1E9E                     	;# 
  4017  1EA1                     	;# 
  4018  1EA2                     	;# 
  4019  1EA3                     	;# 
  4020  1EA4                     	;# 
  4021  1EA9                     	;# 
  4022  1EAA                     	;# 
  4023  1EB1                     	;# 
  4024  1EB2                     	;# 
  4025  1EB8                     	;# 
  4026  1EB9                     	;# 
  4027  1EBA                     	;# 
  4028  1EBB                     	;# 
  4029  1EBC                     	;# 
  4030  1EBD                     	;# 
  4031  1EBE                     	;# 
  4032  1EC3                     	;# 
  4033  1EC5                     	;# 
  4034  1EC6                     	;# 
  4035  1EC7                     	;# 
  4036  1EC8                     	;# 
  4037  1EC9                     	;# 
  4038  1ECA                     	;# 
  4039  1ECB                     	;# 
  4040  1ECC                     	;# 
  4041  1F10                     	;# 
  4042  1F11                     	;# 
  4043  1F12                     	;# 
  4044  1F14                     	;# 
  4045  1F15                     	;# 
  4046  1F20                     	;# 
  4047  1F21                     	;# 
  4048  1F22                     	;# 
  4049  1F23                     	;# 
  4050  1F24                     	;# 
  4051  1F25                     	;# 
  4052  1F38                     	;# 
  4053  1F39                     	;# 
  4054  1F3A                     	;# 
  4055  1F3B                     	;# 
  4056  1F3C                     	;# 
  4057  1F3D                     	;# 
  4058  1F3E                     	;# 
  4059  1F3F                     	;# 
  4060  1F4E                     	;# 
  4061  1F4F                     	;# 
  4062  1F50                     	;# 
  4063  1F51                     	;# 
  4064  1F52                     	;# 
  4065  1F53                     	;# 
  4066  1F54                     	;# 
  4067  1F55                     	;# 
  4068  1FE4                     	;# 
  4069  1FE5                     	;# 
  4070  1FE6                     	;# 
  4071  1FE7                     	;# 
  4072  1FE8                     	;# 
  4073  1FE8                     	;# 
  4074  1FE9                     	;# 
  4075  1FEA                     	;# 
  4076  1FEB                     	;# 
  4077  1FED                     	;# 
  4078  1FEE                     	;# 
  4079  1FEF                     	;# 
  4080  0000                     	;# 
  4081  0001                     	;# 
  4082  0002                     	;# 
  4083  0003                     	;# 
  4084  0004                     	;# 
  4085  0005                     	;# 
  4086  0006                     	;# 
  4087  0007                     	;# 
  4088  0008                     	;# 
  4089  0009                     	;# 
  4090  000A                     	;# 
  4091  000B                     	;# 
  4092  000C                     	;# 
  4093  000E                     	;# 
  4094  0012                     	;# 
  4095  0014                     	;# 
  4096  0018                     	;# 
  4097  001A                     	;# 
  4098  008C                     	;# 
  4099  008C                     	;# 
  4100  008D                     	;# 
  4101  008E                     	;# 
  4102  008E                     	;# 
  4103  008F                     	;# 
  4104  0090                     	;# 
  4105  0090                     	;# 
  4106  0091                     	;# 
  4107  0092                     	;# 
  4108  0092                     	;# 
  4109  0093                     	;# 
  4110  0094                     	;# 
  4111  0094                     	;# 
  4112  0095                     	;# 
  4113  0096                     	;# 
  4114  0096                     	;# 
  4115  0097                     	;# 
  4116  0098                     	;# 
  4117  0099                     	;# 
  4118  009A                     	;# 
  4119  009B                     	;# 
  4120  009B                     	;# 
  4121  009C                     	;# 
  4122  009D                     	;# 
  4123  009D                     	;# 
  4124  009E                     	;# 
  4125  009F                     	;# 
  4126  010C                     	;# 
  4127  010C                     	;# 
  4128  010D                     	;# 
  4129  010E                     	;# 
  4130  010F                     	;# 
  4131  010F                     	;# 
  4132  0110                     	;# 
  4133  0111                     	;# 
  4134  0112                     	;# 
  4135  0113                     	;# 
  4136  0114                     	;# 
  4137  0115                     	;# 
  4138  0116                     	;# 
  4139  0117                     	;# 
  4140  0118                     	;# 
  4141  0119                     	;# 
  4142  0119                     	;# 
  4143  0119                     	;# 
  4144  011A                     	;# 
  4145  011A                     	;# 
  4146  011A                     	;# 
  4147  011B                     	;# 
  4148  011B                     	;# 
  4149  011B                     	;# 
  4150  011B                     	;# 
  4151  011B                     	;# 
  4152  011C                     	;# 
  4153  011C                     	;# 
  4154  011C                     	;# 
  4155  011D                     	;# 
  4156  011D                     	;# 
  4157  011D                     	;# 
  4158  011E                     	;# 
  4159  011E                     	;# 
  4160  011E                     	;# 
  4161  011F                     	;# 
  4162  011F                     	;# 
  4163  011F                     	;# 
  4164  011F                     	;# 
  4165  011F                     	;# 
  4166  018C                     	;# 
  4167  018D                     	;# 
  4168  018E                     	;# 
  4169  018F                     	;# 
  4170  0190                     	;# 
  4171  0191                     	;# 
  4172  0192                     	;# 
  4173  0196                     	;# 
  4174  0197                     	;# 
  4175  0198                     	;# 
  4176  0199                     	;# 
  4177  019A                     	;# 
  4178  019B                     	;# 
  4179  019C                     	;# 
  4180  020C                     	;# 
  4181  020D                     	;# 
  4182  020E                     	;# 
  4183  020E                     	;# 
  4184  020F                     	;# 
  4185  020F                     	;# 
  4186  0210                     	;# 
  4187  0210                     	;# 
  4188  0211                     	;# 
  4189  0211                     	;# 
  4190  0212                     	;# 
  4191  0213                     	;# 
  4192  0214                     	;# 
  4193  0214                     	;# 
  4194  0215                     	;# 
  4195  0215                     	;# 
  4196  0216                     	;# 
  4197  0216                     	;# 
  4198  0217                     	;# 
  4199  0217                     	;# 
  4200  0218                     	;# 
  4201  0219                     	;# 
  4202  021A                     	;# 
  4203  021A                     	;# 
  4204  021B                     	;# 
  4205  021B                     	;# 
  4206  021C                     	;# 
  4207  021C                     	;# 
  4208  021D                     	;# 
  4209  021D                     	;# 
  4210  021E                     	;# 
  4211  021F                     	;# 
  4212  028C                     	;# 
  4213  028C                     	;# 
  4214  028D                     	;# 
  4215  028D                     	;# 
  4216  028E                     	;# 
  4217  028F                     	;# 
  4218  0290                     	;# 
  4219  0291                     	;# 
  4220  0292                     	;# 
  4221  0292                     	;# 
  4222  0293                     	;# 
  4223  0293                     	;# 
  4224  0294                     	;# 
  4225  0295                     	;# 
  4226  0296                     	;# 
  4227  0297                     	;# 
  4228  0298                     	;# 
  4229  0298                     	;# 
  4230  0299                     	;# 
  4231  0299                     	;# 
  4232  029A                     	;# 
  4233  029B                     	;# 
  4234  029C                     	;# 
  4235  029D                     	;# 
  4236  029F                     	;# 
  4237  030C                     	;# 
  4238  030C                     	;# 
  4239  030D                     	;# 
  4240  030E                     	;# 
  4241  030F                     	;# 
  4242  0310                     	;# 
  4243  0310                     	;# 
  4244  0311                     	;# 
  4245  0312                     	;# 
  4246  0313                     	;# 
  4247  0314                     	;# 
  4248  0314                     	;# 
  4249  0315                     	;# 
  4250  0316                     	;# 
  4251  0317                     	;# 
  4252  0318                     	;# 
  4253  0318                     	;# 
  4254  0319                     	;# 
  4255  031A                     	;# 
  4256  031B                     	;# 
  4257  038C                     	;# 
  4258  038C                     	;# 
  4259  038D                     	;# 
  4260  038E                     	;# 
  4261  0390                     	;# 
  4262  0390                     	;# 
  4263  0391                     	;# 
  4264  0392                     	;# 
  4265  048C                     	;# 
  4266  048C                     	;# 
  4267  048D                     	;# 
  4268  048E                     	;# 
  4269  048F                     	;# 
  4270  048F                     	;# 
  4271  0490                     	;# 
  4272  0491                     	;# 
  4273  0492                     	;# 
  4274  0492                     	;# 
  4275  0493                     	;# 
  4276  0494                     	;# 
  4277  0495                     	;# 
  4278  0495                     	;# 
  4279  0496                     	;# 
  4280  0497                     	;# 
  4281  0498                     	;# 
  4282  0499                     	;# 
  4283  049A                     	;# 
  4284  049B                     	;# 
  4285  049C                     	;# 
  4286  049D                     	;# 
  4287  058C                     	;# 
  4288  058C                     	;# 
  4289  058D                     	;# 
  4290  058E                     	;# 
  4291  058F                     	;# 
  4292  058F                     	;# 
  4293  0590                     	;# 
  4294  0591                     	;# 
  4295  0592                     	;# 
  4296  0593                     	;# 
  4297  059C                     	;# 
  4298  059C                     	;# 
  4299  059D                     	;# 
  4300  059D                     	;# 
  4301  059E                     	;# 
  4302  059F                     	;# 
  4303  060C                     	;# 
  4304  060C                     	;# 
  4305  060D                     	;# 
  4306  060D                     	;# 
  4307  060E                     	;# 
  4308  060F                     	;# 
  4309  0610                     	;# 
  4310  0611                     	;# 
  4311  0612                     	;# 
  4312  0613                     	;# 
  4313  0614                     	;# 
  4314  0616                     	;# 
  4315  0616                     	;# 
  4316  0617                     	;# 
  4317  0617                     	;# 
  4318  0618                     	;# 
  4319  0619                     	;# 
  4320  061A                     	;# 
  4321  061B                     	;# 
  4322  061C                     	;# 
  4323  061D                     	;# 
  4324  061E                     	;# 
  4325  070C                     	;# 
  4326  070D                     	;# 
  4327  070E                     	;# 
  4328  070F                     	;# 
  4329  0710                     	;# 
  4330  0711                     	;# 
  4331  0712                     	;# 
  4332  0713                     	;# 
  4333  0714                     	;# 
  4334  0716                     	;# 
  4335  0717                     	;# 
  4336  0718                     	;# 
  4337  0719                     	;# 
  4338  071A                     	;# 
  4339  071B                     	;# 
  4340  071C                     	;# 
  4341  071D                     	;# 
  4342  071E                     	;# 
  4343  0796                     	;# 
  4344  0797                     	;# 
  4345  0798                     	;# 
  4346  0799                     	;# 
  4347  079A                     	;# 
  4348  079B                     	;# 
  4349  079C                     	;# 
  4350  079D                     	;# 
  4351  080C                     	;# 
  4352  080D                     	;# 
  4353  080E                     	;# 
  4354  080F                     	;# 
  4355  0810                     	;# 
  4356  0811                     	;# 
  4357  0812                     	;# 
  4358  0813                     	;# 
  4359  0814                     	;# 
  4360  081A                     	;# 
  4361  081A                     	;# 
  4362  081B                     	;# 
  4363  081C                     	;# 
  4364  081C                     	;# 
  4365  081D                     	;# 
  4366  081E                     	;# 
  4367  081F                     	;# 
  4368  088C                     	;# 
  4369  088D                     	;# 
  4370  088E                     	;# 
  4371  088F                     	;# 
  4372  0890                     	;# 
  4373  0891                     	;# 
  4374  0892                     	;# 
  4375  0893                     	;# 
  4376  0895                     	;# 
  4377  0896                     	;# 
  4378  0897                     	;# 
  4379  0898                     	;# 
  4380  0899                     	;# 
  4381  089A                     	;# 
  4382  089B                     	;# 
  4383  090C                     	;# 
  4384  090E                     	;# 
  4385  090F                     	;# 
  4386  091F                     	;# 
  4387  098F                     	;# 
  4388  098F                     	;# 
  4389  0990                     	;# 
  4390  0991                     	;# 
  4391  0992                     	;# 
  4392  0993                     	;# 
  4393  0994                     	;# 
  4394  0995                     	;# 
  4395  0996                     	;# 
  4396  0997                     	;# 
  4397  1E0F                     	;# 
  4398  1E10                     	;# 
  4399  1E11                     	;# 
  4400  1E12                     	;# 
  4401  1E13                     	;# 
  4402  1E14                     	;# 
  4403  1E15                     	;# 
  4404  1E16                     	;# 
  4405  1E17                     	;# 
  4406  1E18                     	;# 
  4407  1E19                     	;# 
  4408  1E1A                     	;# 
  4409  1E1B                     	;# 
  4410  1E1C                     	;# 
  4411  1E1D                     	;# 
  4412  1E1E                     	;# 
  4413  1E1F                     	;# 
  4414  1E20                     	;# 
  4415  1E21                     	;# 
  4416  1E22                     	;# 
  4417  1E23                     	;# 
  4418  1E24                     	;# 
  4419  1E25                     	;# 
  4420  1E26                     	;# 
  4421  1E27                     	;# 
  4422  1E28                     	;# 
  4423  1E29                     	;# 
  4424  1E2A                     	;# 
  4425  1E2B                     	;# 
  4426  1E2C                     	;# 
  4427  1E2D                     	;# 
  4428  1E2E                     	;# 
  4429  1E2F                     	;# 
  4430  1E30                     	;# 
  4431  1E31                     	;# 
  4432  1E32                     	;# 
  4433  1E33                     	;# 
  4434  1E34                     	;# 
  4435  1E35                     	;# 
  4436  1E36                     	;# 
  4437  1E37                     	;# 
  4438  1E8F                     	;# 
  4439  1E90                     	;# 
  4440  1E91                     	;# 
  4441  1E92                     	;# 
  4442  1E93                     	;# 
  4443  1E94                     	;# 
  4444  1E95                     	;# 
  4445  1E96                     	;# 
  4446  1E97                     	;# 
  4447  1E9C                     	;# 
  4448  1E9D                     	;# 
  4449  1E9E                     	;# 
  4450  1EA1                     	;# 
  4451  1EA2                     	;# 
  4452  1EA3                     	;# 
  4453  1EA4                     	;# 
  4454  1EA9                     	;# 
  4455  1EAA                     	;# 
  4456  1EB1                     	;# 
  4457  1EB2                     	;# 
  4458  1EB8                     	;# 
  4459  1EB9                     	;# 
  4460  1EBA                     	;# 
  4461  1EBB                     	;# 
  4462  1EBC                     	;# 
  4463  1EBD                     	;# 
  4464  1EBE                     	;# 
  4465  1EC3                     	;# 
  4466  1EC5                     	;# 
  4467  1EC6                     	;# 
  4468  1EC7                     	;# 
  4469  1EC8                     	;# 
  4470  1EC9                     	;# 
  4471  1ECA                     	;# 
  4472  1ECB                     	;# 
  4473  1ECC                     	;# 
  4474  1F10                     	;# 
  4475  1F11                     	;# 
  4476  1F12                     	;# 
  4477  1F14                     	;# 
  4478  1F15                     	;# 
  4479  1F20                     	;# 
  4480  1F21                     	;# 
  4481  1F22                     	;# 
  4482  1F23                     	;# 
  4483  1F24                     	;# 
  4484  1F25                     	;# 
  4485  1F38                     	;# 
  4486  1F39                     	;# 
  4487  1F3A                     	;# 
  4488  1F3B                     	;# 
  4489  1F3C                     	;# 
  4490  1F3D                     	;# 
  4491  1F3E                     	;# 
  4492  1F3F                     	;# 
  4493  1F4E                     	;# 
  4494  1F4F                     	;# 
  4495  1F50                     	;# 
  4496  1F51                     	;# 
  4497  1F52                     	;# 
  4498  1F53                     	;# 
  4499  1F54                     	;# 
  4500  1F55                     	;# 
  4501  1FE4                     	;# 
  4502  1FE5                     	;# 
  4503  1FE6                     	;# 
  4504  1FE7                     	;# 
  4505  1FE8                     	;# 
  4506  1FE8                     	;# 
  4507  1FE9                     	;# 
  4508  1FEA                     	;# 
  4509  1FEB                     	;# 
  4510  1FED                     	;# 
  4511  1FEE                     	;# 
  4512  1FEF                     	;# 
  4513  0000                     	;# 
  4514  0001                     	;# 
  4515  0002                     	;# 
  4516  0003                     	;# 
  4517  0004                     	;# 
  4518  0005                     	;# 
  4519  0006                     	;# 
  4520  0007                     	;# 
  4521  0008                     	;# 
  4522  0009                     	;# 
  4523  000A                     	;# 
  4524  000B                     	;# 
  4525  000C                     	;# 
  4526  000E                     	;# 
  4527  0012                     	;# 
  4528  0014                     	;# 
  4529  0018                     	;# 
  4530  001A                     	;# 
  4531  008C                     	;# 
  4532  008C                     	;# 
  4533  008D                     	;# 
  4534  008E                     	;# 
  4535  008E                     	;# 
  4536  008F                     	;# 
  4537  0090                     	;# 
  4538  0090                     	;# 
  4539  0091                     	;# 
  4540  0092                     	;# 
  4541  0092                     	;# 
  4542  0093                     	;# 
  4543  0094                     	;# 
  4544  0094                     	;# 
  4545  0095                     	;# 
  4546  0096                     	;# 
  4547  0096                     	;# 
  4548  0097                     	;# 
  4549  0098                     	;# 
  4550  0099                     	;# 
  4551  009A                     	;# 
  4552  009B                     	;# 
  4553  009B                     	;# 
  4554  009C                     	;# 
  4555  009D                     	;# 
  4556  009D                     	;# 
  4557  009E                     	;# 
  4558  009F                     	;# 
  4559  010C                     	;# 
  4560  010C                     	;# 
  4561  010D                     	;# 
  4562  010E                     	;# 
  4563  010F                     	;# 
  4564  010F                     	;# 
  4565  0110                     	;# 
  4566  0111                     	;# 
  4567  0112                     	;# 
  4568  0113                     	;# 
  4569  0114                     	;# 
  4570  0115                     	;# 
  4571  0116                     	;# 
  4572  0117                     	;# 
  4573  0118                     	;# 
  4574  0119                     	;# 
  4575  0119                     	;# 
  4576  0119                     	;# 
  4577  011A                     	;# 
  4578  011A                     	;# 
  4579  011A                     	;# 
  4580  011B                     	;# 
  4581  011B                     	;# 
  4582  011B                     	;# 
  4583  011B                     	;# 
  4584  011B                     	;# 
  4585  011C                     	;# 
  4586  011C                     	;# 
  4587  011C                     	;# 
  4588  011D                     	;# 
  4589  011D                     	;# 
  4590  011D                     	;# 
  4591  011E                     	;# 
  4592  011E                     	;# 
  4593  011E                     	;# 
  4594  011F                     	;# 
  4595  011F                     	;# 
  4596  011F                     	;# 
  4597  011F                     	;# 
  4598  011F                     	;# 
  4599  018C                     	;# 
  4600  018D                     	;# 
  4601  018E                     	;# 
  4602  018F                     	;# 
  4603  0190                     	;# 
  4604  0191                     	;# 
  4605  0192                     	;# 
  4606  0196                     	;# 
  4607  0197                     	;# 
  4608  0198                     	;# 
  4609  0199                     	;# 
  4610  019A                     	;# 
  4611  019B                     	;# 
  4612  019C                     	;# 
  4613  020C                     	;# 
  4614  020D                     	;# 
  4615  020E                     	;# 
  4616  020E                     	;# 
  4617  020F                     	;# 
  4618  020F                     	;# 
  4619  0210                     	;# 
  4620  0210                     	;# 
  4621  0211                     	;# 
  4622  0211                     	;# 
  4623  0212                     	;# 
  4624  0213                     	;# 
  4625  0214                     	;# 
  4626  0214                     	;# 
  4627  0215                     	;# 
  4628  0215                     	;# 
  4629  0216                     	;# 
  4630  0216                     	;# 
  4631  0217                     	;# 
  4632  0217                     	;# 
  4633  0218                     	;# 
  4634  0219                     	;# 
  4635  021A                     	;# 
  4636  021A                     	;# 
  4637  021B                     	;# 
  4638  021B                     	;# 
  4639  021C                     	;# 
  4640  021C                     	;# 
  4641  021D                     	;# 
  4642  021D                     	;# 
  4643  021E                     	;# 
  4644  021F                     	;# 
  4645  028C                     	;# 
  4646  028C                     	;# 
  4647  028D                     	;# 
  4648  028D                     	;# 
  4649  028E                     	;# 
  4650  028F                     	;# 
  4651  0290                     	;# 
  4652  0291                     	;# 
  4653  0292                     	;# 
  4654  0292                     	;# 
  4655  0293                     	;# 
  4656  0293                     	;# 
  4657  0294                     	;# 
  4658  0295                     	;# 
  4659  0296                     	;# 
  4660  0297                     	;# 
  4661  0298                     	;# 
  4662  0298                     	;# 
  4663  0299                     	;# 
  4664  0299                     	;# 
  4665  029A                     	;# 
  4666  029B                     	;# 
  4667  029C                     	;# 
  4668  029D                     	;# 
  4669  029F                     	;# 
  4670  030C                     	;# 
  4671  030C                     	;# 
  4672  030D                     	;# 
  4673  030E                     	;# 
  4674  030F                     	;# 
  4675  0310                     	;# 
  4676  0310                     	;# 
  4677  0311                     	;# 
  4678  0312                     	;# 
  4679  0313                     	;# 
  4680  0314                     	;# 
  4681  0314                     	;# 
  4682  0315                     	;# 
  4683  0316                     	;# 
  4684  0317                     	;# 
  4685  0318                     	;# 
  4686  0318                     	;# 
  4687  0319                     	;# 
  4688  031A                     	;# 
  4689  031B                     	;# 
  4690  038C                     	;# 
  4691  038C                     	;# 
  4692  038D                     	;# 
  4693  038E                     	;# 
  4694  0390                     	;# 
  4695  0390                     	;# 
  4696  0391                     	;# 
  4697  0392                     	;# 
  4698  048C                     	;# 
  4699  048C                     	;# 
  4700  048D                     	;# 
  4701  048E                     	;# 
  4702  048F                     	;# 
  4703  048F                     	;# 
  4704  0490                     	;# 
  4705  0491                     	;# 
  4706  0492                     	;# 
  4707  0492                     	;# 
  4708  0493                     	;# 
  4709  0494                     	;# 
  4710  0495                     	;# 
  4711  0495                     	;# 
  4712  0496                     	;# 
  4713  0497                     	;# 
  4714  0498                     	;# 
  4715  0499                     	;# 
  4716  049A                     	;# 
  4717  049B                     	;# 
  4718  049C                     	;# 
  4719  049D                     	;# 
  4720  058C                     	;# 
  4721  058C                     	;# 
  4722  058D                     	;# 
  4723  058E                     	;# 
  4724  058F                     	;# 
  4725  058F                     	;# 
  4726  0590                     	;# 
  4727  0591                     	;# 
  4728  0592                     	;# 
  4729  0593                     	;# 
  4730  059C                     	;# 
  4731  059C                     	;# 
  4732  059D                     	;# 
  4733  059D                     	;# 
  4734  059E                     	;# 
  4735  059F                     	;# 
  4736  060C                     	;# 
  4737  060C                     	;# 
  4738  060D                     	;# 
  4739  060D                     	;# 
  4740  060E                     	;# 
  4741  060F                     	;# 
  4742  0610                     	;# 
  4743  0611                     	;# 
  4744  0612                     	;# 
  4745  0613                     	;# 
  4746  0614                     	;# 
  4747  0616                     	;# 
  4748  0616                     	;# 
  4749  0617                     	;# 
  4750  0617                     	;# 
  4751  0618                     	;# 
  4752  0619                     	;# 
  4753  061A                     	;# 
  4754  061B                     	;# 
  4755  061C                     	;# 
  4756  061D                     	;# 
  4757  061E                     	;# 
  4758  070C                     	;# 
  4759  070D                     	;# 
  4760  070E                     	;# 
  4761  070F                     	;# 
  4762  0710                     	;# 
  4763  0711                     	;# 
  4764  0712                     	;# 
  4765  0713                     	;# 
  4766  0714                     	;# 
  4767  0716                     	;# 
  4768  0717                     	;# 
  4769  0718                     	;# 
  4770  0719                     	;# 
  4771  071A                     	;# 
  4772  071B                     	;# 
  4773  071C                     	;# 
  4774  071D                     	;# 
  4775  071E                     	;# 
  4776  0796                     	;# 
  4777  0797                     	;# 
  4778  0798                     	;# 
  4779  0799                     	;# 
  4780  079A                     	;# 
  4781  079B                     	;# 
  4782  079C                     	;# 
  4783  079D                     	;# 
  4784  080C                     	;# 
  4785  080D                     	;# 
  4786  080E                     	;# 
  4787  080F                     	;# 
  4788  0810                     	;# 
  4789  0811                     	;# 
  4790  0812                     	;# 
  4791  0813                     	;# 
  4792  0814                     	;# 
  4793  081A                     	;# 
  4794  081A                     	;# 
  4795  081B                     	;# 
  4796  081C                     	;# 
  4797  081C                     	;# 
  4798  081D                     	;# 
  4799  081E                     	;# 
  4800  081F                     	;# 
  4801  088C                     	;# 
  4802  088D                     	;# 
  4803  088E                     	;# 
  4804  088F                     	;# 
  4805  0890                     	;# 
  4806  0891                     	;# 
  4807  0892                     	;# 
  4808  0893                     	;# 
  4809  0895                     	;# 
  4810  0896                     	;# 
  4811  0897                     	;# 
  4812  0898                     	;# 
  4813  0899                     	;# 
  4814  089A                     	;# 
  4815  089B                     	;# 
  4816  090C                     	;# 
  4817  090E                     	;# 
  4818  090F                     	;# 
  4819  091F                     	;# 
  4820  098F                     	;# 
  4821  098F                     	;# 
  4822  0990                     	;# 
  4823  0991                     	;# 
  4824  0992                     	;# 
  4825  0993                     	;# 
  4826  0994                     	;# 
  4827  0995                     	;# 
  4828  0996                     	;# 
  4829  0997                     	;# 
  4830  1E0F                     	;# 
  4831  1E10                     	;# 
  4832  1E11                     	;# 
  4833  1E12                     	;# 
  4834  1E13                     	;# 
  4835  1E14                     	;# 
  4836  1E15                     	;# 
  4837  1E16                     	;# 
  4838  1E17                     	;# 
  4839  1E18                     	;# 
  4840  1E19                     	;# 
  4841  1E1A                     	;# 
  4842  1E1B                     	;# 
  4843  1E1C                     	;# 
  4844  1E1D                     	;# 
  4845  1E1E                     	;# 
  4846  1E1F                     	;# 
  4847  1E20                     	;# 
  4848  1E21                     	;# 
  4849  1E22                     	;# 
  4850  1E23                     	;# 
  4851  1E24                     	;# 
  4852  1E25                     	;# 
  4853  1E26                     	;# 
  4854  1E27                     	;# 
  4855  1E28                     	;# 
  4856  1E29                     	;# 
  4857  1E2A                     	;# 
  4858  1E2B                     	;# 
  4859  1E2C                     	;# 
  4860  1E2D                     	;# 
  4861  1E2E                     	;# 
  4862  1E2F                     	;# 
  4863  1E30                     	;# 
  4864  1E31                     	;# 
  4865  1E32                     	;# 
  4866  1E33                     	;# 
  4867  1E34                     	;# 
  4868  1E35                     	;# 
  4869  1E36                     	;# 
  4870  1E37                     	;# 
  4871  1E8F                     	;# 
  4872  1E90                     	;# 
  4873  1E91                     	;# 
  4874  1E92                     	;# 
  4875  1E93                     	;# 
  4876  1E94                     	;# 
  4877  1E95                     	;# 
  4878  1E96                     	;# 
  4879  1E97                     	;# 
  4880  1E9C                     	;# 
  4881  1E9D                     	;# 
  4882  1E9E                     	;# 
  4883  1EA1                     	;# 
  4884  1EA2                     	;# 
  4885  1EA3                     	;# 
  4886  1EA4                     	;# 
  4887  1EA9                     	;# 
  4888  1EAA                     	;# 
  4889  1EB1                     	;# 
  4890  1EB2                     	;# 
  4891  1EB8                     	;# 
  4892  1EB9                     	;# 
  4893  1EBA                     	;# 
  4894  1EBB                     	;# 
  4895  1EBC                     	;# 
  4896  1EBD                     	;# 
  4897  1EBE                     	;# 
  4898  1EC3                     	;# 
  4899  1EC5                     	;# 
  4900  1EC6                     	;# 
  4901  1EC7                     	;# 
  4902  1EC8                     	;# 
  4903  1EC9                     	;# 
  4904  1ECA                     	;# 
  4905  1ECB                     	;# 
  4906  1ECC                     	;# 
  4907  1F10                     	;# 
  4908  1F11                     	;# 
  4909  1F12                     	;# 
  4910  1F14                     	;# 
  4911  1F15                     	;# 
  4912  1F20                     	;# 
  4913  1F21                     	;# 
  4914  1F22                     	;# 
  4915  1F23                     	;# 
  4916  1F24                     	;# 
  4917  1F25                     	;# 
  4918  1F38                     	;# 
  4919  1F39                     	;# 
  4920  1F3A                     	;# 
  4921  1F3B                     	;# 
  4922  1F3C                     	;# 
  4923  1F3D                     	;# 
  4924  1F3E                     	;# 
  4925  1F3F                     	;# 
  4926  1F4E                     	;# 
  4927  1F4F                     	;# 
  4928  1F50                     	;# 
  4929  1F51                     	;# 
  4930  1F52                     	;# 
  4931  1F53                     	;# 
  4932  1F54                     	;# 
  4933  1F55                     	;# 
  4934  1FE4                     	;# 
  4935  1FE5                     	;# 
  4936  1FE6                     	;# 
  4937  1FE7                     	;# 
  4938  1FE8                     	;# 
  4939  1FE8                     	;# 
  4940  1FE9                     	;# 
  4941  1FEA                     	;# 
  4942  1FEB                     	;# 
  4943  1FED                     	;# 
  4944  1FEE                     	;# 
  4945  1FEF                     	;# 
  4946  0000                     	;# 
  4947  0001                     	;# 
  4948  0002                     	;# 
  4949  0003                     	;# 
  4950  0004                     	;# 
  4951  0005                     	;# 
  4952  0006                     	;# 
  4953  0007                     	;# 
  4954  0008                     	;# 
  4955  0009                     	;# 
  4956  000A                     	;# 
  4957  000B                     	;# 
  4958  000C                     	;# 
  4959  000E                     	;# 
  4960  0012                     	;# 
  4961  0014                     	;# 
  4962  0018                     	;# 
  4963  001A                     	;# 
  4964  008C                     	;# 
  4965  008C                     	;# 
  4966  008D                     	;# 
  4967  008E                     	;# 
  4968  008E                     	;# 
  4969  008F                     	;# 
  4970  0090                     	;# 
  4971  0090                     	;# 
  4972  0091                     	;# 
  4973  0092                     	;# 
  4974  0092                     	;# 
  4975  0093                     	;# 
  4976  0094                     	;# 
  4977  0094                     	;# 
  4978  0095                     	;# 
  4979  0096                     	;# 
  4980  0096                     	;# 
  4981  0097                     	;# 
  4982  0098                     	;# 
  4983  0099                     	;# 
  4984  009A                     	;# 
  4985  009B                     	;# 
  4986  009B                     	;# 
  4987  009C                     	;# 
  4988  009D                     	;# 
  4989  009D                     	;# 
  4990  009E                     	;# 
  4991  009F                     	;# 
  4992  010C                     	;# 
  4993  010C                     	;# 
  4994  010D                     	;# 
  4995  010E                     	;# 
  4996  010F                     	;# 
  4997  010F                     	;# 
  4998  0110                     	;# 
  4999  0111                     	;# 
  5000  0112                     	;# 
  5001  0113                     	;# 
  5002  0114                     	;# 
  5003  0115                     	;# 
  5004  0116                     	;# 
  5005  0117                     	;# 
  5006  0118                     	;# 
  5007  0119                     	;# 
  5008  0119                     	;# 
  5009  0119                     	;# 
  5010  011A                     	;# 
  5011  011A                     	;# 
  5012  011A                     	;# 
  5013  011B                     	;# 
  5014  011B                     	;# 
  5015  011B                     	;# 
  5016  011B                     	;# 
  5017  011B                     	;# 
  5018  011C                     	;# 
  5019  011C                     	;# 
  5020  011C                     	;# 
  5021  011D                     	;# 
  5022  011D                     	;# 
  5023  011D                     	;# 
  5024  011E                     	;# 
  5025  011E                     	;# 
  5026  011E                     	;# 
  5027  011F                     	;# 
  5028  011F                     	;# 
  5029  011F                     	;# 
  5030  011F                     	;# 
  5031  011F                     	;# 
  5032  018C                     	;# 
  5033  018D                     	;# 
  5034  018E                     	;# 
  5035  018F                     	;# 
  5036  0190                     	;# 
  5037  0191                     	;# 
  5038  0192                     	;# 
  5039  0196                     	;# 
  5040  0197                     	;# 
  5041  0198                     	;# 
  5042  0199                     	;# 
  5043  019A                     	;# 
  5044  019B                     	;# 
  5045  019C                     	;# 
  5046  020C                     	;# 
  5047  020D                     	;# 
  5048  020E                     	;# 
  5049  020E                     	;# 
  5050  020F                     	;# 
  5051  020F                     	;# 
  5052  0210                     	;# 
  5053  0210                     	;# 
  5054  0211                     	;# 
  5055  0211                     	;# 
  5056  0212                     	;# 
  5057  0213                     	;# 
  5058  0214                     	;# 
  5059  0214                     	;# 
  5060  0215                     	;# 
  5061  0215                     	;# 
  5062  0216                     	;# 
  5063  0216                     	;# 
  5064  0217                     	;# 
  5065  0217                     	;# 
  5066  0218                     	;# 
  5067  0219                     	;# 
  5068  021A                     	;# 
  5069  021A                     	;# 
  5070  021B                     	;# 
  5071  021B                     	;# 
  5072  021C                     	;# 
  5073  021C                     	;# 
  5074  021D                     	;# 
  5075  021D                     	;# 
  5076  021E                     	;# 
  5077  021F                     	;# 
  5078  028C                     	;# 
  5079  028C                     	;# 
  5080  028D                     	;# 
  5081  028D                     	;# 
  5082  028E                     	;# 
  5083  028F                     	;# 
  5084  0290                     	;# 
  5085  0291                     	;# 
  5086  0292                     	;# 
  5087  0292                     	;# 
  5088  0293                     	;# 
  5089  0293                     	;# 
  5090  0294                     	;# 
  5091  0295                     	;# 
  5092  0296                     	;# 
  5093  0297                     	;# 
  5094  0298                     	;# 
  5095  0298                     	;# 
  5096  0299                     	;# 
  5097  0299                     	;# 
  5098  029A                     	;# 
  5099  029B                     	;# 
  5100  029C                     	;# 
  5101  029D                     	;# 
  5102  029F                     	;# 
  5103  030C                     	;# 
  5104  030C                     	;# 
  5105  030D                     	;# 
  5106  030E                     	;# 
  5107  030F                     	;# 
  5108  0310                     	;# 
  5109  0310                     	;# 
  5110  0311                     	;# 
  5111  0312                     	;# 
  5112  0313                     	;# 
  5113  0314                     	;# 
  5114  0314                     	;# 
  5115  0315                     	;# 
  5116  0316                     	;# 
  5117  0317                     	;# 
  5118  0318                     	;# 
  5119  0318                     	;# 
  5120  0319                     	;# 
  5121  031A                     	;# 
  5122  031B                     	;# 
  5123  038C                     	;# 
  5124  038C                     	;# 
  5125  038D                     	;# 
  5126  038E                     	;# 
  5127  0390                     	;# 
  5128  0390                     	;# 
  5129  0391                     	;# 
  5130  0392                     	;# 
  5131  048C                     	;# 
  5132  048C                     	;# 
  5133  048D                     	;# 
  5134  048E                     	;# 
  5135  048F                     	;# 
  5136  048F                     	;# 
  5137  0490                     	;# 
  5138  0491                     	;# 
  5139  0492                     	;# 
  5140  0492                     	;# 
  5141  0493                     	;# 
  5142  0494                     	;# 
  5143  0495                     	;# 
  5144  0495                     	;# 
  5145  0496                     	;# 
  5146  0497                     	;# 
  5147  0498                     	;# 
  5148  0499                     	;# 
  5149  049A                     	;# 
  5150  049B                     	;# 
  5151  049C                     	;# 
  5152  049D                     	;# 
  5153  058C                     	;# 
  5154  058C                     	;# 
  5155  058D                     	;# 
  5156  058E                     	;# 
  5157  058F                     	;# 
  5158  058F                     	;# 
  5159  0590                     	;# 
  5160  0591                     	;# 
  5161  0592                     	;# 
  5162  0593                     	;# 
  5163  059C                     	;# 
  5164  059C                     	;# 
  5165  059D                     	;# 
  5166  059D                     	;# 
  5167  059E                     	;# 
  5168  059F                     	;# 
  5169  060C                     	;# 
  5170  060C                     	;# 
  5171  060D                     	;# 
  5172  060D                     	;# 
  5173  060E                     	;# 
  5174  060F                     	;# 
  5175  0610                     	;# 
  5176  0611                     	;# 
  5177  0612                     	;# 
  5178  0613                     	;# 
  5179  0614                     	;# 
  5180  0616                     	;# 
  5181  0616                     	;# 
  5182  0617                     	;# 
  5183  0617                     	;# 
  5184  0618                     	;# 
  5185  0619                     	;# 
  5186  061A                     	;# 
  5187  061B                     	;# 
  5188  061C                     	;# 
  5189  061D                     	;# 
  5190  061E                     	;# 
  5191  070C                     	;# 
  5192  070D                     	;# 
  5193  070E                     	;# 
  5194  070F                     	;# 
  5195  0710                     	;# 
  5196  0711                     	;# 
  5197  0712                     	;# 
  5198  0713                     	;# 
  5199  0714                     	;# 
  5200  0716                     	;# 
  5201  0717                     	;# 
  5202  0718                     	;# 
  5203  0719                     	;# 
  5204  071A                     	;# 
  5205  071B                     	;# 
  5206  071C                     	;# 
  5207  071D                     	;# 
  5208  071E                     	;# 
  5209  0796                     	;# 
  5210  0797                     	;# 
  5211  0798                     	;# 
  5212  0799                     	;# 
  5213  079A                     	;# 
  5214  079B                     	;# 
  5215  079C                     	;# 
  5216  079D                     	;# 
  5217  080C                     	;# 
  5218  080D                     	;# 
  5219  080E                     	;# 
  5220  080F                     	;# 
  5221  0810                     	;# 
  5222  0811                     	;# 
  5223  0812                     	;# 
  5224  0813                     	;# 
  5225  0814                     	;# 
  5226  081A                     	;# 
  5227  081A                     	;# 
  5228  081B                     	;# 
  5229  081C                     	;# 
  5230  081C                     	;# 
  5231  081D                     	;# 
  5232  081E                     	;# 
  5233  081F                     	;# 
  5234  088C                     	;# 
  5235  088D                     	;# 
  5236  088E                     	;# 
  5237  088F                     	;# 
  5238  0890                     	;# 
  5239  0891                     	;# 
  5240  0892                     	;# 
  5241  0893                     	;# 
  5242  0895                     	;# 
  5243  0896                     	;# 
  5244  0897                     	;# 
  5245  0898                     	;# 
  5246  0899                     	;# 
  5247  089A                     	;# 
  5248  089B                     	;# 
  5249  090C                     	;# 
  5250  090E                     	;# 
  5251  090F                     	;# 
  5252  091F                     	;# 
  5253  098F                     	;# 
  5254  098F                     	;# 
  5255  0990                     	;# 
  5256  0991                     	;# 
  5257  0992                     	;# 
  5258  0993                     	;# 
  5259  0994                     	;# 
  5260  0995                     	;# 
  5261  0996                     	;# 
  5262  0997                     	;# 
  5263  1E0F                     	;# 
  5264  1E10                     	;# 
  5265  1E11                     	;# 
  5266  1E12                     	;# 
  5267  1E13                     	;# 
  5268  1E14                     	;# 
  5269  1E15                     	;# 
  5270  1E16                     	;# 
  5271  1E17                     	;# 
  5272  1E18                     	;# 
  5273  1E19                     	;# 
  5274  1E1A                     	;# 
  5275  1E1B                     	;# 
  5276  1E1C                     	;# 
  5277  1E1D                     	;# 
  5278  1E1E                     	;# 
  5279  1E1F                     	;# 
  5280  1E20                     	;# 
  5281  1E21                     	;# 
  5282  1E22                     	;# 
  5283  1E23                     	;# 
  5284  1E24                     	;# 
  5285  1E25                     	;# 
  5286  1E26                     	;# 
  5287  1E27                     	;# 
  5288  1E28                     	;# 
  5289  1E29                     	;# 
  5290  1E2A                     	;# 
  5291  1E2B                     	;# 
  5292  1E2C                     	;# 
  5293  1E2D                     	;# 
  5294  1E2E                     	;# 
  5295  1E2F                     	;# 
  5296  1E30                     	;# 
  5297  1E31                     	;# 
  5298  1E32                     	;# 
  5299  1E33                     	;# 
  5300  1E34                     	;# 
  5301  1E35                     	;# 
  5302  1E36                     	;# 
  5303  1E37                     	;# 
  5304  1E8F                     	;# 
  5305  1E90                     	;# 
  5306  1E91                     	;# 
  5307  1E92                     	;# 
  5308  1E93                     	;# 
  5309  1E94                     	;# 
  5310  1E95                     	;# 
  5311  1E96                     	;# 
  5312  1E97                     	;# 
  5313  1E9C                     	;# 
  5314  1E9D                     	;# 
  5315  1E9E                     	;# 
  5316  1EA1                     	;# 
  5317  1EA2                     	;# 
  5318  1EA3                     	;# 
  5319  1EA4                     	;# 
  5320  1EA9                     	;# 
  5321  1EAA                     	;# 
  5322  1EB1                     	;# 
  5323  1EB2                     	;# 
  5324  1EB8                     	;# 
  5325  1EB9                     	;# 
  5326  1EBA                     	;# 
  5327  1EBB                     	;# 
  5328  1EBC                     	;# 
  5329  1EBD                     	;# 
  5330  1EBE                     	;# 
  5331  1EC3                     	;# 
  5332  1EC5                     	;# 
  5333  1EC6                     	;# 
  5334  1EC7                     	;# 
  5335  1EC8                     	;# 
  5336  1EC9                     	;# 
  5337  1ECA                     	;# 
  5338  1ECB                     	;# 
  5339  1ECC                     	;# 
  5340  1F10                     	;# 
  5341  1F11                     	;# 
  5342  1F12                     	;# 
  5343  1F14                     	;# 
  5344  1F15                     	;# 
  5345  1F20                     	;# 
  5346  1F21                     	;# 
  5347  1F22                     	;# 
  5348  1F23                     	;# 
  5349  1F24                     	;# 
  5350  1F25                     	;# 
  5351  1F38                     	;# 
  5352  1F39                     	;# 
  5353  1F3A                     	;# 
  5354  1F3B                     	;# 
  5355  1F3C                     	;# 
  5356  1F3D                     	;# 
  5357  1F3E                     	;# 
  5358  1F3F                     	;# 
  5359  1F4E                     	;# 
  5360  1F4F                     	;# 
  5361  1F50                     	;# 
  5362  1F51                     	;# 
  5363  1F52                     	;# 
  5364  1F53                     	;# 
  5365  1F54                     	;# 
  5366  1F55                     	;# 
  5367  1FE4                     	;# 
  5368  1FE5                     	;# 
  5369  1FE6                     	;# 
  5370  1FE7                     	;# 
  5371  1FE8                     	;# 
  5372  1FE8                     	;# 
  5373  1FE9                     	;# 
  5374  1FEA                     	;# 
  5375  1FEB                     	;# 
  5376  1FED                     	;# 
  5377  1FEE                     	;# 
  5378  1FEF                     	;# 
  5379  0000                     	;# 
  5380  0001                     	;# 
  5381  0002                     	;# 
  5382  0003                     	;# 
  5383  0004                     	;# 
  5384  0005                     	;# 
  5385  0006                     	;# 
  5386  0007                     	;# 
  5387  0008                     	;# 
  5388  0009                     	;# 
  5389  000A                     	;# 
  5390  000B                     	;# 
  5391  000C                     	;# 
  5392  000E                     	;# 
  5393  0012                     	;# 
  5394  0014                     	;# 
  5395  0018                     	;# 
  5396  001A                     	;# 
  5397  008C                     	;# 
  5398  008C                     	;# 
  5399  008D                     	;# 
  5400  008E                     	;# 
  5401  008E                     	;# 
  5402  008F                     	;# 
  5403  0090                     	;# 
  5404  0090                     	;# 
  5405  0091                     	;# 
  5406  0092                     	;# 
  5407  0092                     	;# 
  5408  0093                     	;# 
  5409  0094                     	;# 
  5410  0094                     	;# 
  5411  0095                     	;# 
  5412  0096                     	;# 
  5413  0096                     	;# 
  5414  0097                     	;# 
  5415  0098                     	;# 
  5416  0099                     	;# 
  5417  009A                     	;# 
  5418  009B                     	;# 
  5419  009B                     	;# 
  5420  009C                     	;# 
  5421  009D                     	;# 
  5422  009D                     	;# 
  5423  009E                     	;# 
  5424  009F                     	;# 
  5425  010C                     	;# 
  5426  010C                     	;# 
  5427  010D                     	;# 
  5428  010E                     	;# 
  5429  010F                     	;# 
  5430  010F                     	;# 
  5431  0110                     	;# 
  5432  0111                     	;# 
  5433  0112                     	;# 
  5434  0113                     	;# 
  5435  0114                     	;# 
  5436  0115                     	;# 
  5437  0116                     	;# 
  5438  0117                     	;# 
  5439  0118                     	;# 
  5440  0119                     	;# 
  5441  0119                     	;# 
  5442  0119                     	;# 
  5443  011A                     	;# 
  5444  011A                     	;# 
  5445  011A                     	;# 
  5446  011B                     	;# 
  5447  011B                     	;# 
  5448  011B                     	;# 
  5449  011B                     	;# 
  5450  011B                     	;# 
  5451  011C                     	;# 
  5452  011C                     	;# 
  5453  011C                     	;# 
  5454  011D                     	;# 
  5455  011D                     	;# 
  5456  011D                     	;# 
  5457  011E                     	;# 
  5458  011E                     	;# 
  5459  011E                     	;# 
  5460  011F                     	;# 
  5461  011F                     	;# 
  5462  011F                     	;# 
  5463  011F                     	;# 
  5464  011F                     	;# 
  5465  018C                     	;# 
  5466  018D                     	;# 
  5467  018E                     	;# 
  5468  018F                     	;# 
  5469  0190                     	;# 
  5470  0191                     	;# 
  5471  0192                     	;# 
  5472  0196                     	;# 
  5473  0197                     	;# 
  5474  0198                     	;# 
  5475  0199                     	;# 
  5476  019A                     	;# 
  5477  019B                     	;# 
  5478  019C                     	;# 
  5479  020C                     	;# 
  5480  020D                     	;# 
  5481  020E                     	;# 
  5482  020E                     	;# 
  5483  020F                     	;# 
  5484  020F                     	;# 
  5485  0210                     	;# 
  5486  0210                     	;# 
  5487  0211                     	;# 
  5488  0211                     	;# 
  5489  0212                     	;# 
  5490  0213                     	;# 
  5491  0214                     	;# 
  5492  0214                     	;# 
  5493  0215                     	;# 
  5494  0215                     	;# 
  5495  0216                     	;# 
  5496  0216                     	;# 
  5497  0217                     	;# 
  5498  0217                     	;# 
  5499  0218                     	;# 
  5500  0219                     	;# 
  5501  021A                     	;# 
  5502  021A                     	;# 
  5503  021B                     	;# 
  5504  021B                     	;# 
  5505  021C                     	;# 
  5506  021C                     	;# 
  5507  021D                     	;# 
  5508  021D                     	;# 
  5509  021E                     	;# 
  5510  021F                     	;# 
  5511  028C                     	;# 
  5512  028C                     	;# 
  5513  028D                     	;# 
  5514  028D                     	;# 
  5515  028E                     	;# 
  5516  028F                     	;# 
  5517  0290                     	;# 
  5518  0291                     	;# 
  5519  0292                     	;# 
  5520  0292                     	;# 
  5521  0293                     	;# 
  5522  0293                     	;# 
  5523  0294                     	;# 
  5524  0295                     	;# 
  5525  0296                     	;# 
  5526  0297                     	;# 
  5527  0298                     	;# 
  5528  0298                     	;# 
  5529  0299                     	;# 
  5530  0299                     	;# 
  5531  029A                     	;# 
  5532  029B                     	;# 
  5533  029C                     	;# 
  5534  029D                     	;# 
  5535  029F                     	;# 
  5536  030C                     	;# 
  5537  030C                     	;# 
  5538  030D                     	;# 
  5539  030E                     	;# 
  5540  030F                     	;# 
  5541  0310                     	;# 
  5542  0310                     	;# 
  5543  0311                     	;# 
  5544  0312                     	;# 
  5545  0313                     	;# 
  5546  0314                     	;# 
  5547  0314                     	;# 
  5548  0315                     	;# 
  5549  0316                     	;# 
  5550  0317                     	;# 
  5551  0318                     	;# 
  5552  0318                     	;# 
  5553  0319                     	;# 
  5554  031A                     	;# 
  5555  031B                     	;# 
  5556  038C                     	;# 
  5557  038C                     	;# 
  5558  038D                     	;# 
  5559  038E                     	;# 
  5560  0390                     	;# 
  5561  0390                     	;# 
  5562  0391                     	;# 
  5563  0392                     	;# 
  5564  048C                     	;# 
  5565  048C                     	;# 
  5566  048D                     	;# 
  5567  048E                     	;# 
  5568  048F                     	;# 
  5569  048F                     	;# 
  5570  0490                     	;# 
  5571  0491                     	;# 
  5572  0492                     	;# 
  5573  0492                     	;# 
  5574  0493                     	;# 
  5575  0494                     	;# 
  5576  0495                     	;# 
  5577  0495                     	;# 
  5578  0496                     	;# 
  5579  0497                     	;# 
  5580  0498                     	;# 
  5581  0499                     	;# 
  5582  049A                     	;# 
  5583  049B                     	;# 
  5584  049C                     	;# 
  5585  049D                     	;# 
  5586  058C                     	;# 
  5587  058C                     	;# 
  5588  058D                     	;# 
  5589  058E                     	;# 
  5590  058F                     	;# 
  5591  058F                     	;# 
  5592  0590                     	;# 
  5593  0591                     	;# 
  5594  0592                     	;# 
  5595  0593                     	;# 
  5596  059C                     	;# 
  5597  059C                     	;# 
  5598  059D                     	;# 
  5599  059D                     	;# 
  5600  059E                     	;# 
  5601  059F                     	;# 
  5602  060C                     	;# 
  5603  060C                     	;# 
  5604  060D                     	;# 
  5605  060D                     	;# 
  5606  060E                     	;# 
  5607  060F                     	;# 
  5608  0610                     	;# 
  5609  0611                     	;# 
  5610  0612                     	;# 
  5611  0613                     	;# 
  5612  0614                     	;# 
  5613  0616                     	;# 
  5614  0616                     	;# 
  5615  0617                     	;# 
  5616  0617                     	;# 
  5617  0618                     	;# 
  5618  0619                     	;# 
  5619  061A                     	;# 
  5620  061B                     	;# 
  5621  061C                     	;# 
  5622  061D                     	;# 
  5623  061E                     	;# 
  5624  070C                     	;# 
  5625  070D                     	;# 
  5626  070E                     	;# 
  5627  070F                     	;# 
  5628  0710                     	;# 
  5629  0711                     	;# 
  5630  0712                     	;# 
  5631  0713                     	;# 
  5632  0714                     	;# 
  5633  0716                     	;# 
  5634  0717                     	;# 
  5635  0718                     	;# 
  5636  0719                     	;# 
  5637  071A                     	;# 
  5638  071B                     	;# 
  5639  071C                     	;# 
  5640  071D                     	;# 
  5641  071E                     	;# 
  5642  0796                     	;# 
  5643  0797                     	;# 
  5644  0798                     	;# 
  5645  0799                     	;# 
  5646  079A                     	;# 
  5647  079B                     	;# 
  5648  079C                     	;# 
  5649  079D                     	;# 
  5650  080C                     	;# 
  5651  080D                     	;# 
  5652  080E                     	;# 
  5653  080F                     	;# 
  5654  0810                     	;# 
  5655  0811                     	;# 
  5656  0812                     	;# 
  5657  0813                     	;# 
  5658  0814                     	;# 
  5659  081A                     	;# 
  5660  081A                     	;# 
  5661  081B                     	;# 
  5662  081C                     	;# 
  5663  081C                     	;# 
  5664  081D                     	;# 
  5665  081E                     	;# 
  5666  081F                     	;# 
  5667  088C                     	;# 
  5668  088D                     	;# 
  5669  088E                     	;# 
  5670  088F                     	;# 
  5671  0890                     	;# 
  5672  0891                     	;# 
  5673  0892                     	;# 
  5674  0893                     	;# 
  5675  0895                     	;# 
  5676  0896                     	;# 
  5677  0897                     	;# 
  5678  0898                     	;# 
  5679  0899                     	;# 
  5680  089A                     	;# 
  5681  089B                     	;# 
  5682  090C                     	;# 
  5683  090E                     	;# 
  5684  090F                     	;# 
  5685  091F                     	;# 
  5686  098F                     	;# 
  5687  098F                     	;# 
  5688  0990                     	;# 
  5689  0991                     	;# 
  5690  0992                     	;# 
  5691  0993                     	;# 
  5692  0994                     	;# 
  5693  0995                     	;# 
  5694  0996                     	;# 
  5695  0997                     	;# 
  5696  1E0F                     	;# 
  5697  1E10                     	;# 
  5698  1E11                     	;# 
  5699  1E12                     	;# 
  5700  1E13                     	;# 
  5701  1E14                     	;# 
  5702  1E15                     	;# 
  5703  1E16                     	;# 
  5704  1E17                     	;# 
  5705  1E18                     	;# 
  5706  1E19                     	;# 
  5707  1E1A                     	;# 
  5708  1E1B                     	;# 
  5709  1E1C                     	;# 
  5710  1E1D                     	;# 
  5711  1E1E                     	;# 
  5712  1E1F                     	;# 
  5713  1E20                     	;# 
  5714  1E21                     	;# 
  5715  1E22                     	;# 
  5716  1E23                     	;# 
  5717  1E24                     	;# 
  5718  1E25                     	;# 
  5719  1E26                     	;# 
  5720  1E27                     	;# 
  5721  1E28                     	;# 
  5722  1E29                     	;# 
  5723  1E2A                     	;# 
  5724  1E2B                     	;# 
  5725  1E2C                     	;# 
  5726  1E2D                     	;# 
  5727  1E2E                     	;# 
  5728  1E2F                     	;# 
  5729  1E30                     	;# 
  5730  1E31                     	;# 
  5731  1E32                     	;# 
  5732  1E33                     	;# 
  5733  1E34                     	;# 
  5734  1E35                     	;# 
  5735  1E36                     	;# 
  5736  1E37                     	;# 
  5737  1E8F                     	;# 
  5738  1E90                     	;# 
  5739  1E91                     	;# 
  5740  1E92                     	;# 
  5741  1E93                     	;# 
  5742  1E94                     	;# 
  5743  1E95                     	;# 
  5744  1E96                     	;# 
  5745  1E97                     	;# 
  5746  1E9C                     	;# 
  5747  1E9D                     	;# 
  5748  1E9E                     	;# 
  5749  1EA1                     	;# 
  5750  1EA2                     	;# 
  5751  1EA3                     	;# 
  5752  1EA4                     	;# 
  5753  1EA9                     	;# 
  5754  1EAA                     	;# 
  5755  1EB1                     	;# 
  5756  1EB2                     	;# 
  5757  1EB8                     	;# 
  5758  1EB9                     	;# 
  5759  1EBA                     	;# 
  5760  1EBB                     	;# 
  5761  1EBC                     	;# 
  5762  1EBD                     	;# 
  5763  1EBE                     	;# 
  5764  1EC3                     	;# 
  5765  1EC5                     	;# 
  5766  1EC6                     	;# 
  5767  1EC7                     	;# 
  5768  1EC8                     	;# 
  5769  1EC9                     	;# 
  5770  1ECA                     	;# 
  5771  1ECB                     	;# 
  5772  1ECC                     	;# 
  5773  1F10                     	;# 
  5774  1F11                     	;# 
  5775  1F12                     	;# 
  5776  1F14                     	;# 
  5777  1F15                     	;# 
  5778  1F20                     	;# 
  5779  1F21                     	;# 
  5780  1F22                     	;# 
  5781  1F23                     	;# 
  5782  1F24                     	;# 
  5783  1F25                     	;# 
  5784  1F38                     	;# 
  5785  1F39                     	;# 
  5786  1F3A                     	;# 
  5787  1F3B                     	;# 
  5788  1F3C                     	;# 
  5789  1F3D                     	;# 
  5790  1F3E                     	;# 
  5791  1F3F                     	;# 
  5792  1F4E                     	;# 
  5793  1F4F                     	;# 
  5794  1F50                     	;# 
  5795  1F51                     	;# 
  5796  1F52                     	;# 
  5797  1F53                     	;# 
  5798  1F54                     	;# 
  5799  1F55                     	;# 
  5800  1FE4                     	;# 
  5801  1FE5                     	;# 
  5802  1FE6                     	;# 
  5803  1FE7                     	;# 
  5804  1FE8                     	;# 
  5805  1FE8                     	;# 
  5806  1FE9                     	;# 
  5807  1FEA                     	;# 
  5808  1FEB                     	;# 
  5809  1FED                     	;# 
  5810  1FEE                     	;# 
  5811  1FEF                     	;# 
  5812  0000                     	;# 
  5813  0001                     	;# 
  5814  0002                     	;# 
  5815  0003                     	;# 
  5816  0004                     	;# 
  5817  0005                     	;# 
  5818  0006                     	;# 
  5819  0007                     	;# 
  5820  0008                     	;# 
  5821  0009                     	;# 
  5822  000A                     	;# 
  5823  000B                     	;# 
  5824  000C                     	;# 
  5825  000E                     	;# 
  5826  0012                     	;# 
  5827  0014                     	;# 
  5828  0018                     	;# 
  5829  001A                     	;# 
  5830  008C                     	;# 
  5831  008C                     	;# 
  5832  008D                     	;# 
  5833  008E                     	;# 
  5834  008E                     	;# 
  5835  008F                     	;# 
  5836  0090                     	;# 
  5837  0090                     	;# 
  5838  0091                     	;# 
  5839  0092                     	;# 
  5840  0092                     	;# 
  5841  0093                     	;# 
  5842  0094                     	;# 
  5843  0094                     	;# 
  5844  0095                     	;# 
  5845  0096                     	;# 
  5846  0096                     	;# 
  5847  0097                     	;# 
  5848  0098                     	;# 
  5849  0099                     	;# 
  5850  009A                     	;# 
  5851  009B                     	;# 
  5852  009B                     	;# 
  5853  009C                     	;# 
  5854  009D                     	;# 
  5855  009D                     	;# 
  5856  009E                     	;# 
  5857  009F                     	;# 
  5858  010C                     	;# 
  5859  010C                     	;# 
  5860  010D                     	;# 
  5861  010E                     	;# 
  5862  010F                     	;# 
  5863  010F                     	;# 
  5864  0110                     	;# 
  5865  0111                     	;# 
  5866  0112                     	;# 
  5867  0113                     	;# 
  5868  0114                     	;# 
  5869  0115                     	;# 
  5870  0116                     	;# 
  5871  0117                     	;# 
  5872  0118                     	;# 
  5873  0119                     	;# 
  5874  0119                     	;# 
  5875  0119                     	;# 
  5876  011A                     	;# 
  5877  011A                     	;# 
  5878  011A                     	;# 
  5879  011B                     	;# 
  5880  011B                     	;# 
  5881  011B                     	;# 
  5882  011B                     	;# 
  5883  011B                     	;# 
  5884  011C                     	;# 
  5885  011C                     	;# 
  5886  011C                     	;# 
  5887  011D                     	;# 
  5888  011D                     	;# 
  5889  011D                     	;# 
  5890  011E                     	;# 
  5891  011E                     	;# 
  5892  011E                     	;# 
  5893  011F                     	;# 
  5894  011F                     	;# 
  5895  011F                     	;# 
  5896  011F                     	;# 
  5897  011F                     	;# 
  5898  018C                     	;# 
  5899  018D                     	;# 
  5900  018E                     	;# 
  5901  018F                     	;# 
  5902  0190                     	;# 
  5903  0191                     	;# 
  5904  0192                     	;# 
  5905  0196                     	;# 
  5906  0197                     	;# 
  5907  0198                     	;# 
  5908  0199                     	;# 
  5909  019A                     	;# 
  5910  019B                     	;# 
  5911  019C                     	;# 
  5912  020C                     	;# 
  5913  020D                     	;# 
  5914  020E                     	;# 
  5915  020E                     	;# 
  5916  020F                     	;# 
  5917  020F                     	;# 
  5918  0210                     	;# 
  5919  0210                     	;# 
  5920  0211                     	;# 
  5921  0211                     	;# 
  5922  0212                     	;# 
  5923  0213                     	;# 
  5924  0214                     	;# 
  5925  0214                     	;# 
  5926  0215                     	;# 
  5927  0215                     	;# 
  5928  0216                     	;# 
  5929  0216                     	;# 
  5930  0217                     	;# 
  5931  0217                     	;# 
  5932  0218                     	;# 
  5933  0219                     	;# 
  5934  021A                     	;# 
  5935  021A                     	;# 
  5936  021B                     	;# 
  5937  021B                     	;# 
  5938  021C                     	;# 
  5939  021C                     	;# 
  5940  021D                     	;# 
  5941  021D                     	;# 
  5942  021E                     	;# 
  5943  021F                     	;# 
  5944  028C                     	;# 
  5945  028C                     	;# 
  5946  028D                     	;# 
  5947  028D                     	;# 
  5948  028E                     	;# 
  5949  028F                     	;# 
  5950  0290                     	;# 
  5951  0291                     	;# 
  5952  0292                     	;# 
  5953  0292                     	;# 
  5954  0293                     	;# 
  5955  0293                     	;# 
  5956  0294                     	;# 
  5957  0295                     	;# 
  5958  0296                     	;# 
  5959  0297                     	;# 
  5960  0298                     	;# 
  5961  0298                     	;# 
  5962  0299                     	;# 
  5963  0299                     	;# 
  5964  029A                     	;# 
  5965  029B                     	;# 
  5966  029C                     	;# 
  5967  029D                     	;# 
  5968  029F                     	;# 
  5969  030C                     	;# 
  5970  030C                     	;# 
  5971  030D                     	;# 
  5972  030E                     	;# 
  5973  030F                     	;# 
  5974  0310                     	;# 
  5975  0310                     	;# 
  5976  0311                     	;# 
  5977  0312                     	;# 
  5978  0313                     	;# 
  5979  0314                     	;# 
  5980  0314                     	;# 
  5981  0315                     	;# 
  5982  0316                     	;# 
  5983  0317                     	;# 
  5984  0318                     	;# 
  5985  0318                     	;# 
  5986  0319                     	;# 
  5987  031A                     	;# 
  5988  031B                     	;# 
  5989  038C                     	;# 
  5990  038C                     	;# 
  5991  038D                     	;# 
  5992  038E                     	;# 
  5993  0390                     	;# 
  5994  0390                     	;# 
  5995  0391                     	;# 
  5996  0392                     	;# 
  5997  048C                     	;# 
  5998  048C                     	;# 
  5999  048D                     	;# 
  6000  048E                     	;# 
  6001  048F                     	;# 
  6002  048F                     	;# 
  6003  0490                     	;# 
  6004  0491                     	;# 
  6005  0492                     	;# 
  6006  0492                     	;# 
  6007  0493                     	;# 
  6008  0494                     	;# 
  6009  0495                     	;# 
  6010  0495                     	;# 
  6011  0496                     	;# 
  6012  0497                     	;# 
  6013  0498                     	;# 
  6014  0499                     	;# 
  6015  049A                     	;# 
  6016  049B                     	;# 
  6017  049C                     	;# 
  6018  049D                     	;# 
  6019  058C                     	;# 
  6020  058C                     	;# 
  6021  058D                     	;# 
  6022  058E                     	;# 
  6023  058F                     	;# 
  6024  058F                     	;# 
  6025  0590                     	;# 
  6026  0591                     	;# 
  6027  0592                     	;# 
  6028  0593                     	;# 
  6029  059C                     	;# 
  6030  059C                     	;# 
  6031  059D                     	;# 
  6032  059D                     	;# 
  6033  059E                     	;# 
  6034  059F                     	;# 
  6035  060C                     	;# 
  6036  060C                     	;# 
  6037  060D                     	;# 
  6038  060D                     	;# 
  6039  060E                     	;# 
  6040  060F                     	;# 
  6041  0610                     	;# 
  6042  0611                     	;# 
  6043  0612                     	;# 
  6044  0613                     	;# 
  6045  0614                     	;# 
  6046  0616                     	;# 
  6047  0616                     	;# 
  6048  0617                     	;# 
  6049  0617                     	;# 
  6050  0618                     	;# 
  6051  0619                     	;# 
  6052  061A                     	;# 
  6053  061B                     	;# 
  6054  061C                     	;# 
  6055  061D                     	;# 
  6056  061E                     	;# 
  6057  070C                     	;# 
  6058  070D                     	;# 
  6059  070E                     	;# 
  6060  070F                     	;# 
  6061  0710                     	;# 
  6062  0711                     	;# 
  6063  0712                     	;# 
  6064  0713                     	;# 
  6065  0714                     	;# 
  6066  0716                     	;# 
  6067  0717                     	;# 
  6068  0718                     	;# 
  6069  0719                     	;# 
  6070  071A                     	;# 
  6071  071B                     	;# 
  6072  071C                     	;# 
  6073  071D                     	;# 
  6074  071E                     	;# 
  6075  0796                     	;# 
  6076  0797                     	;# 
  6077  0798                     	;# 
  6078  0799                     	;# 
  6079  079A                     	;# 
  6080  079B                     	;# 
  6081  079C                     	;# 
  6082  079D                     	;# 
  6083  080C                     	;# 
  6084  080D                     	;# 
  6085  080E                     	;# 
  6086  080F                     	;# 
  6087  0810                     	;# 
  6088  0811                     	;# 
  6089  0812                     	;# 
  6090  0813                     	;# 
  6091  0814                     	;# 
  6092  081A                     	;# 
  6093  081A                     	;# 
  6094  081B                     	;# 
  6095  081C                     	;# 
  6096  081C                     	;# 
  6097  081D                     	;# 
  6098  081E                     	;# 
  6099  081F                     	;# 
  6100  088C                     	;# 
  6101  088D                     	;# 
  6102  088E                     	;# 
  6103  088F                     	;# 
  6104  0890                     	;# 
  6105  0891                     	;# 
  6106  0892                     	;# 
  6107  0893                     	;# 
  6108  0895                     	;# 
  6109  0896                     	;# 
  6110  0897                     	;# 
  6111  0898                     	;# 
  6112  0899                     	;# 
  6113  089A                     	;# 
  6114  089B                     	;# 
  6115  090C                     	;# 
  6116  090E                     	;# 
  6117  090F                     	;# 
  6118  091F                     	;# 
  6119  098F                     	;# 
  6120  098F                     	;# 
  6121  0990                     	;# 
  6122  0991                     	;# 
  6123  0992                     	;# 
  6124  0993                     	;# 
  6125  0994                     	;# 
  6126  0995                     	;# 
  6127  0996                     	;# 
  6128  0997                     	;# 
  6129  1E0F                     	;# 
  6130  1E10                     	;# 
  6131  1E11                     	;# 
  6132  1E12                     	;# 
  6133  1E13                     	;# 
  6134  1E14                     	;# 
  6135  1E15                     	;# 
  6136  1E16                     	;# 
  6137  1E17                     	;# 
  6138  1E18                     	;# 
  6139  1E19                     	;# 
  6140  1E1A                     	;# 
  6141  1E1B                     	;# 
  6142  1E1C                     	;# 
  6143  1E1D                     	;# 
  6144  1E1E                     	;# 
  6145  1E1F                     	;# 
  6146  1E20                     	;# 
  6147  1E21                     	;# 
  6148  1E22                     	;# 
  6149  1E23                     	;# 
  6150  1E24                     	;# 
  6151  1E25                     	;# 
  6152  1E26                     	;# 
  6153  1E27                     	;# 
  6154  1E28                     	;# 
  6155  1E29                     	;# 
  6156  1E2A                     	;# 
  6157  1E2B                     	;# 
  6158  1E2C                     	;# 
  6159  1E2D                     	;# 
  6160  1E2E                     	;# 
  6161  1E2F                     	;# 
  6162  1E30                     	;# 
  6163  1E31                     	;# 
  6164  1E32                     	;# 
  6165  1E33                     	;# 
  6166  1E34                     	;# 
  6167  1E35                     	;# 
  6168  1E36                     	;# 
  6169  1E37                     	;# 
  6170  1E8F                     	;# 
  6171  1E90                     	;# 
  6172  1E91                     	;# 
  6173  1E92                     	;# 
  6174  1E93                     	;# 
  6175  1E94                     	;# 
  6176  1E95                     	;# 
  6177  1E96                     	;# 
  6178  1E97                     	;# 
  6179  1E9C                     	;# 
  6180  1E9D                     	;# 
  6181  1E9E                     	;# 
  6182  1EA1                     	;# 
  6183  1EA2                     	;# 
  6184  1EA3                     	;# 
  6185  1EA4                     	;# 
  6186  1EA9                     	;# 
  6187  1EAA                     	;# 
  6188  1EB1                     	;# 
  6189  1EB2                     	;# 
  6190  1EB8                     	;# 
  6191  1EB9                     	;# 
  6192  1EBA                     	;# 
  6193  1EBB                     	;# 
  6194  1EBC                     	;# 
  6195  1EBD                     	;# 
  6196  1EBE                     	;# 
  6197  1EC3                     	;# 
  6198  1EC5                     	;# 
  6199  1EC6                     	;# 
  6200  1EC7                     	;# 
  6201  1EC8                     	;# 
  6202  1EC9                     	;# 
  6203  1ECA                     	;# 
  6204  1ECB                     	;# 
  6205  1ECC                     	;# 
  6206  1F10                     	;# 
  6207  1F11                     	;# 
  6208  1F12                     	;# 
  6209  1F14                     	;# 
  6210  1F15                     	;# 
  6211  1F20                     	;# 
  6212  1F21                     	;# 
  6213  1F22                     	;# 
  6214  1F23                     	;# 
  6215  1F24                     	;# 
  6216  1F25                     	;# 
  6217  1F38                     	;# 
  6218  1F39                     	;# 
  6219  1F3A                     	;# 
  6220  1F3B                     	;# 
  6221  1F3C                     	;# 
  6222  1F3D                     	;# 
  6223  1F3E                     	;# 
  6224  1F3F                     	;# 
  6225  1F4E                     	;# 
  6226  1F4F                     	;# 
  6227  1F50                     	;# 
  6228  1F51                     	;# 
  6229  1F52                     	;# 
  6230  1F53                     	;# 
  6231  1F54                     	;# 
  6232  1F55                     	;# 
  6233  1FE4                     	;# 
  6234  1FE5                     	;# 
  6235  1FE6                     	;# 
  6236  1FE7                     	;# 
  6237  1FE8                     	;# 
  6238  1FE8                     	;# 
  6239  1FE9                     	;# 
  6240  1FEA                     	;# 
  6241  1FEB                     	;# 
  6242  1FED                     	;# 
  6243  1FEE                     	;# 
  6244  1FEF                     	;# 
  6245  0000                     	;# 
  6246  0001                     	;# 
  6247  0002                     	;# 
  6248  0003                     	;# 
  6249  0004                     	;# 
  6250  0005                     	;# 
  6251  0006                     	;# 
  6252  0007                     	;# 
  6253  0008                     	;# 
  6254  0009                     	;# 
  6255  000A                     	;# 
  6256  000B                     	;# 
  6257  000C                     	;# 
  6258  000E                     	;# 
  6259  0012                     	;# 
  6260  0014                     	;# 
  6261  0018                     	;# 
  6262  001A                     	;# 
  6263  008C                     	;# 
  6264  008C                     	;# 
  6265  008D                     	;# 
  6266  008E                     	;# 
  6267  008E                     	;# 
  6268  008F                     	;# 
  6269  0090                     	;# 
  6270  0090                     	;# 
  6271  0091                     	;# 
  6272  0092                     	;# 
  6273  0092                     	;# 
  6274  0093                     	;# 
  6275  0094                     	;# 
  6276  0094                     	;# 
  6277  0095                     	;# 
  6278  0096                     	;# 
  6279  0096                     	;# 
  6280  0097                     	;# 
  6281  0098                     	;# 
  6282  0099                     	;# 
  6283  009A                     	;# 
  6284  009B                     	;# 
  6285  009B                     	;# 
  6286  009C                     	;# 
  6287  009D                     	;# 
  6288  009D                     	;# 
  6289  009E                     	;# 
  6290  009F                     	;# 
  6291  010C                     	;# 
  6292  010C                     	;# 
  6293  010D                     	;# 
  6294  010E                     	;# 
  6295  010F                     	;# 
  6296  010F                     	;# 
  6297  0110                     	;# 
  6298  0111                     	;# 
  6299  0112                     	;# 
  6300  0113                     	;# 
  6301  0114                     	;# 
  6302  0115                     	;# 
  6303  0116                     	;# 
  6304  0117                     	;# 
  6305  0118                     	;# 
  6306  0119                     	;# 
  6307  0119                     	;# 
  6308  0119                     	;# 
  6309  011A                     	;# 
  6310  011A                     	;# 
  6311  011A                     	;# 
  6312  011B                     	;# 
  6313  011B                     	;# 
  6314  011B                     	;# 
  6315  011B                     	;# 
  6316  011B                     	;# 
  6317  011C                     	;# 
  6318  011C                     	;# 
  6319  011C                     	;# 
  6320  011D                     	;# 
  6321  011D                     	;# 
  6322  011D                     	;# 
  6323  011E                     	;# 
  6324  011E                     	;# 
  6325  011E                     	;# 
  6326  011F                     	;# 
  6327  011F                     	;# 
  6328  011F                     	;# 
  6329  011F                     	;# 
  6330  011F                     	;# 
  6331  018C                     	;# 
  6332  018D                     	;# 
  6333  018E                     	;# 
  6334  018F                     	;# 
  6335  0190                     	;# 
  6336  0191                     	;# 
  6337  0192                     	;# 
  6338  0196                     	;# 
  6339  0197                     	;# 
  6340  0198                     	;# 
  6341  0199                     	;# 
  6342  019A                     	;# 
  6343  019B                     	;# 
  6344  019C                     	;# 
  6345  020C                     	;# 
  6346  020D                     	;# 
  6347  020E                     	;# 
  6348  020E                     	;# 
  6349  020F                     	;# 
  6350  020F                     	;# 
  6351  0210                     	;# 
  6352  0210                     	;# 
  6353  0211                     	;# 
  6354  0211                     	;# 
  6355  0212                     	;# 
  6356  0213                     	;# 
  6357  0214                     	;# 
  6358  0214                     	;# 
  6359  0215                     	;# 
  6360  0215                     	;# 
  6361  0216                     	;# 
  6362  0216                     	;# 
  6363  0217                     	;# 
  6364  0217                     	;# 
  6365  0218                     	;# 
  6366  0219                     	;# 
  6367  021A                     	;# 
  6368  021A                     	;# 
  6369  021B                     	;# 
  6370  021B                     	;# 
  6371  021C                     	;# 
  6372  021C                     	;# 
  6373  021D                     	;# 
  6374  021D                     	;# 
  6375  021E                     	;# 
  6376  021F                     	;# 
  6377  028C                     	;# 
  6378  028C                     	;# 
  6379  028D                     	;# 
  6380  028D                     	;# 
  6381  028E                     	;# 
  6382  028F                     	;# 
  6383  0290                     	;# 
  6384  0291                     	;# 
  6385  0292                     	;# 
  6386  0292                     	;# 
  6387  0293                     	;# 
  6388  0293                     	;# 
  6389  0294                     	;# 
  6390  0295                     	;# 
  6391  0296                     	;# 
  6392  0297                     	;# 
  6393  0298                     	;# 
  6394  0298                     	;# 
  6395  0299                     	;# 
  6396  0299                     	;# 
  6397  029A                     	;# 
  6398  029B                     	;# 
  6399  029C                     	;# 
  6400  029D                     	;# 
  6401  029F                     	;# 
  6402  030C                     	;# 
  6403  030C                     	;# 
  6404  030D                     	;# 
  6405  030E                     	;# 
  6406  030F                     	;# 
  6407  0310                     	;# 
  6408  0310                     	;# 
  6409  0311                     	;# 
  6410  0312                     	;# 
  6411  0313                     	;# 
  6412  0314                     	;# 
  6413  0314                     	;# 
  6414  0315                     	;# 
  6415  0316                     	;# 
  6416  0317                     	;# 
  6417  0318                     	;# 
  6418  0318                     	;# 
  6419  0319                     	;# 
  6420  031A                     	;# 
  6421  031B                     	;# 
  6422  038C                     	;# 
  6423  038C                     	;# 
  6424  038D                     	;# 
  6425  038E                     	;# 
  6426  0390                     	;# 
  6427  0390                     	;# 
  6428  0391                     	;# 
  6429  0392                     	;# 
  6430  048C                     	;# 
  6431  048C                     	;# 
  6432  048D                     	;# 
  6433  048E                     	;# 
  6434  048F                     	;# 
  6435  048F                     	;# 
  6436  0490                     	;# 
  6437  0491                     	;# 
  6438  0492                     	;# 
  6439  0492                     	;# 
  6440  0493                     	;# 
  6441  0494                     	;# 
  6442  0495                     	;# 
  6443  0495                     	;# 
  6444  0496                     	;# 
  6445  0497                     	;# 
  6446  0498                     	;# 
  6447  0499                     	;# 
  6448  049A                     	;# 
  6449  049B                     	;# 
  6450  049C                     	;# 
  6451  049D                     	;# 
  6452  058C                     	;# 
  6453  058C                     	;# 
  6454  058D                     	;# 
  6455  058E                     	;# 
  6456  058F                     	;# 
  6457  058F                     	;# 
  6458  0590                     	;# 
  6459  0591                     	;# 
  6460  0592                     	;# 
  6461  0593                     	;# 
  6462  059C                     	;# 
  6463  059C                     	;# 
  6464  059D                     	;# 
  6465  059D                     	;# 
  6466  059E                     	;# 
  6467  059F                     	;# 
  6468  060C                     	;# 
  6469  060C                     	;# 
  6470  060D                     	;# 
  6471  060D                     	;# 
  6472  060E                     	;# 
  6473  060F                     	;# 
  6474  0610                     	;# 
  6475  0611                     	;# 
  6476  0612                     	;# 
  6477  0613                     	;# 
  6478  0614                     	;# 
  6479  0616                     	;# 
  6480  0616                     	;# 
  6481  0617                     	;# 
  6482  0617                     	;# 
  6483  0618                     	;# 
  6484  0619                     	;# 
  6485  061A                     	;# 
  6486  061B                     	;# 
  6487  061C                     	;# 
  6488  061D                     	;# 
  6489  061E                     	;# 
  6490  070C                     	;# 
  6491  070D                     	;# 
  6492  070E                     	;# 
  6493  070F                     	;# 
  6494  0710                     	;# 
  6495  0711                     	;# 
  6496  0712                     	;# 
  6497  0713                     	;# 
  6498  0714                     	;# 
  6499  0716                     	;# 
  6500  0717                     	;# 
  6501  0718                     	;# 
  6502  0719                     	;# 
  6503  071A                     	;# 
  6504  071B                     	;# 
  6505  071C                     	;# 
  6506  071D                     	;# 
  6507  071E                     	;# 
  6508  0796                     	;# 
  6509  0797                     	;# 
  6510  0798                     	;# 
  6511  0799                     	;# 
  6512  079A                     	;# 
  6513  079B                     	;# 
  6514  079C                     	;# 
  6515  079D                     	;# 
  6516  080C                     	;# 
  6517  080D                     	;# 
  6518  080E                     	;# 
  6519  080F                     	;# 
  6520  0810                     	;# 
  6521  0811                     	;# 
  6522  0812                     	;# 
  6523  0813                     	;# 
  6524  0814                     	;# 
  6525  081A                     	;# 
  6526  081A                     	;# 
  6527  081B                     	;# 
  6528  081C                     	;# 
  6529  081C                     	;# 
  6530  081D                     	;# 
  6531  081E                     	;# 
  6532  081F                     	;# 
  6533  088C                     	;# 
  6534  088D                     	;# 
  6535  088E                     	;# 
  6536  088F                     	;# 
  6537  0890                     	;# 
  6538  0891                     	;# 
  6539  0892                     	;# 
  6540  0893                     	;# 
  6541  0895                     	;# 
  6542  0896                     	;# 
  6543  0897                     	;# 
  6544  0898                     	;# 
  6545  0899                     	;# 
  6546  089A                     	;# 
  6547  089B                     	;# 
  6548  090C                     	;# 
  6549  090E                     	;# 
  6550  090F                     	;# 
  6551  091F                     	;# 
  6552  098F                     	;# 
  6553  098F                     	;# 
  6554  0990                     	;# 
  6555  0991                     	;# 
  6556  0992                     	;# 
  6557  0993                     	;# 
  6558  0994                     	;# 
  6559  0995                     	;# 
  6560  0996                     	;# 
  6561  0997                     	;# 
  6562  1E0F                     	;# 
  6563  1E10                     	;# 
  6564  1E11                     	;# 
  6565  1E12                     	;# 
  6566  1E13                     	;# 
  6567  1E14                     	;# 
  6568  1E15                     	;# 
  6569  1E16                     	;# 
  6570  1E17                     	;# 
  6571  1E18                     	;# 
  6572  1E19                     	;# 
  6573  1E1A                     	;# 
  6574  1E1B                     	;# 
  6575  1E1C                     	;# 
  6576  1E1D                     	;# 
  6577  1E1E                     	;# 
  6578  1E1F                     	;# 
  6579  1E20                     	;# 
  6580  1E21                     	;# 
  6581  1E22                     	;# 
  6582  1E23                     	;# 
  6583  1E24                     	;# 
  6584  1E25                     	;# 
  6585  1E26                     	;# 
  6586  1E27                     	;# 
  6587  1E28                     	;# 
  6588  1E29                     	;# 
  6589  1E2A                     	;# 
  6590  1E2B                     	;# 
  6591  1E2C                     	;# 
  6592  1E2D                     	;# 
  6593  1E2E                     	;# 
  6594  1E2F                     	;# 
  6595  1E30                     	;# 
  6596  1E31                     	;# 
  6597  1E32                     	;# 
  6598  1E33                     	;# 
  6599  1E34                     	;# 
  6600  1E35                     	;# 
  6601  1E36                     	;# 
  6602  1E37                     	;# 
  6603  1E8F                     	;# 
  6604  1E90                     	;# 
  6605  1E91                     	;# 
  6606  1E92                     	;# 
  6607  1E93                     	;# 
  6608  1E94                     	;# 
  6609  1E95                     	;# 
  6610  1E96                     	;# 
  6611  1E97                     	;# 
  6612  1E9C                     	;# 
  6613  1E9D                     	;# 
  6614  1E9E                     	;# 
  6615  1EA1                     	;# 
  6616  1EA2                     	;# 
  6617  1EA3                     	;# 
  6618  1EA4                     	;# 
  6619  1EA9                     	;# 
  6620  1EAA                     	;# 
  6621  1EB1                     	;# 
  6622  1EB2                     	;# 
  6623  1EB8                     	;# 
  6624  1EB9                     	;# 
  6625  1EBA                     	;# 
  6626  1EBB                     	;# 
  6627  1EBC                     	;# 
  6628  1EBD                     	;# 
  6629  1EBE                     	;# 
  6630  1EC3                     	;# 
  6631  1EC5                     	;# 
  6632  1EC6                     	;# 
  6633  1EC7                     	;# 
  6634  1EC8                     	;# 
  6635  1EC9                     	;# 
  6636  1ECA                     	;# 
  6637  1ECB                     	;# 
  6638  1ECC                     	;# 
  6639  1F10                     	;# 
  6640  1F11                     	;# 
  6641  1F12                     	;# 
  6642  1F14                     	;# 
  6643  1F15                     	;# 
  6644  1F20                     	;# 
  6645  1F21                     	;# 
  6646  1F22                     	;# 
  6647  1F23                     	;# 
  6648  1F24                     	;# 
  6649  1F25                     	;# 
  6650  1F38                     	;# 
  6651  1F39                     	;# 
  6652  1F3A                     	;# 
  6653  1F3B                     	;# 
  6654  1F3C                     	;# 
  6655  1F3D                     	;# 
  6656  1F3E                     	;# 
  6657  1F3F                     	;# 
  6658  1F4E                     	;# 
  6659  1F4F                     	;# 
  6660  1F50                     	;# 
  6661  1F51                     	;# 
  6662  1F52                     	;# 
  6663  1F53                     	;# 
  6664  1F54                     	;# 
  6665  1F55                     	;# 
  6666  1FE4                     	;# 
  6667  1FE5                     	;# 
  6668  1FE6                     	;# 
  6669  1FE7                     	;# 
  6670  1FE8                     	;# 
  6671  1FE8                     	;# 
  6672  1FE9                     	;# 
  6673  1FEA                     	;# 
  6674  1FEB                     	;# 
  6675  1FED                     	;# 
  6676  1FEE                     	;# 
  6677  1FEF                     	;# 
  6678                           
  6679 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  6680  0000                     
  6681                           	psect	idataBANK0
  6682  0A04                     __pidataBANK0:
  6683                           
  6684                           ;initializer for _status_prev
  6685  0A04  3435               	retlw	53
  6686  0A05  340C               	retlw	12
  6687  0A06  340C               	retlw	12
  6688  0A07  34FE               	retlw	254
  6689  0A08  3400               	retlw	0
  6690  0A09  3401               	retlw	1
  6691  0A0A  3400               	retlw	0
  6692                           
  6693                           ;initializer for _status
  6694  0A0B  3435               	retlw	53
  6695  0A0C  340C               	retlw	12
  6696  0A0D  340C               	retlw	12
  6697  0A0E  34FE               	retlw	254
  6698  0A0F  3400               	retlw	0
  6699  0A10  3401               	retlw	1
  6700  0A11  3400               	retlw	0
  6701                           
  6702                           ;initializer for _measureTime
  6703  0A12  3401               	retlw	1
  6704                           
  6705                           	psect	idataBANK1
  6706  0B4B                     __pidataBANK1:
  6707                           
  6708                           ;initializer for main@F11064
  6709  0B4B  3400               	retlw	0
  6710  0B4C  3400               	retlw	0
  6711  0B4D  3400               	retlw	0
  6712  0B4E  3400               	retlw	0
  6713  0B4F  3400               	retlw	0
  6714  0B50  3400               	retlw	0
  6715  0B51  3430               	retlw	48
  6716  0B52  3430               	retlw	48
  6717  0B53  3430               	retlw	48
  6718  0B54  3430               	retlw	48
  6719  0B55  3430               	retlw	48
  6720                           
  6721                           ;initializer for sendSensorData@F11032
  6722  0B56  344C               	retlw	76
  6723  0B57  343E               	retlw	62
  6724  0B58  3400               	retlw	0
  6725  0B59  3400               	retlw	0
  6726  0B5A  3400               	retlw	0
  6727  0B5B  3400               	retlw	0
  6728  0B5C  3400               	retlw	0
  6729  0B5D  3400               	retlw	0
  6730                           
  6731                           ;initializer for sendSensorInfo@F11027
  6732  0B5E  344C               	retlw	76
  6733  0B5F  343E               	retlw	62
  6734  0B60  3445               	retlw	69
  6735  0B61  3450               	retlw	80
  6736  0B62  3431               	retlw	49
  6737  0B63  3430               	retlw	48
  6738  0B64  3430               	retlw	48
  6739                           
  6740                           	psect	idataBANK2
  6741  0F4D                     __pidataBANK2:
  6742                           
  6743                           ;initializer for _battery
  6744  0F4D  3445               	retlw	69
  6745  0F4E  3442               	retlw	66
  6746  0F4F  3431               	retlw	49
  6747  0F50  3430               	retlw	48
  6748  0F51  3431               	retlw	49
  6749  0F52  3431               	retlw	49
  6750  0F53  3430               	retlw	48
  6751  0F54  3431               	retlw	49
  6752  0F55  3441               	retlw	65
  6753  0F56  3443               	retlw	67
  6754  0F57  341C               	retlw	28
  6755  0F58  3436               	retlw	54
  6756  0F59  341A               	retlw	26
  6757  0F5A  3400               	retlw	0
  6758  0F5B  3400               	retlw	0
  6759  0F5C  3400               	retlw	0
  6760  0F5D  3400               	retlw	0
  6761  0F5E  3400               	retlw	0
  6762  0F5F  3400               	retlw	0
  6763  0F60  3400               	retlw	0
  6764  0F61  3400               	retlw	0
  6765  0F62  3400               	retlw	0
  6766  0F63  3400               	retlw	0
  6767  0F64  3400               	retlw	0
  6768  0F65  3400               	retlw	0
  6769  0F66  3400               	retlw	0
  6770  0F67  3400               	retlw	0
  6771  0F68  3400               	retlw	0
  6772  0F69  3400               	retlw	0
  6773  0F6A  3400               	retlw	0
  6774  0F6B  3400               	retlw	0
  6775  0F6C  34FF               	retlw	255
  6776  0F6D  347F               	retlw	127
  6777  0F6E  3400               	retlw	0
  6778  0F6F  3400               	retlw	0
  6779  0F70  3400               	retlw	0
  6780  0F71  3400               	retlw	0
  6781  0F72  3400               	retlw	0
  6782  0F73  3400               	retlw	0
  6783  0F74  3400               	retlw	0
  6784  0F75  3400               	retlw	0
  6785  0F76  3400               	retlw	0
  6786  0F77  3400               	retlw	0
  6787  0F78  3400               	retlw	0
  6788  0F79  3400               	retlw	0
  6789  0F7A  3400               	retlw	0
  6790  0F7B  3400               	retlw	0
  6791  0F7C  3400               	retlw	0
  6792  0F7D  3400               	retlw	0
  6793  0F7E  3400               	retlw	0
  6794  0F7F  3400               	retlw	0
  6795  0F80  3400               	retlw	0
  6796  0F81  3400               	retlw	0
  6797  0F82  3400               	retlw	0
  6798  0F83  34FF               	retlw	255
  6799  0F84  347F               	retlw	127
  6800  0F85  3400               	retlw	0
  6801  0F86  3400               	retlw	0
  6802  0F87  3400               	retlw	0
  6803                           
  6804                           	psect	idataBANK3
  6805  0F12                     __pidataBANK3:
  6806                           
  6807                           ;initializer for _panel
  6808  0F12  3445               	retlw	69
  6809  0F13  3450               	retlw	80
  6810  0F14  3431               	retlw	49
  6811  0F15  3430               	retlw	48
  6812  0F16  3430               	retlw	48
  6813  0F17  3431               	retlw	49
  6814  0F18  3430               	retlw	48
  6815  0F19  3430               	retlw	48
  6816  0F1A  3440               	retlw	64
  6817  0F1B  3443               	retlw	67
  6818  0F1C  343C               	retlw	60
  6819  0F1D  3436               	retlw	54
  6820  0F1E  341A               	retlw	26
  6821  0F1F  3400               	retlw	0
  6822  0F20  3400               	retlw	0
  6823  0F21  3400               	retlw	0
  6824  0F22  3400               	retlw	0
  6825  0F23  3400               	retlw	0
  6826  0F24  3400               	retlw	0
  6827  0F25  3400               	retlw	0
  6828  0F26  3400               	retlw	0
  6829  0F27  3400               	retlw	0
  6830  0F28  3400               	retlw	0
  6831  0F29  3400               	retlw	0
  6832  0F2A  3400               	retlw	0
  6833  0F2B  3400               	retlw	0
  6834  0F2C  3400               	retlw	0
  6835  0F2D  3400               	retlw	0
  6836  0F2E  3400               	retlw	0
  6837  0F2F  3400               	retlw	0
  6838  0F30  3400               	retlw	0
  6839  0F31  34FF               	retlw	255
  6840  0F32  347F               	retlw	127
  6841  0F33  3400               	retlw	0
  6842  0F34  3400               	retlw	0
  6843  0F35  3400               	retlw	0
  6844  0F36  3400               	retlw	0
  6845  0F37  3400               	retlw	0
  6846  0F38  3400               	retlw	0
  6847  0F39  3400               	retlw	0
  6848  0F3A  3400               	retlw	0
  6849  0F3B  3400               	retlw	0
  6850  0F3C  3400               	retlw	0
  6851  0F3D  3400               	retlw	0
  6852  0F3E  3400               	retlw	0
  6853  0F3F  3400               	retlw	0
  6854  0F40  3400               	retlw	0
  6855  0F41  3400               	retlw	0
  6856  0F42  3400               	retlw	0
  6857  0F43  3400               	retlw	0
  6858  0F44  3400               	retlw	0
  6859  0F45  3400               	retlw	0
  6860  0F46  3400               	retlw	0
  6861  0F47  3400               	retlw	0
  6862  0F48  34FF               	retlw	255
  6863  0F49  347F               	retlw	127
  6864  0F4A  3400               	retlw	0
  6865  0F4B  3400               	retlw	0
  6866  0F4C  3400               	retlw	0
  6867                           
  6868                           	psect	idataBANK4
  6869  0ED7                     __pidataBANK4:
  6870                           
  6871                           ;initializer for _cons
  6872  0ED7  3445               	retlw	69
  6873  0ED8  3443               	retlw	67
  6874  0ED9  3431               	retlw	49
  6875  0EDA  3430               	retlw	48
  6876  0EDB  3432               	retlw	50
  6877  0EDC  3431               	retlw	49
  6878  0EDD  3430               	retlw	48
  6879  0EDE  3432               	retlw	50
  6880  0EDF  3442               	retlw	66
  6881  0EE0  3443               	retlw	67
  6882  0EE1  341C               	retlw	28
  6883  0EE2  3436               	retlw	54
  6884  0EE3  341A               	retlw	26
  6885  0EE4  3400               	retlw	0
  6886  0EE5  3400               	retlw	0
  6887  0EE6  3400               	retlw	0
  6888  0EE7  3400               	retlw	0
  6889  0EE8  3400               	retlw	0
  6890  0EE9  3400               	retlw	0
  6891  0EEA  3400               	retlw	0
  6892  0EEB  3400               	retlw	0
  6893  0EEC  3400               	retlw	0
  6894  0EED  3400               	retlw	0
  6895  0EEE  3400               	retlw	0
  6896  0EEF  3400               	retlw	0
  6897  0EF0  3400               	retlw	0
  6898  0EF1  3400               	retlw	0
  6899  0EF2  3400               	retlw	0
  6900  0EF3  3400               	retlw	0
  6901  0EF4  3400               	retlw	0
  6902  0EF5  3400               	retlw	0
  6903  0EF6  34FF               	retlw	255
  6904  0EF7  347F               	retlw	127
  6905  0EF8  3400               	retlw	0
  6906  0EF9  3400               	retlw	0
  6907  0EFA  3400               	retlw	0
  6908  0EFB  3400               	retlw	0
  6909  0EFC  3400               	retlw	0
  6910  0EFD  3400               	retlw	0
  6911  0EFE  3400               	retlw	0
  6912  0EFF  3400               	retlw	0
  6913  0F00  3400               	retlw	0
  6914  0F01  3400               	retlw	0
  6915  0F02  3400               	retlw	0
  6916  0F03  3400               	retlw	0
  6917  0F04  3400               	retlw	0
  6918  0F05  3400               	retlw	0
  6919  0F06  3400               	retlw	0
  6920  0F07  3400               	retlw	0
  6921  0F08  3400               	retlw	0
  6922  0F09  3400               	retlw	0
  6923  0F0A  3400               	retlw	0
  6924  0F0B  3400               	retlw	0
  6925  0F0C  3400               	retlw	0
  6926  0F0D  34FF               	retlw	255
  6927  0F0E  347F               	retlw	127
  6928  0F0F  3400               	retlw	0
  6929  0F10  3400               	retlw	0
  6930  0F11  3400               	retlw	0
  6931                           
  6932                           	psect	stringtext1
  6933  1000                     __pstringtext1:
  6934  1000                     _fsmStateTable:
  6935  1000  3417               	retlw	low _I2C1_DO_IDLE
  6936  1001  3409               	retlw	high _I2C1_DO_IDLE
  6937  1002  3470               	retlw	low _I2C1_DO_SEND_ADR_READ
  6938  1003  3409               	retlw	high _I2C1_DO_SEND_ADR_READ
  6939  1004  3469               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  6940  1005  3409               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  6941  1006  3436               	retlw	low _I2C1_DO_TX
  6942  1007  3407               	retlw	high _I2C1_DO_TX
  6943  1008  3486               	retlw	low _I2C1_DO_RX
  6944  1009  3407               	retlw	high _I2C1_DO_RX
  6945  100A  3457               	retlw	low _I2C1_DO_RCEN
  6946  100B  3409               	retlw	high _I2C1_DO_RCEN
  6947  100C  349D               	retlw	low _I2C1_DO_TX_EMPTY
  6948  100D  340D               	retlw	high _I2C1_DO_TX_EMPTY
  6949  100E  34E0               	retlw	low _I2C1_DO_SEND_RESTART_READ
  6950  100F  3408               	retlw	high _I2C1_DO_SEND_RESTART_READ
  6951  1010  34E4               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  6952  1011  3408               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  6953  1012  34E8               	retlw	low _I2C1_DO_SEND_RESTART
  6954  1013  3408               	retlw	high _I2C1_DO_SEND_RESTART
  6955  1014  34EC               	retlw	low _I2C1_DO_SEND_STOP
  6956  1015  3408               	retlw	high _I2C1_DO_SEND_STOP
  6957  1016  34F0               	retlw	low _I2C1_DO_RX_ACK
  6958  1017  3408               	retlw	high _I2C1_DO_RX_ACK
  6959  1018  34F4               	retlw	low _I2C1_DO_RX_NACK_STOP
  6960  1019  3408               	retlw	high _I2C1_DO_RX_NACK_STOP
  6961  101A  34F8               	retlw	low _I2C1_DO_RX_NACK_RESTART
  6962  101B  3408               	retlw	high _I2C1_DO_RX_NACK_RESTART
  6963  101C  341C               	retlw	low _I2C1_DO_RESET
  6964  101D  3409               	retlw	high _I2C1_DO_RESET
  6965  101E  3440               	retlw	low _I2C1_DO_ADDRESS_NACK
  6966  101F  340D               	retlw	high _I2C1_DO_ADDRESS_NACK
  6967  1020                     __end_of_fsmStateTable:
  6968                           
  6969                           	psect	nvCOMMON
  6970  0076                     __pnvCOMMON:
  6971  0076                     _timer0ReloadVal16bit:
  6972  0076                     	ds	2
  6973                           
  6974                           	psect	nvBANK0
  6975  0062                     __pnvBANK0:
  6976  0062                     _TMR0_InterruptHandler:
  6977  0062                     	ds	2
  6978  0064                     _TMR4_InterruptHandler:
  6979  0064                     	ds	2
  6980  0066                     _TMR2_InterruptHandler:
  6981  0066                     	ds	2
  6982  0068                     _EUSART1_RxDefaultInterruptHandler:
  6983  0068                     	ds	2
  6984                           
  6985                           	psect	nvBANK1
  6986  00EA                     __pnvBANK1:
  6987  00EA                     _EUSART1_ErrorHandler:
  6988  00EA                     	ds	2
  6989  00EC                     _EUSART1_OverrunErrorHandler:
  6990  00EC                     	ds	2
  6991  00EE                     _EUSART1_FramingErrorHandler:
  6992  00EE                     	ds	2
  6993  0018                     _LATAbits	set	24
  6994  000B                     _INTCONbits	set	11
  6995  0014                     _TRISC	set	20
  6996  0012                     _TRISA	set	18
  6997  001A                     _LATC	set	26
  6998  0018                     _LATA	set	24
  6999  001A                     _LATCbits	set	26
  7000  0119                     _RC1REG	set	281
  7001  011D                     _RC1STAbits	set	285
  7002  011A                     _TX1REG	set	282
  7003  011E                     _TX1STAbits	set	286
  7004  011C                     _SP1BRGH	set	284
  7005  011B                     _SP1BRGL	set	283
  7006  011E                     _TX1STA	set	286
  7007  011D                     _RC1STA	set	285
  7008  011F                     _BAUD1CON	set	287
  7009  0191                     _SSP1CON2bits	set	401
  7010  018C                     _SSP1BUF	set	396
  7011  0190                     _SSP1CON1bits	set	400
  7012  018D                     _SSP1ADD	set	397
  7013  0191                     _SSP1CON2	set	401
  7014  0190                     _SSP1CON1	set	400
  7015  018F                     _SSP1STAT	set	399
  7016  0294                     _T4CONbits	set	660
  7017  0294                     _T4CON	set	660
  7018  0292                     _T4TMR	set	658
  7019  0293                     _T4PR	set	659
  7020  0297                     _T4RST	set	663
  7021  0295                     _T4HLT	set	661
  7022  0296                     _T4CLKCON	set	662
  7023  028E                     _T2CONbits	set	654
  7024  028E                     _T2CON	set	654
  7025  028C                     _T2TMR	set	652
  7026  028D                     _T2PR	set	653
  7027  0291                     _T2RST	set	657
  7028  028F                     _T2HLT	set	655
  7029  0290                     _T2CLKCON	set	656
  7030  059E                     _T0CON0	set	1438
  7031  059C                     _TMR0L	set	1436
  7032  059D                     _TMR0H	set	1437
  7033  059F                     _T0CON1	set	1439
  7034  0710                     _PIR4bits	set	1808
  7035  071A                     _PIE4bits	set	1818
  7036  070E                     _PIR2bits	set	1806
  7037  0718                     _PIE2bits	set	1816
  7038  070C                     _PIR0bits	set	1804
  7039  0716                     _PIE0bits	set	1814
  7040  070F                     _PIR3bits	set	1807
  7041  0719                     _PIE3bits	set	1817
  7042  079D                     _PMD7	set	1949
  7043  079C                     _PMD6	set	1948
  7044  079B                     _PMD5	set	1947
  7045  079A                     _PMD4	set	1946
  7046  0799                     _PMD3	set	1945
  7047  0798                     _PMD2	set	1944
  7048  0797                     _PMD1	set	1943
  7049  0796                     _PMD0	set	1942
  7050  088C                     _CPUDOZE	set	2188
  7051  0892                     _OSCTUNE	set	2194
  7052  0893                     _OSCFRQ	set	2195
  7053  0891                     _OSCEN	set	2193
  7054  088F                     _OSCCON3	set	2191
  7055  088D                     _OSCCON1	set	2189
  7056  090F                     _DAC1CON1	set	2319
  7057  090E                     _DAC1CON0	set	2318
  7058  0990                     _CM1CON0bits	set	2448
  7059  0993                     _CM1PCH	set	2451
  7060  0992                     _CM1NCH	set	2450
  7061  0991                     _CM1CON1	set	2449
  7062  0990                     _CM1CON0	set	2448
  7063  1ECB                     _RX1DTPPS	set	7883
  7064  1EC6                     _SSP1DATPPS	set	7878
  7065  1EC5                     _SSP1CLKPPS	set	7877
  7066  1F24                     _RC4PPS	set	7972
  7067  1F21                     _RC1PPS	set	7969
  7068  1F20                     _RC0PPS	set	7968
  7069  1F52                     _INLVLC	set	8018
  7070  1F3C                     _INLVLA	set	7996
  7071  1F51                     _SLRCONC	set	8017
  7072  1F3B                     _SLRCONA	set	7995
  7073  1F50                     _ODCONC	set	8016
  7074  1F3A                     _ODCONA	set	7994
  7075  1F4F                     _WPUC	set	8015
  7076  1F39                     _WPUA	set	7993
  7077  1F38                     _ANSELA	set	7992
  7078  1F4E                     _ANSELC	set	8014
  7079                           
  7080                           	psect	cinit
  7081  0032                     start_initialization:	
  7082                           ; #config settings
  7083                           
  7084  0032                     __initialization:
  7085                           
  7086                           ; Initialize objects allocated to BANK0
  7087  0032  3004               	movlw	low __pidataBANK0
  7088  0033  0084               	movwf	4
  7089  0034  308A               	movlw	(high __pidataBANK0)| (0+128)
  7090  0035  0085               	movwf	5
  7091  0036  3053               	movlw	low __pdataBANK0
  7092  0037  0086               	movwf	6
  7093  0038  3000               	movlw	high __pdataBANK0
  7094  0039  0087               	movwf	7
  7095  003A  300F               	movlw	15
  7096  003B  3189  2163  3180   	fcall	init_ram
  7097                           
  7098                           ; Initialize objects allocated to BANK1
  7099  003E  304B               	movlw	low __pidataBANK1
  7100  003F  0084               	movwf	4
  7101  0040  308B               	movlw	(high __pidataBANK1)| (0+128)
  7102  0041  0085               	movwf	5
  7103  0042  30C5               	movlw	low __pdataBANK1
  7104  0043  0086               	movwf	6
  7105  0044  3000               	movlw	high __pdataBANK1
  7106  0045  0087               	movwf	7
  7107  0046  301A               	movlw	26
  7108  0047  3189  2163  3180   	fcall	init_ram
  7109                           
  7110                           ; Initialize objects allocated to BANK2
  7111  004A  304D               	movlw	low __pidataBANK2
  7112  004B  0084               	movwf	4
  7113  004C  308F               	movlw	(high __pidataBANK2)| (0+128)
  7114  004D  0085               	movwf	5
  7115  004E  3020               	movlw	low __pdataBANK2
  7116  004F  0086               	movwf	6
  7117  0050  3001               	movlw	high __pdataBANK2
  7118  0051  0087               	movwf	7
  7119  0052  303B               	movlw	59
  7120  0053  3189  2163  3180   	fcall	init_ram
  7121                           
  7122                           ; Initialize objects allocated to BANK3
  7123  0056  3012               	movlw	low __pidataBANK3
  7124  0057  0084               	movwf	4
  7125  0058  308F               	movlw	(high __pidataBANK3)| (0+128)
  7126  0059  0085               	movwf	5
  7127  005A  30A0               	movlw	low __pdataBANK3
  7128  005B  0086               	movwf	6
  7129  005C  3001               	movlw	high __pdataBANK3
  7130  005D  0087               	movwf	7
  7131  005E  303B               	movlw	59
  7132  005F  3189  2163  3180   	fcall	init_ram
  7133                           
  7134                           ; Initialize objects allocated to BANK4
  7135  0062  30D7               	movlw	low __pidataBANK4
  7136  0063  0084               	movwf	4
  7137  0064  308E               	movlw	(high __pidataBANK4)| (0+128)
  7138  0065  0085               	movwf	5
  7139  0066  3020               	movlw	low __pdataBANK4
  7140  0067  0086               	movwf	6
  7141  0068  3002               	movlw	high __pdataBANK4
  7142  0069  0087               	movwf	7
  7143  006A  303B               	movlw	59
  7144  006B  3189  2163  3180   	fcall	init_ram
  7145                           
  7146                           ; Clear objects allocated to COMMON
  7147  006E  01F8               	clrf	__pbssCOMMON& (0+127)
  7148  006F  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  7149                           
  7150                           ; Clear objects allocated to BANK0
  7151  0070  01EA               	clrf	__pbssBANK0& (0+127)
  7152  0071  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  7153  0072  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  7154                           
  7155                           ; Clear objects allocated to BANK1
  7156  0073  30A0               	movlw	low __pbssBANK1
  7157  0074  0084               	movwf	4
  7158  0075  3000               	movlw	high __pbssBANK1
  7159  0076  0085               	movwf	5
  7160  0077  3025               	movlw	37
  7161  0078  3189  215D  3180   	fcall	clear_ram0
  7162                           
  7163                           ; Clear objects allocated to BANK5
  7164  007B  30A0               	movlw	low __pbssBANK5
  7165  007C  0084               	movwf	4
  7166  007D  3002               	movlw	high __pbssBANK5
  7167  007E  0085               	movwf	5
  7168  007F  3040               	movlw	64
  7169  0080  3189  215D  3180   	fcall	clear_ram0
  7170                           
  7171                           ; Clear objects allocated to BANK6
  7172  0083  3020               	movlw	low __pbssBANK6
  7173  0084  0084               	movwf	4
  7174  0085  3003               	movlw	high __pbssBANK6
  7175  0086  0085               	movwf	5
  7176  0087  3040               	movlw	64
  7177  0088  3189  215D         	fcall	clear_ram0
  7178  008A                     end_of_initialization:	
  7179                           ;End of C runtime variable initialization code
  7180                           
  7181  008A                     __end_of__initialization:
  7182  008A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7183  008B  0140               	movlb	0
  7184  008C  3182  2A07         	ljmp	_main	;jump to C main() function
  7185                           
  7186                           	psect	bssCOMMON
  7187  0078                     __pbssCOMMON:
  7188  0078                     _eusart1RxTail:
  7189  0078                     	ds	1
  7190  0079                     _eusart1RxHead:
  7191  0079                     	ds	1
  7192                           
  7193                           	psect	bssBANK0
  7194  006A                     __pbssBANK0:
  7195  006A                     _eusart1RxLastError:
  7196  006A                     	ds	1
  7197  006B                     _eusart1PacketFinish:
  7198  006B                     	ds	1
  7199  006C                     _eusart1RxCount:
  7200  006C                     	ds	1
  7201                           
  7202                           	psect	dataBANK0
  7203  0053                     __pdataBANK0:
  7204  0053                     _status_prev:
  7205  0053                     	ds	7
  7206  005A                     _status:
  7207  005A                     	ds	7
  7208  0061                     _measureTime:
  7209  0061                     	ds	1
  7210                           
  7211                           	psect	bssBANK1
  7212  00A0                     __pbssBANK1:
  7213  00A0                     _I2C1_Status:
  7214  00A0                     	ds	29
  7215  00BD                     _BuffReg:
  7216  00BD                     	ds	8
  7217                           
  7218                           	psect	dataBANK1
  7219  00C5                     __pdataBANK1:
  7220  00C5                     main@F11064:
  7221  00C5                     	ds	11
  7222  00D0                     sendSensorData@F11032:
  7223  00D0                     	ds	8
  7224  00D8                     sendSensorInfo@F11027:
  7225  00D8                     	ds	7
  7226                           
  7227                           	psect	dataBANK2
  7228  0120                     __pdataBANK2:
  7229  0120                     _battery:
  7230  0120                     	ds	59
  7231                           
  7232                           	psect	dataBANK3
  7233  01A0                     __pdataBANK3:
  7234  01A0                     _panel:
  7235  01A0                     	ds	59
  7236                           
  7237                           	psect	dataBANK4
  7238  0220                     __pdataBANK4:
  7239  0220                     _cons:
  7240  0220                     	ds	59
  7241                           
  7242                           	psect	bssBANK5
  7243  02A0                     __pbssBANK5:
  7244  02A0                     _eusart1RxBuffer:
  7245  02A0                     	ds	64
  7246                           
  7247                           	psect	bssBANK6
  7248  0320                     __pbssBANK6:
  7249  0320                     _eusart1RxStatusBuffer:
  7250  0320                     	ds	64
  7251                           
  7252                           	psect	inittext
  7253  0963                     init_ram:
  7254  0963  00FE               	movwf	126
  7255  0964                     initloop:
  7256  0964  0012               	moviw fsr0++
  7257  0965  001E               	movwi fsr1++
  7258  0966  0BFE               	decfsz	126,f
  7259  0967  2964               	goto	initloop
  7260  0968  3400               	retlw	0
  7261                           
  7262                           	psect	clrtext
  7263  095D                     clear_ram0:	
  7264                           ;	Called with FSR0 containing the base address, and
  7265                           ;	WREG with the size to clear
  7266                           
  7267  095D  0064               	clrwdt	;clear the watchdog before getting into this loop
  7268  095E                     clrloop0:
  7269  095E  0180               	clrf	0	;clear RAM location pointed to by FSR
  7270  095F  3101               	addfsr 0,1
  7271  0960  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7272  0961  295E               	goto	clrloop0	;have we reached the end yet?
  7273  0962  3400               	retlw	0	;all done for this memory range, return
  7274                           
  7275                           	psect	cstackBANK1
  7276  00DF                     __pcstackBANK1:
  7277  00DF                     main@packet:
  7278                           
  7279                           ; 11 bytes @ 0x0
  7280  00DF                     	ds	11
  7281                           
  7282                           	psect	cstackCOMMON
  7283  0070                     __pcstackCOMMON:
  7284  0070                     ?_I2C1_Open:
  7285  0070                     ?_I2C1_MasterWrite:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288  0070                     ?_I2C1_Close:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291  0070                     ?_I2C1_MasterRead:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294  0070                     ?_EUSART1_Receive_ISR:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303  0070                     ?_EUSART1_DefaultErrorHandler:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ?_EUSART1_RxDataHandler:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ??_EUSART1_RxDataHandler:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?_PMD_Initialize:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ?_I2C1_Initialize:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?_PIN_MANAGER_Initialize:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ?_OSCILLATOR_Initialize:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?_CMP1_Initialize:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?_TMR4_Initialize:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     ?_DAC1_Initialize:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     ?_TMR2_Initialize:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     ?_TMR0_Initialize:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0070                     ?_I2C1_DO_IDLE:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0070                     ?_I2C1_DO_TX:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0070                     ?_I2C1_DO_RX:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0070                     ?_I2C1_DO_RCEN:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0070                     ?_I2C1_DO_TX_EMPTY:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0070                     ?_I2C1_DO_SEND_RESTART:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0070                     ?_I2C1_DO_SEND_STOP:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0070                     ?_I2C1_DO_RX_ACK:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0070                     ?_I2C1_DO_RESET:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0070                     ?_I2C1_MasterClearIrq:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390  0070                     ?_I2C1_MasterOpen:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393  0070                     ?_I2C1_MasterDisableIrq:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396  0070                     ?_I2C1_MasterClose:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399  0070                     ?_I2C1_MasterStart:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402  0070                     ?_I2C1_Poller:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405  0070                     ?_I2C1_MasterWaitForEvent:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408  0070                     ?_I2C1_MasterFsm:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411  0070                     ?_I2C1_MasterIsNack:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414  0070                     ?_I2C1_MasterSendTxData:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417  0070                     ?_I2C1_MasterGetRxData:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420  0070                     ?_I2C1_MasterSendAck:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423  0070                     ?_I2C1_MasterStartRx:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426  0070                     ?_I2C1_MasterSetIrq:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429  0070                     ?_I2C1_MasterEnableRestart:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432  0070                     ?_I2C1_MasterStop:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0070                     ?_I2C1_MasterSendNack:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0070                     ?_TMR0_ISR:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0070                     ??_TMR0_ISR:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0070                     ?_CMP1_ISR:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0070                     ??_CMP1_ISR:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0070                     ?_TMR4_ISR:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0070                     ??_TMR4_ISR:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0070                     ?_TMR2_ISR:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0070                     ??_TMR2_ISR:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0070                     ?_TMR2_DefaultInterruptHandler:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0070                     ??_TMR2_DefaultInterruptHandler:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468  0070                     ?_TMR4_DefaultInterruptHandler:	
  7469                           ; 1 bytes @ 0x0
  7470                           
  7471  0070                     ??_TMR4_DefaultInterruptHandler:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0070                     ?_TMR0_DefaultInterruptHandler:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0070                     ??_TMR0_DefaultInterruptHandler:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0070                     ?_TxDeviceDisable:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0070                     ?_TxDeviceEnable:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0070                     ?_stringlen:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0070                     ?_EUSART1_Initialize:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0070                     ?_EUSART1_is_tx_ready:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0070                     ?_EUSART1_is_tx_done:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0070                     ?_EUSART1_Read:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0070                     ?_EUSART1_Write:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0070                     ?_SYSTEM_Initialize:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0070                     ?_I2C1_MasterOperation:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0070                     ?_INTERRUPT_InterruptManager:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0070                     ?_CMP1_GetOutputStatus:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0070                     ??_CMP1_GetOutputStatus:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0070                     ?_TMR2_Start:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0070                     ?_TMR2_Stop:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0070                     ?_TMR4_Start:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0070                     ?_TMR4_Stop:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0070                     ?_TMR0_Reload:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0070                     ?_main:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537                           
  7538                           ; 1 bytes @ 0x0
  7539  0070                     	ds	2
  7540  0072                     EUSART1_RxDataHandler@t:
  7541                           
  7542                           ; 2 bytes @ 0x2
  7543  0072                     	ds	2
  7544  0074                     ??_I2C1_Open:
  7545  0074                     ?_I2C1_SetBuffer:	
  7546                           ; 1 bytes @ 0x4
  7547                           
  7548  0074                     ??_I2C1_Close:	
  7549                           ; 1 bytes @ 0x4
  7550                           
  7551  0074                     ?_EUSART1_SetRxInterruptHandler:	
  7552                           ; 1 bytes @ 0x4
  7553                           
  7554  0074                     ??_EUSART1_Receive_ISR:	
  7555                           ; 1 bytes @ 0x4
  7556                           
  7557  0074                     ?_EUSART1_SetFramingErrorHandler:	
  7558                           ; 1 bytes @ 0x4
  7559                           
  7560  0074                     ?_EUSART1_SetOverrunErrorHandler:	
  7561                           ; 1 bytes @ 0x4
  7562                           
  7563  0074                     ?_EUSART1_SetErrorHandler:	
  7564                           ; 1 bytes @ 0x4
  7565                           
  7566  0074                     ??_EUSART1_DefaultErrorHandler:	
  7567                           ; 1 bytes @ 0x4
  7568                           
  7569  0074                     ??_PMD_Initialize:	
  7570                           ; 1 bytes @ 0x4
  7571                           
  7572  0074                     ??_I2C1_Initialize:	
  7573                           ; 1 bytes @ 0x4
  7574                           
  7575  0074                     ??_PIN_MANAGER_Initialize:	
  7576                           ; 1 bytes @ 0x4
  7577                           
  7578  0074                     ??_OSCILLATOR_Initialize:	
  7579                           ; 1 bytes @ 0x4
  7580                           
  7581  0074                     ??_CMP1_Initialize:	
  7582                           ; 1 bytes @ 0x4
  7583                           
  7584  0074                     ??_DAC1_Initialize:	
  7585                           ; 1 bytes @ 0x4
  7586                           
  7587  0074                     ??_I2C1_DO_IDLE:	
  7588                           ; 1 bytes @ 0x4
  7589                           
  7590  0074                     ??_I2C1_DO_SEND_ADR_READ:	
  7591                           ; 1 bytes @ 0x4
  7592                           
  7593  0074                     ??_I2C1_DO_RCEN:	
  7594                           ; 1 bytes @ 0x4
  7595                           
  7596  0074                     ??_I2C1_DO_SEND_RESTART_READ:	
  7597                           ; 1 bytes @ 0x4
  7598                           
  7599  0074                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  7600                           ; 1 bytes @ 0x4
  7601                           
  7602  0074                     ??_I2C1_DO_SEND_RESTART:	
  7603                           ; 1 bytes @ 0x4
  7604                           
  7605  0074                     ??_I2C1_DO_SEND_STOP:	
  7606                           ; 1 bytes @ 0x4
  7607                           
  7608  0074                     ??_I2C1_DO_RX_ACK:	
  7609                           ; 1 bytes @ 0x4
  7610                           
  7611  0074                     ??_I2C1_DO_RX_NACK_STOP:	
  7612                           ; 1 bytes @ 0x4
  7613                           
  7614  0074                     ??_I2C1_DO_RX_NACK_RESTART:	
  7615                           ; 1 bytes @ 0x4
  7616                           
  7617  0074                     ??_I2C1_DO_RESET:	
  7618                           ; 1 bytes @ 0x4
  7619                           
  7620  0074                     ??_I2C1_MasterClearIrq:	
  7621                           ; 1 bytes @ 0x4
  7622                           
  7623  0074                     ??_I2C1_MasterOpen:	
  7624                           ; 1 bytes @ 0x4
  7625                           
  7626  0074                     ??_I2C1_MasterDisableIrq:	
  7627                           ; 1 bytes @ 0x4
  7628                           
  7629  0074                     ??_I2C1_MasterClose:	
  7630                           ; 1 bytes @ 0x4
  7631                           
  7632  0074                     ??_I2C1_MasterStart:	
  7633                           ; 1 bytes @ 0x4
  7634                           
  7635  0074                     ??_I2C1_SetCallback:	
  7636                           ; 1 bytes @ 0x4
  7637                           
  7638  0074                     ??_I2C1_MasterWaitForEvent:	
  7639                           ; 1 bytes @ 0x4
  7640                           
  7641  0074                     ??_I2C1_MasterIsNack:	
  7642                           ; 1 bytes @ 0x4
  7643                           
  7644  0074                     ??_I2C1_MasterSendTxData:	
  7645                           ; 1 bytes @ 0x4
  7646                           
  7647  0074                     ??_I2C1_MasterGetRxData:	
  7648                           ; 1 bytes @ 0x4
  7649                           
  7650  0074                     ??_I2C1_MasterSendAck:	
  7651                           ; 1 bytes @ 0x4
  7652                           
  7653  0074                     ??_I2C1_MasterStartRx:	
  7654                           ; 1 bytes @ 0x4
  7655                           
  7656  0074                     ??_I2C1_MasterSetIrq:	
  7657                           ; 1 bytes @ 0x4
  7658                           
  7659  0074                     ??_I2C1_MasterEnableRestart:	
  7660                           ; 1 bytes @ 0x4
  7661                           
  7662  0074                     ??_I2C1_MasterStop:	
  7663                           ; 1 bytes @ 0x4
  7664                           
  7665  0074                     ??_I2C1_MasterSendNack:	
  7666                           ; 1 bytes @ 0x4
  7667                           
  7668  0074                     ?_TMR2_SetInterruptHandler:	
  7669                           ; 1 bytes @ 0x4
  7670                           
  7671  0074                     ?_TMR4_SetInterruptHandler:	
  7672                           ; 1 bytes @ 0x4
  7673                           
  7674  0074                     ?_TMR0_SetInterruptHandler:	
  7675                           ; 1 bytes @ 0x4
  7676                           
  7677  0074                     ??_TxDeviceDisable:	
  7678                           ; 1 bytes @ 0x4
  7679                           
  7680  0074                     ??_stringCompare:	
  7681                           ; 1 bytes @ 0x4
  7682                           
  7683  0074                     ??_TxDeviceEnable:	
  7684                           ; 1 bytes @ 0x4
  7685                           
  7686  0074                     ??_stringlen:	
  7687                           ; 1 bytes @ 0x4
  7688                           
  7689  0074                     ?_getMax:	
  7690                           ; 1 bytes @ 0x4
  7691                           
  7692  0074                     ?_getMin:	
  7693                           ; 1 bytes @ 0x4
  7694                           
  7695  0074                     ??_EUSART1_is_tx_ready:	
  7696                           ; 1 bytes @ 0x4
  7697                           
  7698  0074                     ??_EUSART1_is_tx_done:	
  7699                           ; 1 bytes @ 0x4
  7700                           
  7701  0074                     ??_EUSART1_Read:	
  7702                           ; 1 bytes @ 0x4
  7703                           
  7704  0074                     ??_EUSART1_Write:	
  7705                           ; 1 bytes @ 0x4
  7706                           
  7707  0074                     ??_INTERRUPT_InterruptManager:	
  7708                           ; 1 bytes @ 0x4
  7709                           
  7710  0074                     ??_TMR2_Start:	
  7711                           ; 1 bytes @ 0x4
  7712                           
  7713  0074                     ??_TMR2_Stop:	
  7714                           ; 1 bytes @ 0x4
  7715                           
  7716  0074                     ??_TMR4_Start:	
  7717                           ; 1 bytes @ 0x4
  7718                           
  7719  0074                     ??_TMR4_Stop:	
  7720                           ; 1 bytes @ 0x4
  7721                           
  7722  0074                     ??_TMR0_Reload:	
  7723                           ; 1 bytes @ 0x4
  7724                           
  7725  0074                     ??___wmul:	
  7726                           ; 1 bytes @ 0x4
  7727                           
  7728  0074                     ??___aldiv:	
  7729                           ; 1 bytes @ 0x4
  7730                           
  7731  0074                     ??___lwdiv:	
  7732                           ; 1 bytes @ 0x4
  7733                           
  7734  0074                     ??___lwmod:	
  7735                           ; 1 bytes @ 0x4
  7736                           
  7737  0074                     _EUSART1_is_tx_ready$357:	
  7738                           ; 1 bytes @ 0x4
  7739                           
  7740  0074                     EUSART1_Write@txData:	
  7741                           ; 1 bytes @ 0x4
  7742                           
  7743  0074                     I2C1_MasterSendTxData@data:	
  7744                           ; 1 bytes @ 0x4
  7745                           
  7746  0074                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7747                           ; 1 bytes @ 0x4
  7748                           
  7749  0074                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7750                           ; 2 bytes @ 0x4
  7751                           
  7752  0074                     EUSART1_SetErrorHandler@interruptHandler:	
  7753                           ; 2 bytes @ 0x4
  7754                           
  7755  0074                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7756                           ; 2 bytes @ 0x4
  7757                           
  7758  0074                     I2C1_SetBuffer@bufferSize:	
  7759                           ; 2 bytes @ 0x4
  7760                           
  7761  0074                     TMR2_SetInterruptHandler@InterruptHandler:	
  7762                           ; 2 bytes @ 0x4
  7763                           
  7764  0074                     TMR4_SetInterruptHandler@InterruptHandler:	
  7765                           ; 2 bytes @ 0x4
  7766                           
  7767  0074                     TMR0_SetInterruptHandler@InterruptHandler:	
  7768                           ; 2 bytes @ 0x4
  7769                           
  7770  0074                     getMax@data:	
  7771                           ; 2 bytes @ 0x4
  7772                           
  7773  0074                     getMin@data:	
  7774                           ; 2 bytes @ 0x4
  7775                           
  7776  0074                     ___wmul@product:	
  7777                           ; 2 bytes @ 0x4
  7778                           
  7779                           
  7780                           ; 2 bytes @ 0x4
  7781  0074                     	ds	1
  7782  0075                     ??_I2C1_DO_SEND_ADR_WRITE:
  7783  0075                     ??_sendSensorInfo:	
  7784                           ; 1 bytes @ 0x5
  7785                           
  7786  0075                     EUSART1_Read@readValue:	
  7787                           ; 1 bytes @ 0x5
  7788                           
  7789  0075                     I2C1_Close@returnValue:	
  7790                           ; 1 bytes @ 0x5
  7791                           
  7792  0075                     I2C1_SetCallback@idx:	
  7793                           ; 1 bytes @ 0x5
  7794                           
  7795  0075                     ___lwmod@counter:	
  7796                           ; 1 bytes @ 0x5
  7797                           
  7798                           
  7799                           ; 1 bytes @ 0x5
  7800  0075                     	ds	1
  7801  0076                     ??_rd1RegCompleteHandler:
  7802  0076                     ??_I2C1_MasterWrite:	
  7803                           ; 1 bytes @ 0x6
  7804                           
  7805  0076                     ??_rd2RegCompleteHandler:	
  7806                           ; 1 bytes @ 0x6
  7807                           
  7808  0076                     ??_wr1RegCompleteHandler:	
  7809                           ; 1 bytes @ 0x6
  7810                           
  7811  0076                     ??_wr2RegCompleteHandler:	
  7812                           ; 1 bytes @ 0x6
  7813                           
  7814  0076                     ??_I2C1_MasterRead:	
  7815                           ; 1 bytes @ 0x6
  7816                           
  7817  0076                     ??_rdBlkRegCompleteHandler:	
  7818                           ; 1 bytes @ 0x6
  7819                           
  7820  0076                     ??_EUSART1_SetRxInterruptHandler:	
  7821                           ; 1 bytes @ 0x6
  7822                           
  7823  0076                     ??_EUSART1_SetFramingErrorHandler:	
  7824                           ; 1 bytes @ 0x6
  7825                           
  7826  0076                     ??_EUSART1_SetOverrunErrorHandler:	
  7827                           ; 1 bytes @ 0x6
  7828                           
  7829  0076                     ??_EUSART1_SetErrorHandler:	
  7830                           ; 1 bytes @ 0x6
  7831                           
  7832  0076                     ??_TMR4_Initialize:	
  7833                           ; 1 bytes @ 0x6
  7834                           
  7835  0076                     ??_TMR2_Initialize:	
  7836                           ; 1 bytes @ 0x6
  7837                           
  7838  0076                     ??_TMR0_Initialize:	
  7839                           ; 1 bytes @ 0x6
  7840                           
  7841  0076                     ??_I2C1_CallbackReturnStop:	
  7842                           ; 1 bytes @ 0x6
  7843                           
  7844  0076                     ??_I2C1_CallbackReturnReset:	
  7845                           ; 1 bytes @ 0x6
  7846                           
  7847  0076                     ??_I2C1_Poller:	
  7848                           ; 1 bytes @ 0x6
  7849                           
  7850  0076                     ??_TMR2_SetInterruptHandler:	
  7851                           ; 1 bytes @ 0x6
  7852                           
  7853  0076                     ??_TMR4_SetInterruptHandler:	
  7854                           ; 1 bytes @ 0x6
  7855                           
  7856  0076                     ??_TMR0_SetInterruptHandler:	
  7857                           ; 1 bytes @ 0x6
  7858                           
  7859  0076                     ??_getMetrics:	
  7860                           ; 1 bytes @ 0x6
  7861                           
  7862  0076                     ??_I2C1_WriteNBytes:	
  7863                           ; 1 bytes @ 0x6
  7864                           
  7865  0076                     ??_I2C1_ReadNBytes:	
  7866                           ; 1 bytes @ 0x6
  7867                           
  7868  0076                     ??_EUSART1_Initialize:	
  7869                           ; 1 bytes @ 0x6
  7870                           
  7871  0076                     ??_SYSTEM_Initialize:	
  7872                           ; 1 bytes @ 0x6
  7873                           
  7874                           
  7875                           	psect	cstackBANK0
  7876  0020                     __pcstackBANK0:	
  7877                           ; 1 bytes @ 0x6
  7878                           
  7879  0020                     ??_I2C1_SetBuffer:
  7880  0020                     ?_I2C1_SetCallback:	
  7881                           ; 1 bytes @ 0x0
  7882                           
  7883  0020                     ?_initRxBuffer:	
  7884                           ; 1 bytes @ 0x0
  7885                           
  7886  0020                     ?_receiveData:	
  7887                           ; 1 bytes @ 0x0
  7888                           
  7889  0020                     ??_getMax:	
  7890                           ; 1 bytes @ 0x0
  7891                           
  7892  0020                     ??_getMin:	
  7893                           ; 1 bytes @ 0x0
  7894                           
  7895  0020                     ?_stringCompare:	
  7896                           ; 1 bytes @ 0x0
  7897                           
  7898  0020                     ?___wmul:	
  7899                           ; 2 bytes @ 0x0
  7900                           
  7901  0020                     ?___lwdiv:	
  7902                           ; 2 bytes @ 0x0
  7903                           
  7904  0020                     ?___lwmod:	
  7905                           ; 2 bytes @ 0x0
  7906                           
  7907  0020                     ?___aldiv:	
  7908                           ; 2 bytes @ 0x0
  7909                           
  7910  0020                     I2C1_Open@address:	
  7911                           ; 4 bytes @ 0x0
  7912                           
  7913  0020                     receiveData@maxdata:	
  7914                           ; 1 bytes @ 0x0
  7915                           
  7916  0020                     stringlen@str:	
  7917                           ; 1 bytes @ 0x0
  7918                           
  7919  0020                     I2C1_SetCallback@cb:	
  7920                           ; 1 bytes @ 0x0
  7921                           
  7922  0020                     stringCompare@buf:	
  7923                           ; 2 bytes @ 0x0
  7924                           
  7925  0020                     ___wmul@multiplier:	
  7926                           ; 2 bytes @ 0x0
  7927                           
  7928  0020                     ___lwdiv@divisor:	
  7929                           ; 2 bytes @ 0x0
  7930                           
  7931  0020                     ___lwmod@divisor:	
  7932                           ; 2 bytes @ 0x0
  7933                           
  7934  0020                     initRxBuffer@size:	
  7935                           ; 2 bytes @ 0x0
  7936                           
  7937  0020                     ___aldiv@divisor:	
  7938                           ; 4 bytes @ 0x0
  7939                           
  7940                           
  7941                           ; 4 bytes @ 0x0
  7942  0020                     	ds	1
  7943  0021                     ??_receiveData:
  7944  0021                     I2C1_Open@returnValue:	
  7945                           ; 1 bytes @ 0x1
  7946                           
  7947  0021                     I2C1_SetBuffer@buffer:	
  7948                           ; 1 bytes @ 0x1
  7949                           
  7950  0021                     stringlen@idx:	
  7951                           ; 1 bytes @ 0x1
  7952                           
  7953                           
  7954                           ; 1 bytes @ 0x1
  7955  0021                     	ds	1
  7956  0022                     ?_sendPacket:
  7957  0022                     I2C1_SetCallback@ptr:	
  7958                           ; 1 bytes @ 0x2
  7959                           
  7960  0022                     stringCompare@byte_count:	
  7961                           ; 1 bytes @ 0x2
  7962                           
  7963  0022                     ___wmul@multiplicand:	
  7964                           ; 2 bytes @ 0x2
  7965                           
  7966  0022                     ___lwdiv@dividend:	
  7967                           ; 2 bytes @ 0x2
  7968                           
  7969  0022                     ___lwmod@dividend:	
  7970                           ; 2 bytes @ 0x2
  7971                           
  7972  0022                     sendPacket@byteCount:	
  7973                           ; 2 bytes @ 0x2
  7974                           
  7975                           
  7976                           ; 4 bytes @ 0x2
  7977  0022                     	ds	1
  7978  0023                     ?_I2C1_SetDataCompleteCallback:
  7979  0023                     ?_I2C1_SetAddressNackCallback:	
  7980                           ; 1 bytes @ 0x3
  7981                           
  7982  0023                     receiveData@data:	
  7983                           ; 1 bytes @ 0x3
  7984                           
  7985  0023                     I2C1_SetDataCompleteCallback@cb:	
  7986                           ; 1 bytes @ 0x3
  7987                           
  7988  0023                     I2C1_SetAddressNackCallback@cb:	
  7989                           ; 2 bytes @ 0x3
  7990                           
  7991                           
  7992                           ; 2 bytes @ 0x3
  7993  0023                     	ds	1
  7994  0024                     ??_initRxBuffer:
  7995  0024                     ?_stringToInt16:	
  7996                           ; 1 bytes @ 0x4
  7997                           
  7998  0024                     receiveData@c:	
  7999                           ; 2 bytes @ 0x4
  8000                           
  8001  0024                     stringToInt16@strlen:	
  8002                           ; 1 bytes @ 0x4
  8003                           
  8004  0024                     ___lwdiv@counter:	
  8005                           ; 1 bytes @ 0x4
  8006                           
  8007  0024                     stringCompare@idx:	
  8008                           ; 1 bytes @ 0x4
  8009                           
  8010  0024                     ___aldiv@dividend:	
  8011                           ; 2 bytes @ 0x4
  8012                           
  8013                           
  8014                           ; 4 bytes @ 0x4
  8015  0024                     	ds	1
  8016  0025                     I2C1_SetDataCompleteCallback@ptr:
  8017  0025                     I2C1_SetAddressNackCallback@ptr:	
  8018                           ; 1 bytes @ 0x5
  8019                           
  8020  0025                     receiveData@charCount:	
  8021                           ; 1 bytes @ 0x5
  8022                           
  8023  0025                     ___lwdiv@quotient:	
  8024                           ; 1 bytes @ 0x5
  8025                           
  8026                           
  8027                           ; 2 bytes @ 0x5
  8028  0025                     	ds	1
  8029  0026                     ??_I2C1_SetDataCompleteCallback:
  8030  0026                     ??_I2C1_SetAddressNackCallback:	
  8031                           ; 1 bytes @ 0x6
  8032                           
  8033  0026                     ??_sendPacket:	
  8034                           ; 1 bytes @ 0x6
  8035                           
  8036  0026                     ??_stringToInt16:	
  8037                           ; 1 bytes @ 0x6
  8038                           
  8039  0026                     stringCompare@str:	
  8040                           ; 1 bytes @ 0x6
  8041                           
  8042                           
  8043                           ; 1 bytes @ 0x6
  8044  0026                     	ds	1
  8045  0027                     ?_rd1RegCompleteHandler:
  8046  0027                     ?_rd2RegCompleteHandler:	
  8047                           ; 1 bytes @ 0x7
  8048                           
  8049  0027                     ?_wr1RegCompleteHandler:	
  8050                           ; 1 bytes @ 0x7
  8051                           
  8052  0027                     ?_wr2RegCompleteHandler:	
  8053                           ; 1 bytes @ 0x7
  8054                           
  8055  0027                     ?_rdBlkRegCompleteHandler:	
  8056                           ; 1 bytes @ 0x7
  8057                           
  8058  0027                     ?_I2C1_CallbackReturnStop:	
  8059                           ; 1 bytes @ 0x7
  8060                           
  8061  0027                     ?_I2C1_CallbackReturnReset:	
  8062                           ; 1 bytes @ 0x7
  8063                           
  8064  0027                     ?_int16ToString:	
  8065                           ; 1 bytes @ 0x7
  8066                           
  8067  0027                     rd1RegCompleteHandler@ptr:	
  8068                           ; 1 bytes @ 0x7
  8069                           
  8070  0027                     rd2RegCompleteHandler@ptr:	
  8071                           ; 1 bytes @ 0x7
  8072                           
  8073  0027                     wr1RegCompleteHandler@ptr:	
  8074                           ; 1 bytes @ 0x7
  8075                           
  8076  0027                     wr2RegCompleteHandler@ptr:	
  8077                           ; 1 bytes @ 0x7
  8078                           
  8079  0027                     rdBlkRegCompleteHandler@ptr:	
  8080                           ; 1 bytes @ 0x7
  8081                           
  8082  0027                     I2C1_CallbackReturnStop@funPtr:	
  8083                           ; 1 bytes @ 0x7
  8084                           
  8085  0027                     I2C1_CallbackReturnReset@funPtr:	
  8086                           ; 1 bytes @ 0x7
  8087                           
  8088  0027                     stringToInt16@sign:	
  8089                           ; 1 bytes @ 0x7
  8090                           
  8091  0027                     getMax@i:	
  8092                           ; 1 bytes @ 0x7
  8093                           
  8094  0027                     getMin@i:	
  8095                           ; 1 bytes @ 0x7
  8096                           
  8097  0027                     int16ToString@value:	
  8098                           ; 1 bytes @ 0x7
  8099                           
  8100                           
  8101                           ; 2 bytes @ 0x7
  8102  0027                     	ds	1
  8103  0028                     ??_I2C1_DO_TX:
  8104  0028                     ??_I2C1_DO_RX:	
  8105                           ; 1 bytes @ 0x8
  8106                           
  8107  0028                     ??_I2C1_DO_TX_EMPTY:	
  8108                           ; 1 bytes @ 0x8
  8109                           
  8110  0028                     ??_I2C1_DO_ADDRESS_NACK:	
  8111                           ; 1 bytes @ 0x8
  8112                           
  8113  0028                     initRxBuffer@buf:	
  8114                           ; 1 bytes @ 0x8
  8115                           
  8116  0028                     getMax@aux:	
  8117                           ; 1 bytes @ 0x8
  8118                           
  8119  0028                     getMin@aux:	
  8120                           ; 1 bytes @ 0x8
  8121                           
  8122  0028                     ___aldiv@counter:	
  8123                           ; 1 bytes @ 0x8
  8124                           
  8125  0028                     stringToInt16@multiple:	
  8126                           ; 1 bytes @ 0x8
  8127                           
  8128                           
  8129                           ; 2 bytes @ 0x8
  8130  0028                     	ds	1
  8131  0029                     int16ToString@data:
  8132  0029                     ___aldiv@sign:	
  8133                           ; 1 bytes @ 0x9
  8134                           
  8135  0029                     initRxBuffer@i:	
  8136                           ; 1 bytes @ 0x9
  8137                           
  8138                           
  8139                           ; 2 bytes @ 0x9
  8140  0029                     	ds	1
  8141  002A                     ??_int16ToString:
  8142  002A                     sendPacket@i:	
  8143                           ; 1 bytes @ 0xA
  8144                           
  8145  002A                     stringToInt16@result:	
  8146                           ; 2 bytes @ 0xA
  8147                           
  8148  002A                     ___aldiv@quotient:	
  8149                           ; 2 bytes @ 0xA
  8150                           
  8151                           
  8152                           ; 4 bytes @ 0xA
  8153  002A                     	ds	1
  8154  002B                     ??_I2C1_MasterFsm:
  8155  002B                     int16ToString@flag_0:	
  8156                           ; 1 bytes @ 0xB
  8157                           
  8158                           
  8159                           ; 1 bytes @ 0xB
  8160  002B                     	ds	1
  8161  002C                     sendPacket@str:
  8162  002C                     stringToInt16@string:	
  8163                           ; 1 bytes @ 0xC
  8164                           
  8165  002C                     int16ToString@result:	
  8166                           ; 1 bytes @ 0xC
  8167                           
  8168                           
  8169                           ; 2 bytes @ 0xC
  8170  002C                     	ds	1
  8171  002D                     ?_sendSensorInfo:
  8172  002D                     sendSensorInfo@sensor_info:	
  8173                           ; 1 bytes @ 0xD
  8174                           
  8175                           
  8176                           ; 2 bytes @ 0xD
  8177  002D                     	ds	1
  8178  002E                     ?_getMed:
  8179  002E                     ??_I2C1_MasterOperation:	
  8180                           ; 1 bytes @ 0xE
  8181                           
  8182  002E                     int16ToString@i:	
  8183                           ; 1 bytes @ 0xE
  8184                           
  8185  002E                     getMed@data:	
  8186                           ; 2 bytes @ 0xE
  8187                           
  8188                           
  8189                           ; 2 bytes @ 0xE
  8190  002E                     	ds	1
  8191  002F                     I2C1_MasterOperation@read:
  8192  002F                     sendSensorInfo@packet:	
  8193                           ; 1 bytes @ 0xF
  8194                           
  8195                           
  8196                           ; 7 bytes @ 0xF
  8197  002F                     	ds	1
  8198  0030                     ??_getMed:
  8199  0030                     I2C1_MasterOperation@returnValue:	
  8200                           ; 1 bytes @ 0x10
  8201                           
  8202  0030                     int16ToString@dividend:	
  8203                           ; 1 bytes @ 0x10
  8204                           
  8205                           
  8206                           ; 2 bytes @ 0x10
  8207  0030                     	ds	1
  8208  0031                     ?_I2C1_WriteNBytes:
  8209  0031                     ?_I2C1_ReadNBytes:	
  8210                           ; 1 bytes @ 0x11
  8211                           
  8212  0031                     I2C1_WriteNBytes@data:	
  8213                           ; 1 bytes @ 0x11
  8214                           
  8215  0031                     I2C1_ReadNBytes@data:	
  8216                           ; 1 bytes @ 0x11
  8217                           
  8218                           
  8219                           ; 1 bytes @ 0x11
  8220  0031                     	ds	1
  8221  0032                     I2C1_WriteNBytes@len:
  8222  0032                     I2C1_ReadNBytes@len:	
  8223                           ; 2 bytes @ 0x12
  8224                           
  8225  0032                     int16ToString@divisor:	
  8226                           ; 2 bytes @ 0x12
  8227                           
  8228                           
  8229                           ; 2 bytes @ 0x12
  8230  0032                     	ds	2
  8231  0034                     ?_sendSensorData:
  8232  0034                     I2C1_WriteNBytes@address:	
  8233                           ; 1 bytes @ 0x14
  8234                           
  8235  0034                     I2C1_ReadNBytes@address:	
  8236                           ; 1 bytes @ 0x14
  8237                           
  8238  0034                     sendSensorData@sensor_data:	
  8239                           ; 1 bytes @ 0x14
  8240                           
  8241                           
  8242                           ; 2 bytes @ 0x14
  8243  0034                     	ds	1
  8244  0035                     ?_writeINA220:
  8245  0035                     ?_readINA220:	
  8246                           ; 1 bytes @ 0x15
  8247                           
  8248  0035                     readINA220@address:	
  8249                           ; 2 bytes @ 0x15
  8250                           
  8251  0035                     writeINA220@regdata:	
  8252                           ; 1 bytes @ 0x15
  8253                           
  8254                           
  8255                           ; 2 bytes @ 0x15
  8256  0035                     	ds	1
  8257  0036                     ??_sendSensorData:
  8258  0036                     sendSensorInfo@idx:	
  8259                           ; 1 bytes @ 0x16
  8260                           
  8261                           
  8262                           ; 2 bytes @ 0x16
  8263  0036                     	ds	1
  8264  0037                     ??_readINA220:
  8265  0037                     writeINA220@address:	
  8266                           ; 1 bytes @ 0x17
  8267                           
  8268                           
  8269                           ; 1 bytes @ 0x17
  8270  0037                     	ds	1
  8271  0038                     ??_writeINA220:
  8272  0038                     getMed@buff:	
  8273                           ; 1 bytes @ 0x18
  8274                           
  8275  0038                     sendSensorData@packet:	
  8276                           ; 4 bytes @ 0x18
  8277                           
  8278                           
  8279                           ; 8 bytes @ 0x18
  8280  0038                     	ds	1
  8281  0039                     readINA220@pRxbuffer:
  8282  0039                     writeINA220@regadd:	
  8283                           ; 1 bytes @ 0x19
  8284                           
  8285                           
  8286                           ; 1 bytes @ 0x19
  8287  0039                     	ds	1
  8288  003A                     readINA220@pTxbuffer:
  8289  003A                     writeINA220@pTxbuffer:	
  8290                           ; 1 bytes @ 0x1A
  8291                           
  8292                           
  8293                           ; 1 bytes @ 0x1A
  8294  003A                     	ds	1
  8295  003B                     readINA220@buff:
  8296  003B                     writeINA220@Txbuffer:	
  8297                           ; 2 bytes @ 0x1B
  8298                           
  8299                           
  8300                           ; 3 bytes @ 0x1B
  8301  003B                     	ds	1
  8302  003C                     getMed@i:
  8303                           
  8304                           ; 1 bytes @ 0x1C
  8305  003C                     	ds	1
  8306  003D                     readINA220@regadd:
  8307  003D                     getMed@aux:	
  8308                           ; 1 bytes @ 0x1D
  8309                           
  8310                           
  8311                           ; 1 bytes @ 0x1D
  8312  003D                     	ds	1
  8313  003E                     ?_getMetrics:
  8314  003E                     readINA220@ret:	
  8315                           ; 1 bytes @ 0x1E
  8316                           
  8317  003E                     getMetrics@device:	
  8318                           ; 2 bytes @ 0x1E
  8319                           
  8320                           
  8321                           ; 2 bytes @ 0x1E
  8322  003E                     	ds	2
  8323  0040                     ?_getINA220Data:
  8324  0040                     ?_getHis:	
  8325                           ; 1 bytes @ 0x20
  8326                           
  8327  0040                     getINA220Data@device:	
  8328                           ; 1 bytes @ 0x20
  8329                           
  8330  0040                     getHis@data:	
  8331                           ; 2 bytes @ 0x20
  8332                           
  8333                           
  8334                           ; 2 bytes @ 0x20
  8335  0040                     	ds	2
  8336  0042                     ??_getINA220Data:
  8337  0042                     ??_getHis:	
  8338                           ; 1 bytes @ 0x22
  8339                           
  8340                           
  8341                           ; 1 bytes @ 0x22
  8342  0042                     	ds	2
  8343  0044                     getHis@i:
  8344                           
  8345                           ; 1 bytes @ 0x24
  8346  0044                     	ds	1
  8347  0045                     getHis@aux:
  8348                           
  8349                           ; 1 bytes @ 0x25
  8350  0045                     	ds	1
  8351  0046                     getINA220Data@buff:
  8352                           
  8353                           ; 2 bytes @ 0x26
  8354  0046                     	ds	2
  8355  0048                     ?_processCommand:
  8356  0048                     processCommand@data:	
  8357                           ; 1 bytes @ 0x28
  8358                           
  8359                           
  8360                           ; 1 bytes @ 0x28
  8361  0048                     	ds	1
  8362  0049                     processCommand@sensor:
  8363                           
  8364                           ; 2 bytes @ 0x29
  8365  0049                     	ds	2
  8366  004B                     ??_processCommand:
  8367                           
  8368                           ; 1 bytes @ 0x2B
  8369  004B                     	ds	4
  8370  004F                     processCommand@command:
  8371                           
  8372                           ; 1 bytes @ 0x2F
  8373  004F                     	ds	1
  8374  0050                     ??_main:
  8375                           
  8376                           ; 1 bytes @ 0x30
  8377  0050                     	ds	3
  8378                           
  8379                           	psect	maintext
  8380  0207                     __pmaintext:	
  8381 ;;
  8382 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  8383 ;;
  8384 ;; *************** function _main *****************
  8385 ;; Defined at:
  8386 ;;		line 99 in file "main.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  packet         11    0[BANK1 ] struct .
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : B3F/0
  8397 ;;		On exit  : 3F/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;Total ram usage:       14 bytes
  8405 ;; Hardware stack levels required when called: 16
  8406 ;; This function calls:
  8407 ;;		_SYSTEM_Initialize
  8408 ;;		_TMR2_Start
  8409 ;;		_TMR2_Stop
  8410 ;;		_TMR4_Start
  8411 ;;		_TMR4_Stop
  8412 ;;		_TxDeviceDisable
  8413 ;;		_getINA220Data
  8414 ;;		_getMetrics
  8415 ;;		_initRxBuffer
  8416 ;;		_processCommand
  8417 ;;		_receiveData
  8418 ;;		_stringCompare
  8419 ;; This function is called by:
  8420 ;;		Startup code after reset
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424  0207                     _main:	
  8425                           ;psect for function _main
  8426                           
  8427                           
  8428                           ;main.c: 101:     cmd_packet_t packet= {
  8429                           
  8430                           ;incstack = 0
  8431                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8432  0207  30C5               	movlw	low main@F11064
  8433  0208  0086               	movwf	6
  8434  0209  3000               	movlw	high main@F11064
  8435  020A  0087               	movwf	7
  8436  020B  30DF               	movlw	low main@packet
  8437  020C  0084               	movwf	4
  8438  020D  3000               	movlw	high main@packet
  8439  020E  0085               	movwf	5
  8440  020F  300B               	movlw	11
  8441  0210  00D0               	movwf	??_main
  8442  0211                     u3320:
  8443  0211  0016               	moviw fsr1++
  8444  0212  001A               	movwi fsr0++
  8445  0213  0BD0               	decfsz	??_main,f
  8446  0214  2A11               	goto	u3320
  8447                           
  8448                           ;main.c: 106:     SYSTEM_Initialize();
  8449  0215  318B  239D  3182   	fcall	_SYSTEM_Initialize
  8450                           
  8451                           ;main.c: 107:     TxDeviceDisable();
  8452  0218  3188  20B5  3182   	fcall	_TxDeviceDisable
  8453  021B  1498               	bsf	24,1	;volatile
  8454  021C  1418               	bsf	24,0	;volatile
  8455  021D  119A               	bcf	26,3	;volatile
  8456                           
  8457                           ;main.c: 113:     (INTCONbits.GIE = 1);
  8458  021E  178B               	bsf	11,7	;volatile
  8459                           
  8460                           ;main.c: 114:     (INTCONbits.PEIE = 1);
  8461  021F  170B               	bsf	11,6	;volatile
  8462  0220                     l1050:	
  8463                           ;main.c: 117:     while(1)
  8464                           
  8465  0220  0063               	sleep	;# 
  8466                           
  8467                           ;main.c: 120:         if(eusart1PacketFinish)
  8468  0221  0140               	movlb	0	; select bank0
  8469  0222  086B               	movf	_eusart1PacketFinish,w	;volatile
  8470  0223  1903               	btfsc	3,2
  8471  0224  2A94               	goto	l5691
  8472                           
  8473                           ;main.c: 121:         {;main.c: 122:             eusart1PacketFinish--;
  8474  0225  3001               	movlw	1
  8475  0226  02EB               	subwf	_eusart1PacketFinish,f	;volatile
  8476                           
  8477                           ;main.c: 123:             initRxBuffer((char *)&packet.cmd_packet, sizeof(cmd_packet_fie
      +                          lds_t));
  8478  0227  3000               	movlw	0
  8479  0228  00A3               	movwf	initRxBuffer@size+3
  8480  0229  3000               	movlw	0
  8481  022A  00A2               	movwf	initRxBuffer@size+2
  8482  022B  3000               	movlw	0
  8483  022C  00A1               	movwf	initRxBuffer@size+1
  8484  022D  300B               	movlw	11
  8485  022E  00A0               	movwf	initRxBuffer@size
  8486  022F  30DF               	movlw	(low (main@packet| 0))& (0+255)
  8487  0230  318C  2494  3182   	fcall	_initRxBuffer
  8488                           
  8489                           ;main.c: 124:             receiveData((char *)&packet.cmd_packet,sizeof(cmd_packet_field
      +                          s_t));
  8490  0233  300B               	movlw	11
  8491  0234  00D0               	movwf	??_main
  8492  0235  0850               	movf	??_main,w
  8493  0236  00A0               	movwf	receiveData@maxdata
  8494  0237  30DF               	movlw	(low (main@packet| 0))& (0+255)
  8495  0238  318C  241F  3182   	fcall	_receiveData
  8496                           
  8497                           ;main.c: 126:             if(stringCompare(packet.cmd_packet_fields.address, panel.senso
      +                          r_info.address, 3) == 0)
  8498  023B  30A5               	movlw	low (_panel+5)
  8499  023C  00A0               	movwf	stringCompare@buf
  8500  023D  3001               	movlw	high (_panel+5)
  8501  023E  00A1               	movwf	stringCompare@buf+1
  8502  023F  3003               	movlw	3
  8503  0240  00A2               	movwf	stringCompare@byte_count
  8504  0241  3000               	movlw	0
  8505  0242  00A3               	movwf	stringCompare@byte_count+1
  8506  0243  30E1               	movlw	(low ((main@packet| 0+2)))& (0+255)
  8507  0244  3187  27CD  3182   	fcall	_stringCompare
  8508  0247  0820               	movf	?_stringCompare,w
  8509  0248  0421               	iorwf	?_stringCompare+1,w
  8510  0249  1D03               	btfss	3,2
  8511  024A  2A58               	goto	l1052
  8512                           
  8513                           ;main.c: 127:             {;main.c: 128:                 processCommand(packet.cmd_packe
      +                          t_fields.command, &packet.cmd_packet_fields.data[0], &panel);
  8514  024B  30E5               	movlw	(low ((main@packet| 0+6)))& (0+255)
  8515  024C  00D0               	movwf	??_main
  8516  024D  0850               	movf	??_main,w
  8517  024E  00C8               	movwf	processCommand@data
  8518  024F  30A0               	movlw	low _panel
  8519  0250  00C9               	movwf	processCommand@sensor
  8520  0251  3001               	movlw	high _panel
  8521  0252  00CA               	movwf	processCommand@sensor+1
  8522  0253  0141               	movlb	1	; select bank1
  8523  0254  0864               	movf	(main@packet^(0+128)+5),w
  8524  0255  3180  208E  3182   	fcall	_processCommand
  8525  0258                     l1052:	
  8526                           ;main.c: 129:             }
  8527                           
  8528                           
  8529                           ;main.c: 130:             if(stringCompare(packet.cmd_packet_fields.address, battery.sen
      +                          sor_info.address, 3) == 0)
  8530  0258  3025               	movlw	low (_battery+5)
  8531  0259  0140               	movlb	0	; select bank0
  8532  025A  00A0               	movwf	stringCompare@buf
  8533  025B  3001               	movlw	high (_battery+5)
  8534  025C  00A1               	movwf	stringCompare@buf+1
  8535  025D  3003               	movlw	3
  8536  025E  00A2               	movwf	stringCompare@byte_count
  8537  025F  3000               	movlw	0
  8538  0260  00A3               	movwf	stringCompare@byte_count+1
  8539  0261  30E1               	movlw	(low ((main@packet| 0+2)))& (0+255)
  8540  0262  3187  27CD  3182   	fcall	_stringCompare
  8541  0265  0820               	movf	?_stringCompare,w
  8542  0266  0421               	iorwf	?_stringCompare+1,w
  8543  0267  1D03               	btfss	3,2
  8544  0268  2A76               	goto	l1053
  8545                           
  8546                           ;main.c: 131:    {;main.c: 132:                 processCommand(packet.cmd_packet_fields.
      +                          command, &packet.cmd_packet_fields.data[0], &battery);
  8547  0269  30E5               	movlw	(low ((main@packet| 0+6)))& (0+255)
  8548  026A  00D0               	movwf	??_main
  8549  026B  0850               	movf	??_main,w
  8550  026C  00C8               	movwf	processCommand@data
  8551  026D  3020               	movlw	low _battery
  8552  026E  00C9               	movwf	processCommand@sensor
  8553  026F  3001               	movlw	high _battery
  8554  0270  00CA               	movwf	processCommand@sensor+1
  8555  0271  0141               	movlb	1	; select bank1
  8556  0272  0864               	movf	(main@packet^(0+128)+5),w
  8557  0273  3180  208E  3182   	fcall	_processCommand
  8558  0276                     l1053:	
  8559                           ;main.c: 133:    }
  8560                           
  8561                           
  8562                           ;main.c: 134:             if(stringCompare(packet.cmd_packet_fields.address, cons.sensor
      +                          _info.address, 3) == 0)
  8563  0276  3025               	movlw	low (_cons+5)
  8564  0277  0140               	movlb	0	; select bank0
  8565  0278  00A0               	movwf	stringCompare@buf
  8566  0279  3002               	movlw	high (_cons+5)
  8567  027A  00A1               	movwf	stringCompare@buf+1
  8568  027B  3003               	movlw	3
  8569  027C  00A2               	movwf	stringCompare@byte_count
  8570  027D  3000               	movlw	0
  8571  027E  00A3               	movwf	stringCompare@byte_count+1
  8572  027F  30E1               	movlw	(low ((main@packet| 0+2)))& (0+255)
  8573  0280  3187  27CD  3182   	fcall	_stringCompare
  8574  0283  0820               	movf	?_stringCompare,w
  8575  0284  0421               	iorwf	?_stringCompare+1,w
  8576  0285  1D03               	btfss	3,2
  8577  0286  2A94               	goto	l5691
  8578                           
  8579                           ;main.c: 135:    {;main.c: 136:                 processCommand(packet.cmd_packet_fields.
      +                          command, &packet.cmd_packet_fields.data[0], &cons);
  8580  0287  30E5               	movlw	(low ((main@packet| 0+6)))& (0+255)
  8581  0288  00D0               	movwf	??_main
  8582  0289  0850               	movf	??_main,w
  8583  028A  00C8               	movwf	processCommand@data
  8584  028B  3020               	movlw	low _cons
  8585  028C  00C9               	movwf	processCommand@sensor
  8586  028D  3002               	movlw	high _cons
  8587  028E  00CA               	movwf	processCommand@sensor+1
  8588  028F  0141               	movlb	1	; select bank1
  8589  0290  0864               	movf	(main@packet^(0+128)+5),w
  8590  0291  3180  208E  3182   	fcall	_processCommand
  8591  0294                     l5691:
  8592                           
  8593                           ;main.c: 139:         if(measureTime)
  8594  0294  0140               	movlb	0	; select bank0
  8595  0295  0861               	movf	_measureTime,w
  8596  0296  1903               	btfsc	3,2
  8597  0297  2AC3               	goto	l5697
  8598                           
  8599                           ;main.c: 140:         {;main.c: 141:             getINA220Data(&panel);
  8600  0298  30A0               	movlw	low _panel
  8601  0299  00C0               	movwf	getINA220Data@device
  8602  029A  3001               	movlw	high _panel
  8603  029B  00C1               	movwf	getINA220Data@device+1
  8604  029C  3183  2364  3182   	fcall	_getINA220Data
  8605                           
  8606                           ;main.c: 142:             getINA220Data(&battery);
  8607  029F  3020               	movlw	low _battery
  8608  02A0  00C0               	movwf	getINA220Data@device
  8609  02A1  3001               	movlw	high _battery
  8610  02A2  00C1               	movwf	getINA220Data@device+1
  8611  02A3  3183  2364  3182   	fcall	_getINA220Data
  8612                           
  8613                           ;main.c: 143:             getINA220Data(&cons);
  8614  02A6  3020               	movlw	low _cons
  8615  02A7  00C0               	movwf	getINA220Data@device
  8616  02A8  3002               	movlw	high _cons
  8617  02A9  00C1               	movwf	getINA220Data@device+1
  8618  02AA  3183  2364  3182   	fcall	_getINA220Data
  8619                           
  8620                           ;main.c: 144:             getMetrics(&panel);
  8621  02AD  30A0               	movlw	low _panel
  8622  02AE  00BE               	movwf	getMetrics@device
  8623  02AF  3001               	movlw	high _panel
  8624  02B0  00BF               	movwf	getMetrics@device+1
  8625  02B1  318E  2666  3182   	fcall	_getMetrics
  8626                           
  8627                           ;main.c: 145:             getMetrics(&battery);
  8628  02B4  3020               	movlw	low _battery
  8629  02B5  00BE               	movwf	getMetrics@device
  8630  02B6  3001               	movlw	high _battery
  8631  02B7  00BF               	movwf	getMetrics@device+1
  8632  02B8  318E  2666  3182   	fcall	_getMetrics
  8633                           
  8634                           ;main.c: 146:             getMetrics(&cons);
  8635  02BB  3020               	movlw	low _cons
  8636  02BC  00BE               	movwf	getMetrics@device
  8637  02BD  3002               	movlw	high _cons
  8638  02BE  00BF               	movwf	getMetrics@device+1
  8639  02BF  318E  2666  3182   	fcall	_getMetrics
  8640                           
  8641                           ;main.c: 147:             measureTime = 0;
  8642  02C2  01E1               	clrf	_measureTime
  8643  02C3                     l5697:
  8644                           
  8645                           ;main.c: 150:         if(status.chrg != status_prev.chrg)
  8646  02C3  085F               	movf	_status+5,w
  8647  02C4  0658               	xorwf	_status_prev+5,w
  8648  02C5  1903               	skipnz
  8649  02C6  2AD1               	goto	l1056
  8650                           
  8651                           ;main.c: 151:         {;main.c: 152:             if(status.chrg)
  8652  02C7  085F               	movf	_status+5,w
  8653  02C8  1903               	btfsc	3,2
  8654  02C9  2ACC               	goto	l1061
  8655                           
  8656                           ;main.c: 153:             {;main.c: 154:                 do { LATAbits.LATA1 = 1; } whil
      +                          e(0);
  8657  02CA  1498               	bsf	24,1	;volatile
  8658  02CB  2ACD               	goto	l5701
  8659  02CC                     l1061:	
  8660                           ;main.c: 156:             {;main.c: 157:                 do { LATAbits.LATA1 = 0; } whil
      +                          e(0);
  8661                           
  8662  02CC  1098               	bcf	24,1	;volatile
  8663  02CD                     l5701:
  8664                           
  8665                           ;main.c: 159:             status_prev.chrg = status.chrg;
  8666  02CD  085F               	movf	_status+5,w
  8667  02CE  00D0               	movwf	??_main
  8668  02CF  0850               	movf	??_main,w
  8669  02D0  00D8               	movwf	_status_prev+5
  8670  02D1                     l1056:	
  8671                           ;main.c: 160:         }
  8672                           
  8673                           
  8674                           ;main.c: 162:         if(status.uvp != status_prev.uvp)
  8675  02D1  0860               	movf	_status+6,w
  8676  02D2  0659               	xorwf	_status_prev+6,w
  8677  02D3  1903               	skipnz
  8678  02D4  2ADF               	goto	l1063
  8679                           
  8680                           ;main.c: 163:         {;main.c: 164:             if(status.uvp)
  8681  02D5  0860               	movf	_status+6,w
  8682  02D6  1903               	btfsc	3,2
  8683  02D7  2ADA               	goto	l1068
  8684                           
  8685                           ;main.c: 165:             {;main.c: 166:                 do { LATAbits.LATA0 = 0; } whil
      +                          e(0);
  8686  02D8  1018               	bcf	24,0	;volatile
  8687  02D9  2ADB               	goto	l5705
  8688  02DA                     l1068:	
  8689                           ;main.c: 168:             {;main.c: 169:                 do { LATAbits.LATA0 = 1; } whil
      +                          e(0);
  8690                           
  8691  02DA  1418               	bsf	24,0	;volatile
  8692  02DB                     l5705:
  8693                           
  8694                           ;main.c: 171:             status_prev.uvp = status.uvp;
  8695  02DB  0860               	movf	_status+6,w
  8696  02DC  00D0               	movwf	??_main
  8697  02DD  0850               	movf	??_main,w
  8698  02DE  00D9               	movwf	_status_prev+6
  8699  02DF                     l1063:	
  8700                           ;main.c: 172:         }
  8701                           
  8702                           
  8703                           ;main.c: 174:         if(status.beacon != status_prev.beacon){
  8704  02DF  085E               	movf	_status+4,w
  8705  02E0  0657               	xorwf	_status_prev+4,w
  8706  02E1  1903               	skipnz
  8707  02E2  2AFA               	goto	l5717
  8708                           
  8709                           ;main.c: 175:             if(status.beacon)
  8710  02E3  085E               	movf	_status+4,w
  8711  02E4  1903               	btfsc	3,2
  8712  02E5  2AED               	goto	l5711
  8713                           
  8714                           ;main.c: 176:             {;main.c: 177:                 TMR4_Start();
  8715  02E6  3188  20AF  3182   	fcall	_TMR4_Start
  8716                           
  8717                           ;main.c: 178:                 TMR2_Start();
  8718  02E9  3188  209F  3182   	fcall	_TMR2_Start
  8719                           
  8720                           ;main.c: 179:             }else
  8721  02EC  2AF5               	goto	l5715
  8722  02ED                     l5711:
  8723                           
  8724                           ;main.c: 180:             {;main.c: 181:                 TMR4_Stop();
  8725  02ED  3188  20B2  3182   	fcall	_TMR4_Stop
  8726                           
  8727                           ;main.c: 182:                 TMR2_Stop();
  8728  02F0  3188  20A1  3182   	fcall	_TMR2_Stop
  8729  02F3  0140               	movlb	0	; select bank0
  8730  02F4  1298               	bcf	24,5	;volatile
  8731  02F5                     l5715:
  8732                           
  8733                           ;main.c: 185:             status_prev.beacon = status.beacon;
  8734  02F5  0140               	movlb	0	; select bank0
  8735  02F6  085E               	movf	_status+4,w
  8736  02F7  00D0               	movwf	??_main
  8737  02F8  0850               	movf	??_main,w
  8738  02F9  00D7               	movwf	_status_prev+4
  8739  02FA                     l5717:
  8740                           
  8741                           ;main.c: 188:         if(battery.sensor_data.voltage.med > 3375)
  8742  02FA  0142               	movlb	2	; select bank2
  8743  02FB  0842               	movf	((_battery+1)^(0+256)+33),w
  8744  02FC  3A80               	xorlw	128
  8745  02FD  0140               	movlb	0	; select bank0
  8746  02FE  00D0               	movwf	??_main
  8747  02FF  308D               	movlw	141
  8748  0300  0250               	subwf	??_main,w
  8749  0301  1D03               	skipz
  8750  0302  2B06               	goto	u3445
  8751  0303  3030               	movlw	48
  8752  0304  0142               	movlb	2	; select bank2
  8753  0305  0241               	subwf	(_battery^(0+256)+33),w
  8754  0306                     u3445:
  8755  0306  1C03               	skipc
  8756  0307  2B22               	goto	l5723
  8757                           
  8758                           ;main.c: 189:         {;main.c: 190:             if(battery.sensor_data.current.hist[bat
      +                          tery.sensor_data.current.pWrite] > status.curr_tail)
  8759  0308  0142               	movlb	2	; select bank2
  8760  0309  355A               	lslf	(_battery^(0+256)+58),w
  8761  030A  3E44               	addlw	(low ((_battery| (0+256)+36)))& (0+255)
  8762  030B  0086               	movwf	6
  8763  030C  3001               	movlw	1	; select bank2/3
  8764  030D  0087               	movwf	7
  8765  030E  3F40               	moviw [0]fsr1
  8766  030F  0140               	movlb	0	; select bank0
  8767  0310  00D0               	movwf	??_main
  8768  0311  3F41               	moviw [1]fsr1
  8769  0312  00D1               	movwf	??_main+1
  8770  0313  085D               	movf	_status+3,w
  8771  0314  3A80               	xorlw	128
  8772  0315  00D2               	movwf	??_main+2
  8773  0316  0851               	movf	??_main+1,w
  8774  0317  3A80               	xorlw	128
  8775  0318  0252               	subwf	??_main+2,w
  8776  0319  1D03               	skipz
  8777  031A  2B1D               	goto	u3455
  8778  031B  0850               	movf	??_main,w
  8779  031C  025C               	subwf	_status+2,w
  8780  031D                     u3455:
  8781  031D  1803               	skipnc
  8782  031E  2B31               	goto	l5727
  8783                           
  8784                           ;main.c: 191:             {;main.c: 192:                 status.chrg = 0;
  8785  031F  0140               	movlb	0	; select bank0
  8786  0320  01DF               	clrf	_status+5
  8787  0321  2B31               	goto	l5727
  8788  0322                     l5723:
  8789  0322  0140               	movlb	0	; select bank0
  8790  0323  085B               	movf	_status+1,w
  8791  0324  0142               	movlb	2	; select bank2
  8792  0325  0242               	subwf	((_battery+1)^(0+256)+33),w
  8793  0326  1D03               	skipz
  8794  0327  2B2C               	goto	u3465
  8795  0328  0140               	movlb	0	; select bank0
  8796  0329  085A               	movf	_status,w
  8797  032A  0142               	movlb	2	; select bank2
  8798  032B  0241               	subwf	(_battery^(0+256)+33),w
  8799  032C                     u3465:
  8800  032C  1803               	skipnc
  8801  032D  2B31               	goto	l5727
  8802                           
  8803                           ;main.c: 196:         {;main.c: 197:             status.chrg = 1;
  8804  032E  0140               	movlb	0	; select bank0
  8805  032F  01DF               	clrf	_status+5
  8806  0330  0ADF               	incf	_status+5,f
  8807  0331                     l5727:
  8808                           
  8809                           ;main.c: 200:         if(battery.sensor_data.voltage.hist[battery.sensor_data.voltage.pW
      +                          rite] > 2750)
  8810  0331  0142               	movlb	2	; select bank2
  8811  0332  3543               	lslf	(_battery^(0+256)+35),w
  8812  0333  3E2D               	addlw	(low ((_battery| (0+256)+13)))& (0+255)
  8813  0334  0086               	movwf	6
  8814  0335  3001               	movlw	1	; select bank2/3
  8815  0336  0087               	movwf	7
  8816  0337  3F40               	moviw [0]fsr1
  8817  0338  0140               	movlb	0	; select bank0
  8818  0339  00D0               	movwf	??_main
  8819  033A  3F41               	moviw [1]fsr1
  8820  033B  00D1               	movwf	??_main+1
  8821  033C  0851               	movf	??_main+1,w
  8822  033D  3A80               	xorlw	128
  8823  033E  00D2               	movwf	??_main+2
  8824  033F  308A               	movlw	138
  8825  0340  0252               	subwf	??_main+2,w
  8826  0341  1D03               	skipz
  8827  0342  2B45               	goto	u3475
  8828  0343  30BF               	movlw	191
  8829  0344  0250               	subwf	??_main,w
  8830  0345                     u3475:
  8831  0345  1C03               	skipc
  8832  0346  2B4A               	goto	l5731
  8833                           
  8834                           ;main.c: 201:         {;main.c: 202:             status.uvp=0;
  8835  0347  0140               	movlb	0	; select bank0
  8836  0348  01E0               	clrf	_status+6
  8837                           
  8838                           ;main.c: 203:         }
  8839  0349  2A20               	goto	l1050
  8840  034A                     l5731:
  8841  034A  0142               	movlb	2	; select bank2
  8842  034B  3543               	lslf	(_battery^(0+256)+35),w
  8843  034C  3E2D               	addlw	(low ((_battery| (0+256)+13)))& (0+255)
  8844  034D  0086               	movwf	6
  8845  034E  3001               	movlw	1	; select bank2/3
  8846  034F  0087               	movwf	7
  8847  0350  3F40               	moviw [0]fsr1
  8848  0351  0140               	movlb	0	; select bank0
  8849  0352  00D0               	movwf	??_main
  8850  0353  3F41               	moviw [1]fsr1
  8851  0354  00D1               	movwf	??_main+1
  8852  0355  0851               	movf	??_main+1,w
  8853  0356  3A80               	xorlw	128
  8854  0357  00D2               	movwf	??_main+2
  8855  0358  3089               	movlw	137
  8856  0359  0252               	subwf	??_main+2,w
  8857  035A  1D03               	skipz
  8858  035B  2B5E               	goto	u3485
  8859  035C  30C4               	movlw	196
  8860  035D  0250               	subwf	??_main,w
  8861  035E                     u3485:
  8862  035E  1803               	skipnc
  8863  035F  2A20               	goto	l1050
  8864                           
  8865                           ;main.c: 205:         {;main.c: 206:             status.uvp=1;
  8866  0360  0140               	movlb	0	; select bank0
  8867  0361  01E0               	clrf	_status+6
  8868  0362  0AE0               	incf	_status+6,f
  8869  0363  2A20               	goto	l1050
  8870  0364                     __end_of_main:
  8871                           
  8872                           	psect	text1
  8873  07CD                     __ptext1:	
  8874 ;; *************** function _stringCompare *****************
  8875 ;; Defined at:
  8876 ;;		line 47 in file "device.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  str             1    wreg     PTR const unsigned char 
  8879 ;;		 -> main@packet.address(3), main@packet(11), 
  8880 ;;  buf             2    0[BANK0 ] PTR const unsigned char 
  8881 ;;		 -> cons.sensor_info.address(3), cons.sensor_info(8), battery.sensor_info.address(3), battery.sensor_info(8), 
  8882 ;;		 -> panel.sensor_info.address(3), panel.sensor_info(8), 
  8883 ;;  byte_count      2    2[BANK0 ] int 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  str             1    6[BANK0 ] PTR const unsigned char 
  8886 ;;		 -> main@packet.address(3), main@packet(11), 
  8887 ;;  idx             2    4[BANK0 ] int 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  2    0[BANK0 ] int 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8892 ;; Tracked objects:
  8893 ;;		On entry : 3F/0
  8894 ;;		On exit  : 3F/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;Total ram usage:        8 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 4
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_main
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911  07CD                     _stringCompare:	
  8912                           ;psect for function _stringCompare
  8913                           
  8914                           
  8915                           ;incstack = 0
  8916                           ; Regs used in _stringCompare: [wreg-fsr1h+status,2+status,0]
  8917                           ;stringCompare@str stored from wreg
  8918  07CD  00A6               	movwf	stringCompare@str
  8919                           
  8920                           ;device.c: 47: int stringCompare(const char* str, const char* buf, int byte_count);devic
      +                          e.c: 48: {;device.c: 49:  int idx = 0;
  8921  07CE  01A4               	clrf	stringCompare@idx
  8922  07CF  01A5               	clrf	stringCompare@idx+1
  8923                           
  8924                           ;device.c: 51:  for(idx = 0; idx < byte_count; idx++)
  8925  07D0  01A4               	clrf	stringCompare@idx
  8926  07D1  01A5               	clrf	stringCompare@idx+1
  8927  07D2                     l5595:
  8928  07D2  0825               	movf	stringCompare@idx+1,w
  8929  07D3  3A80               	xorlw	128
  8930  07D4  00F4               	movwf	??_stringCompare
  8931  07D5  0823               	movf	stringCompare@byte_count+1,w
  8932  07D6  3A80               	xorlw	128
  8933  07D7  0274               	subwf	??_stringCompare,w
  8934  07D8  1D03               	skipz
  8935  07D9  2FDC               	goto	u3315
  8936  07DA  0822               	movf	stringCompare@byte_count,w
  8937  07DB  0224               	subwf	stringCompare@idx,w
  8938  07DC                     u3315:
  8939  07DC  1803               	btfsc	3,0
  8940  07DD  2FFC               	goto	l5597
  8941                           
  8942                           ;device.c: 52:  {;device.c: 53:   if(*str != *buf)
  8943  07DE  0140               	movlb	0	; select bank0
  8944  07DF  0820               	movf	stringCompare@buf,w
  8945  07E0  0086               	movwf	6
  8946  07E1  0821               	movf	stringCompare@buf+1,w
  8947  07E2  0087               	movwf	7
  8948  07E3  0826               	movf	stringCompare@str,w
  8949  07E4  0084               	movwf	4
  8950  07E5  0185               	clrf	5
  8951  07E6  0800               	movf	0,w
  8952  07E7  0601               	xorwf	1,w
  8953  07E8  1903               	skipnz
  8954  07E9  2FEF               	goto	l5589
  8955                           
  8956                           ;device.c: 54:    return -1;
  8957  07EA  30FF               	movlw	255
  8958  07EB  00A0               	movwf	?_stringCompare
  8959  07EC  30FF               	movlw	255
  8960  07ED  00A1               	movwf	?_stringCompare+1
  8961  07EE  0008               	return
  8962  07EF                     l5589:
  8963                           
  8964                           ;device.c: 56:   {;device.c: 57:    str++;
  8965  07EF  3001               	movlw	1
  8966  07F0  00F4               	movwf	??_stringCompare
  8967  07F1  0874               	movf	??_stringCompare,w
  8968  07F2  07A6               	addwf	stringCompare@str,f
  8969                           
  8970                           ;device.c: 58:    buf++;
  8971  07F3  3001               	movlw	1
  8972  07F4  07A0               	addwf	stringCompare@buf,f
  8973  07F5  3000               	movlw	0
  8974  07F6  3DA1               	addwfc	stringCompare@buf+1,f
  8975                           
  8976                           ;device.c: 60:  }
  8977  07F7  3001               	movlw	1
  8978  07F8  07A4               	addwf	stringCompare@idx,f
  8979  07F9  3000               	movlw	0
  8980  07FA  3DA5               	addwfc	stringCompare@idx+1,f
  8981  07FB  2FD2               	goto	l5595
  8982  07FC                     l5597:
  8983                           
  8984                           ;device.c: 61:  return 0;
  8985  07FC  0140               	movlb	0	; select bank0
  8986  07FD  01A0               	clrf	?_stringCompare
  8987  07FE  01A1               	clrf	?_stringCompare+1
  8988  07FF  0008               	return
  8989  0800                     __end_of_stringCompare:
  8990                           
  8991                           	psect	text2
  8992  0C1F                     __ptext2:	
  8993 ;; *************** function _receiveData *****************
  8994 ;; Defined at:
  8995 ;;		line 49 in file "communication.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  data            1    wreg     PTR unsigned char 
  8998 ;;		 -> main@packet(11), 
  8999 ;;  maxdata         1    0[BANK0 ] unsigned char 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  data            1    3[BANK0 ] PTR unsigned char 
  9002 ;;		 -> main@packet(11), 
  9003 ;;  charCount       1    5[BANK0 ] unsigned char 
  9004 ;;  c               1    4[BANK0 ] unsigned char 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  1    wreg      unsigned char 
  9007 ;; Registers used:
  9008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9009 ;; Tracked objects:
  9010 ;;		On entry : 3F/0
  9011 ;;		On exit  : 3F/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9014 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;Total ram usage:        6 bytes
  9019 ;; Hardware stack levels used: 1
  9020 ;; Hardware stack levels required when called: 5
  9021 ;; This function calls:
  9022 ;;		_EUSART1_Read
  9023 ;; This function is called by:
  9024 ;;		_main
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028  0C1F                     _receiveData:	
  9029                           ;psect for function _receiveData
  9030                           
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _receiveData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9034                           ;receiveData@data stored from wreg
  9035  0C1F  00A3               	movwf	receiveData@data
  9036                           
  9037                           ;communication.c: 49: uint8_t receiveData(char *data, uint8_t maxdata);communication.c: 
      +                          50: {;communication.c: 51:     uint8_t charCount = 0;
  9038  0C20  01A5               	clrf	receiveData@charCount
  9039  0C21                     l5565:
  9040                           
  9041                           ;communication.c: 55:     {;communication.c: 56:         c = EUSART1_Read();
  9042  0C21  318A  22A2  318C   	fcall	_EUSART1_Read
  9043  0C24  00A1               	movwf	??_receiveData
  9044  0C25  0821               	movf	??_receiveData,w
  9045  0C26  00A4               	movwf	receiveData@c
  9046                           
  9047                           ;communication.c: 57:         if(charCount <= maxdata)
  9048  0C27  0825               	movf	receiveData@charCount,w
  9049  0C28  0220               	subwf	receiveData@maxdata,w
  9050  0C29  1C03               	skipc
  9051  0C2A  2C39               	goto	l5573
  9052                           
  9053                           ;communication.c: 58:         {;communication.c: 59:             data[charCount++] = c;
  9054  0C2B  0824               	movf	receiveData@c,w
  9055  0C2C  00A1               	movwf	??_receiveData
  9056  0C2D  0825               	movf	receiveData@charCount,w
  9057  0C2E  0723               	addwf	receiveData@data,w
  9058  0C2F  00A2               	movwf	??_receiveData+1
  9059  0C30  0822               	movf	??_receiveData+1,w
  9060  0C31  0086               	movwf	6
  9061  0C32  0187               	clrf	7
  9062  0C33  0821               	movf	??_receiveData,w
  9063  0C34  0081               	movwf	1
  9064  0C35  3001               	movlw	1
  9065  0C36  00A1               	movwf	??_receiveData
  9066  0C37  0821               	movf	??_receiveData,w
  9067  0C38  07A5               	addwf	receiveData@charCount,f
  9068  0C39                     l5573:
  9069                           
  9070                           ;communication.c: 61:     }while(c != 0x0A);
  9071  0C39  300A               	movlw	10
  9072  0C3A  0624               	xorwf	receiveData@c,w
  9073  0C3B  1D03               	btfss	3,2
  9074  0C3C  2C21               	goto	l5565
  9075                           
  9076                           ;communication.c: 63:     data[charCount] = 0;
  9077  0C3D  0825               	movf	receiveData@charCount,w
  9078  0C3E  0723               	addwf	receiveData@data,w
  9079  0C3F  00A1               	movwf	??_receiveData
  9080  0C40  0821               	movf	??_receiveData,w
  9081  0C41  0086               	movwf	6
  9082  0C42  0187               	clrf	7
  9083  0C43  0181               	clrf	1
  9084  0C44  0008               	return
  9085  0C45                     __end_of_receiveData:
  9086                           
  9087                           	psect	text3
  9088  0AA2                     __ptext3:	
  9089 ;; *************** function _EUSART1_Read *****************
  9090 ;; Defined at:
  9091 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;		None
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  readValue       1    5[COMMON] unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      unsigned char 
  9098 ;; Registers used:
  9099 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 3F/0
  9102 ;;		On exit  : 3F/0
  9103 ;;		Unchanged: 3F/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;Total ram usage:        2 bytes
  9110 ;; Hardware stack levels used: 1
  9111 ;; Hardware stack levels required when called: 4
  9112 ;; This function calls:
  9113 ;;		Nothing
  9114 ;; This function is called by:
  9115 ;;		_receiveData
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119  0AA2                     _EUSART1_Read:	
  9120                           ;psect for function _EUSART1_Read
  9121                           
  9122  0AA2                     l5277:	
  9123                           ;mcc_generated_files/eusart1.c: 148:     while(!(eusart1RxHead != eusart1RxTail));
  9124                           
  9125                           ;incstack = 0
  9126                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9127                           
  9128  0AA2  0879               	movf	_eusart1RxHead,w	;volatile
  9129  0AA3  0678               	xorwf	_eusart1RxTail,w	;volatile
  9130  0AA4  1903               	skipnz
  9131  0AA5  2AA2               	goto	l5277
  9132                           
  9133                           ;mcc_generated_files/eusart1.c: 150:     readValue = eusart1RxBuffer[eusart1RxTail];
  9134  0AA6  0878               	movf	_eusart1RxTail,w
  9135  0AA7  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
  9136  0AA8  0086               	movwf	6
  9137  0AA9  3002               	movlw	2	; select bank5/6
  9138  0AAA  0087               	movwf	7
  9139  0AAB  0801               	movf	1,w
  9140  0AAC  00F4               	movwf	??_EUSART1_Read
  9141  0AAD  0874               	movf	??_EUSART1_Read,w
  9142  0AAE  00F5               	movwf	EUSART1_Read@readValue
  9143                           
  9144                           ;mcc_generated_files/eusart1.c: 151:     eusart1RxTail = (eusart1RxTail + 1) % 64;
  9145  0AAF  0878               	movf	_eusart1RxTail,w	;volatile
  9146  0AB0  3E01               	addlw	1
  9147  0AB1  393F               	andlw	63
  9148  0AB2  00F4               	movwf	??_EUSART1_Read
  9149  0AB3  0874               	movf	??_EUSART1_Read,w
  9150  0AB4  00F8               	movwf	_eusart1RxTail	;volatile
  9151                           
  9152                           ;mcc_generated_files/eusart1.c: 156:     return readValue;
  9153  0AB5  0875               	movf	EUSART1_Read@readValue,w
  9154  0AB6  0008               	return
  9155  0AB7                     __end_of_EUSART1_Read:
  9156                           
  9157                           	psect	text4
  9158  008E                     __ptext4:	
  9159 ;; *************** function _processCommand *****************
  9160 ;; Defined at:
  9161 ;;		line 182 in file "sensor.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  command         1    wreg     unsigned char 
  9164 ;;  data            1   40[BANK0 ] PTR unsigned char 
  9165 ;;		 -> main@packet(11), 
  9166 ;;  sensor          2   41[BANK0 ] PTR struct .
  9167 ;;		 -> cons(59), battery(59), panel(59), 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  command         1   47[BANK0 ] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      void 
  9172 ;; Registers used:
  9173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 3F/1
  9176 ;;		On exit  : 34/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9179 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;Total ram usage:        8 bytes
  9184 ;; Hardware stack levels used: 1
  9185 ;; Hardware stack levels required when called: 15
  9186 ;; This function calls:
  9187 ;;		_TMR0_Reload
  9188 ;;		_getHis
  9189 ;;		_getINA220Data
  9190 ;;		_getMax
  9191 ;;		_getMed
  9192 ;;		_getMin
  9193 ;;		_sendSensorData
  9194 ;;		_sendSensorInfo
  9195 ;;		_stringToInt16
  9196 ;;		_stringlen
  9197 ;; This function is called by:
  9198 ;;		_main
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202  008E                     _processCommand:	
  9203                           ;psect for function _processCommand
  9204                           
  9205                           
  9206                           ;incstack = 0
  9207                           ; Regs used in _processCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9208                           ;processCommand@command stored from wreg
  9209  008E  0140               	movlb	0	; select bank0
  9210  008F  00CF               	movwf	processCommand@command
  9211                           
  9212                           ;sensor.c: 182: void processCommand(char command, char* data, sensor_t *sensor);sensor.c
      +                          : 183: {;sensor.c: 184: switch(command)
  9213  0090  29D8               	goto	l5639
  9214  0091                     l5603:
  9215                           
  9216                           ;sensor.c: 187:         sendSensorInfo(&sensor->sensor_info);
  9217  0091  084A               	movf	processCommand@sensor+1,w
  9218  0092  00AE               	movwf	sendSensorInfo@sensor_info+1
  9219  0093  0849               	movf	processCommand@sensor,w
  9220  0094  00AD               	movwf	sendSensorInfo@sensor_info
  9221  0095  318F  27C4         	fcall	_sendSensorInfo
  9222                           
  9223                           ;sensor.c: 188:         break;
  9224  0097  0008               	return
  9225  0098                     l5605:
  9226                           
  9227                           ;sensor.c: 190:         getINA220Data(sensor);
  9228  0098  084A               	movf	processCommand@sensor+1,w
  9229  0099  00C1               	movwf	getINA220Data@device+1
  9230  009A  0849               	movf	processCommand@sensor,w
  9231  009B  00C0               	movwf	getINA220Data@device
  9232  009C  3183  2364         	fcall	_getINA220Data
  9233                           
  9234                           ;sensor.c: 191:         break;
  9235  009E  0008               	return
  9236  009F                     l5607:
  9237                           
  9238                           ;sensor.c: 193:         sendSensorData(sensor->sensor_data.voltage.hist[sensor->sensor_d
      +                          ata.voltage.pWrite]);
  9239  009F  0849               	movf	processCommand@sensor,w
  9240  00A0  3E23               	addlw	35
  9241  00A1  0086               	movwf	6
  9242  00A2  3000               	movlw	0
  9243  00A3  3D4A               	addwfc	processCommand@sensor+1,w
  9244  00A4  0087               	movwf	7
  9245  00A5  0801               	movf	1,w
  9246  00A6  00CB               	movwf	??_processCommand
  9247  00A7  01CC               	clrf	??_processCommand+1
  9248  00A8  35CB               	lslf	??_processCommand,f
  9249  00A9  0DCC               	rlf	??_processCommand+1,f
  9250  00AA  084B               	movf	??_processCommand,w
  9251  00AB  0749               	addwf	processCommand@sensor,w
  9252  00AC  00CD               	movwf	??_processCommand+2
  9253  00AD  084C               	movf	??_processCommand+1,w
  9254  00AE  3D4A               	addwfc	processCommand@sensor+1,w
  9255  00AF  00CE               	movwf	??_processCommand+3
  9256  00B0  084D               	movf	??_processCommand+2,w
  9257  00B1  0086               	movwf	6
  9258  00B2  084E               	movf	??_processCommand+3,w
  9259  00B3  0087               	movwf	7
  9260  00B4  314D               	addfsr 1,13
  9261  00B5  3F40               	moviw [0]fsr1
  9262  00B6  00B4               	movwf	sendSensorData@sensor_data
  9263  00B7  3F41               	moviw [1]fsr1
  9264  00B8  00B5               	movwf	sendSensorData@sensor_data+1
  9265  00B9  318D  25CC  3180   	fcall	_sendSensorData
  9266                           
  9267                           ;sensor.c: 194:         sendSensorData(sensor->sensor_data.current.hist[sensor->sensor_d
      +                          ata.current.pWrite]);
  9268  00BC  0849               	movf	processCommand@sensor,w
  9269  00BD  3E3A               	addlw	58
  9270  00BE  0086               	movwf	6
  9271  00BF  3000               	movlw	0
  9272  00C0  3D4A               	addwfc	processCommand@sensor+1,w
  9273  00C1  0087               	movwf	7
  9274  00C2  0801               	movf	1,w
  9275  00C3  00CB               	movwf	??_processCommand
  9276  00C4  01CC               	clrf	??_processCommand+1
  9277  00C5  35CB               	lslf	??_processCommand,f
  9278  00C6  0DCC               	rlf	??_processCommand+1,f
  9279  00C7  084B               	movf	??_processCommand,w
  9280  00C8  0749               	addwf	processCommand@sensor,w
  9281  00C9  00CD               	movwf	??_processCommand+2
  9282  00CA  084C               	movf	??_processCommand+1,w
  9283  00CB  3D4A               	addwfc	processCommand@sensor+1,w
  9284  00CC  00CE               	movwf	??_processCommand+3
  9285  00CD  084D               	movf	??_processCommand+2,w
  9286  00CE  3E24               	addlw	36
  9287  00CF  0086               	movwf	6
  9288  00D0  3000               	movlw	0
  9289  00D1  3D4E               	addwfc	??_processCommand+3,w
  9290  00D2  0087               	movwf	7
  9291  00D3  3F40               	moviw [0]fsr1
  9292  00D4  00B4               	movwf	sendSensorData@sensor_data
  9293  00D5  3F41               	moviw [1]fsr1
  9294  00D6  00B5               	movwf	sendSensorData@sensor_data+1
  9295  00D7  318D  25CC         	fcall	_sendSensorData
  9296                           
  9297                           ;sensor.c: 195:         break;
  9298  00D9  0008               	return
  9299  00DA                     l5609:
  9300                           
  9301                           ;sensor.c: 197:         getMax(&sensor->sensor_data.voltage);
  9302  00DA  0849               	movf	processCommand@sensor,w
  9303  00DB  3E0D               	addlw	13
  9304  00DC  00F4               	movwf	getMax@data
  9305  00DD  3000               	movlw	0
  9306  00DE  3D4A               	addwfc	processCommand@sensor+1,w
  9307  00DF  00F5               	movwf	getMax@data+1
  9308  00E0  3186  268C  3180   	fcall	_getMax
  9309                           
  9310                           ;sensor.c: 198:         getMax(&sensor->sensor_data.current);
  9311  00E3  0849               	movf	processCommand@sensor,w
  9312  00E4  3E24               	addlw	36
  9313  00E5  00F4               	movwf	getMax@data
  9314  00E6  3000               	movlw	0
  9315  00E7  3D4A               	addwfc	processCommand@sensor+1,w
  9316  00E8  00F5               	movwf	getMax@data+1
  9317  00E9  3186  268C  3180   	fcall	_getMax
  9318                           
  9319                           ;sensor.c: 199:         sendSensorData(sensor->sensor_data.voltage.max);
  9320  00EC  0849               	movf	processCommand@sensor,w
  9321  00ED  0086               	movwf	6
  9322  00EE  084A               	movf	processCommand@sensor+1,w
  9323  00EF  0087               	movwf	7
  9324  00F0  315D               	addfsr 1,29
  9325  00F1  3F40               	moviw [0]fsr1
  9326  00F2  00B4               	movwf	sendSensorData@sensor_data
  9327  00F3  3F41               	moviw [1]fsr1
  9328  00F4  00B5               	movwf	sendSensorData@sensor_data+1
  9329  00F5  318D  25CC  3180   	fcall	_sendSensorData
  9330                           
  9331                           ;sensor.c: 200:         sendSensorData(sensor->sensor_data.current.max);
  9332  00F8  0849               	movf	processCommand@sensor,w
  9333  00F9  3E34               	addlw	52
  9334  00FA  0086               	movwf	6
  9335  00FB  3000               	movlw	0
  9336  00FC  3D4A               	addwfc	processCommand@sensor+1,w
  9337  00FD  0087               	movwf	7
  9338  00FE  3F40               	moviw [0]fsr1
  9339  00FF  00B4               	movwf	sendSensorData@sensor_data
  9340  0100  3F41               	moviw [1]fsr1
  9341  0101  00B5               	movwf	sendSensorData@sensor_data+1
  9342  0102  318D  25CC         	fcall	_sendSensorData
  9343                           
  9344                           ;sensor.c: 201:         break;
  9345  0104  0008               	return
  9346  0105                     l5611:
  9347                           
  9348                           ;sensor.c: 203:         getMin(&sensor->sensor_data.voltage);
  9349  0105  0849               	movf	processCommand@sensor,w
  9350  0106  3E0D               	addlw	13
  9351  0107  00F4               	movwf	getMin@data
  9352  0108  3000               	movlw	0
  9353  0109  3D4A               	addwfc	processCommand@sensor+1,w
  9354  010A  00F5               	movwf	getMin@data+1
  9355  010B  3186  2636  3180   	fcall	_getMin
  9356                           
  9357                           ;sensor.c: 204:         getMin(&sensor->sensor_data.current);
  9358  010E  0849               	movf	processCommand@sensor,w
  9359  010F  3E24               	addlw	36
  9360  0110  00F4               	movwf	getMin@data
  9361  0111  3000               	movlw	0
  9362  0112  3D4A               	addwfc	processCommand@sensor+1,w
  9363  0113  00F5               	movwf	getMin@data+1
  9364  0114  3186  2636  3180   	fcall	_getMin
  9365                           
  9366                           ;sensor.c: 205:         sendSensorData(sensor->sensor_data.voltage.min);
  9367  0117  0849               	movf	processCommand@sensor,w
  9368  0118  0086               	movwf	6
  9369  0119  084A               	movf	processCommand@sensor+1,w
  9370  011A  0087               	movwf	7
  9371  011B  315F               	addfsr 1,31
  9372  011C  3F40               	moviw [0]fsr1
  9373  011D  00B4               	movwf	sendSensorData@sensor_data
  9374  011E  3F41               	moviw [1]fsr1
  9375  011F  00B5               	movwf	sendSensorData@sensor_data+1
  9376  0120  318D  25CC  3180   	fcall	_sendSensorData
  9377                           
  9378                           ;sensor.c: 206:         sendSensorData(sensor->sensor_data.current.min);
  9379  0123  0849               	movf	processCommand@sensor,w
  9380  0124  3E36               	addlw	54
  9381  0125  0086               	movwf	6
  9382  0126  3000               	movlw	0
  9383  0127  3D4A               	addwfc	processCommand@sensor+1,w
  9384  0128  0087               	movwf	7
  9385  0129  3F40               	moviw [0]fsr1
  9386  012A  00B4               	movwf	sendSensorData@sensor_data
  9387  012B  3F41               	moviw [1]fsr1
  9388  012C  00B5               	movwf	sendSensorData@sensor_data+1
  9389  012D  318D  25CC         	fcall	_sendSensorData
  9390                           
  9391                           ;sensor.c: 207:         break;
  9392  012F  0008               	return
  9393  0130                     l5613:
  9394                           
  9395                           ;sensor.c: 209:         getMed(&sensor->sensor_data.voltage);
  9396  0130  0849               	movf	processCommand@sensor,w
  9397  0131  3E0D               	addlw	13
  9398  0132  00AE               	movwf	getMed@data
  9399  0133  3000               	movlw	0
  9400  0134  3D4A               	addwfc	processCommand@sensor+1,w
  9401  0135  00AF               	movwf	getMed@data+1
  9402  0136  3185  25D7  3180   	fcall	_getMed
  9403                           
  9404                           ;sensor.c: 210:         getMed(&sensor->sensor_data.current);
  9405  0139  0849               	movf	processCommand@sensor,w
  9406  013A  3E24               	addlw	36
  9407  013B  00AE               	movwf	getMed@data
  9408  013C  3000               	movlw	0
  9409  013D  3D4A               	addwfc	processCommand@sensor+1,w
  9410  013E  00AF               	movwf	getMed@data+1
  9411  013F  3185  25D7  3180   	fcall	_getMed
  9412                           
  9413                           ;sensor.c: 211:         sendSensorData(sensor->sensor_data.voltage.med);
  9414  0142  0849               	movf	processCommand@sensor,w
  9415  0143  3E21               	addlw	33
  9416  0144  0086               	movwf	6
  9417  0145  3000               	movlw	0
  9418  0146  3D4A               	addwfc	processCommand@sensor+1,w
  9419  0147  0087               	movwf	7
  9420  0148  3F40               	moviw [0]fsr1
  9421  0149  00B4               	movwf	sendSensorData@sensor_data
  9422  014A  3F41               	moviw [1]fsr1
  9423  014B  00B5               	movwf	sendSensorData@sensor_data+1
  9424  014C  318D  25CC  3180   	fcall	_sendSensorData
  9425                           
  9426                           ;sensor.c: 212:         sendSensorData(sensor->sensor_data.current.med);
  9427  014F  0849               	movf	processCommand@sensor,w
  9428  0150  3E38               	addlw	56
  9429  0151  0086               	movwf	6
  9430  0152  3000               	movlw	0
  9431  0153  3D4A               	addwfc	processCommand@sensor+1,w
  9432  0154  0087               	movwf	7
  9433  0155  3F40               	moviw [0]fsr1
  9434  0156  00B4               	movwf	sendSensorData@sensor_data
  9435  0157  3F41               	moviw [1]fsr1
  9436  0158  00B5               	movwf	sendSensorData@sensor_data+1
  9437  0159  318D  25CC         	fcall	_sendSensorData
  9438                           
  9439                           ;sensor.c: 213:         break;
  9440  015B  0008               	return
  9441  015C                     l5619:
  9442                           
  9443                           ;sensor.c: 215:         getHis(&sensor->sensor_data.voltage);
  9444  015C  0849               	movf	processCommand@sensor,w
  9445  015D  3E0D               	addlw	13
  9446  015E  00C0               	movwf	getHis@data
  9447  015F  3000               	movlw	0
  9448  0160  3D4A               	addwfc	processCommand@sensor+1,w
  9449  0161  00C1               	movwf	getHis@data+1
  9450  0162  318D  2512  3180   	fcall	_getHis
  9451                           
  9452                           ;sensor.c: 216:         getHis(&sensor->sensor_data.current);
  9453  0165  0849               	movf	processCommand@sensor,w
  9454  0166  3E24               	addlw	36
  9455  0167  00C0               	movwf	getHis@data
  9456  0168  3000               	movlw	0
  9457  0169  3D4A               	addwfc	processCommand@sensor+1,w
  9458  016A  00C1               	movwf	getHis@data+1
  9459  016B  318D  2512         	fcall	_getHis
  9460                           
  9461                           ;sensor.c: 217:         break;
  9462  016D  0008               	return
  9463  016E                     l5621:
  9464                           
  9465                           ;sensor.c: 219:         timer0ReloadVal16bit = stringToInt16(data,stringlen(data));
  9466  016E  0848               	movf	processCommand@data,w
  9467  016F  318A  22E6  3180   	fcall	_stringlen
  9468  0172  00CB               	movwf	??_processCommand
  9469  0173  084B               	movf	??_processCommand,w
  9470  0174  00A4               	movwf	stringToInt16@strlen
  9471  0175  0848               	movf	processCommand@data,w
  9472  0176  3185  2572  3180   	fcall	_stringToInt16
  9473  0179  0825               	movf	?_stringToInt16+1,w
  9474  017A  00F7               	movwf	_timer0ReloadVal16bit+1	;volatile
  9475  017B  0824               	movf	?_stringToInt16,w
  9476  017C  00F6               	movwf	_timer0ReloadVal16bit	;volatile
  9477                           
  9478                           ;sensor.c: 220:         TMR0_Reload();
  9479  017D  3189  214B         	fcall	_TMR0_Reload
  9480                           
  9481                           ;sensor.c: 221:         break;
  9482  017F  0008               	return
  9483  0180                     l5625:
  9484                           
  9485                           ;sensor.c: 226:             status.beacon = 0;
  9486  0180  01DE               	clrf	_status+4
  9487                           
  9488                           ;sensor.c: 227:             break;
  9489  0181  0008               	return
  9490  0182                     l1295:	
  9491                           ;sensor.c: 228:         case '1':
  9492                           
  9493                           
  9494                           ;sensor.c: 229:             status.beacon = 1;
  9495  0182  01DE               	clrf	_status+4
  9496  0183  0ADE               	incf	_status+4,f
  9497                           
  9498                           ;sensor.c: 230:             break;
  9499  0184  0008               	return
  9500  0185                     l5629:
  9501  0185  0848               	movf	processCommand@data,w
  9502  0186  0086               	movwf	6
  9503  0187  0187               	clrf	7
  9504  0188  0801               	movf	1,w
  9505  0189  00CB               	movwf	??_processCommand
  9506  018A  01CC               	clrf	??_processCommand+1
  9507                           
  9508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9509                           ; Switch size 1, requested type "simple"
  9510                           ; Number of cases is 1, Range of values is 0 to 0
  9511                           ; switch strategies available:
  9512                           ; Name         Instructions Cycles
  9513                           ; simple_byte            4     3 (average)
  9514                           ; direct_byte            8     6 (fixed)
  9515                           ; jumptable            260     6 (fixed)
  9516                           ;	Chosen strategy is simple_byte
  9517  018B  084C               	movf	??_processCommand+1,w
  9518  018C  3A00               	xorlw	0	; case 0
  9519  018D  1903               	skipnz
  9520  018E  2990               	goto	l5875
  9521  018F  2A06               	goto	l1301
  9522  0190                     l5875:
  9523                           
  9524                           ; Switch size 1, requested type "simple"
  9525                           ; Number of cases is 2, Range of values is 48 to 49
  9526                           ; switch strategies available:
  9527                           ; Name         Instructions Cycles
  9528                           ; simple_byte            7     4 (average)
  9529                           ; direct_byte           13     9 (fixed)
  9530                           ; jumptable            263     9 (fixed)
  9531                           ;	Chosen strategy is simple_byte
  9532  0190  084B               	movf	??_processCommand,w
  9533  0191  3A30               	xorlw	48	; case 48
  9534  0192  1903               	skipnz
  9535  0193  2980               	goto	l5625
  9536  0194  3A01               	xorlw	1	; case 49
  9537  0195  1903               	skipnz
  9538  0196  2982               	goto	l1295
  9539  0197  2A06               	goto	l1301
  9540  0198                     l5631:
  9541                           
  9542                           ;sensor.c: 236:         status.voltage_chrg_on = stringToInt16(data,stringlen(data));
  9543  0198  0848               	movf	processCommand@data,w
  9544  0199  318A  22E6  3180   	fcall	_stringlen
  9545  019C  00CB               	movwf	??_processCommand
  9546  019D  084B               	movf	??_processCommand,w
  9547  019E  00A4               	movwf	stringToInt16@strlen
  9548  019F  0848               	movf	processCommand@data,w
  9549  01A0  3185  2572         	fcall	_stringToInt16
  9550  01A2  0825               	movf	?_stringToInt16+1,w
  9551  01A3  00DB               	movwf	_status+1
  9552  01A4  0824               	movf	?_stringToInt16,w
  9553  01A5  00DA               	movwf	_status
  9554                           
  9555                           ;sensor.c: 237:         break;
  9556  01A6  0008               	return
  9557  01A7                     l5633:
  9558                           
  9559                           ;sensor.c: 239:         status.curr_tail = stringToInt16(data,stringlen(data));
  9560  01A7  0848               	movf	processCommand@data,w
  9561  01A8  318A  22E6  3180   	fcall	_stringlen
  9562  01AB  00CB               	movwf	??_processCommand
  9563  01AC  084B               	movf	??_processCommand,w
  9564  01AD  00A4               	movwf	stringToInt16@strlen
  9565  01AE  0848               	movf	processCommand@data,w
  9566  01AF  3185  2572         	fcall	_stringToInt16
  9567  01B1  0825               	movf	?_stringToInt16+1,w
  9568  01B2  00DD               	movwf	_status+3
  9569  01B3  0824               	movf	?_stringToInt16,w
  9570  01B4  00DC               	movwf	_status+2
  9571                           
  9572                           ;sensor.c: 240:         break;
  9573  01B5  0008               	return
  9574  01B6                     l5635:
  9575                           
  9576                           ;sensor.c: 242:         sendSensorData(status.voltage_chrg_on);
  9577  01B6  085B               	movf	_status+1,w
  9578  01B7  00B5               	movwf	sendSensorData@sensor_data+1
  9579  01B8  085A               	movf	_status,w
  9580  01B9  00B4               	movwf	sendSensorData@sensor_data
  9581  01BA  318D  25CC  3180   	fcall	_sendSensorData
  9582                           
  9583                           ;sensor.c: 243:         sendSensorData(status.curr_tail);
  9584  01BD  085D               	movf	_status+3,w
  9585  01BE  00B5               	movwf	sendSensorData@sensor_data+1
  9586  01BF  085C               	movf	_status+2,w
  9587  01C0  00B4               	movwf	sendSensorData@sensor_data
  9588  01C1  318D  25CC  3180   	fcall	_sendSensorData
  9589                           
  9590                           ;sensor.c: 244:         sendSensorData(status.beacon);
  9591  01C4  085E               	movf	_status+4,w
  9592  01C5  00CB               	movwf	??_processCommand
  9593  01C6  01CC               	clrf	??_processCommand+1
  9594  01C7  084B               	movf	??_processCommand,w
  9595  01C8  00B4               	movwf	sendSensorData@sensor_data
  9596  01C9  084C               	movf	??_processCommand+1,w
  9597  01CA  00B5               	movwf	sendSensorData@sensor_data+1
  9598  01CB  318D  25CC  3180   	fcall	_sendSensorData
  9599                           
  9600                           ;sensor.c: 245:         sendSensorData(status.chrg);
  9601  01CE  085F               	movf	_status+5,w
  9602  01CF  00CB               	movwf	??_processCommand
  9603  01D0  01CC               	clrf	??_processCommand+1
  9604  01D1  084B               	movf	??_processCommand,w
  9605  01D2  00B4               	movwf	sendSensorData@sensor_data
  9606  01D3  084C               	movf	??_processCommand+1,w
  9607  01D4  00B5               	movwf	sendSensorData@sensor_data+1
  9608  01D5  318D  25CC         	fcall	_sendSensorData
  9609                           
  9610                           ;sensor.c: 246:         break;
  9611  01D7  0008               	return
  9612  01D8                     l5639:
  9613  01D8  084F               	movf	processCommand@command,w
  9614  01D9  00CB               	movwf	??_processCommand
  9615  01DA  01CC               	clrf	??_processCommand+1
  9616                           
  9617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9618                           ; Switch size 1, requested type "simple"
  9619                           ; Number of cases is 1, Range of values is 0 to 0
  9620                           ; switch strategies available:
  9621                           ; Name         Instructions Cycles
  9622                           ; simple_byte            4     3 (average)
  9623                           ; direct_byte            8     6 (fixed)
  9624                           ; jumptable            260     6 (fixed)
  9625                           ;	Chosen strategy is simple_byte
  9626  01DB  084C               	movf	??_processCommand+1,w
  9627  01DC  3A00               	xorlw	0	; case 0
  9628  01DD  1903               	skipnz
  9629  01DE  29E0               	goto	l5877
  9630  01DF  2A06               	goto	l1301
  9631  01E0                     l5877:
  9632                           
  9633                           ; Switch size 1, requested type "simple"
  9634                           ; Number of cases is 12, Range of values is 66 to 109
  9635                           ; switch strategies available:
  9636                           ; Name         Instructions Cycles
  9637                           ; simple_byte           37    19 (average)
  9638                           ; direct_byte           97     9 (fixed)
  9639                           ; jumptable            263     9 (fixed)
  9640                           ;	Chosen strategy is simple_byte
  9641  01E0  084B               	movf	??_processCommand,w
  9642  01E1  3A42               	xorlw	66	; case 66
  9643  01E2  1903               	skipnz
  9644  01E3  2985               	goto	l5629
  9645  01E4  3A01               	xorlw	1	; case 67
  9646  01E5  1903               	skipnz
  9647  01E6  2998               	goto	l5631
  9648  01E7  3A07               	xorlw	7	; case 68
  9649  01E8  1903               	skipnz
  9650  01E9  289F               	goto	l5607
  9651  01EA  3A01               	xorlw	1	; case 69
  9652  01EB  1903               	skipnz
  9653  01EC  29B6               	goto	l5635
  9654  01ED  3A0D               	xorlw	13	; case 72
  9655  01EE  1903               	skipnz
  9656  01EF  295C               	goto	l5619
  9657  01F0  3A01               	xorlw	1	; case 73
  9658  01F1  1903               	skipnz
  9659  01F2  2891               	goto	l5603
  9660  01F3  3A04               	xorlw	4	; case 77
  9661  01F4  1903               	skipnz
  9662  01F5  28DA               	goto	l5609
  9663  01F6  3A1D               	xorlw	29	; case 80
  9664  01F7  1903               	skipnz
  9665  01F8  2930               	goto	l5613
  9666  01F9  3A03               	xorlw	3	; case 83
  9667  01FA  1903               	skipnz
  9668  01FB  2898               	goto	l5605
  9669  01FC  3A07               	xorlw	7	; case 84
  9670  01FD  1903               	skipnz
  9671  01FE  296E               	goto	l5621
  9672  01FF  3A3D               	xorlw	61	; case 105
  9673  0200  1903               	skipnz
  9674  0201  29A7               	goto	l5633
  9675  0202  3A04               	xorlw	4	; case 109
  9676  0203  1903               	skipnz
  9677  0204  2905               	goto	l5611
  9678  0205  2A06               	goto	l1301
  9679  0206                     l1301:
  9680  0206  0008               	return
  9681  0207                     __end_of_processCommand:
  9682                           
  9683                           	psect	text5
  9684  0572                     __ptext5:	
  9685 ;; *************** function _stringToInt16 *****************
  9686 ;; Defined at:
  9687 ;;		line 201 in file "device.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  string          1    wreg     PTR unsigned char 
  9690 ;;		 -> main@packet(11), 
  9691 ;;  strlen          1    4[BANK0 ] unsigned char 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  string          1   12[BANK0 ] PTR unsigned char 
  9694 ;;		 -> main@packet(11), 
  9695 ;;  result          2   10[BANK0 ] short 
  9696 ;;  multiple        2    8[BANK0 ] short 
  9697 ;;  sign            1    7[BANK0 ] char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  2    4[BANK0 ] short 
  9700 ;; Registers used:
  9701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 3F/0
  9704 ;;		On exit  : 3F/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9711 ;;Total ram usage:        9 bytes
  9712 ;; Hardware stack levels used: 1
  9713 ;; Hardware stack levels required when called: 5
  9714 ;; This function calls:
  9715 ;;		___wmul
  9716 ;; This function is called by:
  9717 ;;		_processCommand
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721  0572                     _stringToInt16:	
  9722                           ;psect for function _stringToInt16
  9723                           
  9724                           
  9725                           ;incstack = 0
  9726                           ; Regs used in _stringToInt16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9727                           ;stringToInt16@string stored from wreg
  9728  0572  00AC               	movwf	stringToInt16@string
  9729                           
  9730                           ;device.c: 201: int16_t stringToInt16(char* string, uint8_t strlen);device.c: 202: {;dev
      +                          ice.c: 203:     int16_t result = 0;
  9731  0573  01AA               	clrf	stringToInt16@result
  9732  0574  01AB               	clrf	stringToInt16@result+1
  9733                           
  9734                           ;device.c: 204:     int16_t multiple = 1;
  9735  0575  3001               	movlw	1
  9736  0576  00A8               	movwf	stringToInt16@multiple
  9737  0577  3000               	movlw	0
  9738  0578  00A9               	movwf	stringToInt16@multiple+1
  9739                           
  9740                           ;device.c: 205:     int8_t sign = 1;
  9741  0579  01A7               	clrf	stringToInt16@sign
  9742  057A  0AA7               	incf	stringToInt16@sign,f
  9743                           
  9744                           ;device.c: 207:     if (*string == '-')
  9745  057B  082C               	movf	stringToInt16@string,w
  9746  057C  0086               	movwf	6
  9747  057D  0187               	clrf	7
  9748  057E  302D               	movlw	45
  9749  057F  0601               	xorwf	1,w
  9750  0580  1D03               	btfss	3,2
  9751  0581  2D84               	goto	l5445
  9752                           
  9753                           ;device.c: 208:     {;device.c: 209:         sign = -1;
  9754  0582  01A7               	clrf	stringToInt16@sign
  9755  0583  03A7               	decf	stringToInt16@sign,f
  9756  0584                     l5445:
  9757                           
  9758                           ;device.c: 211:     string = string+strlen;
  9759  0584  082C               	movf	stringToInt16@string,w
  9760  0585  0724               	addwf	stringToInt16@strlen,w
  9761  0586  00A6               	movwf	??_stringToInt16
  9762  0587  0826               	movf	??_stringToInt16,w
  9763  0588  00AC               	movwf	stringToInt16@string
  9764  0589                     l5457:	
  9765                           ;device.c: 212:     while(strlen)
  9766                           
  9767                           
  9768                           ;device.c: 212:     while(strlen)
  9769  0589  0824               	movf	stringToInt16@strlen,w
  9770  058A  1903               	btfsc	3,2
  9771  058B  2DC3               	goto	l5459
  9772                           
  9773                           ;device.c: 213:     {;device.c: 214:         string--;
  9774  058C  3001               	movlw	1
  9775  058D  02AC               	subwf	stringToInt16@string,f
  9776                           
  9777                           ;device.c: 215:         strlen--;
  9778  058E  3001               	movlw	1
  9779  058F  02A4               	subwf	stringToInt16@strlen,f
  9780                           
  9781                           ;device.c: 216:         if(*string >= '0' && *string <= '9')
  9782  0590  082C               	movf	stringToInt16@string,w
  9783  0591  0086               	movwf	6
  9784  0592  0187               	clrf	7
  9785  0593  3030               	movlw	48
  9786  0594  0201               	subwf	1,w
  9787  0595  1C03               	skipc
  9788  0596  2D89               	goto	l5457
  9789  0597  082C               	movf	stringToInt16@string,w
  9790  0598  0086               	movwf	6
  9791  0599  0187               	clrf	7
  9792  059A  303A               	movlw	58
  9793  059B  0201               	subwf	1,w
  9794  059C  1803               	skipnc
  9795  059D  2D89               	goto	l5457
  9796                           
  9797                           ;device.c: 217:         {;device.c: 218:             result += (*string - '0') * multipl
      +                          e;
  9798  059E  082C               	movf	stringToInt16@string,w
  9799  059F  0086               	movwf	6
  9800  05A0  0187               	clrf	7
  9801  05A1  0801               	movf	1,w
  9802  05A2  3ED0               	addlw	208
  9803  05A3  00A0               	movwf	___wmul@multiplier
  9804  05A4  30FF               	movlw	255
  9805  05A5  1803               	skipnc
  9806  05A6  3000               	movlw	0
  9807  05A7  00A1               	movwf	___wmul@multiplier+1
  9808  05A8  0829               	movf	stringToInt16@multiple+1,w
  9809  05A9  00A3               	movwf	___wmul@multiplicand+1
  9810  05AA  0828               	movf	stringToInt16@multiple,w
  9811  05AB  00A2               	movwf	___wmul@multiplicand
  9812  05AC  318B  2365  3185   	fcall	___wmul
  9813  05AF  0820               	movf	?___wmul,w
  9814  05B0  07AA               	addwf	stringToInt16@result,f
  9815  05B1  0821               	movf	?___wmul+1,w
  9816  05B2  3DAB               	addwfc	stringToInt16@result+1,f
  9817                           
  9818                           ;device.c: 219:             multiple *= 10;
  9819  05B3  300A               	movlw	10
  9820  05B4  00A0               	movwf	___wmul@multiplier
  9821  05B5  3000               	movlw	0
  9822  05B6  00A1               	movwf	___wmul@multiplier+1
  9823  05B7  0829               	movf	stringToInt16@multiple+1,w
  9824  05B8  00A3               	movwf	___wmul@multiplicand+1
  9825  05B9  0828               	movf	stringToInt16@multiple,w
  9826  05BA  00A2               	movwf	___wmul@multiplicand
  9827  05BB  318B  2365  3185   	fcall	___wmul
  9828  05BE  0821               	movf	?___wmul+1,w
  9829  05BF  00A9               	movwf	stringToInt16@multiple+1
  9830  05C0  0820               	movf	?___wmul,w
  9831  05C1  00A8               	movwf	stringToInt16@multiple
  9832  05C2  2D89               	goto	l5457
  9833  05C3                     l5459:
  9834                           
  9835                           ;device.c: 222:     result = result * sign;
  9836  05C3  0827               	movf	stringToInt16@sign,w
  9837  05C4  00A0               	movwf	___wmul@multiplier
  9838  05C5  01A1               	clrf	___wmul@multiplier+1
  9839  05C6  1BA0               	btfsc	___wmul@multiplier,7
  9840  05C7  03A1               	decf	___wmul@multiplier+1,f
  9841  05C8  082B               	movf	stringToInt16@result+1,w
  9842  05C9  00A3               	movwf	___wmul@multiplicand+1
  9843  05CA  082A               	movf	stringToInt16@result,w
  9844  05CB  00A2               	movwf	___wmul@multiplicand
  9845  05CC  318B  2365         	fcall	___wmul
  9846  05CE  0821               	movf	?___wmul+1,w
  9847  05CF  00AB               	movwf	stringToInt16@result+1
  9848  05D0  0820               	movf	?___wmul,w
  9849  05D1  00AA               	movwf	stringToInt16@result
  9850                           
  9851                           ;device.c: 223:     return result;
  9852  05D2  082B               	movf	stringToInt16@result+1,w
  9853  05D3  00A5               	movwf	?_stringToInt16+1
  9854  05D4  082A               	movf	stringToInt16@result,w
  9855  05D5  00A4               	movwf	?_stringToInt16
  9856  05D6  0008               	return
  9857  05D7                     __end_of_stringToInt16:
  9858                           
  9859                           	psect	text6
  9860  0B65                     __ptext6:	
  9861 ;; *************** function ___wmul *****************
  9862 ;; Defined at:
  9863 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9866 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;  product         2    4[COMMON] unsigned int 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  2    0[BANK0 ] unsigned int 
  9871 ;; Registers used:
  9872 ;;		wreg, status,2, status,0
  9873 ;; Tracked objects:
  9874 ;;		On entry : 3F/0
  9875 ;;		On exit  : 3F/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;Total ram usage:        6 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; Hardware stack levels required when called: 4
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_stringToInt16
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892  0B65                     ___wmul:	
  9893                           ;psect for function ___wmul
  9894                           
  9895                           
  9896                           ;incstack = 0
  9897                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9898  0B65  01F4               	clrf	___wmul@product
  9899  0B66  01F5               	clrf	___wmul@product+1
  9900  0B67                     l5201:
  9901  0B67  1C20               	btfss	___wmul@multiplier,0
  9902  0B68  2B6D               	goto	l1453
  9903  0B69  0822               	movf	___wmul@multiplicand,w
  9904  0B6A  07F4               	addwf	___wmul@product,f
  9905  0B6B  0823               	movf	___wmul@multiplicand+1,w
  9906  0B6C  3DF5               	addwfc	___wmul@product+1,f
  9907  0B6D                     l1453:
  9908  0B6D  3001               	movlw	1
  9909  0B6E                     u2955:
  9910  0B6E  35A2               	lslf	___wmul@multiplicand,f
  9911  0B6F  0DA3               	rlf	___wmul@multiplicand+1,f
  9912  0B70  0B89               	decfsz	9,f
  9913  0B71  2B6E               	goto	u2955
  9914  0B72  3001               	movlw	1
  9915  0B73                     u2965:
  9916  0B73  36A1               	lsrf	___wmul@multiplier+1,f
  9917  0B74  0CA0               	rrf	___wmul@multiplier,f
  9918  0B75  0B89               	decfsz	9,f
  9919  0B76  2B73               	goto	u2965
  9920  0B77  0820               	movf	___wmul@multiplier,w
  9921  0B78  0421               	iorwf	___wmul@multiplier+1,w
  9922  0B79  1D03               	btfss	3,2
  9923  0B7A  2B67               	goto	l5201
  9924  0B7B  0875               	movf	___wmul@product+1,w
  9925  0B7C  00A1               	movwf	?___wmul+1
  9926  0B7D  0874               	movf	___wmul@product,w
  9927  0B7E  00A0               	movwf	?___wmul
  9928  0B7F  0008               	return
  9929  0B80                     __end_of___wmul:
  9930                           
  9931                           	psect	text7
  9932  0FC4                     __ptext7:	
  9933 ;; *************** function _sendSensorInfo *****************
  9934 ;; Defined at:
  9935 ;;		line 8 in file "device.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  sensor_info     2   13[BANK0 ] PTR struct .
  9938 ;;		 -> cons(59), battery(59), panel(59), 
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  idx             2   22[BANK0 ] int 
  9941 ;;  packet          7   15[BANK0 ] struct .
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 3F/0
  9948 ;;		On exit  : 3F/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;Total ram usage:       12 bytes
  9956 ;; Hardware stack levels used: 1
  9957 ;; Hardware stack levels required when called: 6
  9958 ;; This function calls:
  9959 ;;		_sendPacket
  9960 ;; This function is called by:
  9961 ;;		_processCommand
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965  0FC4                     _sendSensorInfo:	
  9966                           ;psect for function _sendSensorInfo
  9967                           
  9968                           
  9969                           ;device.c: 8: void sendSensorInfo(sensor_info_t* sensor_info);device.c: 9: {;device.c: 1
      +                          1:     info_packet_t packet = {
  9970                           
  9971                           ;incstack = 0
  9972                           ; Regs used in _sendSensorInfo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9973  0FC4  30D8               	movlw	low sendSensorInfo@F11027
  9974  0FC5  0086               	movwf	6
  9975  0FC6  3000               	movlw	high sendSensorInfo@F11027
  9976  0FC7  0087               	movwf	7
  9977  0FC8  302F               	movlw	low sendSensorInfo@packet
  9978  0FC9  0084               	movwf	4
  9979  0FCA  3000               	movlw	high sendSensorInfo@packet
  9980  0FCB  0085               	movwf	5
  9981  0FCC  3007               	movlw	7
  9982  0FCD  00F5               	movwf	??_sendSensorInfo
  9983  0FCE                     u3110:
  9984  0FCE  0016               	moviw fsr1++
  9985  0FCF  001A               	movwi fsr0++
  9986  0FD0  0BF5               	decfsz	??_sendSensorInfo,f
  9987  0FD1  2FCE               	goto	u3110
  9988                           
  9989                           ;device.c: 15:     for(int idx = 0; idx < 5; idx++)
  9990  0FD2  01B6               	clrf	sendSensorInfo@idx
  9991  0FD3  01B7               	clrf	sendSensorInfo@idx+1
  9992  0FD4                     l5427:
  9993                           
  9994                           ;device.c: 16:         packet.codename[idx] = sensor_info->codename[idx];
  9995  0FD4  0140               	movlb	0	; select bank0
  9996  0FD5  0836               	movf	sendSensorInfo@idx,w
  9997  0FD6  072D               	addwf	sendSensorInfo@sensor_info,w
  9998  0FD7  0086               	movwf	6
  9999  0FD8  0837               	movf	sendSensorInfo@idx+1,w
 10000  0FD9  3D2E               	addwfc	sendSensorInfo@sensor_info+1,w
 10001  0FDA  0087               	movwf	7
 10002  0FDB  0801               	movf	1,w
 10003  0FDC  00F5               	movwf	??_sendSensorInfo
 10004  0FDD  0836               	movf	sendSensorInfo@idx,w
 10005  0FDE  3E02               	addlw	2
 10006  0FDF  3E2F               	addlw	(low (sendSensorInfo@packet| 0))& (0+255)
 10007  0FE0  0086               	movwf	6
 10008  0FE1  0187               	clrf	7
 10009  0FE2  0875               	movf	??_sendSensorInfo,w
 10010  0FE3  0081               	movwf	1
 10011  0FE4  3001               	movlw	1
 10012  0FE5  07B6               	addwf	sendSensorInfo@idx,f
 10013  0FE6  3000               	movlw	0
 10014  0FE7  3DB7               	addwfc	sendSensorInfo@idx+1,f
 10015  0FE8  0837               	movf	sendSensorInfo@idx+1,w
 10016  0FE9  3A80               	xorlw	128
 10017  0FEA  00F5               	movwf	??_sendSensorInfo
 10018  0FEB  3080               	movlw	128
 10019  0FEC  0275               	subwf	??_sendSensorInfo,w
 10020  0FED  1D03               	skipz
 10021  0FEE  2FF1               	goto	u3125
 10022  0FEF  3005               	movlw	5
 10023  0FF0  0236               	subwf	sendSensorInfo@idx,w
 10024  0FF1                     u3125:
 10025  0FF1  1C03               	skipc
 10026  0FF2  2FD4               	goto	l5427
 10027                           
 10028                           ;device.c: 19:  sendPacket((char*)&packet, sizeof(info_packet_t));
 10029  0FF3  3000               	movlw	0
 10030  0FF4  0140               	movlb	0	; select bank0
 10031  0FF5  00A5               	movwf	sendPacket@byteCount+3
 10032  0FF6  3000               	movlw	0
 10033  0FF7  00A4               	movwf	sendPacket@byteCount+2
 10034  0FF8  3000               	movlw	0
 10035  0FF9  00A3               	movwf	sendPacket@byteCount+1
 10036  0FFA  3007               	movlw	7
 10037  0FFB  00A2               	movwf	sendPacket@byteCount
 10038  0FFC  302F               	movlw	(low (sendSensorInfo@packet| 0))& (0+255)
 10039  0FFD  3186  26E2         	fcall	_sendPacket
 10040  0FFF  0008               	return
 10041  1000                     __end_of_sendSensorInfo:
 10042                           
 10043                           	psect	text8
 10044  0364                     __ptext8:	
 10045 ;; *************** function _getINA220Data *****************
 10046 ;; Defined at:
 10047 ;;		line 58 in file "sensor.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;  device          2   32[BANK0 ] PTR struct .
 10050 ;;		 -> cons(59), battery(59), panel(59), 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  buff            2   38[BANK0 ] short 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 3F/0
 10059 ;;		On exit  : 3F/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;Total ram usage:        8 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 14
 10069 ;; This function calls:
 10070 ;;		_readINA220
 10071 ;;		_writeINA220
 10072 ;; This function is called by:
 10073 ;;		_main
 10074 ;;		_processCommand
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078  0364                     _getINA220Data:	
 10079                           ;psect for function _getINA220Data
 10080                           
 10081                           
 10082                           ;incstack = 0
 10083                           ; Regs used in _getINA220Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10084                           ;sensor.c: 58: void getINA220Data(sensor_t *device);sensor.c: 59: {;sensor.c: 60:     in
      +                          t16_t buff;;sensor.c: 62:     do { LATAbits.LATA4 = 1; } while(0);
 10085  0364  1618               	bsf	24,4	;volatile
 10086                           
 10087                           ;sensor.c: 63:     _delay((unsigned long)((10)*(1000000/4000.0)));
 10088  0365  3004               	movlw	4
 10089  0366  0140               	movlb	0	; select bank0
 10090  0367  00C2               	movwf	??_getINA220Data
 10091  0368  303D               	movlw	61
 10092  0369                     u3497:
 10093  0369  0B89               	decfsz	9,f
 10094  036A  2B69               	goto	u3497
 10095  036B  0BC2               	decfsz	??_getINA220Data,f
 10096  036C  2B69               	goto	u3497
 10097  036D  3200               	nop2
 10098                           
 10099                           ;sensor.c: 65:     writeINA220(0x00, device->sensor_config.config , device->sensor_confi
      +                          g.addressI2C);
 10100  036E  0140               	movlb	0	; select bank0
 10101  036F  0840               	movf	getINA220Data@device,w
 10102  0370  0086               	movwf	6
 10103  0371  0841               	movf	getINA220Data@device+1,w
 10104  0372  0087               	movwf	7
 10105  0373  3149               	addfsr 1,9
 10106  0374  3F40               	moviw [0]fsr1
 10107  0375  00B5               	movwf	writeINA220@regdata
 10108  0376  3F41               	moviw [1]fsr1
 10109  0377  00B6               	movwf	writeINA220@regdata+1
 10110  0378  0840               	movf	getINA220Data@device,w
 10111  0379  0086               	movwf	6
 10112  037A  0841               	movf	getINA220Data@device+1,w
 10113  037B  0087               	movwf	7
 10114  037C  3148               	addfsr 1,8
 10115  037D  0801               	movf	1,w
 10116  037E  00C2               	movwf	??_getINA220Data
 10117  037F  0842               	movf	??_getINA220Data,w
 10118  0380  00B7               	movwf	writeINA220@address
 10119  0381  3000               	movlw	0
 10120  0382  318B  2380  3183   	fcall	_writeINA220
 10121                           
 10122                           ;sensor.c: 66:     writeINA220(0x05,device->sensor_config.calib, device->sensor_config.a
      +                          ddressI2C);
 10123  0385  0140               	movlb	0	; select bank0
 10124  0386  0840               	movf	getINA220Data@device,w
 10125  0387  0086               	movwf	6
 10126  0388  0841               	movf	getINA220Data@device+1,w
 10127  0389  0087               	movwf	7
 10128  038A  314B               	addfsr 1,11
 10129  038B  3F40               	moviw [0]fsr1
 10130  038C  00B5               	movwf	writeINA220@regdata
 10131  038D  3F41               	moviw [1]fsr1
 10132  038E  00B6               	movwf	writeINA220@regdata+1
 10133  038F  0840               	movf	getINA220Data@device,w
 10134  0390  0086               	movwf	6
 10135  0391  0841               	movf	getINA220Data@device+1,w
 10136  0392  0087               	movwf	7
 10137  0393  3148               	addfsr 1,8
 10138  0394  0801               	movf	1,w
 10139  0395  00C2               	movwf	??_getINA220Data
 10140  0396  0842               	movf	??_getINA220Data,w
 10141  0397  00B7               	movwf	writeINA220@address
 10142  0398  3005               	movlw	5
 10143  0399  318B  2380  3183   	fcall	_writeINA220
 10144                           
 10145                           ;sensor.c: 68:     buff = readINA220(0x02, device->sensor_config.addressI2C);
 10146  039C  0140               	movlb	0	; select bank0
 10147  039D  0840               	movf	getINA220Data@device,w
 10148  039E  0086               	movwf	6
 10149  039F  0841               	movf	getINA220Data@device+1,w
 10150  03A0  0087               	movwf	7
 10151  03A1  3148               	addfsr 1,8
 10152  03A2  0801               	movf	1,w
 10153  03A3  00C2               	movwf	??_getINA220Data
 10154  03A4  0842               	movf	??_getINA220Data,w
 10155  03A5  00B5               	movwf	readINA220@address
 10156  03A6  3002               	movlw	2
 10157  03A7  318F  2788  3183   	fcall	_readINA220
 10158  03AA  0836               	movf	?_readINA220+1,w
 10159  03AB  00C7               	movwf	getINA220Data@buff+1
 10160  03AC  0835               	movf	?_readINA220,w
 10161  03AD  00C6               	movwf	getINA220Data@buff
 10162                           
 10163                           ;sensor.c: 69:     buff = buff >> 3;
 10164  03AE  0847               	movf	getINA220Data@buff+1,w
 10165  03AF  00C3               	movwf	??_getINA220Data+1
 10166  03B0  0846               	movf	getINA220Data@buff,w
 10167  03B1  00C2               	movwf	??_getINA220Data
 10168  03B2  0D43               	rlf	??_getINA220Data+1,w
 10169  03B3  0CC3               	rrf	??_getINA220Data+1,f
 10170  03B4  0CC2               	rrf	??_getINA220Data,f
 10171  03B5  0D43               	rlf	??_getINA220Data+1,w
 10172  03B6  0CC3               	rrf	??_getINA220Data+1,f
 10173  03B7  0CC2               	rrf	??_getINA220Data,f
 10174  03B8  0D43               	rlf	??_getINA220Data+1,w
 10175  03B9  0CC3               	rrf	??_getINA220Data+1,f
 10176  03BA  0CC2               	rrf	??_getINA220Data,f
 10177  03BB  0842               	movf	??_getINA220Data,w
 10178  03BC  00C6               	movwf	getINA220Data@buff
 10179  03BD  0843               	movf	??_getINA220Data+1,w
 10180  03BE  00C7               	movwf	getINA220Data@buff+1
 10181                           
 10182                           ;sensor.c: 70:     buff &= 0x1FFF;
 10183  03BF  30FF               	movlw	255
 10184  03C0  05C6               	andwf	getINA220Data@buff,f
 10185  03C1  301F               	movlw	31
 10186  03C2  05C7               	andwf	getINA220Data@buff+1,f
 10187                           
 10188                           ;sensor.c: 72:     device->sensor_data.voltage.pWrite++;
 10189  03C3  3001               	movlw	1
 10190  03C4  00C2               	movwf	??_getINA220Data
 10191  03C5  0840               	movf	getINA220Data@device,w
 10192  03C6  3E23               	addlw	35
 10193  03C7  0086               	movwf	6
 10194  03C8  3000               	movlw	0
 10195  03C9  3D41               	addwfc	getINA220Data@device+1,w
 10196  03CA  0087               	movwf	7
 10197  03CB  0842               	movf	??_getINA220Data,w
 10198  03CC  0781               	addwf	1,f
 10199                           
 10200                           ;sensor.c: 74:     if(device->sensor_data.voltage.pWrite == 8)
 10201  03CD  0840               	movf	getINA220Data@device,w
 10202  03CE  3E23               	addlw	35
 10203  03CF  0086               	movwf	6
 10204  03D0  3000               	movlw	0
 10205  03D1  3D41               	addwfc	getINA220Data@device+1,w
 10206  03D2  0087               	movwf	7
 10207  03D3  3008               	movlw	8
 10208  03D4  0601               	xorwf	1,w
 10209  03D5  1D03               	btfss	3,2
 10210  03D6  2BF0               	goto	l1245
 10211                           
 10212                           ;sensor.c: 75:     {;sensor.c: 76:         device->sensor_data.voltage.pWrite = 0;
 10213  03D7  0840               	movf	getINA220Data@device,w
 10214  03D8  3E23               	addlw	35
 10215  03D9  0086               	movwf	6
 10216  03DA  3000               	movlw	0
 10217  03DB  3D41               	addwfc	getINA220Data@device+1,w
 10218  03DC  0087               	movwf	7
 10219  03DD  0181               	clrf	1
 10220                           
 10221                           ;sensor.c: 77:         device->sensor_data.voltage.max = 0x8000;
 10222  03DE  0840               	movf	getINA220Data@device,w
 10223  03DF  0086               	movwf	6
 10224  03E0  0841               	movf	getINA220Data@device+1,w
 10225  03E1  0087               	movwf	7
 10226  03E2  315D               	addfsr 1,29
 10227  03E3  3000               	movlw	0
 10228  03E4  3FC0               	movwi [0]fsr1
 10229  03E5  3080               	movlw	128
 10230  03E6  3FC1               	movwi [1]fsr1
 10231                           
 10232                           ;sensor.c: 78:         device->sensor_data.voltage.min = 0x7FFF;
 10233  03E7  0840               	movf	getINA220Data@device,w
 10234  03E8  0086               	movwf	6
 10235  03E9  0841               	movf	getINA220Data@device+1,w
 10236  03EA  0087               	movwf	7
 10237  03EB  315F               	addfsr 1,31
 10238  03EC  30FF               	movlw	255
 10239  03ED  3FC0               	movwi [0]fsr1
 10240  03EE  307F               	movlw	127
 10241  03EF  3FC1               	movwi [1]fsr1
 10242  03F0                     l1245:	
 10243                           ;sensor.c: 79:     }
 10244                           
 10245                           
 10246                           ;sensor.c: 81:     device->sensor_data.voltage.hist[device->sensor_data.voltage.pWrite] 
      +                          = buff;
 10247  03F0  0840               	movf	getINA220Data@device,w
 10248  03F1  3E23               	addlw	35
 10249  03F2  0086               	movwf	6
 10250  03F3  3000               	movlw	0
 10251  03F4  3D41               	addwfc	getINA220Data@device+1,w
 10252  03F5  0087               	movwf	7
 10253  03F6  0801               	movf	1,w
 10254  03F7  00C2               	movwf	??_getINA220Data
 10255  03F8  01C3               	clrf	??_getINA220Data+1
 10256  03F9  35C2               	lslf	??_getINA220Data,f
 10257  03FA  0DC3               	rlf	??_getINA220Data+1,f
 10258  03FB  0842               	movf	??_getINA220Data,w
 10259  03FC  0740               	addwf	getINA220Data@device,w
 10260  03FD  00C4               	movwf	??_getINA220Data+2
 10261  03FE  0843               	movf	??_getINA220Data+1,w
 10262  03FF  3D41               	addwfc	getINA220Data@device+1,w
 10263  0400  00C5               	movwf	??_getINA220Data+3
 10264  0401  0844               	movf	??_getINA220Data+2,w
 10265  0402  0086               	movwf	6
 10266  0403  0845               	movf	??_getINA220Data+3,w
 10267  0404  0087               	movwf	7
 10268  0405  314D               	addfsr 1,13
 10269  0406  0846               	movf	getINA220Data@buff,w
 10270  0407  3FC0               	movwi [0]fsr1
 10271  0408  0847               	movf	getINA220Data@buff+1,w
 10272  0409  3FC1               	movwi [1]fsr1
 10273                           
 10274                           ;sensor.c: 83:     buff = readINA220(0x01, device->sensor_config.addressI2C);
 10275  040A  0840               	movf	getINA220Data@device,w
 10276  040B  0086               	movwf	6
 10277  040C  0841               	movf	getINA220Data@device+1,w
 10278  040D  0087               	movwf	7
 10279  040E  3148               	addfsr 1,8
 10280  040F  0801               	movf	1,w
 10281  0410  00C2               	movwf	??_getINA220Data
 10282  0411  0842               	movf	??_getINA220Data,w
 10283  0412  00B5               	movwf	readINA220@address
 10284  0413  3001               	movlw	1
 10285  0414  318F  2788  3183   	fcall	_readINA220
 10286  0417  0836               	movf	?_readINA220+1,w
 10287  0418  00C7               	movwf	getINA220Data@buff+1
 10288  0419  0835               	movf	?_readINA220,w
 10289  041A  00C6               	movwf	getINA220Data@buff
 10290                           
 10291                           ;sensor.c: 85:     device->sensor_data.current.pWrite++;
 10292  041B  3001               	movlw	1
 10293  041C  00C2               	movwf	??_getINA220Data
 10294  041D  0840               	movf	getINA220Data@device,w
 10295  041E  3E3A               	addlw	58
 10296  041F  0086               	movwf	6
 10297  0420  3000               	movlw	0
 10298  0421  3D41               	addwfc	getINA220Data@device+1,w
 10299  0422  0087               	movwf	7
 10300  0423  0842               	movf	??_getINA220Data,w
 10301  0424  0781               	addwf	1,f
 10302                           
 10303                           ;sensor.c: 87:     if(device->sensor_data.current.pWrite == 8)
 10304  0425  0840               	movf	getINA220Data@device,w
 10305  0426  3E3A               	addlw	58
 10306  0427  0086               	movwf	6
 10307  0428  3000               	movlw	0
 10308  0429  3D41               	addwfc	getINA220Data@device+1,w
 10309  042A  0087               	movwf	7
 10310  042B  3008               	movlw	8
 10311  042C  0601               	xorwf	1,w
 10312  042D  1D03               	btfss	3,2
 10313  042E  2C4A               	goto	l1246
 10314                           
 10315                           ;sensor.c: 88:     {;sensor.c: 89:         device->sensor_data.current.pWrite = 0;
 10316  042F  0840               	movf	getINA220Data@device,w
 10317  0430  3E3A               	addlw	58
 10318  0431  0086               	movwf	6
 10319  0432  3000               	movlw	0
 10320  0433  3D41               	addwfc	getINA220Data@device+1,w
 10321  0434  0087               	movwf	7
 10322  0435  0181               	clrf	1
 10323                           
 10324                           ;sensor.c: 90:         device->sensor_data.current.max = 0x8000;
 10325  0436  0840               	movf	getINA220Data@device,w
 10326  0437  3E34               	addlw	52
 10327  0438  0086               	movwf	6
 10328  0439  3000               	movlw	0
 10329  043A  3D41               	addwfc	getINA220Data@device+1,w
 10330  043B  0087               	movwf	7
 10331  043C  3000               	movlw	0
 10332  043D  3FC0               	movwi [0]fsr1
 10333  043E  3080               	movlw	128
 10334  043F  3FC1               	movwi [1]fsr1
 10335                           
 10336                           ;sensor.c: 91:         device->sensor_data.current.min = 0x7FFF;
 10337  0440  0840               	movf	getINA220Data@device,w
 10338  0441  3E36               	addlw	54
 10339  0442  0086               	movwf	6
 10340  0443  3000               	movlw	0
 10341  0444  3D41               	addwfc	getINA220Data@device+1,w
 10342  0445  0087               	movwf	7
 10343  0446  30FF               	movlw	255
 10344  0447  3FC0               	movwi [0]fsr1
 10345  0448  307F               	movlw	127
 10346  0449  3FC1               	movwi [1]fsr1
 10347  044A                     l1246:	
 10348                           ;sensor.c: 92:     }
 10349                           
 10350                           
 10351                           ;sensor.c: 94:     device->sensor_data.current.hist[device->sensor_data.current.pWrite] 
      +                          = buff;
 10352  044A  0840               	movf	getINA220Data@device,w
 10353  044B  3E3A               	addlw	58
 10354  044C  0086               	movwf	6
 10355  044D  3000               	movlw	0
 10356  044E  3D41               	addwfc	getINA220Data@device+1,w
 10357  044F  0087               	movwf	7
 10358  0450  0801               	movf	1,w
 10359  0451  00C2               	movwf	??_getINA220Data
 10360  0452  01C3               	clrf	??_getINA220Data+1
 10361  0453  35C2               	lslf	??_getINA220Data,f
 10362  0454  0DC3               	rlf	??_getINA220Data+1,f
 10363  0455  0842               	movf	??_getINA220Data,w
 10364  0456  0740               	addwf	getINA220Data@device,w
 10365  0457  00C4               	movwf	??_getINA220Data+2
 10366  0458  0843               	movf	??_getINA220Data+1,w
 10367  0459  3D41               	addwfc	getINA220Data@device+1,w
 10368  045A  00C5               	movwf	??_getINA220Data+3
 10369  045B  0844               	movf	??_getINA220Data+2,w
 10370  045C  3E24               	addlw	36
 10371  045D  0086               	movwf	6
 10372  045E  3000               	movlw	0
 10373  045F  3D45               	addwfc	??_getINA220Data+3,w
 10374  0460  0087               	movwf	7
 10375  0461  0846               	movf	getINA220Data@buff,w
 10376  0462  3FC0               	movwi [0]fsr1
 10377  0463  0847               	movf	getINA220Data@buff+1,w
 10378  0464  3FC1               	movwi [1]fsr1
 10379  0465  1218               	bcf	24,4	;volatile
 10380  0466  0008               	return
 10381  0467                     __end_of_getINA220Data:
 10382                           
 10383                           	psect	text9
 10384  0B80                     __ptext9:	
 10385 ;; *************** function _writeINA220 *****************
 10386 ;; Defined at:
 10387 ;;		line 35 in file "sensor.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  regadd          1    wreg     unsigned char 
 10390 ;;  regdata         2   21[BANK0 ] unsigned short 
 10391 ;;  address         1   23[BANK0 ] unsigned char 
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;  regadd          1   25[BANK0 ] unsigned char 
 10394 ;;  Txbuffer        3   27[BANK0 ] unsigned char [3]
 10395 ;;  pTxbuffer       1   26[BANK0 ] PTR unsigned char 
 10396 ;;		 -> writeINA220@Txbuffer(3), 
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  1    wreg      void 
 10399 ;; Registers used:
 10400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 3F/0
 10403 ;;		On exit  : 3F/1
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10406 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;Total ram usage:        9 bytes
 10411 ;; Hardware stack levels used: 1
 10412 ;; Hardware stack levels required when called: 13
 10413 ;; This function calls:
 10414 ;;		_I2C1_WriteNBytes
 10415 ;; This function is called by:
 10416 ;;		_getINA220Data
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420  0B80                     _writeINA220:	
 10421                           ;psect for function _writeINA220
 10422                           
 10423                           
 10424                           ;incstack = 0
 10425                           ; Regs used in _writeINA220: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10426                           ;writeINA220@regadd stored from wreg
 10427  0B80  00B9               	movwf	writeINA220@regadd
 10428                           
 10429                           ;sensor.c: 35: void writeINA220(uint8_t regadd, uint16_t regdata, uint8_t address);senso
      +                          r.c: 36: {;sensor.c: 37:     uint8_t Txbuffer[3];;sensor.c: 38:     uint8_t* pTxbuffer;;
      +                          sensor.c: 40:     Txbuffer[0] = regadd;
 10430  0B81  0839               	movf	writeINA220@regadd,w
 10431  0B82  00B8               	movwf	??_writeINA220
 10432  0B83  0838               	movf	??_writeINA220,w
 10433  0B84  00BB               	movwf	writeINA220@Txbuffer
 10434                           
 10435                           ;sensor.c: 41:     Txbuffer[1] = regdata & 0x00FF;
 10436  0B85  0835               	movf	writeINA220@regdata,w
 10437  0B86  00B8               	movwf	??_writeINA220
 10438  0B87  0838               	movf	??_writeINA220,w
 10439  0B88  00BC               	movwf	writeINA220@Txbuffer+1
 10440                           
 10441                           ;sensor.c: 42:     Txbuffer[2] = (regdata & 0xFF00) >> 8;
 10442  0B89  0836               	movf	writeINA220@regdata+1,w
 10443  0B8A  00B8               	movwf	??_writeINA220
 10444  0B8B  0838               	movf	??_writeINA220,w
 10445  0B8C  00BD               	movwf	writeINA220@Txbuffer+2
 10446                           
 10447                           ;sensor.c: 43:     pTxbuffer = &Txbuffer[0];
 10448  0B8D  303B               	movlw	(low (writeINA220@Txbuffer| 0))& (0+255)
 10449  0B8E  00B8               	movwf	??_writeINA220
 10450  0B8F  0838               	movf	??_writeINA220,w
 10451  0B90  00BA               	movwf	writeINA220@pTxbuffer
 10452                           
 10453                           ;sensor.c: 44:     I2C1_WriteNBytes(address,pTxbuffer,3);
 10454  0B91  083A               	movf	writeINA220@pTxbuffer,w
 10455  0B92  00B8               	movwf	??_writeINA220
 10456  0B93  0838               	movf	??_writeINA220,w
 10457  0B94  00B1               	movwf	I2C1_WriteNBytes@data
 10458  0B95  3003               	movlw	3
 10459  0B96  00B2               	movwf	I2C1_WriteNBytes@len
 10460  0B97  3000               	movlw	0
 10461  0B98  00B3               	movwf	I2C1_WriteNBytes@len+1
 10462  0B99  0837               	movf	writeINA220@address,w
 10463  0B9A  318B  23D9         	fcall	_I2C1_WriteNBytes
 10464  0B9C  0008               	return
 10465  0B9D                     __end_of_writeINA220:
 10466                           
 10467                           	psect	text10
 10468  0F88                     __ptext10:	
 10469 ;; *************** function _readINA220 *****************
 10470 ;; Defined at:
 10471 ;;		line 19 in file "sensor.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  regadd          1    wreg     unsigned char 
 10474 ;;  address         1   21[BANK0 ] unsigned char 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  regadd          1   29[BANK0 ] unsigned char 
 10477 ;;  buff            2   27[BANK0 ] unsigned char [2]
 10478 ;;  ret             2   30[BANK0 ] unsigned short 
 10479 ;;  pTxbuffer       1   26[BANK0 ] PTR unsigned char 
 10480 ;;		 -> readINA220@regadd(1), 
 10481 ;;  pRxbuffer       1   25[BANK0 ] PTR unsigned char 
 10482 ;;		 -> readINA220@buff(2), 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  2   21[BANK0 ] unsigned short 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 3F/0
 10489 ;;		On exit  : 3F/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;Total ram usage:       11 bytes
 10497 ;; Hardware stack levels used: 1
 10498 ;; Hardware stack levels required when called: 13
 10499 ;; This function calls:
 10500 ;;		_I2C1_ReadNBytes
 10501 ;;		_I2C1_WriteNBytes
 10502 ;; This function is called by:
 10503 ;;		_getINA220Data
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507  0F88                     _readINA220:	
 10508                           ;psect for function _readINA220
 10509                           
 10510                           
 10511                           ;incstack = 0
 10512                           ; Regs used in _readINA220: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10513                           ;readINA220@regadd stored from wreg
 10514  0F88  00BD               	movwf	readINA220@regadd
 10515                           
 10516                           ;sensor.c: 19: uint16_t readINA220(uint8_t regadd, uint8_t address);sensor.c: 20: {;sens
      +                          or.c: 21:     uint8_t buff[2];;sensor.c: 22:     uint16_t ret;;sensor.c: 23:     uint8_t
      +                          * pRxbuffer;;sensor.c: 24:     uint8_t* pTxbuffer;;sensor.c: 25:     pRxbuffer = &buff[0
      +                          ];
 10517  0F89  303B               	movlw	(low (readINA220@buff| 0))& (0+255)
 10518  0F8A  00B7               	movwf	??_readINA220
 10519  0F8B  0837               	movf	??_readINA220,w
 10520  0F8C  00B9               	movwf	readINA220@pRxbuffer
 10521                           
 10522                           ;sensor.c: 26:     pTxbuffer = &regadd;
 10523  0F8D  303D               	movlw	(low (readINA220@regadd| 0))& (0+255)
 10524  0F8E  00B7               	movwf	??_readINA220
 10525  0F8F  0837               	movf	??_readINA220,w
 10526  0F90  00BA               	movwf	readINA220@pTxbuffer
 10527                           
 10528                           ;sensor.c: 27:     I2C1_WriteNBytes(address,pTxbuffer,1);
 10529  0F91  083A               	movf	readINA220@pTxbuffer,w
 10530  0F92  00B7               	movwf	??_readINA220
 10531  0F93  0837               	movf	??_readINA220,w
 10532  0F94  00B1               	movwf	I2C1_WriteNBytes@data
 10533  0F95  3001               	movlw	1
 10534  0F96  00B2               	movwf	I2C1_WriteNBytes@len
 10535  0F97  3000               	movlw	0
 10536  0F98  00B3               	movwf	I2C1_WriteNBytes@len+1
 10537  0F99  0835               	movf	readINA220@address,w
 10538  0F9A  318B  23D9  318F   	fcall	_I2C1_WriteNBytes
 10539                           
 10540                           ;sensor.c: 28:     I2C1_ReadNBytes(address,pRxbuffer,2);
 10541  0F9D  0140               	movlb	0	; select bank0
 10542  0F9E  0839               	movf	readINA220@pRxbuffer,w
 10543  0F9F  00B7               	movwf	??_readINA220
 10544  0FA0  0837               	movf	??_readINA220,w
 10545  0FA1  00B1               	movwf	I2C1_ReadNBytes@data
 10546  0FA2  3002               	movlw	2
 10547  0FA3  00B2               	movwf	I2C1_ReadNBytes@len
 10548  0FA4  3000               	movlw	0
 10549  0FA5  00B3               	movwf	I2C1_ReadNBytes@len+1
 10550  0FA6  0835               	movf	readINA220@address,w
 10551  0FA7  318B  2331         	fcall	_I2C1_ReadNBytes
 10552                           
 10553                           ;sensor.c: 29:     ret = buff[0];
 10554  0FA9  0140               	movlb	0	; select bank0
 10555  0FAA  083B               	movf	readINA220@buff,w
 10556  0FAB  00B7               	movwf	??_readINA220
 10557  0FAC  01B8               	clrf	??_readINA220+1
 10558  0FAD  0837               	movf	??_readINA220,w
 10559  0FAE  00BE               	movwf	readINA220@ret
 10560  0FAF  0838               	movf	??_readINA220+1,w
 10561  0FB0  00BF               	movwf	readINA220@ret+1
 10562                           
 10563                           ;sensor.c: 30:     ret = ret << 8;
 10564  0FB1  083E               	movf	readINA220@ret,w
 10565  0FB2  00B8               	movwf	??_readINA220+1
 10566  0FB3  01B7               	clrf	??_readINA220
 10567  0FB4  0837               	movf	??_readINA220,w
 10568  0FB5  00BE               	movwf	readINA220@ret
 10569  0FB6  0838               	movf	??_readINA220+1,w
 10570  0FB7  00BF               	movwf	readINA220@ret+1
 10571                           
 10572                           ;sensor.c: 31:     ret = ret + buff[1];
 10573  0FB8  083C               	movf	readINA220@buff+1,w
 10574  0FB9  073E               	addwf	readINA220@ret,w
 10575  0FBA  00BE               	movwf	readINA220@ret
 10576  0FBB  083F               	movf	readINA220@ret+1,w
 10577  0FBC  1803               	skipnc
 10578  0FBD  0A3F               	incf	readINA220@ret+1,w
 10579  0FBE  00BF               	movwf	readINA220@ret+1
 10580                           
 10581                           ;sensor.c: 32:     return ret;
 10582  0FBF  083F               	movf	readINA220@ret+1,w
 10583  0FC0  00B6               	movwf	?_readINA220+1
 10584  0FC1  083E               	movf	readINA220@ret,w
 10585  0FC2  00B5               	movwf	?_readINA220
 10586  0FC3  0008               	return
 10587  0FC4                     __end_of_readINA220:
 10588                           
 10589                           	psect	text11
 10590  0BD9                     __ptext11:	
 10591 ;; *************** function _I2C1_WriteNBytes *****************
 10592 ;; Defined at:
 10593 ;;		line 111 in file "mcc_generated_files/examples/i2c1_master_example.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  address         1    wreg     unsigned char 
 10596 ;;  data            1   17[BANK0 ] PTR unsigned char 
 10597 ;;		 -> writeINA220@Txbuffer(3), readINA220@regadd(1), 
 10598 ;;  len             2   18[BANK0 ] unsigned int 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;  address         1   20[BANK0 ] unsigned char 
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1    wreg      void 
 10603 ;; Registers used:
 10604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10605 ;; Tracked objects:
 10606 ;;		On entry : 3F/0
 10607 ;;		On exit  : 3F/1
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10610 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;Total ram usage:        4 bytes
 10615 ;; Hardware stack levels used: 1
 10616 ;; Hardware stack levels required when called: 12
 10617 ;; This function calls:
 10618 ;;		_I2C1_Close
 10619 ;;		_I2C1_MasterWrite
 10620 ;;		_I2C1_Open
 10621 ;;		_I2C1_SetAddressNackCallback
 10622 ;;		_I2C1_SetBuffer
 10623 ;; This function is called by:
 10624 ;;		_readINA220
 10625 ;;		_writeINA220
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629  0BD9                     _I2C1_WriteNBytes:	
 10630                           ;psect for function _I2C1_WriteNBytes
 10631                           
 10632                           
 10633                           ;incstack = 0
 10634                           ; Regs used in _I2C1_WriteNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10635                           ;I2C1_WriteNBytes@address stored from wreg
 10636  0BD9  00B4               	movwf	I2C1_WriteNBytes@address
 10637  0BDA                     l5063:	
 10638                           ;mcc_generated_files/examples/i2c1_master_example.c: 111: void I2C1_WriteNBytes(i2c1_add
      +                          ress_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c1_master_exam
      +                          ple.c: 112: {;mcc_generated_files/examples/i2c1_master_example.c: 113:     while(!I2C1_O
      +                          pen(address));
 10639                           
 10640  0BDA  0834               	movf	I2C1_WriteNBytes@address,w
 10641  0BDB  318E  269C  318B   	fcall	_I2C1_Open
 10642  0BDE  3A00               	xorlw	0
 10643  0BDF  1903               	skipnz
 10644  0BE0  2BDA               	goto	l5063
 10645                           
 10646                           ;mcc_generated_files/examples/i2c1_master_example.c: 114:     I2C1_SetBuffer(data,len);
 10647  0BE1  0833               	movf	I2C1_WriteNBytes@len+1,w
 10648  0BE2  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 10649  0BE3  0832               	movf	I2C1_WriteNBytes@len,w
 10650  0BE4  00F4               	movwf	I2C1_SetBuffer@bufferSize
 10651  0BE5  0831               	movf	I2C1_WriteNBytes@data,w
 10652  0BE6  318A  2213  318B   	fcall	_I2C1_SetBuffer
 10653                           
 10654                           ;mcc_generated_files/examples/i2c1_master_example.c: 115:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 10655  0BE9  3000               	movlw	0
 10656  0BEA  0140               	movlb	0	; select bank0
 10657  0BEB  00A3               	movwf	I2C1_SetAddressNackCallback@cb
 10658  0BEC  00A4               	movwf	I2C1_SetAddressNackCallback@cb+1
 10659  0BED  01A5               	clrf	I2C1_SetAddressNackCallback@ptr
 10660  0BEE  3189  21DB  318B   	fcall	_I2C1_SetAddressNackCallback
 10661                           
 10662                           ;mcc_generated_files/examples/i2c1_master_example.c: 116:     I2C1_MasterWrite();
 10663  0BF1  3189  2104  318B   	fcall	_I2C1_MasterWrite
 10664  0BF4                     l5071:	
 10665                           ;mcc_generated_files/examples/i2c1_master_example.c: 117:     while(I2C1_BUSY == I2C1_Cl
      +                          ose());
 10666                           
 10667  0BF4  318A  22FF  318B   	fcall	_I2C1_Close
 10668  0BF7  3A01               	xorlw	1
 10669  0BF8  1D03               	btfss	3,2
 10670  0BF9  0008               	return
 10671  0BFA  2BF4               	goto	l5071
 10672  0BFB                     __end_of_I2C1_WriteNBytes:
 10673                           
 10674                           	psect	text12
 10675  09DB                     __ptext12:	
 10676 ;; *************** function _I2C1_SetAddressNackCallback *****************
 10677 ;; Defined at:
 10678 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;  cb              2    3[BANK0 ] PTR FTN(PTR void ,)enum 
 10681 ;;		 -> Absolute function(1), 
 10682 ;;  ptr             1    5[BANK0 ] PTR void 
 10683 ;;		 -> NULL(0), 
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;		None
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      void 
 10688 ;; Registers used:
 10689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10690 ;; Tracked objects:
 10691 ;;		On entry : 3F/0
 10692 ;;		On exit  : 3F/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10695 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;Total ram usage:        4 bytes
 10700 ;; Hardware stack levels used: 1
 10701 ;; Hardware stack levels required when called: 5
 10702 ;; This function calls:
 10703 ;;		_I2C1_SetCallback
 10704 ;; This function is called by:
 10705 ;;		_I2C1_WriteNBytes
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708                           
 10709  09DB                     _I2C1_SetAddressNackCallback:	
 10710                           ;psect for function _I2C1_SetAddressNackCallback
 10711                           
 10712                           
 10713                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 10714                           
 10715                           ;incstack = 0
 10716                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10717  09DB  0824               	movf	I2C1_SetAddressNackCallback@cb+1,w
 10718  09DC  00A1               	movwf	I2C1_SetCallback@cb+1
 10719  09DD  0823               	movf	I2C1_SetAddressNackCallback@cb,w
 10720  09DE  00A0               	movwf	I2C1_SetCallback@cb
 10721  09DF  0825               	movf	I2C1_SetAddressNackCallback@ptr,w
 10722  09E0  00A6               	movwf	??_I2C1_SetAddressNackCallback
 10723  09E1  0826               	movf	??_I2C1_SetAddressNackCallback,w
 10724  09E2  00A2               	movwf	I2C1_SetCallback@ptr
 10725  09E3  3002               	movlw	2
 10726  09E4  318B  23FB         	fcall	_I2C1_SetCallback
 10727  09E6  0008               	return
 10728  09E7                     __end_of_I2C1_SetAddressNackCallback:
 10729                           
 10730                           	psect	text13
 10731  0904                     __ptext13:	
 10732 ;; *************** function _I2C1_MasterWrite *****************
 10733 ;; Defined at:
 10734 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;		None
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;		None
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  1    wreg      enum E355
 10741 ;; Registers used:
 10742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10743 ;; Tracked objects:
 10744 ;;		On entry : 3F/0
 10745 ;;		On exit  : 3F/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;Total ram usage:        0 bytes
 10753 ;; Hardware stack levels used: 1
 10754 ;; Hardware stack levels required when called: 11
 10755 ;; This function calls:
 10756 ;;		_I2C1_MasterOperation
 10757 ;; This function is called by:
 10758 ;;		_I2C1_WriteNBytes
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762  0904                     _I2C1_MasterWrite:	
 10763                           ;psect for function _I2C1_MasterWrite
 10764                           
 10765                           
 10766                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 10767                           
 10768                           ;incstack = 0
 10769                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10770  0904  3000               	movlw	0
 10771  0905  318B  23BB         	fcall	_I2C1_MasterOperation
 10772  0907  0008               	return
 10773  0908                     __end_of_I2C1_MasterWrite:
 10774                           
 10775                           	psect	text14
 10776  0B31                     __ptext14:	
 10777 ;; *************** function _I2C1_ReadNBytes *****************
 10778 ;; Defined at:
 10779 ;;		line 120 in file "mcc_generated_files/examples/i2c1_master_example.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  address         1    wreg     unsigned char 
 10782 ;;  data            1   17[BANK0 ] PTR unsigned char 
 10783 ;;		 -> readINA220@buff(2), 
 10784 ;;  len             2   18[BANK0 ] unsigned int 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  address         1   20[BANK0 ] unsigned char 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 3F/0
 10793 ;;		On exit  : 3F/1
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10796 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;Total ram usage:        4 bytes
 10801 ;; Hardware stack levels used: 1
 10802 ;; Hardware stack levels required when called: 12
 10803 ;; This function calls:
 10804 ;;		_I2C1_Close
 10805 ;;		_I2C1_MasterRead
 10806 ;;		_I2C1_Open
 10807 ;;		_I2C1_SetBuffer
 10808 ;; This function is called by:
 10809 ;;		_readINA220
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813  0B31                     _I2C1_ReadNBytes:	
 10814                           ;psect for function _I2C1_ReadNBytes
 10815                           
 10816                           
 10817                           ;incstack = 0
 10818                           ; Regs used in _I2C1_ReadNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10819                           ;I2C1_ReadNBytes@address stored from wreg
 10820  0B31  00B4               	movwf	I2C1_ReadNBytes@address
 10821  0B32                     l5075:	
 10822                           ;mcc_generated_files/examples/i2c1_master_example.c: 120: void I2C1_ReadNBytes(i2c1_addr
      +                          ess_t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c1_master_examp
      +                          le.c: 121: {;mcc_generated_files/examples/i2c1_master_example.c: 122:     while(!I2C1_Op
      +                          en(address));
 10823                           
 10824  0B32  0834               	movf	I2C1_ReadNBytes@address,w
 10825  0B33  318E  269C  318B   	fcall	_I2C1_Open
 10826  0B36  3A00               	xorlw	0
 10827  0B37  1903               	skipnz
 10828  0B38  2B32               	goto	l5075
 10829                           
 10830                           ;mcc_generated_files/examples/i2c1_master_example.c: 123:     I2C1_SetBuffer(data,len);
 10831  0B39  0833               	movf	I2C1_ReadNBytes@len+1,w
 10832  0B3A  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 10833  0B3B  0832               	movf	I2C1_ReadNBytes@len,w
 10834  0B3C  00F4               	movwf	I2C1_SetBuffer@bufferSize
 10835  0B3D  0831               	movf	I2C1_ReadNBytes@data,w
 10836  0B3E  318A  2213  318B   	fcall	_I2C1_SetBuffer
 10837                           
 10838                           ;mcc_generated_files/examples/i2c1_master_example.c: 124:     I2C1_MasterRead();
 10839  0B41  3189  2100  318B   	fcall	_I2C1_MasterRead
 10840  0B44                     l5081:	
 10841                           ;mcc_generated_files/examples/i2c1_master_example.c: 125:     while(I2C1_BUSY == I2C1_Cl
      +                          ose());
 10842                           
 10843  0B44  318A  22FF  318B   	fcall	_I2C1_Close
 10844  0B47  3A01               	xorlw	1
 10845  0B48  1D03               	btfss	3,2
 10846  0B49  0008               	return
 10847  0B4A  2B44               	goto	l5081
 10848  0B4B                     __end_of_I2C1_ReadNBytes:
 10849                           
 10850                           	psect	text15
 10851  0E9C                     __ptext15:	
 10852 ;; *************** function _I2C1_Open *****************
 10853 ;; Defined at:
 10854 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;  address         1    wreg     unsigned char 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  address         1    0[BANK0 ] unsigned char 
 10859 ;;  returnValue     1    1[BANK0 ] enum E355
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      enum E355
 10862 ;; Registers used:
 10863 ;;		wreg, status,2, status,0, pclath, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : 3F/0
 10866 ;;		On exit  : 3F/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;Total ram usage:        3 bytes
 10874 ;; Hardware stack levels used: 1
 10875 ;; Hardware stack levels required when called: 5
 10876 ;; This function calls:
 10877 ;;		_I2C1_MasterClearIrq
 10878 ;;		_I2C1_MasterOpen
 10879 ;; This function is called by:
 10880 ;;		_I2C1_WriteNBytes
 10881 ;;		_I2C1_ReadNBytes
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885  0E9C                     _I2C1_Open:	
 10886                           ;psect for function _I2C1_Open
 10887                           
 10888                           
 10889                           ;incstack = 0
 10890                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 10891                           ;I2C1_Open@address stored from wreg
 10892  0E9C  00A0               	movwf	I2C1_Open@address
 10893                           
 10894                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 10895  0E9D  01A1               	clrf	I2C1_Open@returnValue
 10896  0E9E  0AA1               	incf	I2C1_Open@returnValue,f
 10897                           
 10898                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 10899  0E9F  0141               	movlb	1	; select bank1
 10900  0EA0  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 10901  0EA1  2ED4               	goto	l447
 10902                           
 10903                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 10904  0EA2  0140               	movlb	0	; select bank0
 10905  0EA3  0820               	movf	I2C1_Open@address,w
 10906  0EA4  00F4               	movwf	??_I2C1_Open
 10907  0EA5  0874               	movf	??_I2C1_Open,w
 10908  0EA6  0141               	movlb	1	; select bank1
 10909  0EA7  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 10910                           
 10911                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 10912  0EA8  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 10913                           
 10914                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 10915  0EA9  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 10916                           
 10917                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 10918  0EAA  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 10919                           
 10920                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 10921  0EAB  300E               	movlw	14
 10922  0EAC  00F4               	movwf	??_I2C1_Open
 10923  0EAD  0874               	movf	??_I2C1_Open,w
 10924  0EAE  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 10925                           
 10926                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 10927  0EAF  30F4               	movlw	244
 10928  0EB0  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 10929  0EB1  3001               	movlw	1
 10930  0EB2  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 10931                           
 10932                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 10933  0EB3  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 10934                           
 10935                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 10936  0EB4  30A7               	movlw	low _I2C1_CallbackReturnStop
 10937  0EB5  00A0               	movwf	_I2C1_Status^(0+128)
 10938  0EB6  3008               	movlw	high _I2C1_CallbackReturnStop
 10939  0EB7  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 10940                           
 10941                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 10942  0EB8  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 10943                           
 10944                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 10945  0EB9  30A7               	movlw	low _I2C1_CallbackReturnStop
 10946  0EBA  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 10947  0EBB  3008               	movlw	high _I2C1_CallbackReturnStop
 10948  0EBC  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 10949                           
 10950                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 10951  0EBD  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 10952                           
 10953                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 10954  0EBE  30A7               	movlw	low _I2C1_CallbackReturnStop
 10955  0EBF  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 10956  0EC0  3008               	movlw	high _I2C1_CallbackReturnStop
 10957  0EC1  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 10958                           
 10959                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 10960  0EC2  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 10961                           
 10962                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 10963  0EC3  30A7               	movlw	low _I2C1_CallbackReturnStop
 10964  0EC4  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 10965  0EC5  3008               	movlw	high _I2C1_CallbackReturnStop
 10966  0EC6  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 10967                           
 10968                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 10969  0EC7  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 10970                           
 10971                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 10972  0EC8  3002               	movlw	low _I2C1_CallbackReturnReset
 10973  0EC9  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 10974  0ECA  3000               	movlw	high _I2C1_CallbackReturnReset
 10975  0ECB  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 10976                           
 10977                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 10978  0ECC  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 10979                           
 10980                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 10981  0ECD  3188  20B8  318E   	fcall	_I2C1_MasterClearIrq
 10982                           
 10983                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 10984  0ED0  3189  21CF         	fcall	_I2C1_MasterOpen
 10985                           
 10986                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 10987  0ED2  0140               	movlb	0	; select bank0
 10988  0ED3  01A1               	clrf	I2C1_Open@returnValue
 10989  0ED4                     l447:	
 10990                           ;mcc_generated_files/i2c1_master.c: 205:     }
 10991                           
 10992                           
 10993                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 10994  0ED4  0140               	movlb	0	; select bank0
 10995  0ED5  0821               	movf	I2C1_Open@returnValue,w
 10996  0ED6  0008               	return
 10997  0ED7                     __end_of_I2C1_Open:
 10998                           
 10999                           	psect	text16
 11000  09CF                     __ptext16:	
 11001 ;; *************** function _I2C1_MasterOpen *****************
 11002 ;; Defined at:
 11003 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;		None
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;		None
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      _Bool 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2
 11012 ;; Tracked objects:
 11013 ;;		On entry : 3F/E
 11014 ;;		On exit  : 3F/3
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;Total ram usage:        0 bytes
 11022 ;; Hardware stack levels used: 1
 11023 ;; Hardware stack levels required when called: 4
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		_I2C1_Open
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031  09CF                     _I2C1_MasterOpen:	
 11032                           ;psect for function _I2C1_MasterOpen
 11033                           
 11034                           
 11035                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 11036                           
 11037                           ;incstack = 0
 11038                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 11039  09CF  0143               	movlb	3	; select bank3
 11040  09D0  1A90               	btfsc	16,5	;volatile
 11041  09D1  0008               	return
 11042                           
 11043                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 11044  09D2  3080               	movlw	128
 11045  09D3  008F               	movwf	15	;volatile
 11046                           
 11047                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x28;
 11048  09D4  3028               	movlw	40
 11049  09D5  0090               	movwf	16	;volatile
 11050                           
 11051                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 11052  09D6  0191               	clrf	17	;volatile
 11053                           
 11054                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x04;
 11055  09D7  3004               	movlw	4
 11056  09D8  008D               	movwf	13	;volatile
 11057                           
 11058                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 11059  09D9  1690               	bsf	16,5	;volatile
 11060  09DA  0008               	return
 11061  09DB                     __end_of_I2C1_MasterOpen:
 11062                           
 11063                           	psect	text17
 11064  0900                     __ptext17:	
 11065 ;; *************** function _I2C1_MasterRead *****************
 11066 ;; Defined at:
 11067 ;;		line 246 in file "mcc_generated_files/i2c1_master.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;		None
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;		None
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1    wreg      enum E355
 11074 ;; Registers used:
 11075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11076 ;; Tracked objects:
 11077 ;;		On entry : 3F/1
 11078 ;;		On exit  : 3F/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;Total ram usage:        0 bytes
 11086 ;; Hardware stack levels used: 1
 11087 ;; Hardware stack levels required when called: 11
 11088 ;; This function calls:
 11089 ;;		_I2C1_MasterOperation
 11090 ;; This function is called by:
 11091 ;;		_I2C1_ReadNBytes
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095  0900                     _I2C1_MasterRead:	
 11096                           ;psect for function _I2C1_MasterRead
 11097                           
 11098                           
 11099                           ;mcc_generated_files/i2c1_master.c: 248:     return I2C1_MasterOperation(1);;	Return val
      +                          ue of _I2C1_MasterRead is never used
 11100                           
 11101                           ;incstack = 0
 11102                           ; Regs used in _I2C1_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11103  0900  3001               	movlw	1
 11104  0901  318B  23BB         	fcall	_I2C1_MasterOperation
 11105  0903  0008               	return
 11106  0904                     __end_of_I2C1_MasterRead:
 11107                           
 11108                           	psect	text18
 11109  0BBB                     __ptext18:	
 11110 ;; *************** function _I2C1_MasterOperation *****************
 11111 ;; Defined at:
 11112 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  read            1    wreg     _Bool 
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;  read            1   15[BANK0 ] _Bool 
 11117 ;;  returnValue     1   16[BANK0 ] enum E355
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  1    wreg      enum E355
 11120 ;; Registers used:
 11121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11122 ;; Tracked objects:
 11123 ;;		On entry : 3E/0
 11124 ;;		On exit  : 3F/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;Total ram usage:        3 bytes
 11132 ;; Hardware stack levels used: 1
 11133 ;; Hardware stack levels required when called: 10
 11134 ;; This function calls:
 11135 ;;		_I2C1_MasterStart
 11136 ;;		_I2C1_Poller
 11137 ;; This function is called by:
 11138 ;;		_I2C1_MasterRead
 11139 ;;		_I2C1_MasterWrite
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143  0BBB                     _I2C1_MasterOperation:	
 11144                           ;psect for function _I2C1_MasterOperation
 11145                           
 11146                           
 11147                           ;incstack = 0
 11148                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11149                           ;I2C1_MasterOperation@read stored from wreg
 11150  0BBB  0140               	movlb	0	; select bank0
 11151  0BBC  00AF               	movwf	I2C1_MasterOperation@read
 11152                           
 11153                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 11154  0BBD  01B0               	clrf	I2C1_MasterOperation@returnValue
 11155  0BBE  0AB0               	incf	I2C1_MasterOperation@returnValue,f
 11156                           
 11157                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 11158  0BBF  0141               	movlb	1	; select bank1
 11159  0BC0  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 11160  0BC1  2BD6               	goto	l4927
 11161                           
 11162                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 11163  0BC2  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 11164                           
 11165                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 11166  0BC3  0140               	movlb	0	; select bank0
 11167  0BC4  01B0               	clrf	I2C1_MasterOperation@returnValue
 11168                           
 11169                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 11170  0BC5  082F               	movf	I2C1_MasterOperation@read,w
 11171  0BC6  1903               	btfsc	3,2
 11172  0BC7  2BCC               	goto	l4921
 11173                           
 11174                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 11175  0BC8  0141               	movlb	1	; select bank1
 11176  0BC9  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 11177  0BCA  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 11178                           
 11179                           ;mcc_generated_files/i2c1_master.c: 235:         }
 11180  0BCB  2BD1               	goto	l4923
 11181  0BCC                     l4921:
 11182                           
 11183                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 11184  0BCC  3002               	movlw	2
 11185  0BCD  00AE               	movwf	??_I2C1_MasterOperation
 11186  0BCE  082E               	movf	??_I2C1_MasterOperation,w
 11187  0BCF  0141               	movlb	1	; select bank1
 11188  0BD0  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 11189  0BD1                     l4923:
 11190                           
 11191                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 11192  0BD1  3188  20BE  318B   	fcall	_I2C1_MasterStart
 11193                           
 11194                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 11195  0BD4  3189  2196         	fcall	_I2C1_Poller
 11196  0BD6                     l4927:
 11197                           
 11198                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 11199  0BD6  0140               	movlb	0	; select bank0
 11200  0BD7  0830               	movf	I2C1_MasterOperation@returnValue,w
 11201  0BD8  0008               	return
 11202  0BD9                     __end_of_I2C1_MasterOperation:
 11203                           
 11204                           	psect	text19
 11205  0996                     __ptext19:	
 11206 ;; *************** function _I2C1_Poller *****************
 11207 ;; Defined at:
 11208 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;		None
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;		None
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  1    wreg      void 
 11215 ;; Registers used:
 11216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11217 ;; Tracked objects:
 11218 ;;		On entry : 3F/3
 11219 ;;		On exit  : 3F/1
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;Total ram usage:        0 bytes
 11227 ;; Hardware stack levels used: 1
 11228 ;; Hardware stack levels required when called: 9
 11229 ;; This function calls:
 11230 ;;		_I2C1_MasterFsm
 11231 ;;		_I2C1_MasterWaitForEvent
 11232 ;; This function is called by:
 11233 ;;		_I2C1_MasterOperation
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237  0996                     _I2C1_Poller:	
 11238                           ;psect for function _I2C1_Poller
 11239                           
 11240  0996                     l4893:	
 11241                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 11242                           
 11243                           ;incstack = 0
 11244                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11245                           
 11246                           
 11247                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 11248  0996  0141               	movlb	1	; select bank1
 11249  0997  1CBC               	btfss	(_I2C1_Status^(0+128)+28),1
 11250  0998  0008               	return
 11251                           
 11252                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 11253  0999  3188  20FC  3189   	fcall	_I2C1_MasterWaitForEvent
 11254                           
 11255                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 11256  099C  318C  24BC  3189   	fcall	_I2C1_MasterFsm
 11257  099F  2996               	goto	l4893
 11258  09A0                     __end_of_I2C1_Poller:
 11259                           
 11260                           	psect	text20
 11261  08FC                     __ptext20:	
 11262 ;; *************** function _I2C1_MasterWaitForEvent *****************
 11263 ;; Defined at:
 11264 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		None
 11273 ;; Tracked objects:
 11274 ;;		On entry : 3D/1
 11275 ;;		On exit  : 3F/E
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11282 ;;Total ram usage:        0 bytes
 11283 ;; Hardware stack levels used: 1
 11284 ;; Hardware stack levels required when called: 4
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		_I2C1_Poller
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292  08FC                     _I2C1_MasterWaitForEvent:	
 11293                           ;psect for function _I2C1_MasterWaitForEvent
 11294                           
 11295  08FC                     l670:	
 11296                           ;incstack = 0
 11297                           ; Regs used in _I2C1_MasterWaitForEvent: []
 11298                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 11299                           
 11300                           
 11301                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 11302  08FC  014E               	movlb	14	; select bank14
 11303  08FD  180F               	btfsc	15,0	;volatile
 11304  08FE  0008               	return
 11305  08FF  28FC               	goto	l670
 11306  0900                     __end_of_I2C1_MasterWaitForEvent:
 11307                           
 11308                           	psect	text21
 11309  0CBC                     __ptext21:	
 11310 ;; *************** function _I2C1_MasterFsm *****************
 11311 ;; Defined at:
 11312 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;		None
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  1    wreg      void 
 11319 ;; Registers used:
 11320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11321 ;; Tracked objects:
 11322 ;;		On entry : 3F/E
 11323 ;;		On exit  : 3F/1
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;Total ram usage:        3 bytes
 11331 ;; Hardware stack levels used: 1
 11332 ;; Hardware stack levels required when called: 8
 11333 ;; This function calls:
 11334 ;;		_I2C1_DO_ADDRESS_NACK
 11335 ;;		_I2C1_DO_IDLE
 11336 ;;		_I2C1_DO_RCEN
 11337 ;;		_I2C1_DO_RESET
 11338 ;;		_I2C1_DO_RX
 11339 ;;		_I2C1_DO_RX_ACK
 11340 ;;		_I2C1_DO_RX_NACK_RESTART
 11341 ;;		_I2C1_DO_RX_NACK_STOP
 11342 ;;		_I2C1_DO_SEND_ADR_READ
 11343 ;;		_I2C1_DO_SEND_ADR_WRITE
 11344 ;;		_I2C1_DO_SEND_RESTART
 11345 ;;		_I2C1_DO_SEND_RESTART_READ
 11346 ;;		_I2C1_DO_SEND_RESTART_WRITE
 11347 ;;		_I2C1_DO_SEND_STOP
 11348 ;;		_I2C1_DO_TX
 11349 ;;		_I2C1_DO_TX_EMPTY
 11350 ;;		_I2C1_MasterClearIrq
 11351 ;;		_I2C1_MasterIsNack
 11352 ;; This function is called by:
 11353 ;;		_I2C1_Poller
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357  0CBC                     _I2C1_MasterFsm:	
 11358                           ;psect for function _I2C1_MasterFsm
 11359                           
 11360                           
 11361                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 11362                           
 11363                           ;incstack = 0
 11364                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11365  0CBC  3188  20B8  318C   	fcall	_I2C1_MasterClearIrq
 11366                           
 11367                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 11368  0CBF  0141               	movlb	1	; select bank1
 11369  0CC0  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 11370  0CC1  2CCE               	goto	l4883
 11371  0CC2  3189  2151  318C   	fcall	_I2C1_MasterIsNack
 11372  0CC5  3A00               	xorlw	0
 11373  0CC6  1903               	skipnz
 11374  0CC7  2CCE               	goto	l4883
 11375                           
 11376                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 11377  0CC8  300F               	movlw	15
 11378  0CC9  0140               	movlb	0	; select bank0
 11379  0CCA  00AB               	movwf	??_I2C1_MasterFsm
 11380  0CCB  082B               	movf	??_I2C1_MasterFsm,w
 11381  0CCC  0141               	movlb	1	; select bank1
 11382  0CCD  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 11383  0CCE                     l4883:
 11384                           
 11385                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 11386  0CCE  0141               	movlb	1	; select bank1
 11387  0CCF  083A               	movf	(_I2C1_Status^(0+128)+26),w
 11388  0CD0  0140               	movlb	0	; select bank0
 11389  0CD1  00AB               	movwf	??_I2C1_MasterFsm
 11390  0CD2  01AC               	clrf	??_I2C1_MasterFsm+1
 11391  0CD3  35AB               	lslf	??_I2C1_MasterFsm,f
 11392  0CD4  0DAC               	rlf	??_I2C1_MasterFsm+1,f
 11393  0CD5  3000               	movlw	low (_fsmStateTable| (0+32768))
 11394  0CD6  072B               	addwf	??_I2C1_MasterFsm,w
 11395  0CD7  0084               	movwf	4
 11396  0CD8  3090               	movlw	high (_fsmStateTable| (0+32768))
 11397  0CD9  3D2C               	addwfc	??_I2C1_MasterFsm+1,w
 11398  0CDA  0085               	movwf	5
 11399  0CDB  3F01               	moviw [1]fsr0
 11400  0CDC  008A               	movwf	10
 11401  0CDD  3F00               	moviw [0]fsr0
 11402  0CDE  000A               	callw
 11403  0CDF  318C               	pagesel	$
 11404  0CE0  0140               	movlb	0	; select bank0
 11405  0CE1  00AD               	movwf	??_I2C1_MasterFsm+2
 11406  0CE2  082D               	movf	??_I2C1_MasterFsm+2,w
 11407  0CE3  0141               	movlb	1	; select bank1
 11408  0CE4  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 11409  0CE5  0008               	return
 11410  0CE6                     __end_of_I2C1_MasterFsm:
 11411                           
 11412                           	psect	text22
 11413  0D40                     __ptext22:	
 11414 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 11415 ;; Defined at:
 11416 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;		None
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;		None
 11421 ;; Return value:  Size  Location     Type
 11422 ;;                  1    wreg      enum E10718
 11423 ;; Registers used:
 11424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11425 ;; Tracked objects:
 11426 ;;		On entry : 3F/0
 11427 ;;		On exit  : 3F/3
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;Total ram usage:        3 bytes
 11435 ;; Hardware stack levels used: 1
 11436 ;; Hardware stack levels required when called: 7
 11437 ;; This function calls:
 11438 ;;		Absolute function
 11439 ;;		_I2C1_CallbackReturnReset
 11440 ;;		_I2C1_CallbackReturnStop
 11441 ;;		_I2C1_DO_SEND_RESTART
 11442 ;;		_I2C1_DO_SEND_STOP
 11443 ;;		_rd1RegCompleteHandler
 11444 ;;		_rd2RegCompleteHandler
 11445 ;;		_rdBlkRegCompleteHandler
 11446 ;;		_wr1RegCompleteHandler
 11447 ;;		_wr2RegCompleteHandler
 11448 ;; This function is called by:
 11449 ;;		_I2C1_MasterFsm
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453  0D40                     _I2C1_DO_ADDRESS_NACK:	
 11454                           ;psect for function _I2C1_DO_ADDRESS_NACK
 11455                           
 11456                           
 11457                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 11458                           
 11459                           ;incstack = 0
 11460                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11461  0D40  0141               	movlb	1	; select bank1
 11462  0D41  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 11463                           
 11464                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 11465  0D42  3002               	movlw	2
 11466  0D43  0140               	movlb	0	; select bank0
 11467  0D44  00A8               	movwf	??_I2C1_DO_ADDRESS_NACK
 11468  0D45  0828               	movf	??_I2C1_DO_ADDRESS_NACK,w
 11469  0D46  0141               	movlb	1	; select bank1
 11470  0D47  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 11471                           
 11472                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 11473  0D48  2D4F               	goto	l4867
 11474  0D49                     l4857:
 11475                           
 11476                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 11477  0D49  3188  20E8         	fcall	_I2C1_DO_SEND_RESTART
 11478  0D4B  0008               	return
 11479  0D4C                     l4861:
 11480                           
 11481                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 11482  0D4C  3188  20EC         	fcall	_I2C1_DO_SEND_STOP
 11483  0D4E  0008               	return
 11484  0D4F                     l4867:
 11485  0D4F  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 11486  0D50  0140               	movlb	0	; select bank0
 11487  0D51  00A8               	movwf	??_I2C1_DO_ADDRESS_NACK
 11488  0D52  0828               	movf	??_I2C1_DO_ADDRESS_NACK,w
 11489  0D53  00A7               	movwf	I2C1_CallbackReturnReset@funPtr
 11490  0D54  3004               	movlw	4
 11491  0D55  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 11492  0D56  0086               	movwf	6
 11493  0D57  0187               	clrf	7
 11494  0D58  3F41               	moviw [1]fsr1
 11495  0D59  008A               	movwf	10
 11496  0D5A  3F40               	moviw [0]fsr1
 11497  0D5B  000A               	callw
 11498  0D5C  318D               	pagesel	$
 11499  0D5D  0140               	movlb	0	; select bank0
 11500  0D5E  00A9               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 11501  0D5F  01AA               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 11502                           
 11503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11504                           ; Switch size 1, requested type "simple"
 11505                           ; Number of cases is 1, Range of values is 0 to 0
 11506                           ; switch strategies available:
 11507                           ; Name         Instructions Cycles
 11508                           ; simple_byte            4     3 (average)
 11509                           ; direct_byte            8     6 (fixed)
 11510                           ; jumptable            260     6 (fixed)
 11511                           ;	Chosen strategy is simple_byte
 11512  0D60  082A               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 11513  0D61  3A00               	xorlw	0	; case 0
 11514  0D62  1903               	skipnz
 11515  0D63  2D65               	goto	l5879
 11516  0D64  2D4C               	goto	l4861
 11517  0D65                     l5879:
 11518                           
 11519                           ; Switch size 1, requested type "simple"
 11520                           ; Number of cases is 2, Range of values is 2 to 3
 11521                           ; switch strategies available:
 11522                           ; Name         Instructions Cycles
 11523                           ; simple_byte            7     4 (average)
 11524                           ; direct_byte           13     9 (fixed)
 11525                           ; jumptable            263     9 (fixed)
 11526                           ;	Chosen strategy is simple_byte
 11527  0D65  0829               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 11528  0D66  3A02               	xorlw	2	; case 2
 11529  0D67  1903               	skipnz
 11530  0D68  2D49               	goto	l4857
 11531  0D69  3A01               	xorlw	1	; case 3
 11532  0D6A  1903               	skipnz
 11533  0D6B  2D49               	goto	l4857
 11534  0D6C  2D4C               	goto	l4861
 11535  0D6D  0008               	return
 11536  0D6E                     __end_of_I2C1_DO_ADDRESS_NACK:
 11537                           
 11538                           	psect	text23
 11539  091C                     __ptext23:	
 11540 ;; *************** function _I2C1_DO_RESET *****************
 11541 ;; Defined at:
 11542 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;		None
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;		None
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  1    wreg      enum E10718
 11549 ;; Registers used:
 11550 ;;		wreg, status,2
 11551 ;; Tracked objects:
 11552 ;;		On entry : 3F/0
 11553 ;;		On exit  : 3F/1
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;Total ram usage:        0 bytes
 11561 ;; Hardware stack levels used: 1
 11562 ;; Hardware stack levels required when called: 4
 11563 ;; This function calls:
 11564 ;;		Nothing
 11565 ;; This function is called by:
 11566 ;;		_I2C1_MasterFsm
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570  091C                     _I2C1_DO_RESET:	
 11571                           ;psect for function _I2C1_DO_RESET
 11572                           
 11573                           
 11574                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 11575                           
 11576                           ;incstack = 0
 11577                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 11578  091C  0141               	movlb	1	; select bank1
 11579  091D  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 11580                           
 11581                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 11582  091E  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 11583                           
 11584                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 11585  091F  300E               	movlw	14
 11586  0920  0008               	return
 11587  0921                     __end_of_I2C1_DO_RESET:
 11588                           
 11589                           	psect	text24
 11590  08F8                     __ptext24:	
 11591 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 11592 ;; Defined at:
 11593 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;		None
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;		None
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      enum E10718
 11600 ;; Registers used:
 11601 ;;		wreg, status,2, status,0, pclath, cstack
 11602 ;; Tracked objects:
 11603 ;;		On entry : 3F/0
 11604 ;;		On exit  : 3F/3
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;Total ram usage:        0 bytes
 11612 ;; Hardware stack levels used: 1
 11613 ;; Hardware stack levels required when called: 5
 11614 ;; This function calls:
 11615 ;;		_I2C1_MasterSendNack
 11616 ;; This function is called by:
 11617 ;;		_I2C1_DO_RX
 11618 ;;		_I2C1_MasterFsm
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622  08F8                     _I2C1_DO_RX_NACK_RESTART:	
 11623                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 11624                           
 11625                           
 11626                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 11627                           
 11628                           ;incstack = 0
 11629                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11630  08F8  3188  20D8         	fcall	_I2C1_MasterSendNack
 11631                           
 11632                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 11633  08FA  3009               	movlw	9
 11634  08FB  0008               	return
 11635  08FC                     __end_of_I2C1_DO_RX_NACK_RESTART:
 11636                           
 11637                           	psect	text25
 11638  08F4                     __ptext25:	
 11639 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 11640 ;; Defined at:
 11641 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;		None
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;		None
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      enum E10718
 11648 ;; Registers used:
 11649 ;;		wreg, status,2, status,0, pclath, cstack
 11650 ;; Tracked objects:
 11651 ;;		On entry : 3F/0
 11652 ;;		On exit  : 3F/3
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;Total ram usage:        0 bytes
 11660 ;; Hardware stack levels used: 1
 11661 ;; Hardware stack levels required when called: 5
 11662 ;; This function calls:
 11663 ;;		_I2C1_MasterSendNack
 11664 ;; This function is called by:
 11665 ;;		_I2C1_DO_RX
 11666 ;;		_I2C1_MasterFsm
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670  08F4                     _I2C1_DO_RX_NACK_STOP:	
 11671                           ;psect for function _I2C1_DO_RX_NACK_STOP
 11672                           
 11673                           
 11674                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 11675                           
 11676                           ;incstack = 0
 11677                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11678  08F4  3188  20D8         	fcall	_I2C1_MasterSendNack
 11679                           
 11680                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 11681  08F6  300A               	movlw	10
 11682  08F7  0008               	return
 11683  08F8                     __end_of_I2C1_DO_RX_NACK_STOP:
 11684                           
 11685                           	psect	text26
 11686  08F0                     __ptext26:	
 11687 ;; *************** function _I2C1_DO_RX_ACK *****************
 11688 ;; Defined at:
 11689 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;		None
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;		None
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      enum E10718
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0, pclath, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 3F/0
 11700 ;;		On exit  : 3F/3
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11707 ;;Total ram usage:        0 bytes
 11708 ;; Hardware stack levels used: 1
 11709 ;; Hardware stack levels required when called: 5
 11710 ;; This function calls:
 11711 ;;		_I2C1_MasterSendAck
 11712 ;; This function is called by:
 11713 ;;		_I2C1_MasterFsm
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717  08F0                     _I2C1_DO_RX_ACK:	
 11718                           ;psect for function _I2C1_DO_RX_ACK
 11719                           
 11720                           
 11721                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 11722                           
 11723                           ;incstack = 0
 11724                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 11725  08F0  3188  20DC         	fcall	_I2C1_MasterSendAck
 11726                           
 11727                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 11728  08F2  3005               	movlw	5
 11729  08F3  0008               	return
 11730  08F4                     __end_of_I2C1_DO_RX_ACK:
 11731                           
 11732                           	psect	text27
 11733  08EC                     __ptext27:	
 11734 ;; *************** function _I2C1_DO_SEND_STOP *****************
 11735 ;; Defined at:
 11736 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;		None
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;		None
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      enum E10718
 11743 ;; Registers used:
 11744 ;;		wreg, status,2, status,0, pclath, cstack
 11745 ;; Tracked objects:
 11746 ;;		On entry : 3F/0
 11747 ;;		On exit  : 3F/3
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;Total ram usage:        0 bytes
 11755 ;; Hardware stack levels used: 1
 11756 ;; Hardware stack levels required when called: 5
 11757 ;; This function calls:
 11758 ;;		_I2C1_MasterStop
 11759 ;; This function is called by:
 11760 ;;		_I2C1_DO_TX
 11761 ;;		_I2C1_DO_TX_EMPTY
 11762 ;;		_I2C1_DO_ADDRESS_NACK
 11763 ;;		_I2C1_MasterFsm
 11764 ;; This function uses a non-reentrant model
 11765 ;;
 11766                           
 11767  08EC                     _I2C1_DO_SEND_STOP:	
 11768                           ;psect for function _I2C1_DO_SEND_STOP
 11769                           
 11770                           
 11771                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 11772                           
 11773                           ;incstack = 0
 11774                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 11775  08EC  3188  20C4         	fcall	_I2C1_MasterStop
 11776                           
 11777                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 11778  08EE  3000               	movlw	0
 11779  08EF  0008               	return
 11780  08F0                     __end_of_I2C1_DO_SEND_STOP:
 11781                           
 11782                           	psect	text28
 11783  08E8                     __ptext28:	
 11784 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 11785 ;; Defined at:
 11786 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 11787 ;; Parameters:    Size  Location     Type
 11788 ;;		None
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;		None
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      enum E10718
 11793 ;; Registers used:
 11794 ;;		wreg, status,2, status,0, pclath, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : 3F/0
 11797 ;;		On exit  : 3F/3
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;Total ram usage:        0 bytes
 11805 ;; Hardware stack levels used: 1
 11806 ;; Hardware stack levels required when called: 5
 11807 ;; This function calls:
 11808 ;;		_I2C1_MasterEnableRestart
 11809 ;; This function is called by:
 11810 ;;		_I2C1_DO_TX_EMPTY
 11811 ;;		_I2C1_DO_ADDRESS_NACK
 11812 ;;		_I2C1_MasterFsm
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816  08E8                     _I2C1_DO_SEND_RESTART:	
 11817                           ;psect for function _I2C1_DO_SEND_RESTART
 11818                           
 11819                           
 11820                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 11821                           
 11822                           ;incstack = 0
 11823                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11824  08E8  3188  20C1         	fcall	_I2C1_MasterEnableRestart
 11825                           
 11826                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 11827  08EA  3001               	movlw	1
 11828  08EB  0008               	return
 11829  08EC                     __end_of_I2C1_DO_SEND_RESTART:
 11830                           
 11831                           	psect	text29
 11832  08E4                     __ptext29:	
 11833 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 11834 ;; Defined at:
 11835 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;		None
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;		None
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  1    wreg      enum E10718
 11842 ;; Registers used:
 11843 ;;		wreg, status,2, status,0, pclath, cstack
 11844 ;; Tracked objects:
 11845 ;;		On entry : 3F/0
 11846 ;;		On exit  : 3F/3
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11853 ;;Total ram usage:        0 bytes
 11854 ;; Hardware stack levels used: 1
 11855 ;; Hardware stack levels required when called: 5
 11856 ;; This function calls:
 11857 ;;		_I2C1_MasterEnableRestart
 11858 ;; This function is called by:
 11859 ;;		_I2C1_DO_TX
 11860 ;;		_I2C1_MasterFsm
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864  08E4                     _I2C1_DO_SEND_RESTART_WRITE:	
 11865                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 11866                           
 11867                           
 11868                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 11869                           
 11870                           ;incstack = 0
 11871                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11872  08E4  3188  20C1         	fcall	_I2C1_MasterEnableRestart
 11873                           
 11874                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 11875  08E6  3002               	movlw	2
 11876  08E7  0008               	return
 11877  08E8                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 11878                           
 11879                           	psect	text30
 11880  08E0                     __ptext30:	
 11881 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 11882 ;; Defined at:
 11883 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;		None
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      enum E10718
 11890 ;; Registers used:
 11891 ;;		wreg, status,2, status,0, pclath, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 3F/0
 11894 ;;		On exit  : 3F/3
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;Total ram usage:        0 bytes
 11902 ;; Hardware stack levels used: 1
 11903 ;; Hardware stack levels required when called: 5
 11904 ;; This function calls:
 11905 ;;		_I2C1_MasterEnableRestart
 11906 ;; This function is called by:
 11907 ;;		_I2C1_DO_TX
 11908 ;;		_I2C1_MasterFsm
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912  08E0                     _I2C1_DO_SEND_RESTART_READ:	
 11913                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 11914                           
 11915                           
 11916                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 11917                           
 11918                           ;incstack = 0
 11919                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 11920  08E0  3188  20C1         	fcall	_I2C1_MasterEnableRestart
 11921                           
 11922                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 11923  08E2  3001               	movlw	1
 11924  08E3  0008               	return
 11925  08E4                     __end_of_I2C1_DO_SEND_RESTART_READ:
 11926                           
 11927                           	psect	text31
 11928  0957                     __ptext31:	
 11929 ;; *************** function _I2C1_DO_RCEN *****************
 11930 ;; Defined at:
 11931 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;		None
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  1    wreg      enum E10718
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 3F/0
 11942 ;;		On exit  : 3F/3
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;Total ram usage:        0 bytes
 11950 ;; Hardware stack levels used: 1
 11951 ;; Hardware stack levels required when called: 5
 11952 ;; This function calls:
 11953 ;;		_I2C1_MasterStartRx
 11954 ;; This function is called by:
 11955 ;;		_I2C1_MasterFsm
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959  0957                     _I2C1_DO_RCEN:	
 11960                           ;psect for function _I2C1_DO_RCEN
 11961                           
 11962                           
 11963                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 11964                           
 11965                           ;incstack = 0
 11966                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11967  0957  0141               	movlb	1	; select bank1
 11968  0958  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 11969                           
 11970                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 11971  0959  3188  20C7         	fcall	_I2C1_MasterStartRx
 11972                           
 11973                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 11974  095B  3004               	movlw	4
 11975  095C  0008               	return
 11976  095D                     __end_of_I2C1_DO_RCEN:
 11977                           
 11978                           	psect	text32
 11979  0786                     __ptext32:	
 11980 ;; *************** function _I2C1_DO_RX *****************
 11981 ;; Defined at:
 11982 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;		None
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;		None
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      enum E10718
 11989 ;; Registers used:
 11990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 3F/0
 11993 ;;		On exit  : 3F/3
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;Total ram usage:        3 bytes
 12001 ;; Hardware stack levels used: 1
 12002 ;; Hardware stack levels required when called: 7
 12003 ;; This function calls:
 12004 ;;		Absolute function
 12005 ;;		_I2C1_CallbackReturnReset
 12006 ;;		_I2C1_CallbackReturnStop
 12007 ;;		_I2C1_DO_RX_NACK_RESTART
 12008 ;;		_I2C1_DO_RX_NACK_STOP
 12009 ;;		_I2C1_MasterGetRxData
 12010 ;;		_I2C1_MasterSendAck
 12011 ;;		_rd1RegCompleteHandler
 12012 ;;		_rd2RegCompleteHandler
 12013 ;;		_rdBlkRegCompleteHandler
 12014 ;;		_wr1RegCompleteHandler
 12015 ;;		_wr2RegCompleteHandler
 12016 ;; This function is called by:
 12017 ;;		_I2C1_MasterFsm
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021  0786                     _I2C1_DO_RX:	
 12022                           ;psect for function _I2C1_DO_RX
 12023                           
 12024                           
 12025                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 12026                           
 12027                           ;incstack = 0
 12028                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12029  0786  3188  20CA  3187   	fcall	_I2C1_MasterGetRxData
 12030  0789  0140               	movlb	0	; select bank0
 12031  078A  00A8               	movwf	??_I2C1_DO_RX
 12032  078B  0141               	movlb	1	; select bank1
 12033  078C  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 12034  078D  0086               	movwf	6
 12035  078E  0187               	clrf	7
 12036  078F  0140               	movlb	0	; select bank0
 12037  0790  0828               	movf	??_I2C1_DO_RX,w
 12038  0791  0081               	movwf	1
 12039  0792  3001               	movlw	1
 12040  0793  00A8               	movwf	??_I2C1_DO_RX
 12041  0794  0828               	movf	??_I2C1_DO_RX,w
 12042  0795  0141               	movlb	1	; select bank1
 12043  0796  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 12044                           
 12045                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 12046  0797  3001               	movlw	1
 12047  0798  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 12048  0799  3000               	movlw	0
 12049  079A  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 12050  079B  0838               	movf	(_I2C1_Status^(0+128)+24),w
 12051  079C  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 12052  079D  1903               	btfsc	3,2
 12053  079E  2FA3               	goto	l529
 12054                           
 12055                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 12056  079F  3188  20DC         	fcall	_I2C1_MasterSendAck
 12057                           
 12058                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 12059  07A1  3005               	movlw	5
 12060  07A2  0008               	return
 12061  07A3                     l529:	
 12062                           ;mcc_generated_files/i2c1_master.c: 386:     else
 12063                           
 12064                           
 12065                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 12066  07A3  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 12067                           
 12068                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 12069  07A4  2FAB               	goto	l4801
 12070  07A5                     l4791:
 12071                           
 12072                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 12073  07A5  3188  20F8         	fcall	_I2C1_DO_RX_NACK_RESTART
 12074  07A7  0008               	return
 12075  07A8                     l4795:
 12076                           
 12077                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 12078  07A8  3188  20F4         	fcall	_I2C1_DO_RX_NACK_STOP
 12079  07AA  0008               	return
 12080  07AB                     l4801:
 12081  07AB  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 12082  07AC  0140               	movlb	0	; select bank0
 12083  07AD  00A8               	movwf	??_I2C1_DO_RX
 12084  07AE  0828               	movf	??_I2C1_DO_RX,w
 12085  07AF  00A7               	movwf	I2C1_CallbackReturnReset@funPtr
 12086  07B0  0141               	movlb	1	; select bank1
 12087  07B1  0821               	movf	(_I2C1_Status+1)^(0+128),w
 12088  07B2  008A               	movwf	10
 12089  07B3  0820               	movf	_I2C1_Status^(0+128),w
 12090  07B4  000A               	callw
 12091  07B5  3187               	pagesel	$
 12092  07B6  0140               	movlb	0	; select bank0
 12093  07B7  00A9               	movwf	??_I2C1_DO_RX+1
 12094  07B8  01AA               	clrf	??_I2C1_DO_RX+2
 12095                           
 12096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12097                           ; Switch size 1, requested type "simple"
 12098                           ; Number of cases is 1, Range of values is 0 to 0
 12099                           ; switch strategies available:
 12100                           ; Name         Instructions Cycles
 12101                           ; simple_byte            4     3 (average)
 12102                           ; direct_byte            8     6 (fixed)
 12103                           ; jumptable            260     6 (fixed)
 12104                           ;	Chosen strategy is simple_byte
 12105  07B9  082A               	movf	??_I2C1_DO_RX+2,w
 12106  07BA  3A00               	xorlw	0	; case 0
 12107  07BB  1903               	skipnz
 12108  07BC  2FBE               	goto	l5881
 12109  07BD  2FA8               	goto	l4795
 12110  07BE                     l5881:
 12111                           
 12112                           ; Switch size 1, requested type "simple"
 12113                           ; Number of cases is 4, Range of values is 1 to 4
 12114                           ; switch strategies available:
 12115                           ; Name         Instructions Cycles
 12116                           ; simple_byte           13     7 (average)
 12117                           ; direct_byte           17     9 (fixed)
 12118                           ; jumptable            263     9 (fixed)
 12119                           ;	Chosen strategy is simple_byte
 12120  07BE  0829               	movf	??_I2C1_DO_RX+1,w
 12121  07BF  3A01               	xorlw	1	; case 1
 12122  07C0  1903               	skipnz
 12123  07C1  2FA8               	goto	l4795
 12124  07C2  3A03               	xorlw	3	; case 2
 12125  07C3  1903               	skipnz
 12126  07C4  2FA5               	goto	l4791
 12127  07C5  3A01               	xorlw	1	; case 3
 12128  07C6  1903               	skipnz
 12129  07C7  2FA5               	goto	l4791
 12130  07C8  3A07               	xorlw	7	; case 4
 12131  07C9  1903               	skipnz
 12132  07CA  2FA8               	goto	l4795
 12133  07CB  2FA8               	goto	l4795
 12134  07CC  0008               	return
 12135  07CD                     __end_of_I2C1_DO_RX:
 12136                           
 12137                           	psect	text33
 12138  0736                     __ptext33:	
 12139 ;; *************** function _I2C1_DO_TX *****************
 12140 ;; Defined at:
 12141 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;		None
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;		None
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1    wreg      enum E10718
 12148 ;; Registers used:
 12149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12150 ;; Tracked objects:
 12151 ;;		On entry : 3F/0
 12152 ;;		On exit  : 3D/1
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;Total ram usage:        3 bytes
 12160 ;; Hardware stack levels used: 1
 12161 ;; Hardware stack levels required when called: 7
 12162 ;; This function calls:
 12163 ;;		Absolute function
 12164 ;;		_I2C1_CallbackReturnReset
 12165 ;;		_I2C1_CallbackReturnStop
 12166 ;;		_I2C1_DO_SEND_RESTART_READ
 12167 ;;		_I2C1_DO_SEND_RESTART_WRITE
 12168 ;;		_I2C1_DO_SEND_STOP
 12169 ;;		_I2C1_MasterIsNack
 12170 ;;		_I2C1_MasterSendTxData
 12171 ;;		_rd1RegCompleteHandler
 12172 ;;		_rd2RegCompleteHandler
 12173 ;;		_rdBlkRegCompleteHandler
 12174 ;;		_wr1RegCompleteHandler
 12175 ;;		_wr2RegCompleteHandler
 12176 ;; This function is called by:
 12177 ;;		_I2C1_MasterFsm
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181  0736                     _I2C1_DO_TX:	
 12182                           ;psect for function _I2C1_DO_TX
 12183                           
 12184                           
 12185                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 12186                           
 12187                           ;incstack = 0
 12188                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12189  0736  3189  2151  3187   	fcall	_I2C1_MasterIsNack
 12190  0739  3A00               	xorlw	0
 12191  073A  1D03               	btfss	3,2
 12192  073B  2F46               	goto	l4761
 12193  073C  2F6B               	goto	l513
 12194  073D                     l4747:
 12195                           
 12196                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 12197  073D  3188  20E0         	fcall	_I2C1_DO_SEND_RESTART_READ
 12198  073F  0008               	return
 12199  0740                     l4751:
 12200                           
 12201                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 12202  0740  3188  20E4         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 12203  0742  0008               	return
 12204  0743                     l4755:
 12205                           
 12206                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 12207  0743  3188  20EC         	fcall	_I2C1_DO_SEND_STOP
 12208  0745  0008               	return
 12209  0746                     l4761:
 12210  0746  0141               	movlb	1	; select bank1
 12211  0747  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 12212  0748  0140               	movlb	0	; select bank0
 12213  0749  00A8               	movwf	??_I2C1_DO_TX
 12214  074A  0828               	movf	??_I2C1_DO_TX,w
 12215  074B  00A7               	movwf	I2C1_CallbackReturnReset@funPtr
 12216  074C  3006               	movlw	6
 12217  074D  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 12218  074E  0086               	movwf	6
 12219  074F  0187               	clrf	7
 12220  0750  3F41               	moviw [1]fsr1
 12221  0751  008A               	movwf	10
 12222  0752  3F40               	moviw [0]fsr1
 12223  0753  000A               	callw
 12224  0754  3187               	pagesel	$
 12225  0755  0140               	movlb	0	; select bank0
 12226  0756  00A9               	movwf	??_I2C1_DO_TX+1
 12227  0757  01AA               	clrf	??_I2C1_DO_TX+2
 12228                           
 12229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12230                           ; Switch size 1, requested type "simple"
 12231                           ; Number of cases is 1, Range of values is 0 to 0
 12232                           ; switch strategies available:
 12233                           ; Name         Instructions Cycles
 12234                           ; simple_byte            4     3 (average)
 12235                           ; direct_byte            8     6 (fixed)
 12236                           ; jumptable            260     6 (fixed)
 12237                           ;	Chosen strategy is simple_byte
 12238  0758  082A               	movf	??_I2C1_DO_TX+2,w
 12239  0759  3A00               	xorlw	0	; case 0
 12240  075A  1903               	skipnz
 12241  075B  2F5D               	goto	l5883
 12242  075C  2F43               	goto	l4755
 12243  075D                     l5883:
 12244                           
 12245                           ; Switch size 1, requested type "simple"
 12246                           ; Number of cases is 4, Range of values is 1 to 4
 12247                           ; switch strategies available:
 12248                           ; Name         Instructions Cycles
 12249                           ; simple_byte           13     7 (average)
 12250                           ; direct_byte           17     9 (fixed)
 12251                           ; jumptable            263     9 (fixed)
 12252                           ;	Chosen strategy is simple_byte
 12253  075D  0829               	movf	??_I2C1_DO_TX+1,w
 12254  075E  3A01               	xorlw	1	; case 1
 12255  075F  1903               	skipnz
 12256  0760  2F43               	goto	l4755
 12257  0761  3A03               	xorlw	3	; case 2
 12258  0762  1903               	skipnz
 12259  0763  2F3D               	goto	l4747
 12260  0764  3A01               	xorlw	1	; case 3
 12261  0765  1903               	skipnz
 12262  0766  2F40               	goto	l4751
 12263  0767  3A07               	xorlw	7	; case 4
 12264  0768  1903               	skipnz
 12265  0769  2F43               	goto	l4755
 12266  076A  2F43               	goto	l4755
 12267  076B                     l513:	
 12268                           ;mcc_generated_files/i2c1_master.c: 370:     else
 12269                           
 12270                           
 12271                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 12272  076B  0141               	movlb	1	; select bank1
 12273  076C  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 12274                           
 12275                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 12276  076D  3017               	movlw	23
 12277  076E  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 12278  076F  0086               	movwf	6
 12279  0770  0187               	clrf	7
 12280  0771  3F40               	moviw [0]fsr1
 12281  0772  0084               	movwf	4
 12282  0773  0185               	clrf	5
 12283  0774  0A81               	incf	1,f
 12284  0775  0800               	movf	0,w
 12285  0776  3189  2112  3187   	fcall	_I2C1_MasterSendTxData
 12286                           
 12287                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 12288  0779  3001               	movlw	1
 12289  077A  0141               	movlb	1	; select bank1
 12290  077B  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 12291  077C  3000               	movlw	0
 12292  077D  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 12293  077E  0838               	movf	(_I2C1_Status^(0+128)+24),w
 12294  077F  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 12295  0780  1D03               	btfss	3,2
 12296  0781  2F84               	goto	l4769
 12297  0782  3006               	movlw	6
 12298  0783  0008               	return
 12299  0784                     l4769:
 12300  0784  3003               	movlw	3
 12301  0785  0008               	return
 12302  0786                     __end_of_I2C1_DO_TX:
 12303                           
 12304                           	psect	text34
 12305  0969                     __ptext34:	
 12306 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 12307 ;; Defined at:
 12308 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;		None
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;		None
 12313 ;; Return value:  Size  Location     Type
 12314 ;;                  1    wreg      enum E10718
 12315 ;; Registers used:
 12316 ;;		wreg, status,2, status,0, pclath, cstack
 12317 ;; Tracked objects:
 12318 ;;		On entry : 3F/0
 12319 ;;		On exit  : 3F/3
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;Total ram usage:        0 bytes
 12327 ;; Hardware stack levels used: 1
 12328 ;; Hardware stack levels required when called: 5
 12329 ;; This function calls:
 12330 ;;		_I2C1_MasterSendTxData
 12331 ;; This function is called by:
 12332 ;;		_I2C1_MasterFsm
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336  0969                     _I2C1_DO_SEND_ADR_WRITE:	
 12337                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 12338                           
 12339                           
 12340                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 12341                           
 12342                           ;incstack = 0
 12343                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 12344  0969  0141               	movlb	1	; select bank1
 12345  096A  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 12346                           
 12347                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 12348  096B  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 12349  096C  3189  2112         	fcall	_I2C1_MasterSendTxData
 12350                           
 12351                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 12352  096E  3003               	movlw	3
 12353  096F  0008               	return
 12354  0970                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 12355                           
 12356                           	psect	text35
 12357  0970                     __ptext35:	
 12358 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 12359 ;; Defined at:
 12360 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      enum E10718
 12367 ;; Registers used:
 12368 ;;		wreg, status,2, status,0, pclath, cstack
 12369 ;; Tracked objects:
 12370 ;;		On entry : 3F/0
 12371 ;;		On exit  : 3F/3
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used: 1
 12380 ;; Hardware stack levels required when called: 5
 12381 ;; This function calls:
 12382 ;;		_I2C1_MasterSendTxData
 12383 ;; This function is called by:
 12384 ;;		_I2C1_MasterFsm
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388  0970                     _I2C1_DO_SEND_ADR_READ:	
 12389                           ;psect for function _I2C1_DO_SEND_ADR_READ
 12390                           
 12391                           
 12392                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 12396  0970  0141               	movlb	1	; select bank1
 12397  0971  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 12398                           
 12399                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 12400  0972  1403               	setc
 12401  0973  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 12402  0974  3189  2112         	fcall	_I2C1_MasterSendTxData
 12403                           
 12404                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 12405  0976  3005               	movlw	5
 12406  0977  0008               	return
 12407  0978                     __end_of_I2C1_DO_SEND_ADR_READ:
 12408                           
 12409                           	psect	text36
 12410  0917                     __ptext36:	
 12411 ;; *************** function _I2C1_DO_IDLE *****************
 12412 ;; Defined at:
 12413 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;		None
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;		None
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  1    wreg      enum E10718
 12420 ;; Registers used:
 12421 ;;		wreg, status,2
 12422 ;; Tracked objects:
 12423 ;;		On entry : 3F/0
 12424 ;;		On exit  : 3F/1
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;Total ram usage:        0 bytes
 12432 ;; Hardware stack levels used: 1
 12433 ;; Hardware stack levels required when called: 4
 12434 ;; This function calls:
 12435 ;;		Nothing
 12436 ;; This function is called by:
 12437 ;;		_I2C1_MasterFsm
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441  0917                     _I2C1_DO_IDLE:	
 12442                           ;psect for function _I2C1_DO_IDLE
 12443                           
 12444                           
 12445                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 12446                           
 12447                           ;incstack = 0
 12448                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 12449  0917  0141               	movlb	1	; select bank1
 12450  0918  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 12451                           
 12452                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 12453  0919  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 12454                           
 12455                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 12456  091A  300E               	movlw	14
 12457  091B  0008               	return
 12458  091C                     __end_of_I2C1_DO_IDLE:
 12459                           
 12460                           	psect	text37
 12461  0D9D                     __ptext37:	
 12462 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 12463 ;; Defined at:
 12464 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 12465 ;; Parameters:    Size  Location     Type
 12466 ;;		None
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;		None
 12469 ;; Return value:  Size  Location     Type
 12470 ;;                  1    wreg      enum E10718
 12471 ;; Registers used:
 12472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12473 ;; Tracked objects:
 12474 ;;		On entry : 3F/0
 12475 ;;		On exit  : 32/2
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;Total ram usage:        3 bytes
 12483 ;; Hardware stack levels used: 1
 12484 ;; Hardware stack levels required when called: 7
 12485 ;; This function calls:
 12486 ;;		Absolute function
 12487 ;;		_I2C1_CallbackReturnReset
 12488 ;;		_I2C1_CallbackReturnStop
 12489 ;;		_I2C1_DO_SEND_RESTART
 12490 ;;		_I2C1_DO_SEND_STOP
 12491 ;;		_I2C1_MasterSetIrq
 12492 ;;		_rd1RegCompleteHandler
 12493 ;;		_rd2RegCompleteHandler
 12494 ;;		_rdBlkRegCompleteHandler
 12495 ;;		_wr1RegCompleteHandler
 12496 ;;		_wr2RegCompleteHandler
 12497 ;; This function is called by:
 12498 ;;		_I2C1_MasterFsm
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502  0D9D                     _I2C1_DO_TX_EMPTY:	
 12503                           ;psect for function _I2C1_DO_TX_EMPTY
 12504                           
 12505                           
 12506                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 12507                           
 12508                           ;incstack = 0
 12509                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12510  0D9D  0141               	movlb	1	; select bank1
 12511  0D9E  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 12512                           
 12513                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 12514  0D9F  2DAA               	goto	l4833
 12515  0DA0                     l4817:
 12516                           
 12517                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 12518  0DA0  3188  20E8         	fcall	_I2C1_DO_SEND_RESTART
 12519  0DA2  0008               	return
 12520  0DA3                     l4821:
 12521                           
 12522                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 12523  0DA3  3188  20CD         	fcall	_I2C1_MasterSetIrq
 12524                           
 12525                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 12526  0DA5  3003               	movlw	3
 12527  0DA6  0008               	return
 12528  0DA7                     l4827:
 12529                           
 12530                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 12531  0DA7  3188  20EC         	fcall	_I2C1_DO_SEND_STOP
 12532  0DA9  0008               	return
 12533  0DAA                     l4833:
 12534  0DAA  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 12535  0DAB  0140               	movlb	0	; select bank0
 12536  0DAC  00A8               	movwf	??_I2C1_DO_TX_EMPTY
 12537  0DAD  0828               	movf	??_I2C1_DO_TX_EMPTY,w
 12538  0DAE  00A7               	movwf	I2C1_CallbackReturnReset@funPtr
 12539  0DAF  0141               	movlb	1	; select bank1
 12540  0DB0  0821               	movf	(_I2C1_Status+1)^(0+128),w
 12541  0DB1  008A               	movwf	10
 12542  0DB2  0820               	movf	_I2C1_Status^(0+128),w
 12543  0DB3  000A               	callw
 12544  0DB4  318D               	pagesel	$
 12545  0DB5  0140               	movlb	0	; select bank0
 12546  0DB6  00A9               	movwf	??_I2C1_DO_TX_EMPTY+1
 12547  0DB7  01AA               	clrf	??_I2C1_DO_TX_EMPTY+2
 12548                           
 12549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12550                           ; Switch size 1, requested type "simple"
 12551                           ; Number of cases is 1, Range of values is 0 to 0
 12552                           ; switch strategies available:
 12553                           ; Name         Instructions Cycles
 12554                           ; simple_byte            4     3 (average)
 12555                           ; direct_byte            8     6 (fixed)
 12556                           ; jumptable            260     6 (fixed)
 12557                           ;	Chosen strategy is simple_byte
 12558  0DB8  082A               	movf	??_I2C1_DO_TX_EMPTY+2,w
 12559  0DB9  3A00               	xorlw	0	; case 0
 12560  0DBA  1903               	skipnz
 12561  0DBB  2DBD               	goto	l5885
 12562  0DBC  2DA7               	goto	l4827
 12563  0DBD                     l5885:
 12564                           
 12565                           ; Switch size 1, requested type "simple"
 12566                           ; Number of cases is 4, Range of values is 1 to 4
 12567                           ; switch strategies available:
 12568                           ; Name         Instructions Cycles
 12569                           ; simple_byte           13     7 (average)
 12570                           ; direct_byte           17     9 (fixed)
 12571                           ; jumptable            263     9 (fixed)
 12572                           ;	Chosen strategy is simple_byte
 12573  0DBD  0829               	movf	??_I2C1_DO_TX_EMPTY+1,w
 12574  0DBE  3A01               	xorlw	1	; case 1
 12575  0DBF  1903               	skipnz
 12576  0DC0  2DA7               	goto	l4827
 12577  0DC1  3A03               	xorlw	3	; case 2
 12578  0DC2  1903               	skipnz
 12579  0DC3  2DA0               	goto	l4817
 12580  0DC4  3A01               	xorlw	1	; case 3
 12581  0DC5  1903               	skipnz
 12582  0DC6  2DA0               	goto	l4817
 12583  0DC7  3A07               	xorlw	7	; case 4
 12584  0DC8  1903               	skipnz
 12585  0DC9  2DA3               	goto	l4821
 12586  0DCA  2DA7               	goto	l4827
 12587  0DCB  0008               	return
 12588  0DCC                     __end_of_I2C1_DO_TX_EMPTY:
 12589                           
 12590                           	psect	text38
 12591  08CD                     __ptext38:	
 12592 ;; *************** function _I2C1_MasterSetIrq *****************
 12593 ;; Defined at:
 12594 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 12595 ;; Parameters:    Size  Location     Type
 12596 ;;		None
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;		None
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  1    wreg      void 
 12601 ;; Registers used:
 12602 ;;		None
 12603 ;; Tracked objects:
 12604 ;;		On entry : 3F/0
 12605 ;;		On exit  : 3F/E
 12606 ;;		Unchanged: 0/0
 12607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;Total ram usage:        0 bytes
 12613 ;; Hardware stack levels used: 1
 12614 ;; Hardware stack levels required when called: 4
 12615 ;; This function calls:
 12616 ;;		Nothing
 12617 ;; This function is called by:
 12618 ;;		_I2C1_DO_TX_EMPTY
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622  08CD                     _I2C1_MasterSetIrq:	
 12623                           ;psect for function _I2C1_MasterSetIrq
 12624                           
 12625                           
 12626                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 12627                           
 12628                           ;incstack = 0
 12629                           ; Regs used in _I2C1_MasterSetIrq: []
 12630  08CD  014E               	movlb	14	; select bank14
 12631  08CE  140F               	bsf	15,0	;volatile
 12632  08CF  0008               	return
 12633  08D0                     __end_of_I2C1_MasterSetIrq:
 12634                           
 12635                           	psect	text39
 12636  0951                     __ptext39:	
 12637 ;; *************** function _I2C1_MasterIsNack *****************
 12638 ;; Defined at:
 12639 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;		None
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      _Bool 
 12646 ;; Registers used:
 12647 ;;		wreg, status,2, status,0
 12648 ;; Tracked objects:
 12649 ;;		On entry : 3E/1
 12650 ;;		On exit  : 3F/3
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;Total ram usage:        0 bytes
 12658 ;; Hardware stack levels used: 1
 12659 ;; Hardware stack levels required when called: 4
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		_I2C1_MasterFsm
 12664 ;;		_I2C1_DO_TX
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           
 12668  0951                     _I2C1_MasterIsNack:	
 12669                           ;psect for function _I2C1_MasterIsNack
 12670                           
 12671                           
 12672                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 12673                           
 12674                           ;incstack = 0
 12675                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 12676  0951  0143               	movlb	3	; select bank3
 12677  0952  0E11               	swapf	17,w	;volatile
 12678  0953  0C89               	rrf	9,f
 12679  0954  0C89               	rrf	9,f
 12680  0955  3901               	andlw	1
 12681  0956  0008               	return
 12682  0957                     __end_of_I2C1_MasterIsNack:
 12683                           
 12684                           	psect	text40
 12685  0912                     __ptext40:	
 12686 ;; *************** function _I2C1_MasterSendTxData *****************
 12687 ;; Defined at:
 12688 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;  data            1    wreg     unsigned char 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;  data            1    4[COMMON] unsigned char 
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  1    wreg      void 
 12695 ;; Registers used:
 12696 ;;		wreg
 12697 ;; Tracked objects:
 12698 ;;		On entry : 3F/1
 12699 ;;		On exit  : 3F/3
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;Total ram usage:        1 bytes
 12707 ;; Hardware stack levels used: 1
 12708 ;; Hardware stack levels required when called: 4
 12709 ;; This function calls:
 12710 ;;		Nothing
 12711 ;; This function is called by:
 12712 ;;		_I2C1_DO_SEND_ADR_READ
 12713 ;;		_I2C1_DO_SEND_ADR_WRITE
 12714 ;;		_I2C1_DO_TX
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718  0912                     _I2C1_MasterSendTxData:	
 12719                           ;psect for function _I2C1_MasterSendTxData
 12720                           
 12721                           
 12722                           ;incstack = 0
 12723                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 12724                           ;I2C1_MasterSendTxData@data stored from wreg
 12725  0912  00F4               	movwf	I2C1_MasterSendTxData@data
 12726                           
 12727                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 12728  0913  0874               	movf	I2C1_MasterSendTxData@data,w
 12729  0914  0143               	movlb	3	; select bank3
 12730  0915  008C               	movwf	12	;volatile
 12731  0916  0008               	return
 12732  0917                     __end_of_I2C1_MasterSendTxData:
 12733                           
 12734                           	psect	text41
 12735  08DC                     __ptext41:	
 12736 ;; *************** function _I2C1_MasterSendAck *****************
 12737 ;; Defined at:
 12738 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;		None
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;		None
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  1    wreg      void 
 12745 ;; Registers used:
 12746 ;;		None
 12747 ;; Tracked objects:
 12748 ;;		On entry : 3E/0
 12749 ;;		On exit  : 3F/3
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;Total ram usage:        0 bytes
 12757 ;; Hardware stack levels used: 1
 12758 ;; Hardware stack levels required when called: 4
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_I2C1_DO_RX
 12763 ;;		_I2C1_DO_RX_ACK
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767  08DC                     _I2C1_MasterSendAck:	
 12768                           ;psect for function _I2C1_MasterSendAck
 12769                           
 12770                           
 12771                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 12772                           
 12773                           ;incstack = 0
 12774                           ; Regs used in _I2C1_MasterSendAck: []
 12775  08DC  0143               	movlb	3	; select bank3
 12776  08DD  1291               	bcf	17,5	;volatile
 12777                           
 12778                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 12779  08DE  1611               	bsf	17,4	;volatile
 12780  08DF  0008               	return
 12781  08E0                     __end_of_I2C1_MasterSendAck:
 12782                           
 12783                           	psect	text42
 12784  08CA                     __ptext42:	
 12785 ;; *************** function _I2C1_MasterGetRxData *****************
 12786 ;; Defined at:
 12787 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;		None
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;		None
 12792 ;; Return value:  Size  Location     Type
 12793 ;;                  1    wreg      unsigned char 
 12794 ;; Registers used:
 12795 ;;		wreg
 12796 ;; Tracked objects:
 12797 ;;		On entry : 3F/0
 12798 ;;		On exit  : 3F/3
 12799 ;;		Unchanged: 0/0
 12800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;Total ram usage:        0 bytes
 12806 ;; Hardware stack levels used: 1
 12807 ;; Hardware stack levels required when called: 4
 12808 ;; This function calls:
 12809 ;;		Nothing
 12810 ;; This function is called by:
 12811 ;;		_I2C1_DO_RX
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815  08CA                     _I2C1_MasterGetRxData:	
 12816                           ;psect for function _I2C1_MasterGetRxData
 12817                           
 12818                           
 12819                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 12820                           
 12821                           ;incstack = 0
 12822                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 12823  08CA  0143               	movlb	3	; select bank3
 12824  08CB  080C               	movf	12,w	;volatile
 12825  08CC  0008               	return
 12826  08CD                     __end_of_I2C1_MasterGetRxData:
 12827                           
 12828                           	psect	text43
 12829  08D8                     __ptext43:	
 12830 ;; *************** function _I2C1_MasterSendNack *****************
 12831 ;; Defined at:
 12832 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;		None
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;		None
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  1    wreg      void 
 12839 ;; Registers used:
 12840 ;;		None
 12841 ;; Tracked objects:
 12842 ;;		On entry : 3F/0
 12843 ;;		On exit  : 3F/3
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12850 ;;Total ram usage:        0 bytes
 12851 ;; Hardware stack levels used: 1
 12852 ;; Hardware stack levels required when called: 4
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_I2C1_DO_RX_NACK_STOP
 12857 ;;		_I2C1_DO_RX_NACK_RESTART
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861  08D8                     _I2C1_MasterSendNack:	
 12862                           ;psect for function _I2C1_MasterSendNack
 12863                           
 12864                           
 12865                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 12866                           
 12867                           ;incstack = 0
 12868                           ; Regs used in _I2C1_MasterSendNack: []
 12869  08D8  0143               	movlb	3	; select bank3
 12870  08D9  1691               	bsf	17,5	;volatile
 12871                           
 12872                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 12873  08DA  1611               	bsf	17,4	;volatile
 12874  08DB  0008               	return
 12875  08DC                     __end_of_I2C1_MasterSendNack:
 12876                           
 12877                           	psect	text44
 12878  08C7                     __ptext44:	
 12879 ;; *************** function _I2C1_MasterStartRx *****************
 12880 ;; Defined at:
 12881 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;		None
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;		None
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      void 
 12888 ;; Registers used:
 12889 ;;		None
 12890 ;; Tracked objects:
 12891 ;;		On entry : 3F/1
 12892 ;;		On exit  : 3F/3
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;Total ram usage:        0 bytes
 12900 ;; Hardware stack levels used: 1
 12901 ;; Hardware stack levels required when called: 4
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_I2C1_DO_RCEN
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909  08C7                     _I2C1_MasterStartRx:	
 12910                           ;psect for function _I2C1_MasterStartRx
 12911                           
 12912                           
 12913                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 12914                           
 12915                           ;incstack = 0
 12916                           ; Regs used in _I2C1_MasterStartRx: []
 12917  08C7  0143               	movlb	3	; select bank3
 12918  08C8  1591               	bsf	17,3	;volatile
 12919  08C9  0008               	return
 12920  08CA                     __end_of_I2C1_MasterStartRx:
 12921                           
 12922                           	psect	text45
 12923  0002                     __ptext45:	
 12924 ;; *************** function _I2C1_CallbackReturnReset *****************
 12925 ;; Defined at:
 12926 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;  funPtr          1    7[BANK0 ] PTR void 
 12929 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12930 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      enum E360
 12935 ;; Registers used:
 12936 ;;		wreg
 12937 ;; Tracked objects:
 12938 ;;		On entry : 3E/1
 12939 ;;		On exit  : 3E/0
 12940 ;;		Unchanged: 3E/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12942 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;Total ram usage:        1 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 4
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_I2C1_Open
 12953 ;;		_I2C1_DO_TX
 12954 ;;		_I2C1_DO_RX
 12955 ;;		_I2C1_DO_TX_EMPTY
 12956 ;;		_I2C1_DO_ADDRESS_NACK
 12957 ;; This function uses a non-reentrant model
 12958 ;;
 12959                           
 12960  0002                     _I2C1_CallbackReturnReset:	
 12961                           ;psect for function _I2C1_CallbackReturnReset
 12962                           
 12963                           
 12964                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 12965                           
 12966                           ;incstack = 0
 12967                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 12968  0002  3005               	movlw	5
 12969  0003  0008               	return
 12970  0004                     __end_of_I2C1_CallbackReturnReset:
 12971                           
 12972                           	psect	text46
 12973  08A7                     __ptext46:	
 12974 ;; *************** function _I2C1_CallbackReturnStop *****************
 12975 ;; Defined at:
 12976 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;  funPtr          1    7[BANK0 ] PTR void 
 12979 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12980 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      enum E360
 12985 ;; Registers used:
 12986 ;;		wreg
 12987 ;; Tracked objects:
 12988 ;;		On entry : 3E/1
 12989 ;;		On exit  : 3E/0
 12990 ;;		Unchanged: 3E/0
 12991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12992 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;Total ram usage:        1 bytes
 12997 ;; Hardware stack levels used: 1
 12998 ;; Hardware stack levels required when called: 4
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_I2C1_Open
 13003 ;;		_I2C1_SetCallback
 13004 ;;		_I2C1_DO_TX
 13005 ;;		_I2C1_DO_RX
 13006 ;;		_I2C1_DO_TX_EMPTY
 13007 ;;		_I2C1_DO_ADDRESS_NACK
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011  08A7                     _I2C1_CallbackReturnStop:	
 13012                           ;psect for function _I2C1_CallbackReturnStop
 13013                           
 13014                           
 13015                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 13016                           
 13017                           ;incstack = 0
 13018                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 13019  08A7  3001               	movlw	1
 13020  08A8  0008               	return
 13021  08A9                     __end_of_I2C1_CallbackReturnStop:
 13022                           
 13023                           	psect	text47
 13024  0B18                     __ptext47:	
 13025 ;; *************** function _rdBlkRegCompleteHandler *****************
 13026 ;; Defined at:
 13027 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13028 ;; Parameters:    Size  Location     Type
 13029 ;;  ptr             1    7[BANK0 ] PTR void 
 13030 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13031 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13032 ;; Auto vars:     Size  Location     Type
 13033 ;;		None
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      enum E360
 13036 ;; Registers used:
 13037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13038 ;; Tracked objects:
 13039 ;;		On entry : 3E/1
 13040 ;;		On exit  : 3F/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13043 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;Total ram usage:        1 bytes
 13048 ;; Hardware stack levels used: 1
 13049 ;; Hardware stack levels required when called: 6
 13050 ;; This function calls:
 13051 ;;		_I2C1_SetBuffer
 13052 ;;		_I2C1_SetDataCompleteCallback
 13053 ;; This function is called by:
 13054 ;;		_I2C1_DO_TX
 13055 ;;		_I2C1_DO_RX
 13056 ;;		_I2C1_DO_TX_EMPTY
 13057 ;;		_I2C1_DO_ADDRESS_NACK
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061  0B18                     _rdBlkRegCompleteHandler:	
 13062                           ;psect for function _rdBlkRegCompleteHandler
 13063                           
 13064                           
 13065                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 13066                           
 13067                           ;incstack = 0
 13068                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 13069  0B18  0140               	movlb	0	; select bank0
 13070  0B19  0827               	movf	rdBlkRegCompleteHandler@ptr,w
 13071  0B1A  0086               	movwf	6
 13072  0B1B  0187               	clrf	7
 13073  0B1C  3F40               	moviw [0]fsr1
 13074  0B1D  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13075  0B1E  3F41               	moviw [1]fsr1
 13076  0B1F  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13077  0B20  0827               	movf	rdBlkRegCompleteHandler@ptr,w
 13078  0B21  3E02               	addlw	2
 13079  0B22  0086               	movwf	6
 13080  0B23  0187               	clrf	7
 13081  0B24  0801               	movf	1,w
 13082  0B25  318A  2213  318B   	fcall	_I2C1_SetBuffer
 13083                           
 13084                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13085  0B28  3000               	movlw	0
 13086  0B29  0140               	movlb	0	; select bank0
 13087  0B2A  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13088  0B2B  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13089  0B2C  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13090  0B2D  3189  21C3         	fcall	_I2C1_SetDataCompleteCallback
 13091                           
 13092                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 13093  0B2F  3002               	movlw	2
 13094  0B30  0008               	return
 13095  0B31                     __end_of_rdBlkRegCompleteHandler:
 13096                           
 13097                           	psect	text48
 13098  0A7B                     __ptext48:	
 13099 ;; *************** function _wr1RegCompleteHandler *****************
 13100 ;; Defined at:
 13101 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;  ptr             1    7[BANK0 ] PTR void 
 13104 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13105 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13106 ;; Auto vars:     Size  Location     Type
 13107 ;;		None
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1    wreg      enum E360
 13110 ;; Registers used:
 13111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13112 ;; Tracked objects:
 13113 ;;		On entry : 3E/1
 13114 ;;		On exit  : 3F/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13117 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13120 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13121 ;;Total ram usage:        1 bytes
 13122 ;; Hardware stack levels used: 1
 13123 ;; Hardware stack levels required when called: 6
 13124 ;; This function calls:
 13125 ;;		_I2C1_SetBuffer
 13126 ;;		_I2C1_SetDataCompleteCallback
 13127 ;; This function is called by:
 13128 ;;		_I2C1_DO_TX
 13129 ;;		_I2C1_DO_RX
 13130 ;;		_I2C1_DO_TX_EMPTY
 13131 ;;		_I2C1_DO_ADDRESS_NACK
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           
 13135  0A7B                     _wr1RegCompleteHandler:	
 13136                           ;psect for function _wr1RegCompleteHandler
 13137                           
 13138                           
 13139                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 13140                           
 13141                           ;incstack = 0
 13142                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13143  0A7B  3001               	movlw	1
 13144  0A7C  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13145  0A7D  3000               	movlw	0
 13146  0A7E  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13147  0A7F  0140               	movlb	0	; select bank0
 13148  0A80  0827               	movf	wr1RegCompleteHandler@ptr,w
 13149  0A81  318A  2213  318A   	fcall	_I2C1_SetBuffer
 13150                           
 13151                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13152  0A84  3000               	movlw	0
 13153  0A85  0140               	movlb	0	; select bank0
 13154  0A86  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13155  0A87  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13156  0A88  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13157  0A89  3189  21C3         	fcall	_I2C1_SetDataCompleteCallback
 13158                           
 13159                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 13160  0A8B  3004               	movlw	4
 13161  0A8C  0008               	return
 13162  0A8D                     __end_of_wr1RegCompleteHandler:
 13163                           
 13164                           	psect	text49
 13165  0A69                     __ptext49:	
 13166 ;; *************** function _rd2RegCompleteHandler *****************
 13167 ;; Defined at:
 13168 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;  ptr             1    7[BANK0 ] PTR void 
 13171 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13172 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;		None
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1    wreg      enum E360
 13177 ;; Registers used:
 13178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13179 ;; Tracked objects:
 13180 ;;		On entry : 3E/1
 13181 ;;		On exit  : 3F/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13184 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;Total ram usage:        1 bytes
 13189 ;; Hardware stack levels used: 1
 13190 ;; Hardware stack levels required when called: 6
 13191 ;; This function calls:
 13192 ;;		_I2C1_SetBuffer
 13193 ;;		_I2C1_SetDataCompleteCallback
 13194 ;; This function is called by:
 13195 ;;		_I2C1_DO_TX
 13196 ;;		_I2C1_DO_RX
 13197 ;;		_I2C1_DO_TX_EMPTY
 13198 ;;		_I2C1_DO_ADDRESS_NACK
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202  0A69                     _rd2RegCompleteHandler:	
 13203                           ;psect for function _rd2RegCompleteHandler
 13204                           
 13205                           
 13206                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 13207                           
 13208                           ;incstack = 0
 13209                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13210  0A69  3002               	movlw	2
 13211  0A6A  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13212  0A6B  3000               	movlw	0
 13213  0A6C  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13214  0A6D  0140               	movlb	0	; select bank0
 13215  0A6E  0827               	movf	rd2RegCompleteHandler@ptr,w
 13216  0A6F  318A  2213  318A   	fcall	_I2C1_SetBuffer
 13217                           
 13218                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13219  0A72  3000               	movlw	0
 13220  0A73  0140               	movlb	0	; select bank0
 13221  0A74  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13222  0A75  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13223  0A76  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13224  0A77  3189  21C3         	fcall	_I2C1_SetDataCompleteCallback
 13225                           
 13226                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 13227  0A79  3002               	movlw	2
 13228  0A7A  0008               	return
 13229  0A7B                     __end_of_rd2RegCompleteHandler:
 13230                           
 13231                           	psect	text50
 13232  0A57                     __ptext50:	
 13233 ;; *************** function _rd1RegCompleteHandler *****************
 13234 ;; Defined at:
 13235 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13236 ;; Parameters:    Size  Location     Type
 13237 ;;  ptr             1    7[BANK0 ] PTR void 
 13238 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13239 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13240 ;; Auto vars:     Size  Location     Type
 13241 ;;		None
 13242 ;; Return value:  Size  Location     Type
 13243 ;;                  1    wreg      enum E360
 13244 ;; Registers used:
 13245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13246 ;; Tracked objects:
 13247 ;;		On entry : 3E/1
 13248 ;;		On exit  : 3F/0
 13249 ;;		Unchanged: 0/0
 13250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13251 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;Total ram usage:        1 bytes
 13256 ;; Hardware stack levels used: 1
 13257 ;; Hardware stack levels required when called: 6
 13258 ;; This function calls:
 13259 ;;		_I2C1_SetBuffer
 13260 ;;		_I2C1_SetDataCompleteCallback
 13261 ;; This function is called by:
 13262 ;;		_I2C1_DO_TX
 13263 ;;		_I2C1_DO_RX
 13264 ;;		_I2C1_DO_TX_EMPTY
 13265 ;;		_I2C1_DO_ADDRESS_NACK
 13266 ;; This function uses a non-reentrant model
 13267 ;;
 13268                           
 13269  0A57                     _rd1RegCompleteHandler:	
 13270                           ;psect for function _rd1RegCompleteHandler
 13271                           
 13272                           
 13273                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 13274                           
 13275                           ;incstack = 0
 13276                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13277  0A57  3001               	movlw	1
 13278  0A58  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13279  0A59  3000               	movlw	0
 13280  0A5A  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13281  0A5B  0140               	movlb	0	; select bank0
 13282  0A5C  0827               	movf	rd1RegCompleteHandler@ptr,w
 13283  0A5D  318A  2213  318A   	fcall	_I2C1_SetBuffer
 13284                           
 13285                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13286  0A60  3000               	movlw	0
 13287  0A61  0140               	movlb	0	; select bank0
 13288  0A62  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13289  0A63  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13290  0A64  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13291  0A65  3189  21C3         	fcall	_I2C1_SetDataCompleteCallback
 13292                           
 13293                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 13294  0A67  3002               	movlw	2
 13295  0A68  0008               	return
 13296  0A69                     __end_of_rd1RegCompleteHandler:
 13297                           
 13298                           	psect	text51
 13299  0A45                     __ptext51:	
 13300 ;; *************** function _wr2RegCompleteHandler *****************
 13301 ;; Defined at:
 13302 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;  ptr             1    7[BANK0 ] PTR void 
 13305 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13306 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;		None
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  1    wreg      enum E360
 13311 ;; Registers used:
 13312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13313 ;; Tracked objects:
 13314 ;;		On entry : 3E/1
 13315 ;;		On exit  : 3F/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13318 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;Total ram usage:        1 bytes
 13323 ;; Hardware stack levels used: 1
 13324 ;; Hardware stack levels required when called: 6
 13325 ;; This function calls:
 13326 ;;		_I2C1_SetBuffer
 13327 ;;		_I2C1_SetDataCompleteCallback
 13328 ;; This function is called by:
 13329 ;;		_I2C1_DO_TX
 13330 ;;		_I2C1_DO_RX
 13331 ;;		_I2C1_DO_TX_EMPTY
 13332 ;;		_I2C1_DO_ADDRESS_NACK
 13333 ;; This function uses a non-reentrant model
 13334 ;;
 13335                           
 13336  0A45                     _wr2RegCompleteHandler:	
 13337                           ;psect for function _wr2RegCompleteHandler
 13338                           
 13339                           
 13340                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 13341                           
 13342                           ;incstack = 0
 13343                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13344  0A45  3002               	movlw	2
 13345  0A46  00F4               	movwf	I2C1_SetBuffer@bufferSize
 13346  0A47  3000               	movlw	0
 13347  0A48  00F5               	movwf	I2C1_SetBuffer@bufferSize+1
 13348  0A49  0140               	movlb	0	; select bank0
 13349  0A4A  0827               	movf	wr2RegCompleteHandler@ptr,w
 13350  0A4B  318A  2213  318A   	fcall	_I2C1_SetBuffer
 13351                           
 13352                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 13353  0A4E  3000               	movlw	0
 13354  0A4F  0140               	movlb	0	; select bank0
 13355  0A50  00A3               	movwf	I2C1_SetDataCompleteCallback@cb
 13356  0A51  00A4               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13357  0A52  01A5               	clrf	I2C1_SetDataCompleteCallback@ptr
 13358  0A53  3189  21C3         	fcall	_I2C1_SetDataCompleteCallback
 13359                           
 13360                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 13361  0A55  3004               	movlw	4
 13362  0A56  0008               	return
 13363  0A57                     __end_of_wr2RegCompleteHandler:
 13364                           
 13365                           	psect	text52
 13366  09C3                     __ptext52:	
 13367 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 13368 ;; Defined at:
 13369 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;  cb              2    3[BANK0 ] PTR FTN(PTR void ,)enum 
 13372 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13373 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13374 ;;  ptr             1    5[BANK0 ] PTR void 
 13375 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13376 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;		None
 13379 ;; Return value:  Size  Location     Type
 13380 ;;                  1    wreg      void 
 13381 ;; Registers used:
 13382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13383 ;; Tracked objects:
 13384 ;;		On entry : 3F/0
 13385 ;;		On exit  : 3F/0
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13388 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13391 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;Total ram usage:        4 bytes
 13393 ;; Hardware stack levels used: 1
 13394 ;; Hardware stack levels required when called: 5
 13395 ;; This function calls:
 13396 ;;		_I2C1_SetCallback
 13397 ;; This function is called by:
 13398 ;;		_rd1RegCompleteHandler
 13399 ;;		_rd2RegCompleteHandler
 13400 ;;		_wr1RegCompleteHandler
 13401 ;;		_wr2RegCompleteHandler
 13402 ;;		_rdBlkRegCompleteHandler
 13403 ;; This function uses a non-reentrant model
 13404 ;;
 13405                           
 13406  09C3                     _I2C1_SetDataCompleteCallback:	
 13407                           ;psect for function _I2C1_SetDataCompleteCallback
 13408                           
 13409                           
 13410                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 13411                           
 13412                           ;incstack = 0
 13413                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 13414  09C3  0824               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 13415  09C4  00A1               	movwf	I2C1_SetCallback@cb+1
 13416  09C5  0823               	movf	I2C1_SetDataCompleteCallback@cb,w
 13417  09C6  00A0               	movwf	I2C1_SetCallback@cb
 13418  09C7  0825               	movf	I2C1_SetDataCompleteCallback@ptr,w
 13419  09C8  00A6               	movwf	??_I2C1_SetDataCompleteCallback
 13420  09C9  0826               	movf	??_I2C1_SetDataCompleteCallback,w
 13421  09CA  00A2               	movwf	I2C1_SetCallback@ptr
 13422  09CB  3000               	movlw	0
 13423  09CC  318B  23FB         	fcall	_I2C1_SetCallback
 13424  09CE  0008               	return
 13425  09CF                     __end_of_I2C1_SetDataCompleteCallback:
 13426                           
 13427                           	psect	text53
 13428  0BFB                     __ptext53:	
 13429 ;; *************** function _I2C1_SetCallback *****************
 13430 ;; Defined at:
 13431 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;  idx             1    wreg     enum E10736
 13434 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 13435 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13436 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13437 ;;  ptr             1    2[BANK0 ] PTR void 
 13438 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13439 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;  idx             1    5[COMMON] enum E10736
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      void 
 13444 ;; Registers used:
 13445 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13446 ;; Tracked objects:
 13447 ;;		On entry : 3F/0
 13448 ;;		On exit  : 3F/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13451 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;Total ram usage:        5 bytes
 13456 ;; Hardware stack levels used: 1
 13457 ;; Hardware stack levels required when called: 4
 13458 ;; This function calls:
 13459 ;;		Nothing
 13460 ;; This function is called by:
 13461 ;;		_I2C1_SetDataCompleteCallback
 13462 ;;		_I2C1_SetAddressNackCallback
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466  0BFB                     _I2C1_SetCallback:	
 13467                           ;psect for function _I2C1_SetCallback
 13468                           
 13469                           
 13470                           ;incstack = 0
 13471                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 13472                           ;I2C1_SetCallback@idx stored from wreg
 13473  0BFB  00F5               	movwf	I2C1_SetCallback@idx
 13474                           
 13475                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 13476  0BFC  0820               	movf	I2C1_SetCallback@cb,w
 13477  0BFD  0421               	iorwf	I2C1_SetCallback@cb+1,w
 13478  0BFE  1903               	btfsc	3,2
 13479  0BFF  2C11               	goto	l4603
 13480                           
 13481                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 13482  0C00  3575               	lslf	I2C1_SetCallback@idx,w
 13483  0C01  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 13484  0C02  0086               	movwf	6
 13485  0C03  0187               	clrf	7
 13486  0C04  0820               	movf	I2C1_SetCallback@cb,w
 13487  0C05  3FC0               	movwi [0]fsr1
 13488  0C06  0821               	movf	I2C1_SetCallback@cb+1,w
 13489  0C07  3FC1               	movwi [1]fsr1
 13490                           
 13491                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 13492  0C08  0822               	movf	I2C1_SetCallback@ptr,w
 13493  0C09  00F4               	movwf	??_I2C1_SetCallback
 13494  0C0A  0875               	movf	I2C1_SetCallback@idx,w
 13495  0C0B  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 13496  0C0C  0086               	movwf	6
 13497  0C0D  0187               	clrf	7
 13498  0C0E  0874               	movf	??_I2C1_SetCallback,w
 13499  0C0F  0081               	movwf	1
 13500                           
 13501                           ;mcc_generated_files/i2c1_master.c: 304:     }
 13502  0C10  0008               	return
 13503  0C11                     l4603:
 13504                           
 13505                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 13506  0C11  3575               	lslf	I2C1_SetCallback@idx,w
 13507  0C12  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 13508  0C13  0086               	movwf	6
 13509  0C14  0187               	clrf	7
 13510  0C15  30A7               	movlw	low _I2C1_CallbackReturnStop
 13511  0C16  3FC0               	movwi [0]fsr1
 13512  0C17  3008               	movlw	high _I2C1_CallbackReturnStop
 13513  0C18  3FC1               	movwi [1]fsr1
 13514                           
 13515                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 13516  0C19  0875               	movf	I2C1_SetCallback@idx,w
 13517  0C1A  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 13518  0C1B  0086               	movwf	6
 13519  0C1C  0187               	clrf	7
 13520  0C1D  0181               	clrf	1
 13521  0C1E  0008               	return
 13522  0C1F                     __end_of_I2C1_SetCallback:
 13523                           
 13524                           	psect	text54
 13525  0A13                     __ptext54:	
 13526 ;; *************** function _I2C1_SetBuffer *****************
 13527 ;; Defined at:
 13528 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;  buffer          1    wreg     PTR void 
 13531 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 13532 ;;		 -> writeINA220@Txbuffer(3), readINA220@regadd(1), readINA220@buff(2), I2C1_ReadDataBlock@reg(1), 
 13533 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@
      +data(2), 
 13534 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 13535 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 13536 ;;  bufferSize      2    4[COMMON] unsigned int 
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;  buffer          1    1[BANK0 ] PTR void 
 13539 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 13540 ;;		 -> writeINA220@Txbuffer(3), readINA220@regadd(1), readINA220@buff(2), I2C1_ReadDataBlock@reg(1), 
 13541 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@
      +data(2), 
 13542 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 13543 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 13544 ;; Return value:  Size  Location     Type
 13545 ;;                  1    wreg      void 
 13546 ;; Registers used:
 13547 ;;		wreg
 13548 ;; Tracked objects:
 13549 ;;		On entry : 3F/0
 13550 ;;		On exit  : 3F/1
 13551 ;;		Unchanged: 0/0
 13552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13556 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;Total ram usage:        4 bytes
 13558 ;; Hardware stack levels used: 1
 13559 ;; Hardware stack levels required when called: 4
 13560 ;; This function calls:
 13561 ;;		Nothing
 13562 ;; This function is called by:
 13563 ;;		_I2C1_WriteNBytes
 13564 ;;		_I2C1_ReadNBytes
 13565 ;;		_rd1RegCompleteHandler
 13566 ;;		_rd2RegCompleteHandler
 13567 ;;		_wr1RegCompleteHandler
 13568 ;;		_wr2RegCompleteHandler
 13569 ;;		_rdBlkRegCompleteHandler
 13570 ;; This function uses a non-reentrant model
 13571 ;;
 13572                           
 13573  0A13                     _I2C1_SetBuffer:	
 13574                           ;psect for function _I2C1_SetBuffer
 13575                           
 13576                           
 13577                           ;incstack = 0
 13578                           ; Regs used in _I2C1_SetBuffer: [wreg]
 13579                           ;I2C1_SetBuffer@buffer stored from wreg
 13580  0A13  00A1               	movwf	I2C1_SetBuffer@buffer
 13581                           
 13582                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 13583  0A14  0141               	movlb	1	; select bank1
 13584  0A15  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 13585  0A16  0008               	return
 13586                           
 13587                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 13588  0A17  0140               	movlb	0	; select bank0
 13589  0A18  0821               	movf	I2C1_SetBuffer@buffer,w
 13590  0A19  00A0               	movwf	??_I2C1_SetBuffer
 13591  0A1A  0820               	movf	??_I2C1_SetBuffer,w
 13592  0A1B  0141               	movlb	1	; select bank1
 13593  0A1C  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 13594                           
 13595                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 13596  0A1D  0875               	movf	I2C1_SetBuffer@bufferSize+1,w
 13597  0A1E  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 13598  0A1F  0874               	movf	I2C1_SetBuffer@bufferSize,w
 13599  0A20  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 13600                           
 13601                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 13602  0A21  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 13603  0A22  0008               	return
 13604  0A23                     __end_of_I2C1_SetBuffer:
 13605                           
 13606                           	psect	text55
 13607  08C4                     __ptext55:	
 13608 ;; *************** function _I2C1_MasterStop *****************
 13609 ;; Defined at:
 13610 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 13611 ;; Parameters:    Size  Location     Type
 13612 ;;		None
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;		None
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      void 
 13617 ;; Registers used:
 13618 ;;		None
 13619 ;; Tracked objects:
 13620 ;;		On entry : 3F/0
 13621 ;;		On exit  : 3F/3
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;Total ram usage:        0 bytes
 13629 ;; Hardware stack levels used: 1
 13630 ;; Hardware stack levels required when called: 4
 13631 ;; This function calls:
 13632 ;;		Nothing
 13633 ;; This function is called by:
 13634 ;;		_I2C1_DO_SEND_STOP
 13635 ;; This function uses a non-reentrant model
 13636 ;;
 13637                           
 13638  08C4                     _I2C1_MasterStop:	
 13639                           ;psect for function _I2C1_MasterStop
 13640                           
 13641                           
 13642                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 13643                           
 13644                           ;incstack = 0
 13645                           ; Regs used in _I2C1_MasterStop: []
 13646  08C4  0143               	movlb	3	; select bank3
 13647  08C5  1511               	bsf	17,2	;volatile
 13648  08C6  0008               	return
 13649  08C7                     __end_of_I2C1_MasterStop:
 13650                           
 13651                           	psect	text56
 13652  08C1                     __ptext56:	
 13653 ;; *************** function _I2C1_MasterEnableRestart *****************
 13654 ;; Defined at:
 13655 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;		None
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;		None
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  1    wreg      void 
 13662 ;; Registers used:
 13663 ;;		None
 13664 ;; Tracked objects:
 13665 ;;		On entry : 3F/0
 13666 ;;		On exit  : 3F/3
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13673 ;;Total ram usage:        0 bytes
 13674 ;; Hardware stack levels used: 1
 13675 ;; Hardware stack levels required when called: 4
 13676 ;; This function calls:
 13677 ;;		Nothing
 13678 ;; This function is called by:
 13679 ;;		_I2C1_DO_SEND_RESTART_READ
 13680 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13681 ;;		_I2C1_DO_SEND_RESTART
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685  08C1                     _I2C1_MasterEnableRestart:	
 13686                           ;psect for function _I2C1_MasterEnableRestart
 13687                           
 13688                           
 13689                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 13690                           
 13691                           ;incstack = 0
 13692                           ; Regs used in _I2C1_MasterEnableRestart: []
 13693  08C1  0143               	movlb	3	; select bank3
 13694  08C2  1491               	bsf	17,1	;volatile
 13695  08C3  0008               	return
 13696  08C4                     __end_of_I2C1_MasterEnableRestart:
 13697                           
 13698                           	psect	text57
 13699  08BE                     __ptext57:	
 13700 ;; *************** function _I2C1_MasterStart *****************
 13701 ;; Defined at:
 13702 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;		None
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;		None
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      void 
 13709 ;; Registers used:
 13710 ;;		None
 13711 ;; Tracked objects:
 13712 ;;		On entry : 3F/1
 13713 ;;		On exit  : 3F/3
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13720 ;;Total ram usage:        0 bytes
 13721 ;; Hardware stack levels used: 1
 13722 ;; Hardware stack levels required when called: 4
 13723 ;; This function calls:
 13724 ;;		Nothing
 13725 ;; This function is called by:
 13726 ;;		_I2C1_MasterOperation
 13727 ;; This function uses a non-reentrant model
 13728 ;;
 13729                           
 13730  08BE                     _I2C1_MasterStart:	
 13731                           ;psect for function _I2C1_MasterStart
 13732                           
 13733                           
 13734                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 13735                           
 13736                           ;incstack = 0
 13737                           ; Regs used in _I2C1_MasterStart: []
 13738  08BE  0143               	movlb	3	; select bank3
 13739  08BF  1411               	bsf	17,0	;volatile
 13740  08C0  0008               	return
 13741  08C1                     __end_of_I2C1_MasterStart:
 13742                           
 13743                           	psect	text58
 13744  0AFF                     __ptext58:	
 13745 ;; *************** function _I2C1_Close *****************
 13746 ;; Defined at:
 13747 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 13748 ;; Parameters:    Size  Location     Type
 13749 ;;		None
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  returnValue     1    5[COMMON] enum E355
 13752 ;; Return value:  Size  Location     Type
 13753 ;;                  1    wreg      enum E355
 13754 ;; Registers used:
 13755 ;;		wreg, status,2, status,0, pclath, cstack
 13756 ;; Tracked objects:
 13757 ;;		On entry : 3E/0
 13758 ;;		On exit  : 3F/1
 13759 ;;		Unchanged: 0/0
 13760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13765 ;;Total ram usage:        2 bytes
 13766 ;; Hardware stack levels used: 1
 13767 ;; Hardware stack levels required when called: 5
 13768 ;; This function calls:
 13769 ;;		_I2C1_MasterClearIrq
 13770 ;;		_I2C1_MasterClose
 13771 ;;		_I2C1_MasterDisableIrq
 13772 ;; This function is called by:
 13773 ;;		_I2C1_WriteNBytes
 13774 ;;		_I2C1_ReadNBytes
 13775 ;; This function uses a non-reentrant model
 13776 ;;
 13777                           
 13778  0AFF                     _I2C1_Close:	
 13779                           ;psect for function _I2C1_Close
 13780                           
 13781                           
 13782                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 13783                           
 13784                           ;incstack = 0
 13785                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 13786  0AFF  01F5               	clrf	I2C1_Close@returnValue
 13787  0B00  0AF5               	incf	I2C1_Close@returnValue,f
 13788                           
 13789                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 13790  0B01  0141               	movlb	1	; select bank1
 13791  0B02  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 13792  0B03  2B16               	goto	l4983
 13793                           
 13794                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 13795  0B04  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 13796                           
 13797                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 13798  0B05  30FF               	movlw	255
 13799  0B06  00F4               	movwf	??_I2C1_Close
 13800  0B07  0874               	movf	??_I2C1_Close,w
 13801  0B08  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 13802                           
 13803                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 13804  0B09  3188  20B8  318A   	fcall	_I2C1_MasterClearIrq
 13805                           
 13806                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 13807  0B0C  3188  20A5  318A   	fcall	_I2C1_MasterDisableIrq
 13808                           
 13809                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 13810  0B0F  3188  20BB         	fcall	_I2C1_MasterClose
 13811                           
 13812                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 13813  0B11  0141               	movlb	1	; select bank1
 13814  0B12  083B               	movf	(_I2C1_Status^(0+128)+27),w
 13815  0B13  00F4               	movwf	??_I2C1_Close
 13816  0B14  0874               	movf	??_I2C1_Close,w
 13817  0B15  00F5               	movwf	I2C1_Close@returnValue
 13818  0B16                     l4983:
 13819                           
 13820                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 13821  0B16  0875               	movf	I2C1_Close@returnValue,w
 13822  0B17  0008               	return
 13823  0B18                     __end_of_I2C1_Close:
 13824                           
 13825                           	psect	text59
 13826  08A5                     __ptext59:	
 13827 ;; *************** function _I2C1_MasterDisableIrq *****************
 13828 ;; Defined at:
 13829 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 13830 ;; Parameters:    Size  Location     Type
 13831 ;;		None
 13832 ;; Auto vars:     Size  Location     Type
 13833 ;;		None
 13834 ;; Return value:  Size  Location     Type
 13835 ;;                  1    wreg      void 
 13836 ;; Registers used:
 13837 ;;		None
 13838 ;; Tracked objects:
 13839 ;;		On entry : 3F/E
 13840 ;;		On exit  : 3F/E
 13841 ;;		Unchanged: 0/0
 13842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13847 ;;Total ram usage:        0 bytes
 13848 ;; Hardware stack levels used: 1
 13849 ;; Hardware stack levels required when called: 4
 13850 ;; This function calls:
 13851 ;;		Nothing
 13852 ;; This function is called by:
 13853 ;;		_I2C1_Close
 13854 ;; This function uses a non-reentrant model
 13855 ;;
 13856                           
 13857  08A5                     _I2C1_MasterDisableIrq:	
 13858                           ;psect for function _I2C1_MasterDisableIrq
 13859                           
 13860                           
 13861                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 13862                           
 13863                           ;incstack = 0
 13864                           ; Regs used in _I2C1_MasterDisableIrq: []
 13865  08A5  1019               	bcf	25,0	;volatile
 13866  08A6  0008               	return
 13867  08A7                     __end_of_I2C1_MasterDisableIrq:
 13868                           
 13869                           	psect	text60
 13870  08BB                     __ptext60:	
 13871 ;; *************** function _I2C1_MasterClose *****************
 13872 ;; Defined at:
 13873 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 13874 ;; Parameters:    Size  Location     Type
 13875 ;;		None
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;		None
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  1    wreg      void 
 13880 ;; Registers used:
 13881 ;;		None
 13882 ;; Tracked objects:
 13883 ;;		On entry : 3F/E
 13884 ;;		On exit  : 3F/3
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;Total ram usage:        0 bytes
 13892 ;; Hardware stack levels used: 1
 13893 ;; Hardware stack levels required when called: 4
 13894 ;; This function calls:
 13895 ;;		Nothing
 13896 ;; This function is called by:
 13897 ;;		_I2C1_Close
 13898 ;; This function uses a non-reentrant model
 13899 ;;
 13900                           
 13901  08BB                     _I2C1_MasterClose:	
 13902                           ;psect for function _I2C1_MasterClose
 13903                           
 13904                           
 13905                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 13906                           
 13907                           ;incstack = 0
 13908                           ; Regs used in _I2C1_MasterClose: []
 13909  08BB  0143               	movlb	3	; select bank3
 13910  08BC  1290               	bcf	16,5	;volatile
 13911  08BD  0008               	return
 13912  08BE                     __end_of_I2C1_MasterClose:
 13913                           
 13914                           	psect	text61
 13915  08B8                     __ptext61:	
 13916 ;; *************** function _I2C1_MasterClearIrq *****************
 13917 ;; Defined at:
 13918 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;		None
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;		None
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  1    wreg      void 
 13925 ;; Registers used:
 13926 ;;		None
 13927 ;; Tracked objects:
 13928 ;;		On entry : 30/1
 13929 ;;		On exit  : 3F/E
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;Total ram usage:        0 bytes
 13937 ;; Hardware stack levels used: 1
 13938 ;; Hardware stack levels required when called: 4
 13939 ;; This function calls:
 13940 ;;		Nothing
 13941 ;; This function is called by:
 13942 ;;		_I2C1_Open
 13943 ;;		_I2C1_Close
 13944 ;;		_I2C1_MasterFsm
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948  08B8                     _I2C1_MasterClearIrq:	
 13949                           ;psect for function _I2C1_MasterClearIrq
 13950                           
 13951                           
 13952                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 13953                           
 13954                           ;incstack = 0
 13955                           ; Regs used in _I2C1_MasterClearIrq: []
 13956  08B8  014E               	movlb	14	; select bank14
 13957  08B9  100F               	bcf	15,0	;volatile
 13958  08BA  0008               	return
 13959  08BB                     __end_of_I2C1_MasterClearIrq:
 13960                           
 13961                           	psect	text62
 13962  0D12                     __ptext62:	
 13963 ;; *************** function _getHis *****************
 13964 ;; Defined at:
 13965 ;;		line 167 in file "sensor.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;  data            2   32[BANK0 ] PTR struct .
 13968 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 13969 ;;		 -> panel.sensor_data(46), panel(59), 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;  i               1   36[BANK0 ] unsigned char 
 13972 ;;  aux             1   37[BANK0 ] unsigned char 
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  1    wreg      void 
 13975 ;; Registers used:
 13976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13977 ;; Tracked objects:
 13978 ;;		On entry : 3F/0
 13979 ;;		On exit  : 3F/0
 13980 ;;		Unchanged: 0/0
 13981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;Total ram usage:        6 bytes
 13987 ;; Hardware stack levels used: 1
 13988 ;; Hardware stack levels required when called: 7
 13989 ;; This function calls:
 13990 ;;		_sendSensorData
 13991 ;; This function is called by:
 13992 ;;		_processCommand
 13993 ;; This function uses a non-reentrant model
 13994 ;;
 13995                           
 13996  0D12                     _getHis:	
 13997                           ;psect for function _getHis
 13998                           
 13999                           
 14000                           ;sensor.c: 167: void getHis(measure_data_t *data);sensor.c: 168: {;sensor.c: 169:     ui
      +                          nt8_t aux;;sensor.c: 170:     aux = data->pWrite;
 14001                           
 14002                           ;incstack = 0
 14003                           ; Regs used in _getHis: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14004  0D12  0840               	movf	getHis@data,w
 14005  0D13  0086               	movwf	6
 14006  0D14  0841               	movf	getHis@data+1,w
 14007  0D15  0087               	movwf	7
 14008  0D16  3156               	addfsr 1,22
 14009  0D17  0801               	movf	1,w
 14010  0D18  00C2               	movwf	??_getHis
 14011  0D19  0842               	movf	??_getHis,w
 14012  0D1A  00C5               	movwf	getHis@aux
 14013                           
 14014                           ;sensor.c: 171:     for(uint8_t i=0; i<8; i++)
 14015  0D1B  01C4               	clrf	getHis@i
 14016  0D1C                     l5535:
 14017                           
 14018                           ;sensor.c: 172:     {;sensor.c: 173:         sendSensorData(data->hist[aux]);
 14019  0D1C  0845               	movf	getHis@aux,w
 14020  0D1D  00C2               	movwf	??_getHis
 14021  0D1E  01C3               	clrf	??_getHis+1
 14022  0D1F  35C2               	lslf	??_getHis,f
 14023  0D20  0DC3               	rlf	??_getHis+1,f
 14024  0D21  0842               	movf	??_getHis,w
 14025  0D22  0740               	addwf	getHis@data,w
 14026  0D23  0086               	movwf	6
 14027  0D24  0843               	movf	??_getHis+1,w
 14028  0D25  3D41               	addwfc	getHis@data+1,w
 14029  0D26  0087               	movwf	7
 14030  0D27  3F40               	moviw [0]fsr1
 14031  0D28  00B4               	movwf	sendSensorData@sensor_data
 14032  0D29  3F41               	moviw [1]fsr1
 14033  0D2A  00B5               	movwf	sendSensorData@sensor_data+1
 14034  0D2B  318D  25CC  318D   	fcall	_sendSensorData
 14035                           
 14036                           ;sensor.c: 174:         if(aux == 0)
 14037  0D2E  0845               	movf	getHis@aux,w
 14038  0D2F  1D03               	btfss	3,2
 14039  0D30  2D35               	goto	l5541
 14040                           
 14041                           ;sensor.c: 175:         {;sensor.c: 176:             aux = 8;
 14042  0D31  3008               	movlw	8
 14043  0D32  00C2               	movwf	??_getHis
 14044  0D33  0842               	movf	??_getHis,w
 14045  0D34  00C5               	movwf	getHis@aux
 14046  0D35                     l5541:
 14047                           
 14048                           ;sensor.c: 178:         aux--;
 14049  0D35  3001               	movlw	1
 14050  0D36  02C5               	subwf	getHis@aux,f
 14051                           
 14052                           ;sensor.c: 179:     }
 14053  0D37  3001               	movlw	1
 14054  0D38  00C2               	movwf	??_getHis
 14055  0D39  0842               	movf	??_getHis,w
 14056  0D3A  07C4               	addwf	getHis@i,f
 14057  0D3B  3008               	movlw	8
 14058  0D3C  0244               	subwf	getHis@i,w
 14059  0D3D  1803               	btfsc	3,0
 14060  0D3E  0008               	return
 14061  0D3F  2D1C               	goto	l5535
 14062  0D40                     __end_of_getHis:
 14063                           
 14064                           	psect	text63
 14065  0DCC                     __ptext63:	
 14066 ;; *************** function _sendSensorData *****************
 14067 ;; Defined at:
 14068 ;;		line 29 in file "device.c"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;  sensor_data     2   20[BANK0 ] short 
 14071 ;; Auto vars:     Size  Location     Type
 14072 ;;  packet          8   24[BANK0 ] struct .
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  1    wreg      void 
 14075 ;; Registers used:
 14076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14077 ;; Tracked objects:
 14078 ;;		On entry : 3F/0
 14079 ;;		On exit  : 3F/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14085 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;Total ram usage:       12 bytes
 14087 ;; Hardware stack levels used: 1
 14088 ;; Hardware stack levels required when called: 6
 14089 ;; This function calls:
 14090 ;;		_int16ToString
 14091 ;;		_sendPacket
 14092 ;;		_stringlen
 14093 ;; This function is called by:
 14094 ;;		_getHis
 14095 ;;		_processCommand
 14096 ;; This function uses a non-reentrant model
 14097 ;;
 14098                           
 14099  0DCC                     _sendSensorData:	
 14100                           ;psect for function _sendSensorData
 14101                           
 14102                           
 14103                           ;device.c: 29: void sendSensorData(int16_t sensor_data);device.c: 30: {;device.c: 31:   
      +                            data_packet_t packet = {.preamble = "L>"};
 14104                           
 14105                           ;incstack = 0
 14106                           ; Regs used in _sendSensorData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14107  0DCC  30D0               	movlw	low sendSensorData@F11032
 14108  0DCD  0086               	movwf	6
 14109  0DCE  3000               	movlw	high sendSensorData@F11032
 14110  0DCF  0087               	movwf	7
 14111  0DD0  3038               	movlw	low sendSensorData@packet
 14112  0DD1  0084               	movwf	4
 14113  0DD2  3000               	movlw	high sendSensorData@packet
 14114  0DD3  0085               	movwf	5
 14115  0DD4  3008               	movlw	8
 14116  0DD5  00B6               	movwf	??_sendSensorData
 14117  0DD6                     u2930:
 14118  0DD6  0016               	moviw fsr1++
 14119  0DD7  001A               	movwi fsr0++
 14120  0DD8  0BB6               	decfsz	??_sendSensorData,f
 14121  0DD9  2DD6               	goto	u2930
 14122                           
 14123                           ;device.c: 32:     int16ToString(sensor_data, packet.value);
 14124  0DDA  0835               	movf	sendSensorData@sensor_data+1,w
 14125  0DDB  00A8               	movwf	int16ToString@value+1
 14126  0DDC  0834               	movf	sendSensorData@sensor_data,w
 14127  0DDD  00A7               	movwf	int16ToString@value
 14128  0DDE  303A               	movlw	(low ((sendSensorData@packet| 0+2)))& (0+255)
 14129  0DDF  00B6               	movwf	??_sendSensorData
 14130  0DE0  0836               	movf	??_sendSensorData,w
 14131  0DE1  00A9               	movwf	int16ToString@data
 14132  0DE2  3184  2467  318D   	fcall	_int16ToString
 14133                           
 14134                           ;device.c: 34:     sendPacket((char*)&packet, (2 +stringlen(packet.value)));
 14135  0DE5  303A               	movlw	(low ((sendSensorData@packet| 0+2)))& (0+255)
 14136  0DE6  318A  22E6  318D   	fcall	_stringlen
 14137  0DE9  3E02               	addlw	2
 14138  0DEA  00B6               	movwf	??_sendSensorData
 14139  0DEB  3000               	movlw	0
 14140  0DEC  1803               	skipnc
 14141  0DED  3001               	movlw	1
 14142  0DEE  00B7               	movwf	??_sendSensorData+1
 14143  0DEF  0836               	movf	??_sendSensorData,w
 14144  0DF0  00A2               	movwf	sendPacket@byteCount
 14145  0DF1  0837               	movf	??_sendSensorData+1,w
 14146  0DF2  00A3               	movwf	sendPacket@byteCount+1
 14147  0DF3  0D89               	rlf	9,f
 14148  0DF4  3B89               	subwfb	9,f
 14149  0DF5  0989               	comf	9,f
 14150  0DF6  00A4               	movwf	sendPacket@byteCount+2
 14151  0DF7  00A5               	movwf	sendPacket@byteCount+3
 14152  0DF8  3038               	movlw	(low (sendSensorData@packet| 0))& (0+255)
 14153  0DF9  3186  26E2         	fcall	_sendPacket
 14154  0DFB  0008               	return
 14155  0DFC                     __end_of_sendSensorData:
 14156                           
 14157                           	psect	text64
 14158  0AE6                     __ptext64:	
 14159 ;; *************** function _stringlen *****************
 14160 ;; Defined at:
 14161 ;;		line 69 in file "device.c"
 14162 ;; Parameters:    Size  Location     Type
 14163 ;;  str             1    wreg     PTR const unsigned char 
 14164 ;;		 -> packet.value(6), sendSensorData@packet(8), main@packet(11), 
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  str             1    0[BANK0 ] PTR const unsigned char 
 14167 ;;		 -> packet.value(6), sendSensorData@packet(8), main@packet(11), 
 14168 ;;  idx             1    1[BANK0 ] unsigned char 
 14169 ;; Return value:  Size  Location     Type
 14170 ;;                  1    wreg      unsigned char 
 14171 ;; Registers used:
 14172 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14173 ;; Tracked objects:
 14174 ;;		On entry : 0/0
 14175 ;;		On exit  : 3F/0
 14176 ;;		Unchanged: 0/0
 14177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;Total ram usage:        3 bytes
 14183 ;; Hardware stack levels used: 1
 14184 ;; Hardware stack levels required when called: 4
 14185 ;; This function calls:
 14186 ;;		Nothing
 14187 ;; This function is called by:
 14188 ;;		_sendSensorData
 14189 ;;		_processCommand
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193  0AE6                     _stringlen:	
 14194                           ;psect for function _stringlen
 14195                           
 14196                           
 14197                           ;incstack = 0
 14198                           ; Regs used in _stringlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14199                           ;stringlen@str stored from wreg
 14200  0AE6  0140               	movlb	0	; select bank0
 14201  0AE7  00A0               	movwf	stringlen@str
 14202                           
 14203                           ;device.c: 69: uint8_t stringlen(const char* str);device.c: 70: {;device.c: 71:  uint8_t
      +                           idx = 0;
 14204  0AE8  01A1               	clrf	stringlen@idx
 14205                           
 14206                           ;device.c: 73:  for(idx = 0; idx < 255; idx++)
 14207  0AE9  01A1               	clrf	stringlen@idx
 14208  0AEA                     l5155:
 14209                           
 14210                           ;device.c: 74:  {;device.c: 75:   if(*str == 0)
 14211  0AEA  0820               	movf	stringlen@str,w
 14212  0AEB  0086               	movwf	6
 14213  0AEC  0187               	clrf	7
 14214  0AED  0801               	movf	1,w
 14215  0AEE  1D03               	btfss	3,2
 14216  0AEF  2AF2               	goto	l5161
 14217                           
 14218                           ;device.c: 76:    return idx;
 14219  0AF0  0821               	movf	stringlen@idx,w
 14220  0AF1  0008               	return
 14221  0AF2                     l5161:
 14222                           
 14223                           ;device.c: 77:         str++;
 14224  0AF2  3001               	movlw	1
 14225  0AF3  00F4               	movwf	??_stringlen
 14226  0AF4  0874               	movf	??_stringlen,w
 14227  0AF5  07A0               	addwf	stringlen@str,f
 14228                           
 14229                           ;device.c: 78:  }
 14230  0AF6  3001               	movlw	1
 14231  0AF7  00F4               	movwf	??_stringlen
 14232  0AF8  0874               	movf	??_stringlen,w
 14233  0AF9  07A1               	addwf	stringlen@idx,f
 14234  0AFA  0A21               	incf	stringlen@idx,w
 14235  0AFB  1D03               	btfss	3,2
 14236  0AFC  2AEA               	goto	l5155
 14237                           
 14238                           ;device.c: 79:  return -1;
 14239  0AFD  30FF               	movlw	255
 14240  0AFE  0008               	return
 14241  0AFF                     __end_of_stringlen:
 14242                           
 14243                           	psect	text65
 14244  06E2                     __ptext65:	
 14245 ;; *************** function _sendPacket *****************
 14246 ;; Defined at:
 14247 ;;		line 20 in file "communication.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;  str             1    wreg     PTR const unsigned char 
 14250 ;;		 -> sendSensorData@packet(8), sendSensorInfo@packet(7), 
 14251 ;;  byteCount       4    2[BANK0 ] unsigned long 
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;  str             1   12[BANK0 ] PTR const unsigned char 
 14254 ;;		 -> sendSensorData@packet(8), sendSensorInfo@packet(7), 
 14255 ;;  i               2   10[BANK0 ] int 
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  1    wreg      void 
 14258 ;; Registers used:
 14259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14260 ;; Tracked objects:
 14261 ;;		On entry : 3F/0
 14262 ;;		On exit  : 3F/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14266 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;Total ram usage:       11 bytes
 14270 ;; Hardware stack levels used: 1
 14271 ;; Hardware stack levels required when called: 5
 14272 ;; This function calls:
 14273 ;;		_EUSART1_Write
 14274 ;;		_EUSART1_is_tx_done
 14275 ;;		_EUSART1_is_tx_ready
 14276 ;;		_TxDeviceDisable
 14277 ;;		_TxDeviceEnable
 14278 ;; This function is called by:
 14279 ;;		_sendSensorInfo
 14280 ;;		_sendSensorData
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284  06E2                     _sendPacket:	
 14285                           ;psect for function _sendPacket
 14286                           
 14287                           
 14288                           ;incstack = 0
 14289                           ; Regs used in _sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14290                           ;sendPacket@str stored from wreg
 14291  06E2  00AC               	movwf	sendPacket@str
 14292                           
 14293                           ;communication.c: 20: void sendPacket(const char *str, uint32_t byteCount);communication
      +                          .c: 21: {;communication.c: 22:     TxDeviceEnable();
 14294  06E3  3188  20A3  3186   	fcall	_TxDeviceEnable
 14295                           
 14296                           ;communication.c: 24:     for(int i=0; i<byteCount; i++)
 14297  06E6  01AA               	clrf	sendPacket@i
 14298  06E7  01AB               	clrf	sendPacket@i+1
 14299  06E8                     l5097:
 14300  06E8  082A               	movf	sendPacket@i,w
 14301  06E9  00A6               	movwf	??_sendPacket
 14302  06EA  082B               	movf	sendPacket@i+1,w
 14303  06EB  00A7               	movwf	??_sendPacket+1
 14304  06EC  3000               	movlw	0
 14305  06ED  1BA7               	btfsc	??_sendPacket+1,7
 14306  06EE  30FF               	movlw	255
 14307  06EF  00A8               	movwf	??_sendPacket+2
 14308  06F0  00A9               	movwf	??_sendPacket+3
 14309  06F1  0825               	movf	sendPacket@byteCount+3,w
 14310  06F2  0229               	subwf	??_sendPacket+3,w
 14311  06F3  1D03               	skipz
 14312  06F4  2EFF               	goto	u2825
 14313  06F5  0824               	movf	sendPacket@byteCount+2,w
 14314  06F6  0228               	subwf	??_sendPacket+2,w
 14315  06F7  1D03               	skipz
 14316  06F8  2EFF               	goto	u2825
 14317  06F9  0823               	movf	sendPacket@byteCount+1,w
 14318  06FA  0227               	subwf	??_sendPacket+1,w
 14319  06FB  1D03               	skipz
 14320  06FC  2EFF               	goto	u2825
 14321  06FD  0822               	movf	sendPacket@byteCount,w
 14322  06FE  0226               	subwf	??_sendPacket,w
 14323  06FF                     u2825:
 14324  06FF  1803               	btfsc	3,0
 14325  0700  2F21               	goto	l5099
 14326                           
 14327                           ;communication.c: 25:     {;communication.c: 26:         if(EUSART1_is_tx_ready())
 14328  0701  3189  21A0  3186   	fcall	_EUSART1_is_tx_ready
 14329  0704  3A00               	xorlw	0
 14330  0705  1903               	skipnz
 14331  0706  2F1B               	goto	l5095
 14332                           
 14333                           ;communication.c: 27:         {;communication.c: 29:             EUSART1_Write(*str);
 14334  0707  0140               	movlb	0	; select bank0
 14335  0708  082C               	movf	sendPacket@str,w
 14336  0709  0086               	movwf	6
 14337  070A  0187               	clrf	7
 14338  070B  0801               	movf	1,w
 14339  070C  3189  218C  3186   	fcall	_EUSART1_Write
 14340  070F                     l5091:	
 14341                           ;communication.c: 30:             while(!EUSART1_is_tx_done());
 14342                           
 14343  070F  3188  20D4  3186   	fcall	_EUSART1_is_tx_done
 14344  0712  3A00               	xorlw	0
 14345  0713  1903               	skipnz
 14346  0714  2F0F               	goto	l5091
 14347                           
 14348                           ;communication.c: 31:             do { LATCbits.LATC3 = 0; } while(0);
 14349  0715  0140               	movlb	0	; select bank0
 14350  0716  119A               	bcf	26,3	;volatile
 14351                           
 14352                           ;communication.c: 32:             str++;
 14353  0717  3001               	movlw	1
 14354  0718  00A6               	movwf	??_sendPacket
 14355  0719  0826               	movf	??_sendPacket,w
 14356  071A  07AC               	addwf	sendPacket@str,f
 14357  071B                     l5095:
 14358                           
 14359                           ;communication.c: 34:     }
 14360  071B  3001               	movlw	1
 14361  071C  0140               	movlb	0	; select bank0
 14362  071D  07AA               	addwf	sendPacket@i,f
 14363  071E  3000               	movlw	0
 14364  071F  3DAB               	addwfc	sendPacket@i+1,f
 14365  0720  2EE8               	goto	l5097
 14366  0721                     l5099:
 14367                           
 14368                           ;communication.c: 35:     if(EUSART1_is_tx_ready())
 14369  0721  3189  21A0  3186   	fcall	_EUSART1_is_tx_ready
 14370  0724  3A00               	xorlw	0
 14371  0725  1903               	skipnz
 14372  0726  2F33               	goto	l5105
 14373                           
 14374                           ;communication.c: 36:         {;communication.c: 37:             EUSART1_Write('\n');
 14375  0727  300A               	movlw	10
 14376  0728  3189  218C  3186   	fcall	_EUSART1_Write
 14377  072B                     l5103:	
 14378                           ;communication.c: 38:             while(!EUSART1_is_tx_done());
 14379                           
 14380  072B  3188  20D4  3186   	fcall	_EUSART1_is_tx_done
 14381  072E  3A00               	xorlw	0
 14382  072F  1903               	skipnz
 14383  0730  2F2B               	goto	l5103
 14384                           
 14385                           ;communication.c: 39:             do { LATCbits.LATC3 = 0; } while(0);
 14386  0731  0140               	movlb	0	; select bank0
 14387  0732  119A               	bcf	26,3	;volatile
 14388  0733                     l5105:
 14389                           
 14390                           ;communication.c: 41:     TxDeviceDisable();
 14391  0733  3188  20B5         	fcall	_TxDeviceDisable
 14392  0735  0008               	return
 14393  0736                     __end_of_sendPacket:
 14394                           
 14395                           	psect	text66
 14396  08A3                     __ptext66:	
 14397 ;; *************** function _TxDeviceEnable *****************
 14398 ;; Defined at:
 14399 ;;		line 67 in file "communication.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;		None
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;		None
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  1    wreg      void 
 14406 ;; Registers used:
 14407 ;;		None
 14408 ;; Tracked objects:
 14409 ;;		On entry : 3F/0
 14410 ;;		On exit  : 3F/0
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;Total ram usage:        0 bytes
 14418 ;; Hardware stack levels used: 1
 14419 ;; Hardware stack levels required when called: 4
 14420 ;; This function calls:
 14421 ;;		Nothing
 14422 ;; This function is called by:
 14423 ;;		_sendPacket
 14424 ;; This function uses a non-reentrant model
 14425 ;;
 14426                           
 14427  08A3                     _TxDeviceEnable:	
 14428                           ;psect for function _TxDeviceEnable
 14429                           
 14430                           
 14431                           ;communication.c: 69:     LATCbits.LATC3 = 1;
 14432                           
 14433                           ;incstack = 0
 14434                           ; Regs used in _TxDeviceEnable: []
 14435  08A3  159A               	bsf	26,3	;volatile
 14436  08A4  0008               	return
 14437  08A5                     __end_of_TxDeviceEnable:
 14438                           
 14439                           	psect	text67
 14440  08B5                     __ptext67:	
 14441 ;; *************** function _TxDeviceDisable *****************
 14442 ;; Defined at:
 14443 ;;		line 72 in file "communication.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;		None
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1    wreg      void 
 14450 ;; Registers used:
 14451 ;;		None
 14452 ;; Tracked objects:
 14453 ;;		On entry : 31/E
 14454 ;;		On exit  : 3F/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14461 ;;Total ram usage:        0 bytes
 14462 ;; Hardware stack levels used: 1
 14463 ;; Hardware stack levels required when called: 4
 14464 ;; This function calls:
 14465 ;;		Nothing
 14466 ;; This function is called by:
 14467 ;;		_main
 14468 ;;		_sendPacket
 14469 ;; This function uses a non-reentrant model
 14470 ;;
 14471                           
 14472  08B5                     _TxDeviceDisable:	
 14473                           ;psect for function _TxDeviceDisable
 14474                           
 14475                           
 14476                           ;communication.c: 74:     LATCbits.LATC3 = 0;
 14477                           
 14478                           ;incstack = 0
 14479                           ; Regs used in _TxDeviceDisable: []
 14480  08B5  0140               	movlb	0	; select bank0
 14481  08B6  119A               	bcf	26,3	;volatile
 14482  08B7  0008               	return
 14483  08B8                     __end_of_TxDeviceDisable:
 14484                           
 14485                           	psect	text68
 14486  09A0                     __ptext68:	
 14487 ;; *************** function _EUSART1_is_tx_ready *****************
 14488 ;; Defined at:
 14489 ;;		line 119 in file "mcc_generated_files/eusart1.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;		None
 14492 ;; Auto vars:     Size  Location     Type
 14493 ;;		None
 14494 ;; Return value:  Size  Location     Type
 14495 ;;                  1    wreg      _Bool 
 14496 ;; Registers used:
 14497 ;;		wreg, status,2
 14498 ;; Tracked objects:
 14499 ;;		On entry : 3F/0
 14500 ;;		On exit  : 33/2
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14507 ;;Total ram usage:        1 bytes
 14508 ;; Hardware stack levels used: 1
 14509 ;; Hardware stack levels required when called: 4
 14510 ;; This function calls:
 14511 ;;		Nothing
 14512 ;; This function is called by:
 14513 ;;		_sendPacket
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517  09A0                     _EUSART1_is_tx_ready:	
 14518                           ;psect for function _EUSART1_is_tx_ready
 14519                           
 14520                           
 14521                           ;mcc_generated_files/eusart1.c: 121:     return (_Bool)(PIR3bits.TX1IF && TX1STAbits.TXE
      +                          N);
 14522                           
 14523                           ;incstack = 0
 14524                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2]
 14525  09A0  01F4               	clrf	_EUSART1_is_tx_ready$357
 14526  09A1  014E               	movlb	14	; select bank14
 14527  09A2  1E0F               	btfss	15,4	;volatile
 14528  09A3  29A9               	goto	l4999
 14529  09A4  0142               	movlb	2	; select bank2
 14530  09A5  1E9E               	btfss	30,5	;volatile
 14531  09A6  29A9               	goto	l4999
 14532  09A7  01F4               	clrf	_EUSART1_is_tx_ready$357
 14533  09A8  0AF4               	incf	_EUSART1_is_tx_ready$357,f
 14534  09A9                     l4999:
 14535  09A9  0874               	movf	_EUSART1_is_tx_ready$357,w
 14536  09AA  0008               	return
 14537  09AB                     __end_of_EUSART1_is_tx_ready:
 14538                           
 14539                           	psect	text69
 14540  08D4                     __ptext69:	
 14541 ;; *************** function _EUSART1_is_tx_done *****************
 14542 ;; Defined at:
 14543 ;;		line 129 in file "mcc_generated_files/eusart1.c"
 14544 ;; Parameters:    Size  Location     Type
 14545 ;;		None
 14546 ;; Auto vars:     Size  Location     Type
 14547 ;;		None
 14548 ;; Return value:  Size  Location     Type
 14549 ;;                  1    wreg      _Bool 
 14550 ;; Registers used:
 14551 ;;		wreg, status,2, status,0
 14552 ;; Tracked objects:
 14553 ;;		On entry : 3D/2
 14554 ;;		On exit  : 3F/2
 14555 ;;		Unchanged: 0/0
 14556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14561 ;;Total ram usage:        0 bytes
 14562 ;; Hardware stack levels used: 1
 14563 ;; Hardware stack levels required when called: 4
 14564 ;; This function calls:
 14565 ;;		Nothing
 14566 ;; This function is called by:
 14567 ;;		_sendPacket
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571  08D4                     _EUSART1_is_tx_done:	
 14572                           ;psect for function _EUSART1_is_tx_done
 14573                           
 14574                           
 14575                           ;mcc_generated_files/eusart1.c: 131:     return TX1STAbits.TRMT;
 14576                           
 14577                           ;incstack = 0
 14578                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 14579  08D4  0142               	movlb	2	; select bank2
 14580  08D5  0C1E               	rrf	30,w	;volatile
 14581  08D6  3901               	andlw	1
 14582  08D7  0008               	return
 14583  08D8                     __end_of_EUSART1_is_tx_done:
 14584                           
 14585                           	psect	text70
 14586  098C                     __ptext70:	
 14587 ;; *************** function _EUSART1_Write *****************
 14588 ;; Defined at:
 14589 ;;		line 159 in file "mcc_generated_files/eusart1.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;  txData          1    wreg     unsigned char 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;  txData          1    4[COMMON] unsigned char 
 14594 ;; Return value:  Size  Location     Type
 14595 ;;                  1    wreg      void 
 14596 ;; Registers used:
 14597 ;;		wreg
 14598 ;; Tracked objects:
 14599 ;;		On entry : 31/0
 14600 ;;		On exit  : 3F/2
 14601 ;;		Unchanged: 0/0
 14602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;Total ram usage:        1 bytes
 14608 ;; Hardware stack levels used: 1
 14609 ;; Hardware stack levels required when called: 4
 14610 ;; This function calls:
 14611 ;;		Nothing
 14612 ;; This function is called by:
 14613 ;;		_sendPacket
 14614 ;; This function uses a non-reentrant model
 14615 ;;
 14616                           
 14617  098C                     _EUSART1_Write:	
 14618                           ;psect for function _EUSART1_Write
 14619                           
 14620                           
 14621                           ;incstack = 0
 14622                           ; Regs used in _EUSART1_Write: [wreg]
 14623                           ;EUSART1_Write@txData stored from wreg
 14624  098C  00F4               	movwf	EUSART1_Write@txData
 14625                           
 14626                           ;mcc_generated_files/eusart1.c: 159: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 160: {;mcc_generated_files/eusart1.c: 161:     do { LATCbits.LATC3 = 1; }
      +                           while(0);
 14627  098D  0140               	movlb	0	; select bank0
 14628  098E  159A               	bsf	26,3	;volatile
 14629  098F                     l196:	
 14630                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:     }
 14631                           
 14632                           
 14633                           ;mcc_generated_files/eusart1.c: 162:     while(0 == PIR3bits.TX1IF)
 14634  098F  014E               	movlb	14	; select bank14
 14635  0990  1E0F               	btfss	15,4	;volatile
 14636  0991  298F               	goto	l196
 14637                           
 14638                           ;mcc_generated_files/eusart1.c: 166:     TX1REG = txData;
 14639  0992  0874               	movf	EUSART1_Write@txData,w
 14640  0993  0142               	movlb	2	; select bank2
 14641  0994  009A               	movwf	26	;volatile
 14642  0995  0008               	return
 14643  0996                     __end_of_EUSART1_Write:
 14644                           
 14645                           	psect	text71
 14646  0467                     __ptext71:	
 14647 ;; *************** function _int16ToString *****************
 14648 ;; Defined at:
 14649 ;;		line 88 in file "device.c"
 14650 ;; Parameters:    Size  Location     Type
 14651 ;;  value           2    7[BANK0 ] short 
 14652 ;;  data            1    9[BANK0 ] PTR unsigned char 
 14653 ;;		 -> sendSensorData@packet(8), 
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  i               2   14[BANK0 ] int 
 14656 ;;  divisor         2   18[BANK0 ] unsigned short 
 14657 ;;  dividend        2   16[BANK0 ] short 
 14658 ;;  result          2   12[BANK0 ] short 
 14659 ;;  flag_0          1   11[BANK0 ] _Bool 
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      void 
 14662 ;; Registers used:
 14663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14664 ;; Tracked objects:
 14665 ;;		On entry : 3F/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14669 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;Total ram usage:       13 bytes
 14674 ;; Hardware stack levels used: 1
 14675 ;; Hardware stack levels required when called: 5
 14676 ;; This function calls:
 14677 ;;		___lwdiv
 14678 ;;		___lwmod
 14679 ;; This function is called by:
 14680 ;;		_sendSensorData
 14681 ;; This function uses a non-reentrant model
 14682 ;;
 14683                           
 14684  0467                     _int16ToString:	
 14685                           ;psect for function _int16ToString
 14686                           
 14687                           
 14688                           ;device.c: 88: void int16ToString(int16_t value, char *data);device.c: 89: {;device.c: 9
      +                          0:     uint16_t divisor = 10000;
 14689                           
 14690                           ;incstack = 0
 14691                           ; Regs used in _int16ToString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14692  0467  3010               	movlw	16
 14693  0468  00B2               	movwf	int16ToString@divisor
 14694  0469  3027               	movlw	39
 14695  046A  00B3               	movwf	int16ToString@divisor+1
 14696                           
 14697                           ;device.c: 91:     int16_t dividend = value;
 14698  046B  0828               	movf	int16ToString@value+1,w
 14699  046C  00B1               	movwf	int16ToString@dividend+1
 14700  046D  0827               	movf	int16ToString@value,w
 14701  046E  00B0               	movwf	int16ToString@dividend
 14702                           
 14703                           ;device.c: 92:     int16_t result;;device.c: 93:     _Bool flag_0 = 0;
 14704  046F  01AB               	clrf	int16ToString@flag_0
 14705                           
 14706                           ;device.c: 94:     if((value == 0)||(value == 0xFFFF))
 14707  0470  0827               	movf	int16ToString@value,w
 14708  0471  0428               	iorwf	int16ToString@value+1,w
 14709  0472  1903               	btfsc	3,2
 14710  0473  2C7A               	goto	l5115
 14711  0474  0A27               	incf	int16ToString@value,w
 14712  0475  1D03               	skipz
 14713  0476  2C82               	goto	l1177
 14714  0477  0A28               	incf	int16ToString@value+1,w
 14715  0478  1D03               	btfss	3,2
 14716  0479  2C82               	goto	l1177
 14717  047A                     l5115:
 14718                           
 14719                           ;device.c: 95:     {;device.c: 96:         *data = '0';
 14720  047A  3030               	movlw	48
 14721  047B  00AA               	movwf	??_int16ToString
 14722  047C  0829               	movf	int16ToString@data,w
 14723  047D  0086               	movwf	6
 14724  047E  0187               	clrf	7
 14725  047F  082A               	movf	??_int16ToString,w
 14726  0480  0081               	movwf	1
 14727                           
 14728                           ;device.c: 97:     }
 14729  0481  0008               	return
 14730  0482                     l1177:	
 14731                           ;device.c: 98:     else
 14732                           
 14733                           
 14734                           ;device.c: 99:     {;device.c: 100:         if(value < 0)
 14735  0482  1FA8               	btfss	int16ToString@value+1,7
 14736  0483  2C93               	goto	l5123
 14737                           
 14738                           ;device.c: 101:         {;device.c: 102:             *data = '-';
 14739  0484  302D               	movlw	45
 14740  0485  00AA               	movwf	??_int16ToString
 14741  0486  0829               	movf	int16ToString@data,w
 14742  0487  0086               	movwf	6
 14743  0488  0187               	clrf	7
 14744  0489  082A               	movf	??_int16ToString,w
 14745  048A  0081               	movwf	1
 14746                           
 14747                           ;device.c: 103:             dividend =~ value;
 14748  048B  0927               	comf	int16ToString@value,w
 14749  048C  00B0               	movwf	int16ToString@dividend
 14750  048D  0928               	comf	int16ToString@value+1,w
 14751  048E  00B1               	movwf	int16ToString@dividend+1
 14752                           
 14753                           ;device.c: 104:             data++;
 14754  048F  3001               	movlw	1
 14755  0490  00AA               	movwf	??_int16ToString
 14756  0491  082A               	movf	??_int16ToString,w
 14757  0492  07A9               	addwf	int16ToString@data,f
 14758  0493                     l5123:
 14759                           
 14760                           ;device.c: 106:         for(int i=0; i<5; i++)
 14761  0493  01AE               	clrf	int16ToString@i
 14762  0494  01AF               	clrf	int16ToString@i+1
 14763  0495                     l5129:
 14764                           
 14765                           ;device.c: 107:         {;device.c: 108:             result = dividend / divisor;
 14766  0495  0140               	movlb	0	; select bank0
 14767  0496  0833               	movf	int16ToString@divisor+1,w
 14768  0497  00A1               	movwf	___lwdiv@divisor+1
 14769  0498  0832               	movf	int16ToString@divisor,w
 14770  0499  00A0               	movwf	___lwdiv@divisor
 14771  049A  0831               	movf	int16ToString@dividend+1,w
 14772  049B  00A3               	movwf	___lwdiv@dividend+1
 14773  049C  0830               	movf	int16ToString@dividend,w
 14774  049D  00A2               	movwf	___lwdiv@dividend
 14775  049E  318D  25FC  3184   	fcall	___lwdiv
 14776  04A1  0821               	movf	?___lwdiv+1,w
 14777  04A2  00AD               	movwf	int16ToString@result+1
 14778  04A3  0820               	movf	?___lwdiv,w
 14779  04A4  00AC               	movwf	int16ToString@result
 14780                           
 14781                           ;device.c: 109:             if((result > 0) || (flag_0 == 1))
 14782  04A5  082D               	movf	int16ToString@result+1,w
 14783  04A6  3A80               	xorlw	128
 14784  04A7  00AA               	movwf	??_int16ToString
 14785  04A8  3080               	movlw	128
 14786  04A9  022A               	subwf	??_int16ToString,w
 14787  04AA  1D03               	skipz
 14788  04AB  2CAE               	goto	u2885
 14789  04AC  3001               	movlw	1
 14790  04AD  022C               	subwf	int16ToString@result,w
 14791  04AE                     u2885:
 14792  04AE  1803               	skipnc
 14793  04AF  2CB4               	goto	l5135
 14794  04B0  0140               	movlb	0	; select bank0
 14795  04B1  032B               	decf	int16ToString@flag_0,w
 14796  04B2  1D03               	btfss	3,2
 14797  04B3  2CC3               	goto	l5141
 14798  04B4                     l5135:
 14799                           
 14800                           ;device.c: 110:             {;device.c: 111:                 *data = '0'+result;
 14801  04B4  0140               	movlb	0	; select bank0
 14802  04B5  082C               	movf	int16ToString@result,w
 14803  04B6  3E30               	addlw	48
 14804  04B7  00AA               	movwf	??_int16ToString
 14805  04B8  0829               	movf	int16ToString@data,w
 14806  04B9  0086               	movwf	6
 14807  04BA  0187               	clrf	7
 14808  04BB  082A               	movf	??_int16ToString,w
 14809  04BC  0081               	movwf	1
 14810                           
 14811                           ;device.c: 112:                 data++;
 14812  04BD  3001               	movlw	1
 14813  04BE  00AA               	movwf	??_int16ToString
 14814  04BF  082A               	movf	??_int16ToString,w
 14815  04C0  07A9               	addwf	int16ToString@data,f
 14816                           
 14817                           ;device.c: 113:                 flag_0 = 1;
 14818  04C1  01AB               	clrf	int16ToString@flag_0
 14819  04C2  0AAB               	incf	int16ToString@flag_0,f
 14820  04C3                     l5141:
 14821                           
 14822                           ;device.c: 115:             dividend = dividend % divisor;
 14823  04C3  0833               	movf	int16ToString@divisor+1,w
 14824  04C4  00A1               	movwf	___lwmod@divisor+1
 14825  04C5  0832               	movf	int16ToString@divisor,w
 14826  04C6  00A0               	movwf	___lwmod@divisor
 14827  04C7  0831               	movf	int16ToString@dividend+1,w
 14828  04C8  00A3               	movwf	___lwmod@dividend+1
 14829  04C9  0830               	movf	int16ToString@dividend,w
 14830  04CA  00A2               	movwf	___lwmod@dividend
 14831  04CB  318C  24E6  3184   	fcall	___lwmod
 14832  04CE  0821               	movf	?___lwmod+1,w
 14833  04CF  00B1               	movwf	int16ToString@dividend+1
 14834  04D0  0820               	movf	?___lwmod,w
 14835  04D1  00B0               	movwf	int16ToString@dividend
 14836                           
 14837                           ;device.c: 116:             divisor /= 10;
 14838  04D2  300A               	movlw	10
 14839  04D3  00A0               	movwf	___lwdiv@divisor
 14840  04D4  3000               	movlw	0
 14841  04D5  00A1               	movwf	___lwdiv@divisor+1
 14842  04D6  0833               	movf	int16ToString@divisor+1,w
 14843  04D7  00A3               	movwf	___lwdiv@dividend+1
 14844  04D8  0832               	movf	int16ToString@divisor,w
 14845  04D9  00A2               	movwf	___lwdiv@dividend
 14846  04DA  318D  25FC  3184   	fcall	___lwdiv
 14847  04DD  0821               	movf	?___lwdiv+1,w
 14848  04DE  00B3               	movwf	int16ToString@divisor+1
 14849  04DF  0820               	movf	?___lwdiv,w
 14850  04E0  00B2               	movwf	int16ToString@divisor
 14851                           
 14852                           ;device.c: 117:         }
 14853  04E1  3001               	movlw	1
 14854  04E2  07AE               	addwf	int16ToString@i,f
 14855  04E3  3000               	movlw	0
 14856  04E4  3DAF               	addwfc	int16ToString@i+1,f
 14857  04E5  082F               	movf	int16ToString@i+1,w
 14858  04E6  3A80               	xorlw	128
 14859  04E7  00AA               	movwf	??_int16ToString
 14860  04E8  3080               	movlw	128
 14861  04E9  022A               	subwf	??_int16ToString,w
 14862  04EA  1D03               	skipz
 14863  04EB  2CEE               	goto	u2905
 14864  04EC  3005               	movlw	5
 14865  04ED  022E               	subwf	int16ToString@i,w
 14866  04EE                     u2905:
 14867  04EE  1803               	btfsc	3,0
 14868  04EF  0008               	return
 14869  04F0  2C95               	goto	l5129
 14870  04F1                     __end_of_int16ToString:
 14871                           
 14872                           	psect	text72
 14873  0CE6                     __ptext72:	
 14874 ;; *************** function ___lwmod *****************
 14875 ;; Defined at:
 14876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;  divisor         2    0[BANK0 ] unsigned int 
 14879 ;;  dividend        2    2[BANK0 ] unsigned int 
 14880 ;; Auto vars:     Size  Location     Type
 14881 ;;  counter         1    5[COMMON] unsigned char 
 14882 ;; Return value:  Size  Location     Type
 14883 ;;                  2    0[BANK0 ] unsigned int 
 14884 ;; Registers used:
 14885 ;;		wreg, status,2, status,0
 14886 ;; Tracked objects:
 14887 ;;		On entry : 3F/0
 14888 ;;		On exit  : 3F/0
 14889 ;;		Unchanged: 0/0
 14890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14894 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14895 ;;Total ram usage:        6 bytes
 14896 ;; Hardware stack levels used: 1
 14897 ;; Hardware stack levels required when called: 4
 14898 ;; This function calls:
 14899 ;;		Nothing
 14900 ;; This function is called by:
 14901 ;;		_int16ToString
 14902 ;; This function uses a non-reentrant model
 14903 ;;
 14904                           
 14905  0CE6                     ___lwmod:	
 14906                           ;psect for function ___lwmod
 14907                           
 14908                           
 14909                           ;incstack = 0
 14910                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14911  0CE6  0820               	movf	___lwmod@divisor,w
 14912  0CE7  0421               	iorwf	___lwmod@divisor+1,w
 14913  0CE8  1903               	btfsc	3,2
 14914  0CE9  2D0D               	goto	l5057
 14915  0CEA  01F5               	clrf	___lwmod@counter
 14916  0CEB  0AF5               	incf	___lwmod@counter,f
 14917  0CEC                     l5047:
 14918  0CEC  1BA1               	btfsc	___lwmod@divisor+1,7
 14919  0CED  2CF8               	goto	l5049
 14920  0CEE  3001               	movlw	1
 14921  0CEF                     u2715:
 14922  0CEF  35A0               	lslf	___lwmod@divisor,f
 14923  0CF0  0DA1               	rlf	___lwmod@divisor+1,f
 14924  0CF1  0B89               	decfsz	9,f
 14925  0CF2  2CEF               	goto	u2715
 14926  0CF3  3001               	movlw	1
 14927  0CF4  00F4               	movwf	??___lwmod
 14928  0CF5  0874               	movf	??___lwmod,w
 14929  0CF6  07F5               	addwf	___lwmod@counter,f
 14930  0CF7  2CEC               	goto	l5047
 14931  0CF8                     l5049:
 14932  0CF8  0821               	movf	___lwmod@divisor+1,w
 14933  0CF9  0223               	subwf	___lwmod@dividend+1,w
 14934  0CFA  1D03               	skipz
 14935  0CFB  2CFE               	goto	u2735
 14936  0CFC  0820               	movf	___lwmod@divisor,w
 14937  0CFD  0222               	subwf	___lwmod@dividend,w
 14938  0CFE                     u2735:
 14939  0CFE  1C03               	skipc
 14940  0CFF  2D04               	goto	l5053
 14941  0D00  0820               	movf	___lwmod@divisor,w
 14942  0D01  02A2               	subwf	___lwmod@dividend,f
 14943  0D02  0821               	movf	___lwmod@divisor+1,w
 14944  0D03  3BA3               	subwfb	___lwmod@dividend+1,f
 14945  0D04                     l5053:
 14946  0D04  3001               	movlw	1
 14947  0D05                     u2745:
 14948  0D05  36A1               	lsrf	___lwmod@divisor+1,f
 14949  0D06  0CA0               	rrf	___lwmod@divisor,f
 14950  0D07  0B89               	decfsz	9,f
 14951  0D08  2D05               	goto	u2745
 14952  0D09  3001               	movlw	1
 14953  0D0A  02F5               	subwf	___lwmod@counter,f
 14954  0D0B  1D03               	btfss	3,2
 14955  0D0C  2CF8               	goto	l5049
 14956  0D0D                     l5057:
 14957  0D0D  0823               	movf	___lwmod@dividend+1,w
 14958  0D0E  00A1               	movwf	?___lwmod+1
 14959  0D0F  0822               	movf	___lwmod@dividend,w
 14960  0D10  00A0               	movwf	?___lwmod
 14961  0D11  0008               	return
 14962  0D12                     __end_of___lwmod:
 14963                           
 14964                           	psect	text73
 14965  0DFC                     __ptext73:	
 14966 ;; *************** function ___lwdiv *****************
 14967 ;; Defined at:
 14968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;  divisor         2    0[BANK0 ] unsigned int 
 14971 ;;  dividend        2    2[BANK0 ] unsigned int 
 14972 ;; Auto vars:     Size  Location     Type
 14973 ;;  quotient        2    5[BANK0 ] unsigned int 
 14974 ;;  counter         1    4[BANK0 ] unsigned char 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  2    0[BANK0 ] unsigned int 
 14977 ;; Registers used:
 14978 ;;		wreg, status,2, status,0
 14979 ;; Tracked objects:
 14980 ;;		On entry : 3F/0
 14981 ;;		On exit  : 3F/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14984 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14985 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14987 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14988 ;;Total ram usage:        8 bytes
 14989 ;; Hardware stack levels used: 1
 14990 ;; Hardware stack levels required when called: 4
 14991 ;; This function calls:
 14992 ;;		Nothing
 14993 ;; This function is called by:
 14994 ;;		_int16ToString
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998  0DFC                     ___lwdiv:	
 14999                           ;psect for function ___lwdiv
 15000                           
 15001                           
 15002                           ;incstack = 0
 15003                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 15004  0DFC  01A5               	clrf	___lwdiv@quotient
 15005  0DFD  01A6               	clrf	___lwdiv@quotient+1
 15006  0DFE  0820               	movf	___lwdiv@divisor,w
 15007  0DFF  0421               	iorwf	___lwdiv@divisor+1,w
 15008  0E00  1903               	btfsc	3,2
 15009  0E01  2E2B               	goto	l5035
 15010  0E02  01A4               	clrf	___lwdiv@counter
 15011  0E03  0AA4               	incf	___lwdiv@counter,f
 15012  0E04                     l5023:
 15013  0E04  1BA1               	btfsc	___lwdiv@divisor+1,7
 15014  0E05  2E10               	goto	l5025
 15015  0E06  3001               	movlw	1
 15016  0E07                     u2645:
 15017  0E07  35A0               	lslf	___lwdiv@divisor,f
 15018  0E08  0DA1               	rlf	___lwdiv@divisor+1,f
 15019  0E09  0B89               	decfsz	9,f
 15020  0E0A  2E07               	goto	u2645
 15021  0E0B  3001               	movlw	1
 15022  0E0C  00F4               	movwf	??___lwdiv
 15023  0E0D  0874               	movf	??___lwdiv,w
 15024  0E0E  07A4               	addwf	___lwdiv@counter,f
 15025  0E0F  2E04               	goto	l5023
 15026  0E10                     l5025:
 15027  0E10  3001               	movlw	1
 15028  0E11                     u2665:
 15029  0E11  35A5               	lslf	___lwdiv@quotient,f
 15030  0E12  0DA6               	rlf	___lwdiv@quotient+1,f
 15031  0E13  0B89               	decfsz	9,f
 15032  0E14  2E11               	goto	u2665
 15033  0E15  0821               	movf	___lwdiv@divisor+1,w
 15034  0E16  0223               	subwf	___lwdiv@dividend+1,w
 15035  0E17  1D03               	skipz
 15036  0E18  2E1B               	goto	u2675
 15037  0E19  0820               	movf	___lwdiv@divisor,w
 15038  0E1A  0222               	subwf	___lwdiv@dividend,w
 15039  0E1B                     u2675:
 15040  0E1B  1C03               	skipc
 15041  0E1C  2E22               	goto	l5031
 15042  0E1D  0820               	movf	___lwdiv@divisor,w
 15043  0E1E  02A2               	subwf	___lwdiv@dividend,f
 15044  0E1F  0821               	movf	___lwdiv@divisor+1,w
 15045  0E20  3BA3               	subwfb	___lwdiv@dividend+1,f
 15046  0E21  1425               	bsf	___lwdiv@quotient,0
 15047  0E22                     l5031:
 15048  0E22  3001               	movlw	1
 15049  0E23                     u2685:
 15050  0E23  36A1               	lsrf	___lwdiv@divisor+1,f
 15051  0E24  0CA0               	rrf	___lwdiv@divisor,f
 15052  0E25  0B89               	decfsz	9,f
 15053  0E26  2E23               	goto	u2685
 15054  0E27  3001               	movlw	1
 15055  0E28  02A4               	subwf	___lwdiv@counter,f
 15056  0E29  1D03               	btfss	3,2
 15057  0E2A  2E10               	goto	l5025
 15058  0E2B                     l5035:
 15059  0E2B  0826               	movf	___lwdiv@quotient+1,w
 15060  0E2C  00A1               	movwf	?___lwdiv+1
 15061  0E2D  0825               	movf	___lwdiv@quotient,w
 15062  0E2E  00A0               	movwf	?___lwdiv
 15063  0E2F  0008               	return
 15064  0E30                     __end_of___lwdiv:
 15065                           
 15066                           	psect	text74
 15067  094B                     __ptext74:	
 15068 ;; *************** function _TMR0_Reload *****************
 15069 ;; Defined at:
 15070 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;		None
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;		None
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      void 
 15077 ;; Registers used:
 15078 ;;		wreg
 15079 ;; Tracked objects:
 15080 ;;		On entry : 3F/0
 15081 ;;		On exit  : 3F/B
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;Total ram usage:        0 bytes
 15089 ;; Hardware stack levels used: 1
 15090 ;; Hardware stack levels required when called: 4
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_processCommand
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098  094B                     _TMR0_Reload:	
 15099                           ;psect for function _TMR0_Reload
 15100                           
 15101                           
 15102                           ;mcc_generated_files/tmr0.c: 130:     TMR0H = timer0ReloadVal16bit >> 8;
 15103                           
 15104                           ;incstack = 0
 15105                           ; Regs used in _TMR0_Reload: [wreg]
 15106  094B  0877               	movf	_timer0ReloadVal16bit+1,w	;volatile
 15107  094C  014B               	movlb	11	; select bank11
 15108  094D  009D               	movwf	29	;volatile
 15109                           
 15110                           ;mcc_generated_files/tmr0.c: 131:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 15111  094E  0876               	movf	_timer0ReloadVal16bit,w	;volatile
 15112  094F  009C               	movwf	28	;volatile
 15113  0950  0008               	return
 15114  0951                     __end_of_TMR0_Reload:
 15115                           
 15116                           	psect	text75
 15117  0C94                     __ptext75:	
 15118 ;; *************** function _initRxBuffer *****************
 15119 ;; Defined at:
 15120 ;;		line 8 in file "communication.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;  buf             1    wreg     PTR unsigned char 
 15123 ;;		 -> main@packet(11), 
 15124 ;;  size            4    0[BANK0 ] unsigned long 
 15125 ;; Auto vars:     Size  Location     Type
 15126 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 15127 ;;		 -> main@packet(11), 
 15128 ;;  i               2    9[BANK0 ] int 
 15129 ;; Return value:  Size  Location     Type
 15130 ;;                  1    wreg      void 
 15131 ;; Registers used:
 15132 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15133 ;; Tracked objects:
 15134 ;;		On entry : 3F/0
 15135 ;;		On exit  : 3F/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15139 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15141 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15142 ;;Total ram usage:       11 bytes
 15143 ;; Hardware stack levels used: 1
 15144 ;; Hardware stack levels required when called: 4
 15145 ;; This function calls:
 15146 ;;		Nothing
 15147 ;; This function is called by:
 15148 ;;		_main
 15149 ;; This function uses a non-reentrant model
 15150 ;;
 15151                           
 15152  0C94                     _initRxBuffer:	
 15153                           ;psect for function _initRxBuffer
 15154                           
 15155                           
 15156                           ;incstack = 0
 15157                           ; Regs used in _initRxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 15158                           ;initRxBuffer@buf stored from wreg
 15159  0C94  00A8               	movwf	initRxBuffer@buf
 15160                           
 15161                           ;communication.c: 8: void initRxBuffer(char* buf, uint32_t size);communication.c: 9: {;c
      +                          ommunication.c: 10:     for(int i=0; i<size; i++)
 15162  0C95  01A9               	clrf	initRxBuffer@i
 15163  0C96  01AA               	clrf	initRxBuffer@i+1
 15164  0C97                     l5561:
 15165  0C97  0829               	movf	initRxBuffer@i,w
 15166  0C98  00A4               	movwf	??_initRxBuffer
 15167  0C99  082A               	movf	initRxBuffer@i+1,w
 15168  0C9A  00A5               	movwf	??_initRxBuffer+1
 15169  0C9B  3000               	movlw	0
 15170  0C9C  1BA5               	btfsc	??_initRxBuffer+1,7
 15171  0C9D  30FF               	movlw	255
 15172  0C9E  00A6               	movwf	??_initRxBuffer+2
 15173  0C9F  00A7               	movwf	??_initRxBuffer+3
 15174  0CA0  0823               	movf	initRxBuffer@size+3,w
 15175  0CA1  0227               	subwf	??_initRxBuffer+3,w
 15176  0CA2  1D03               	skipz
 15177  0CA3  2CAE               	goto	u3275
 15178  0CA4  0822               	movf	initRxBuffer@size+2,w
 15179  0CA5  0226               	subwf	??_initRxBuffer+2,w
 15180  0CA6  1D03               	skipz
 15181  0CA7  2CAE               	goto	u3275
 15182  0CA8  0821               	movf	initRxBuffer@size+1,w
 15183  0CA9  0225               	subwf	??_initRxBuffer+1,w
 15184  0CAA  1D03               	skipz
 15185  0CAB  2CAE               	goto	u3275
 15186  0CAC  0820               	movf	initRxBuffer@size,w
 15187  0CAD  0224               	subwf	??_initRxBuffer,w
 15188  0CAE                     u3275:
 15189  0CAE  1803               	btfsc	3,0
 15190  0CAF  0008               	return
 15191                           
 15192                           ;communication.c: 11:     {;communication.c: 12:         buf[i]='\0';
 15193  0CB0  0829               	movf	initRxBuffer@i,w
 15194  0CB1  0728               	addwf	initRxBuffer@buf,w
 15195  0CB2  00A4               	movwf	??_initRxBuffer
 15196  0CB3  0824               	movf	??_initRxBuffer,w
 15197  0CB4  0086               	movwf	6
 15198  0CB5  0187               	clrf	7
 15199  0CB6  0181               	clrf	1
 15200                           
 15201                           ;communication.c: 13:     }
 15202  0CB7  3001               	movlw	1
 15203  0CB8  07A9               	addwf	initRxBuffer@i,f
 15204  0CB9  3000               	movlw	0
 15205  0CBA  3DAA               	addwfc	initRxBuffer@i+1,f
 15206  0CBB  2C97               	goto	l5561
 15207  0CBC                     __end_of_initRxBuffer:
 15208                           
 15209                           	psect	text76
 15210  0E66                     __ptext76:	
 15211 ;; *************** function _getMetrics *****************
 15212 ;; Defined at:
 15213 ;;		line 100 in file "sensor.c"
 15214 ;; Parameters:    Size  Location     Type
 15215 ;;  device          2   30[BANK0 ] PTR struct .
 15216 ;;		 -> cons(59), battery(59), panel(59), 
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;		None
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  1    wreg      void 
 15221 ;; Registers used:
 15222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15223 ;; Tracked objects:
 15224 ;;		On entry : 3F/0
 15225 ;;		On exit  : 3F/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;Total ram usage:        2 bytes
 15233 ;; Hardware stack levels used: 1
 15234 ;; Hardware stack levels required when called: 6
 15235 ;; This function calls:
 15236 ;;		_getMax
 15237 ;;		_getMed
 15238 ;;		_getMin
 15239 ;; This function is called by:
 15240 ;;		_main
 15241 ;; This function uses a non-reentrant model
 15242 ;;
 15243                           
 15244  0E66                     _getMetrics:	
 15245                           ;psect for function _getMetrics
 15246                           
 15247                           
 15248                           ;sensor.c: 100: void getMetrics(sensor_t *device);sensor.c: 101: {;sensor.c: 102:     ge
      +                          tMax(&device->sensor_data.current);
 15249                           
 15250                           ;incstack = 0
 15251                           ; Regs used in _getMetrics: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15252  0E66  083E               	movf	getMetrics@device,w
 15253  0E67  3E24               	addlw	36
 15254  0E68  00F4               	movwf	getMax@data
 15255  0E69  3000               	movlw	0
 15256  0E6A  3D3F               	addwfc	getMetrics@device+1,w
 15257  0E6B  00F5               	movwf	getMax@data+1
 15258  0E6C  3186  268C  318E   	fcall	_getMax
 15259                           
 15260                           ;sensor.c: 103:     getMin(&device->sensor_data.current);
 15261  0E6F  083E               	movf	getMetrics@device,w
 15262  0E70  3E24               	addlw	36
 15263  0E71  00F4               	movwf	getMin@data
 15264  0E72  3000               	movlw	0
 15265  0E73  3D3F               	addwfc	getMetrics@device+1,w
 15266  0E74  00F5               	movwf	getMin@data+1
 15267  0E75  3186  2636  318E   	fcall	_getMin
 15268                           
 15269                           ;sensor.c: 104:     getMed(&device->sensor_data.current);
 15270  0E78  083E               	movf	getMetrics@device,w
 15271  0E79  3E24               	addlw	36
 15272  0E7A  00AE               	movwf	getMed@data
 15273  0E7B  3000               	movlw	0
 15274  0E7C  3D3F               	addwfc	getMetrics@device+1,w
 15275  0E7D  00AF               	movwf	getMed@data+1
 15276  0E7E  3185  25D7  318E   	fcall	_getMed
 15277                           
 15278                           ;sensor.c: 105:     getMax(&device->sensor_data.voltage);
 15279  0E81  083E               	movf	getMetrics@device,w
 15280  0E82  3E0D               	addlw	13
 15281  0E83  00F4               	movwf	getMax@data
 15282  0E84  3000               	movlw	0
 15283  0E85  3D3F               	addwfc	getMetrics@device+1,w
 15284  0E86  00F5               	movwf	getMax@data+1
 15285  0E87  3186  268C  318E   	fcall	_getMax
 15286                           
 15287                           ;sensor.c: 106:     getMin(&device->sensor_data.voltage);
 15288  0E8A  083E               	movf	getMetrics@device,w
 15289  0E8B  3E0D               	addlw	13
 15290  0E8C  00F4               	movwf	getMin@data
 15291  0E8D  3000               	movlw	0
 15292  0E8E  3D3F               	addwfc	getMetrics@device+1,w
 15293  0E8F  00F5               	movwf	getMin@data+1
 15294  0E90  3186  2636  318E   	fcall	_getMin
 15295                           
 15296                           ;sensor.c: 107:     getMed(&device->sensor_data.voltage);
 15297  0E93  083E               	movf	getMetrics@device,w
 15298  0E94  3E0D               	addlw	13
 15299  0E95  00AE               	movwf	getMed@data
 15300  0E96  3000               	movlw	0
 15301  0E97  3D3F               	addwfc	getMetrics@device+1,w
 15302  0E98  00AF               	movwf	getMed@data+1
 15303  0E99  3185  25D7         	fcall	_getMed
 15304  0E9B  0008               	return
 15305  0E9C                     __end_of_getMetrics:
 15306                           
 15307                           	psect	text77
 15308  0636                     __ptext77:	
 15309 ;; *************** function _getMin *****************
 15310 ;; Defined at:
 15311 ;;		line 130 in file "sensor.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;  data            2    4[COMMON] PTR struct .
 15314 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 15315 ;;		 -> panel.sensor_data(46), panel(59), 
 15316 ;; Auto vars:     Size  Location     Type
 15317 ;;  i               1    7[BANK0 ] unsigned char 
 15318 ;;  aux             1    8[BANK0 ] unsigned char 
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1    wreg      void 
 15321 ;; Registers used:
 15322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15323 ;; Tracked objects:
 15324 ;;		On entry : 3F/0
 15325 ;;		On exit  : 3F/0
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;Total ram usage:       11 bytes
 15333 ;; Hardware stack levels used: 1
 15334 ;; Hardware stack levels required when called: 4
 15335 ;; This function calls:
 15336 ;;		Nothing
 15337 ;; This function is called by:
 15338 ;;		_getMetrics
 15339 ;;		_processCommand
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343  0636                     _getMin:	
 15344                           ;psect for function _getMin
 15345                           
 15346                           
 15347                           ;sensor.c: 130: void getMin(measure_data_t *data);sensor.c: 131: {;sensor.c: 132:     ui
      +                          nt8_t aux;;sensor.c: 133:     aux = data->pWrite;
 15348                           
 15349                           ;incstack = 0
 15350                           ; Regs used in _getMin: [wreg-fsr1h+status,2+status,0]
 15351  0636  0874               	movf	getMin@data,w
 15352  0637  0086               	movwf	6
 15353  0638  0875               	movf	getMin@data+1,w
 15354  0639  0087               	movwf	7
 15355  063A  3156               	addfsr 1,22
 15356  063B  0801               	movf	1,w
 15357  063C  00A0               	movwf	??_getMin
 15358  063D  0820               	movf	??_getMin,w
 15359  063E  00A8               	movwf	getMin@aux
 15360                           
 15361                           ;sensor.c: 135:     for(uint8_t i=0; i<8; i++)
 15362  063F  01A7               	clrf	getMin@i
 15363  0640                     l5493:
 15364                           
 15365                           ;sensor.c: 136:     {;sensor.c: 137:         if(data->min > data->hist[aux])
 15366  0640  0874               	movf	getMin@data,w
 15367  0641  0086               	movwf	6
 15368  0642  0875               	movf	getMin@data+1,w
 15369  0643  0087               	movwf	7
 15370  0644  3152               	addfsr 1,18
 15371  0645  3F40               	moviw [0]fsr1
 15372  0646  00A0               	movwf	??_getMin
 15373  0647  3F41               	moviw [1]fsr1
 15374  0648  00A1               	movwf	??_getMin+1
 15375  0649  0828               	movf	getMin@aux,w
 15376  064A  00A2               	movwf	??_getMin+2
 15377  064B  01A3               	clrf	??_getMin+3
 15378  064C  35A2               	lslf	??_getMin+2,f
 15379  064D  0DA3               	rlf	??_getMin+3,f
 15380  064E  0822               	movf	??_getMin+2,w
 15381  064F  0774               	addwf	getMin@data,w
 15382  0650  0086               	movwf	6
 15383  0651  0823               	movf	??_getMin+3,w
 15384  0652  3D75               	addwfc	getMin@data+1,w
 15385  0653  0087               	movwf	7
 15386  0654  3F40               	moviw [0]fsr1
 15387  0655  00A4               	movwf	??_getMin+4
 15388  0656  3F41               	moviw [1]fsr1
 15389  0657  00A5               	movwf	??_getMin+5
 15390  0658  0825               	movf	??_getMin+5,w
 15391  0659  3A80               	xorlw	128
 15392  065A  00A6               	movwf	??_getMin+6
 15393  065B  0821               	movf	??_getMin+1,w
 15394  065C  3A80               	xorlw	128
 15395  065D  0226               	subwf	??_getMin+6,w
 15396  065E  1D03               	skipz
 15397  065F  2E62               	goto	u3205
 15398  0660  0820               	movf	??_getMin,w
 15399  0661  0224               	subwf	??_getMin+4,w
 15400  0662                     u3205:
 15401  0662  1803               	skipnc
 15402  0663  2E79               	goto	l5497
 15403                           
 15404                           ;sensor.c: 138:         {;sensor.c: 139:             data->min = data->hist[aux];
 15405  0664  0140               	movlb	0	; select bank0
 15406  0665  0828               	movf	getMin@aux,w
 15407  0666  00A0               	movwf	??_getMin
 15408  0667  01A1               	clrf	??_getMin+1
 15409  0668  35A0               	lslf	??_getMin,f
 15410  0669  0DA1               	rlf	??_getMin+1,f
 15411  066A  0820               	movf	??_getMin,w
 15412  066B  0774               	addwf	getMin@data,w
 15413  066C  0086               	movwf	6
 15414  066D  0821               	movf	??_getMin+1,w
 15415  066E  3D75               	addwfc	getMin@data+1,w
 15416  066F  0087               	movwf	7
 15417  0670  0874               	movf	getMin@data,w
 15418  0671  0084               	movwf	4
 15419  0672  0875               	movf	getMin@data+1,w
 15420  0673  0085               	movwf	5
 15421  0674  3112               	addfsr 0,18
 15422  0675  3F40               	moviw [0]fsr1
 15423  0676  3F80               	movwi [0]fsr0
 15424  0677  3F41               	moviw [1]fsr1
 15425  0678  3F81               	movwi [1]fsr0
 15426  0679                     l5497:
 15427                           
 15428                           ;sensor.c: 141:         if(aux == 0)
 15429  0679  0140               	movlb	0	; select bank0
 15430  067A  0828               	movf	getMin@aux,w
 15431  067B  1D03               	btfss	3,2
 15432  067C  2E81               	goto	l5501
 15433                           
 15434                           ;sensor.c: 142:         {;sensor.c: 143:             aux = 8;
 15435  067D  3008               	movlw	8
 15436  067E  00A0               	movwf	??_getMin
 15437  067F  0820               	movf	??_getMin,w
 15438  0680  00A8               	movwf	getMin@aux
 15439  0681                     l5501:
 15440                           
 15441                           ;sensor.c: 145:         aux--;
 15442  0681  3001               	movlw	1
 15443  0682  02A8               	subwf	getMin@aux,f
 15444                           
 15445                           ;sensor.c: 146:     }
 15446  0683  3001               	movlw	1
 15447  0684  00A0               	movwf	??_getMin
 15448  0685  0820               	movf	??_getMin,w
 15449  0686  07A7               	addwf	getMin@i,f
 15450  0687  3008               	movlw	8
 15451  0688  0227               	subwf	getMin@i,w
 15452  0689  1803               	btfsc	3,0
 15453  068A  0008               	return
 15454  068B  2E40               	goto	l5493
 15455  068C                     __end_of_getMin:
 15456                           
 15457                           	psect	text78
 15458  05D7                     __ptext78:	
 15459 ;; *************** function _getMed *****************
 15460 ;; Defined at:
 15461 ;;		line 150 in file "sensor.c"
 15462 ;; Parameters:    Size  Location     Type
 15463 ;;  data            2   14[BANK0 ] PTR struct .
 15464 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 15465 ;;		 -> panel.sensor_data(46), panel(59), 
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;  i               1   28[BANK0 ] unsigned char 
 15468 ;;  buff            4   24[BANK0 ] long 
 15469 ;;  aux             1   29[BANK0 ] unsigned char 
 15470 ;; Return value:  Size  Location     Type
 15471 ;;                  1    wreg      void 
 15472 ;; Registers used:
 15473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15474 ;; Tracked objects:
 15475 ;;		On entry : 3F/0
 15476 ;;		On exit  : 3F/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15479 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15481 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15482 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;Total ram usage:       16 bytes
 15484 ;; Hardware stack levels used: 1
 15485 ;; Hardware stack levels required when called: 5
 15486 ;; This function calls:
 15487 ;;		___aldiv
 15488 ;; This function is called by:
 15489 ;;		_getMetrics
 15490 ;;		_processCommand
 15491 ;; This function uses a non-reentrant model
 15492 ;;
 15493                           
 15494  05D7                     _getMed:	
 15495                           ;psect for function _getMed
 15496                           
 15497                           
 15498                           ;sensor.c: 150: void getMed(measure_data_t *data);sensor.c: 151: {;sensor.c: 152:     in
      +                          t32_t buff = 0;
 15499                           
 15500                           ;incstack = 0
 15501                           ; Regs used in _getMed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15502  05D7  3000               	movlw	0
 15503  05D8  00BB               	movwf	getMed@buff+3
 15504  05D9  3000               	movlw	0
 15505  05DA  00BA               	movwf	getMed@buff+2
 15506  05DB  3000               	movlw	0
 15507  05DC  00B9               	movwf	getMed@buff+1
 15508  05DD  3000               	movlw	0
 15509  05DE  00B8               	movwf	getMed@buff
 15510                           
 15511                           ;sensor.c: 153:     uint8_t aux;;sensor.c: 154:     aux = data->pWrite;
 15512  05DF  082E               	movf	getMed@data,w
 15513  05E0  0086               	movwf	6
 15514  05E1  082F               	movf	getMed@data+1,w
 15515  05E2  0087               	movwf	7
 15516  05E3  3156               	addfsr 1,22
 15517  05E4  0801               	movf	1,w
 15518  05E5  00B0               	movwf	??_getMed
 15519  05E6  0830               	movf	??_getMed,w
 15520  05E7  00BD               	movwf	getMed@aux
 15521                           
 15522                           ;sensor.c: 155:     for(uint8_t i=0; i<8; i++)
 15523  05E8  01BC               	clrf	getMed@i
 15524  05E9                     l5515:
 15525                           
 15526                           ;sensor.c: 156:     {;sensor.c: 157:         buff += data->hist[aux];
 15527  05E9  083D               	movf	getMed@aux,w
 15528  05EA  00B0               	movwf	??_getMed
 15529  05EB  01B1               	clrf	??_getMed+1
 15530  05EC  35B0               	lslf	??_getMed,f
 15531  05ED  0DB1               	rlf	??_getMed+1,f
 15532  05EE  0830               	movf	??_getMed,w
 15533  05EF  072E               	addwf	getMed@data,w
 15534  05F0  0086               	movwf	6
 15535  05F1  0831               	movf	??_getMed+1,w
 15536  05F2  3D2F               	addwfc	getMed@data+1,w
 15537  05F3  0087               	movwf	7
 15538  05F4  3F40               	moviw [0]fsr1
 15539  05F5  00B2               	movwf	??_getMed+2
 15540  05F6  3F41               	moviw [1]fsr1
 15541  05F7  00B3               	movwf	??_getMed+3
 15542  05F8  0832               	movf	??_getMed+2,w
 15543  05F9  00B4               	movwf	??_getMed+4
 15544  05FA  0833               	movf	??_getMed+3,w
 15545  05FB  00B5               	movwf	??_getMed+5
 15546  05FC  3000               	movlw	0
 15547  05FD  1BB5               	btfsc	??_getMed+5,7
 15548  05FE  30FF               	movlw	255
 15549  05FF  00B6               	movwf	??_getMed+6
 15550  0600  00B7               	movwf	??_getMed+7
 15551  0601  0834               	movf	??_getMed+4,w
 15552  0602  07B8               	addwf	getMed@buff,f
 15553  0603  0835               	movf	??_getMed+5,w
 15554  0604  3DB9               	addwfc	getMed@buff+1,f
 15555  0605  0836               	movf	??_getMed+6,w
 15556  0606  3DBA               	addwfc	getMed@buff+2,f
 15557  0607  0837               	movf	??_getMed+7,w
 15558  0608  3DBB               	addwfc	getMed@buff+3,f
 15559                           
 15560                           ;sensor.c: 158:         if(aux == 0)
 15561  0609  083D               	movf	getMed@aux,w
 15562  060A  1D03               	btfss	3,2
 15563  060B  2E10               	goto	l5521
 15564                           
 15565                           ;sensor.c: 159:         {;sensor.c: 160:             aux = 8;
 15566  060C  3008               	movlw	8
 15567  060D  00B0               	movwf	??_getMed
 15568  060E  0830               	movf	??_getMed,w
 15569  060F  00BD               	movwf	getMed@aux
 15570  0610                     l5521:
 15571                           
 15572                           ;sensor.c: 162:         aux--;
 15573  0610  3001               	movlw	1
 15574  0611  02BD               	subwf	getMed@aux,f
 15575                           
 15576                           ;sensor.c: 163:     }
 15577  0612  3001               	movlw	1
 15578  0613  00B0               	movwf	??_getMed
 15579  0614  0830               	movf	??_getMed,w
 15580  0615  07BC               	addwf	getMed@i,f
 15581  0616  3008               	movlw	8
 15582  0617  023C               	subwf	getMed@i,w
 15583  0618  1C03               	skipc
 15584  0619  2DE9               	goto	l5515
 15585                           
 15586                           ;sensor.c: 164:     data->med = buff/8;
 15587  061A  3000               	movlw	0
 15588  061B  00A3               	movwf	___aldiv@divisor+3
 15589  061C  3000               	movlw	0
 15590  061D  00A2               	movwf	___aldiv@divisor+2
 15591  061E  3000               	movlw	0
 15592  061F  00A1               	movwf	___aldiv@divisor+1
 15593  0620  3008               	movlw	8
 15594  0621  00A0               	movwf	___aldiv@divisor
 15595  0622  083B               	movf	getMed@buff+3,w
 15596  0623  00A7               	movwf	___aldiv@dividend+3
 15597  0624  083A               	movf	getMed@buff+2,w
 15598  0625  00A6               	movwf	___aldiv@dividend+2
 15599  0626  0839               	movf	getMed@buff+1,w
 15600  0627  00A5               	movwf	___aldiv@dividend+1
 15601  0628  0838               	movf	getMed@buff,w
 15602  0629  00A4               	movwf	___aldiv@dividend
 15603  062A  3184  24F1         	fcall	___aldiv
 15604  062C  082E               	movf	getMed@data,w
 15605  062D  0086               	movwf	6
 15606  062E  082F               	movf	getMed@data+1,w
 15607  062F  0087               	movwf	7
 15608  0630  3154               	addfsr 1,20
 15609  0631  0820               	movf	?___aldiv,w
 15610  0632  3FC0               	movwi [0]fsr1
 15611  0633  0821               	movf	?___aldiv+1,w
 15612  0634  3FC1               	movwi [1]fsr1
 15613  0635  0008               	return
 15614  0636                     __end_of_getMed:
 15615                           
 15616                           	psect	text79
 15617  04F1                     __ptext79:	
 15618 ;; *************** function ___aldiv *****************
 15619 ;; Defined at:
 15620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
 15621 ;; Parameters:    Size  Location     Type
 15622 ;;  divisor         4    0[BANK0 ] long 
 15623 ;;  dividend        4    4[BANK0 ] long 
 15624 ;; Auto vars:     Size  Location     Type
 15625 ;;  quotient        4   10[BANK0 ] long 
 15626 ;;  sign            1    9[BANK0 ] unsigned char 
 15627 ;;  counter         1    8[BANK0 ] unsigned char 
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  4    0[BANK0 ] long 
 15630 ;; Registers used:
 15631 ;;		wreg, status,2, status,0
 15632 ;; Tracked objects:
 15633 ;;		On entry : 3F/0
 15634 ;;		On exit  : 3F/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15637 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15641 ;;Total ram usage:       15 bytes
 15642 ;; Hardware stack levels used: 1
 15643 ;; Hardware stack levels required when called: 4
 15644 ;; This function calls:
 15645 ;;		Nothing
 15646 ;; This function is called by:
 15647 ;;		_getMed
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651  04F1                     ___aldiv:	
 15652                           ;psect for function ___aldiv
 15653                           
 15654                           
 15655                           ;incstack = 0
 15656                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 15657  04F1  01A9               	clrf	___aldiv@sign
 15658  04F2  1FA3               	btfss	___aldiv@divisor+3,7
 15659  04F3  2D01               	goto	l1518
 15660  04F4  09A0               	comf	___aldiv@divisor,f
 15661  04F5  09A1               	comf	___aldiv@divisor+1,f
 15662  04F6  09A2               	comf	___aldiv@divisor+2,f
 15663  04F7  09A3               	comf	___aldiv@divisor+3,f
 15664  04F8  0AA0               	incf	___aldiv@divisor,f
 15665  04F9  1903               	skipnz
 15666  04FA  0AA1               	incf	___aldiv@divisor+1,f
 15667  04FB  1903               	skipnz
 15668  04FC  0AA2               	incf	___aldiv@divisor+2,f
 15669  04FD  1903               	skipnz
 15670  04FE  0AA3               	incf	___aldiv@divisor+3,f
 15671  04FF  01A9               	clrf	___aldiv@sign
 15672  0500  0AA9               	incf	___aldiv@sign,f
 15673  0501                     l1518:
 15674  0501  1FA7               	btfss	___aldiv@dividend+3,7
 15675  0502  2D12               	goto	l5223
 15676  0503  09A4               	comf	___aldiv@dividend,f
 15677  0504  09A5               	comf	___aldiv@dividend+1,f
 15678  0505  09A6               	comf	___aldiv@dividend+2,f
 15679  0506  09A7               	comf	___aldiv@dividend+3,f
 15680  0507  0AA4               	incf	___aldiv@dividend,f
 15681  0508  1903               	skipnz
 15682  0509  0AA5               	incf	___aldiv@dividend+1,f
 15683  050A  1903               	skipnz
 15684  050B  0AA6               	incf	___aldiv@dividend+2,f
 15685  050C  1903               	skipnz
 15686  050D  0AA7               	incf	___aldiv@dividend+3,f
 15687  050E  3001               	movlw	1
 15688  050F  00F4               	movwf	??___aldiv
 15689  0510  0874               	movf	??___aldiv,w
 15690  0511  06A9               	xorwf	___aldiv@sign,f
 15691  0512                     l5223:
 15692  0512  3000               	movlw	0
 15693  0513  00AD               	movwf	___aldiv@quotient+3
 15694  0514  3000               	movlw	0
 15695  0515  00AC               	movwf	___aldiv@quotient+2
 15696  0516  3000               	movlw	0
 15697  0517  00AB               	movwf	___aldiv@quotient+1
 15698  0518  3000               	movlw	0
 15699  0519  00AA               	movwf	___aldiv@quotient
 15700  051A  0823               	movf	___aldiv@divisor+3,w
 15701  051B  0422               	iorwf	___aldiv@divisor+2,w
 15702  051C  0421               	iorwf	___aldiv@divisor+1,w
 15703  051D  0420               	iorwf	___aldiv@divisor,w
 15704  051E  1903               	skipnz
 15705  051F  2D5B               	goto	l5245
 15706  0520  01A8               	clrf	___aldiv@counter
 15707  0521  0AA8               	incf	___aldiv@counter,f
 15708  0522                     l5231:
 15709  0522  1BA3               	btfsc	___aldiv@divisor+3,7
 15710  0523  2D30               	goto	l5233
 15711  0524  3001               	movlw	1
 15712  0525                     u3015:
 15713  0525  35A0               	lslf	___aldiv@divisor,f
 15714  0526  0DA1               	rlf	___aldiv@divisor+1,f
 15715  0527  0DA2               	rlf	___aldiv@divisor+2,f
 15716  0528  0DA3               	rlf	___aldiv@divisor+3,f
 15717  0529  0B89               	decfsz	9,f
 15718  052A  2D25               	goto	u3015
 15719  052B  3001               	movlw	1
 15720  052C  00F4               	movwf	??___aldiv
 15721  052D  0874               	movf	??___aldiv,w
 15722  052E  07A8               	addwf	___aldiv@counter,f
 15723  052F  2D22               	goto	l5231
 15724  0530                     l5233:
 15725  0530  3001               	movlw	1
 15726  0531                     u3035:
 15727  0531  35AA               	lslf	___aldiv@quotient,f
 15728  0532  0DAB               	rlf	___aldiv@quotient+1,f
 15729  0533  0DAC               	rlf	___aldiv@quotient+2,f
 15730  0534  0DAD               	rlf	___aldiv@quotient+3,f
 15731  0535  0B89               	decfsz	9,f
 15732  0536  2D31               	goto	u3035
 15733  0537  0823               	movf	___aldiv@divisor+3,w
 15734  0538  0227               	subwf	___aldiv@dividend+3,w
 15735  0539  1D03               	skipz
 15736  053A  2D45               	goto	u3045
 15737  053B  0822               	movf	___aldiv@divisor+2,w
 15738  053C  0226               	subwf	___aldiv@dividend+2,w
 15739  053D  1D03               	skipz
 15740  053E  2D45               	goto	u3045
 15741  053F  0821               	movf	___aldiv@divisor+1,w
 15742  0540  0225               	subwf	___aldiv@dividend+1,w
 15743  0541  1D03               	skipz
 15744  0542  2D45               	goto	u3045
 15745  0543  0820               	movf	___aldiv@divisor,w
 15746  0544  0224               	subwf	___aldiv@dividend,w
 15747  0545                     u3045:
 15748  0545  1C03               	skipc
 15749  0546  2D50               	goto	l5241
 15750  0547  0820               	movf	___aldiv@divisor,w
 15751  0548  02A4               	subwf	___aldiv@dividend,f
 15752  0549  0821               	movf	___aldiv@divisor+1,w
 15753  054A  3BA5               	subwfb	___aldiv@dividend+1,f
 15754  054B  0822               	movf	___aldiv@divisor+2,w
 15755  054C  3BA6               	subwfb	___aldiv@dividend+2,f
 15756  054D  0823               	movf	___aldiv@divisor+3,w
 15757  054E  3BA7               	subwfb	___aldiv@dividend+3,f
 15758  054F  142A               	bsf	___aldiv@quotient,0
 15759  0550                     l5241:
 15760  0550  3001               	movlw	1
 15761  0551                     u3055:
 15762  0551  36A3               	lsrf	___aldiv@divisor+3,f
 15763  0552  0CA2               	rrf	___aldiv@divisor+2,f
 15764  0553  0CA1               	rrf	___aldiv@divisor+1,f
 15765  0554  0CA0               	rrf	___aldiv@divisor,f
 15766  0555  0B89               	decfsz	9,f
 15767  0556  2D51               	goto	u3055
 15768  0557  3001               	movlw	1
 15769  0558  02A8               	subwf	___aldiv@counter,f
 15770  0559  1D03               	btfss	3,2
 15771  055A  2D30               	goto	l5233
 15772  055B                     l5245:
 15773  055B  0829               	movf	___aldiv@sign,w
 15774  055C  1903               	btfsc	3,2
 15775  055D  2D69               	goto	l5249
 15776  055E  09AA               	comf	___aldiv@quotient,f
 15777  055F  09AB               	comf	___aldiv@quotient+1,f
 15778  0560  09AC               	comf	___aldiv@quotient+2,f
 15779  0561  09AD               	comf	___aldiv@quotient+3,f
 15780  0562  0AAA               	incf	___aldiv@quotient,f
 15781  0563  1903               	skipnz
 15782  0564  0AAB               	incf	___aldiv@quotient+1,f
 15783  0565  1903               	skipnz
 15784  0566  0AAC               	incf	___aldiv@quotient+2,f
 15785  0567  1903               	skipnz
 15786  0568  0AAD               	incf	___aldiv@quotient+3,f
 15787  0569                     l5249:
 15788  0569  082D               	movf	___aldiv@quotient+3,w
 15789  056A  00A3               	movwf	?___aldiv+3
 15790  056B  082C               	movf	___aldiv@quotient+2,w
 15791  056C  00A2               	movwf	?___aldiv+2
 15792  056D  082B               	movf	___aldiv@quotient+1,w
 15793  056E  00A1               	movwf	?___aldiv+1
 15794  056F  082A               	movf	___aldiv@quotient,w
 15795  0570  00A0               	movwf	?___aldiv
 15796  0571  0008               	return
 15797  0572                     __end_of___aldiv:
 15798                           
 15799                           	psect	text80
 15800  068C                     __ptext80:	
 15801 ;; *************** function _getMax *****************
 15802 ;; Defined at:
 15803 ;;		line 110 in file "sensor.c"
 15804 ;; Parameters:    Size  Location     Type
 15805 ;;  data            2    4[COMMON] PTR struct .
 15806 ;;		 -> cons.sensor_data(46), cons(59), battery.sensor_data(46), battery(59), 
 15807 ;;		 -> panel.sensor_data(46), panel(59), 
 15808 ;; Auto vars:     Size  Location     Type
 15809 ;;  i               1    7[BANK0 ] unsigned char 
 15810 ;;  aux             1    8[BANK0 ] unsigned char 
 15811 ;; Return value:  Size  Location     Type
 15812 ;;                  1    wreg      void 
 15813 ;; Registers used:
 15814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15815 ;; Tracked objects:
 15816 ;;		On entry : 3F/0
 15817 ;;		On exit  : 3F/0
 15818 ;;		Unchanged: 0/0
 15819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15822 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15823 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15824 ;;Total ram usage:       11 bytes
 15825 ;; Hardware stack levels used: 1
 15826 ;; Hardware stack levels required when called: 4
 15827 ;; This function calls:
 15828 ;;		Nothing
 15829 ;; This function is called by:
 15830 ;;		_getMetrics
 15831 ;;		_processCommand
 15832 ;; This function uses a non-reentrant model
 15833 ;;
 15834                           
 15835  068C                     _getMax:	
 15836                           ;psect for function _getMax
 15837                           
 15838                           
 15839                           ;sensor.c: 110: void getMax(measure_data_t *data);sensor.c: 111: {;sensor.c: 112:     ui
      +                          nt8_t aux;;sensor.c: 113:     aux = data->pWrite;
 15840                           
 15841                           ;incstack = 0
 15842                           ; Regs used in _getMax: [wreg-fsr1h+status,2+status,0]
 15843  068C  0874               	movf	getMax@data,w
 15844  068D  0086               	movwf	6
 15845  068E  0875               	movf	getMax@data+1,w
 15846  068F  0087               	movwf	7
 15847  0690  3156               	addfsr 1,22
 15848  0691  0801               	movf	1,w
 15849  0692  00A0               	movwf	??_getMax
 15850  0693  0820               	movf	??_getMax,w
 15851  0694  00A8               	movwf	getMax@aux
 15852                           
 15853                           ;sensor.c: 115:     for(uint8_t i=0; i<8; i++)
 15854  0695  01A7               	clrf	getMax@i
 15855  0696                     l5473:
 15856                           
 15857                           ;sensor.c: 116:     {;sensor.c: 117:         if(data->max < data->hist[aux])
 15858  0696  0828               	movf	getMax@aux,w
 15859  0697  00A0               	movwf	??_getMax
 15860  0698  01A1               	clrf	??_getMax+1
 15861  0699  35A0               	lslf	??_getMax,f
 15862  069A  0DA1               	rlf	??_getMax+1,f
 15863  069B  0820               	movf	??_getMax,w
 15864  069C  0774               	addwf	getMax@data,w
 15865  069D  0086               	movwf	6
 15866  069E  0821               	movf	??_getMax+1,w
 15867  069F  3D75               	addwfc	getMax@data+1,w
 15868  06A0  0087               	movwf	7
 15869  06A1  3F40               	moviw [0]fsr1
 15870  06A2  00A2               	movwf	??_getMax+2
 15871  06A3  3F41               	moviw [1]fsr1
 15872  06A4  00A3               	movwf	??_getMax+3
 15873  06A5  0874               	movf	getMax@data,w
 15874  06A6  0086               	movwf	6
 15875  06A7  0875               	movf	getMax@data+1,w
 15876  06A8  0087               	movwf	7
 15877  06A9  3150               	addfsr 1,16
 15878  06AA  3F40               	moviw [0]fsr1
 15879  06AB  00A4               	movwf	??_getMax+4
 15880  06AC  3F41               	moviw [1]fsr1
 15881  06AD  00A5               	movwf	??_getMax+5
 15882  06AE  0825               	movf	??_getMax+5,w
 15883  06AF  3A80               	xorlw	128
 15884  06B0  00A6               	movwf	??_getMax+6
 15885  06B1  0823               	movf	??_getMax+3,w
 15886  06B2  3A80               	xorlw	128
 15887  06B3  0226               	subwf	??_getMax+6,w
 15888  06B4  1D03               	skipz
 15889  06B5  2EB8               	goto	u3175
 15890  06B6  0822               	movf	??_getMax+2,w
 15891  06B7  0224               	subwf	??_getMax+4,w
 15892  06B8                     u3175:
 15893  06B8  1803               	skipnc
 15894  06B9  2ECF               	goto	l5477
 15895                           
 15896                           ;sensor.c: 118:         {;sensor.c: 119:             data->max = data->hist[aux];
 15897  06BA  0140               	movlb	0	; select bank0
 15898  06BB  0828               	movf	getMax@aux,w
 15899  06BC  00A0               	movwf	??_getMax
 15900  06BD  01A1               	clrf	??_getMax+1
 15901  06BE  35A0               	lslf	??_getMax,f
 15902  06BF  0DA1               	rlf	??_getMax+1,f
 15903  06C0  0820               	movf	??_getMax,w
 15904  06C1  0774               	addwf	getMax@data,w
 15905  06C2  0086               	movwf	6
 15906  06C3  0821               	movf	??_getMax+1,w
 15907  06C4  3D75               	addwfc	getMax@data+1,w
 15908  06C5  0087               	movwf	7
 15909  06C6  0874               	movf	getMax@data,w
 15910  06C7  0084               	movwf	4
 15911  06C8  0875               	movf	getMax@data+1,w
 15912  06C9  0085               	movwf	5
 15913  06CA  3110               	addfsr 0,16
 15914  06CB  3F40               	moviw [0]fsr1
 15915  06CC  3F80               	movwi [0]fsr0
 15916  06CD  3F41               	moviw [1]fsr1
 15917  06CE  3F81               	movwi [1]fsr0
 15918  06CF                     l5477:
 15919                           
 15920                           ;sensor.c: 121:         if(aux == 0)
 15921  06CF  0140               	movlb	0	; select bank0
 15922  06D0  0828               	movf	getMax@aux,w
 15923  06D1  1D03               	btfss	3,2
 15924  06D2  2ED7               	goto	l5481
 15925                           
 15926                           ;sensor.c: 122:         {;sensor.c: 123:             aux = 8;
 15927  06D3  3008               	movlw	8
 15928  06D4  00A0               	movwf	??_getMax
 15929  06D5  0820               	movf	??_getMax,w
 15930  06D6  00A8               	movwf	getMax@aux
 15931  06D7                     l5481:
 15932                           
 15933                           ;sensor.c: 125:         aux--;
 15934  06D7  3001               	movlw	1
 15935  06D8  02A8               	subwf	getMax@aux,f
 15936                           
 15937                           ;sensor.c: 126:     }
 15938  06D9  3001               	movlw	1
 15939  06DA  00A0               	movwf	??_getMax
 15940  06DB  0820               	movf	??_getMax,w
 15941  06DC  07A7               	addwf	getMax@i,f
 15942  06DD  3008               	movlw	8
 15943  06DE  0227               	subwf	getMax@i,w
 15944  06DF  1803               	btfsc	3,0
 15945  06E0  0008               	return
 15946  06E1  2E96               	goto	l5473
 15947  06E2                     __end_of_getMax:
 15948                           
 15949                           	psect	text81
 15950  08B2                     __ptext81:	
 15951 ;; *************** function _TMR4_Stop *****************
 15952 ;; Defined at:
 15953 ;;		line 120 in file "mcc_generated_files/tmr4.c"
 15954 ;; Parameters:    Size  Location     Type
 15955 ;;		None
 15956 ;; Auto vars:     Size  Location     Type
 15957 ;;		None
 15958 ;; Return value:  Size  Location     Type
 15959 ;;                  1    wreg      void 
 15960 ;; Registers used:
 15961 ;;		None
 15962 ;; Tracked objects:
 15963 ;;		On entry : 3F/0
 15964 ;;		On exit  : 3F/5
 15965 ;;		Unchanged: 0/0
 15966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15971 ;;Total ram usage:        0 bytes
 15972 ;; Hardware stack levels used: 1
 15973 ;; Hardware stack levels required when called: 4
 15974 ;; This function calls:
 15975 ;;		Nothing
 15976 ;; This function is called by:
 15977 ;;		_main
 15978 ;; This function uses a non-reentrant model
 15979 ;;
 15980                           
 15981  08B2                     _TMR4_Stop:	
 15982                           ;psect for function _TMR4_Stop
 15983                           
 15984                           
 15985                           ;mcc_generated_files/tmr4.c: 123:     T4CONbits.TMR4ON = 0;
 15986                           
 15987                           ;incstack = 0
 15988                           ; Regs used in _TMR4_Stop: []
 15989  08B2  0145               	movlb	5	; select bank5
 15990  08B3  1394               	bcf	20,7	;volatile
 15991  08B4  0008               	return
 15992  08B5                     __end_of_TMR4_Stop:
 15993                           
 15994                           	psect	text82
 15995  08AF                     __ptext82:	
 15996 ;; *************** function _TMR4_Start *****************
 15997 ;; Defined at:
 15998 ;;		line 109 in file "mcc_generated_files/tmr4.c"
 15999 ;; Parameters:    Size  Location     Type
 16000 ;;		None
 16001 ;; Auto vars:     Size  Location     Type
 16002 ;;		None
 16003 ;; Return value:  Size  Location     Type
 16004 ;;                  1    wreg      void 
 16005 ;; Registers used:
 16006 ;;		None
 16007 ;; Tracked objects:
 16008 ;;		On entry : 3F/0
 16009 ;;		On exit  : 3F/5
 16010 ;;		Unchanged: 0/0
 16011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16016 ;;Total ram usage:        0 bytes
 16017 ;; Hardware stack levels used: 1
 16018 ;; Hardware stack levels required when called: 4
 16019 ;; This function calls:
 16020 ;;		Nothing
 16021 ;; This function is called by:
 16022 ;;		_main
 16023 ;; This function uses a non-reentrant model
 16024 ;;
 16025                           
 16026  08AF                     _TMR4_Start:	
 16027                           ;psect for function _TMR4_Start
 16028                           
 16029                           
 16030                           ;mcc_generated_files/tmr4.c: 112:     T4CONbits.TMR4ON = 1;
 16031                           
 16032                           ;incstack = 0
 16033                           ; Regs used in _TMR4_Start: []
 16034  08AF  0145               	movlb	5	; select bank5
 16035  08B0  1794               	bsf	20,7	;volatile
 16036  08B1  0008               	return
 16037  08B2                     __end_of_TMR4_Start:
 16038                           
 16039                           	psect	text83
 16040  08A1                     __ptext83:	
 16041 ;; *************** function _TMR2_Stop *****************
 16042 ;; Defined at:
 16043 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 16044 ;; Parameters:    Size  Location     Type
 16045 ;;		None
 16046 ;; Auto vars:     Size  Location     Type
 16047 ;;		None
 16048 ;; Return value:  Size  Location     Type
 16049 ;;                  1    wreg      void 
 16050 ;; Registers used:
 16051 ;;		None
 16052 ;; Tracked objects:
 16053 ;;		On entry : 3F/5
 16054 ;;		On exit  : 3F/5
 16055 ;;		Unchanged: 0/0
 16056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16061 ;;Total ram usage:        0 bytes
 16062 ;; Hardware stack levels used: 1
 16063 ;; Hardware stack levels required when called: 4
 16064 ;; This function calls:
 16065 ;;		Nothing
 16066 ;; This function is called by:
 16067 ;;		_main
 16068 ;; This function uses a non-reentrant model
 16069 ;;
 16070                           
 16071  08A1                     _TMR2_Stop:	
 16072                           ;psect for function _TMR2_Stop
 16073                           
 16074                           
 16075                           ;mcc_generated_files/tmr2.c: 123:     T2CONbits.TMR2ON = 0;
 16076                           
 16077                           ;incstack = 0
 16078                           ; Regs used in _TMR2_Stop: []
 16079  08A1  138E               	bcf	14,7	;volatile
 16080  08A2  0008               	return
 16081  08A3                     __end_of_TMR2_Stop:
 16082                           
 16083                           	psect	text84
 16084  089F                     __ptext84:	
 16085 ;; *************** function _TMR2_Start *****************
 16086 ;; Defined at:
 16087 ;;		line 109 in file "mcc_generated_files/tmr2.c"
 16088 ;; Parameters:    Size  Location     Type
 16089 ;;		None
 16090 ;; Auto vars:     Size  Location     Type
 16091 ;;		None
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  1    wreg      void 
 16094 ;; Registers used:
 16095 ;;		None
 16096 ;; Tracked objects:
 16097 ;;		On entry : 3F/5
 16098 ;;		On exit  : 3F/5
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;Total ram usage:        0 bytes
 16106 ;; Hardware stack levels used: 1
 16107 ;; Hardware stack levels required when called: 4
 16108 ;; This function calls:
 16109 ;;		Nothing
 16110 ;; This function is called by:
 16111 ;;		_main
 16112 ;; This function uses a non-reentrant model
 16113 ;;
 16114                           
 16115  089F                     _TMR2_Start:	
 16116                           ;psect for function _TMR2_Start
 16117                           
 16118                           
 16119                           ;mcc_generated_files/tmr2.c: 112:     T2CONbits.TMR2ON = 1;
 16120                           
 16121                           ;incstack = 0
 16122                           ; Regs used in _TMR2_Start: []
 16123  089F  178E               	bsf	14,7	;volatile
 16124  08A0  0008               	return
 16125  08A1                     __end_of_TMR2_Start:
 16126                           
 16127                           	psect	text85
 16128  0B9D                     __ptext85:	
 16129 ;; *************** function _SYSTEM_Initialize *****************
 16130 ;; Defined at:
 16131 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;		None
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;		None
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  1    wreg      void 
 16138 ;; Registers used:
 16139 ;;		wreg, status,2, status,0, pclath, cstack
 16140 ;; Tracked objects:
 16141 ;;		On entry : B3F/0
 16142 ;;		On exit  : 3F/E
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16149 ;;Total ram usage:        0 bytes
 16150 ;; Hardware stack levels used: 1
 16151 ;; Hardware stack levels required when called: 6
 16152 ;; This function calls:
 16153 ;;		_CMP1_Initialize
 16154 ;;		_DAC1_Initialize
 16155 ;;		_EUSART1_Initialize
 16156 ;;		_I2C1_Initialize
 16157 ;;		_OSCILLATOR_Initialize
 16158 ;;		_PIN_MANAGER_Initialize
 16159 ;;		_PMD_Initialize
 16160 ;;		_TMR0_Initialize
 16161 ;;		_TMR2_Initialize
 16162 ;;		_TMR4_Initialize
 16163 ;; This function is called by:
 16164 ;;		_main
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168  0B9D                     _SYSTEM_Initialize:	
 16169                           ;psect for function _SYSTEM_Initialize
 16170                           
 16171                           
 16172                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16173                           
 16174                           ;incstack = 0
 16175                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16176  0B9D  318A  2234  318B   	fcall	_PMD_Initialize
 16177                           
 16178                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 16179  0BA0  3189  2178  318B   	fcall	_I2C1_Initialize
 16180                           
 16181                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 16182  0BA3  318C  246C  318B   	fcall	_PIN_MANAGER_Initialize
 16183                           
 16184                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 16185  0BA6  3189  2182  318B   	fcall	_OSCILLATOR_Initialize
 16186                           
 16187                           ;mcc_generated_files/mcc.c: 56:     CMP1_Initialize();
 16188  0BA9  3189  21F5  318B   	fcall	_CMP1_Initialize
 16189                           
 16190                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
 16191  0BAC  318A  228D  318B   	fcall	_TMR4_Initialize
 16192                           
 16193                           ;mcc_generated_files/mcc.c: 58:     DAC1_Initialize();
 16194  0BAF  3189  2127  318B   	fcall	_DAC1_Initialize
 16195                           
 16196                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 16197  0BB2  318A  22B7  318B   	fcall	_TMR2_Initialize
 16198                           
 16199                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 16200  0BB5  318A  22CE  318B   	fcall	_TMR0_Initialize
 16201                           
 16202                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
 16203  0BB8  318D  256E         	fcall	_EUSART1_Initialize
 16204  0BBA  0008               	return
 16205  0BBB                     __end_of_SYSTEM_Initialize:
 16206                           
 16207                           	psect	text86
 16208  0A8D                     __ptext86:	
 16209 ;; *************** function _TMR4_Initialize *****************
 16210 ;; Defined at:
 16211 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 16212 ;; Parameters:    Size  Location     Type
 16213 ;;		None
 16214 ;; Auto vars:     Size  Location     Type
 16215 ;;		None
 16216 ;; Return value:  Size  Location     Type
 16217 ;;                  1    wreg      void 
 16218 ;; Registers used:
 16219 ;;		wreg, status,2, status,0, pclath, cstack
 16220 ;; Tracked objects:
 16221 ;;		On entry : B3F/E
 16222 ;;		On exit  : B3F/5
 16223 ;;		Unchanged: B00/0
 16224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16229 ;;Total ram usage:        0 bytes
 16230 ;; Hardware stack levels used: 1
 16231 ;; Hardware stack levels required when called: 5
 16232 ;; This function calls:
 16233 ;;		_TMR4_SetInterruptHandler
 16234 ;; This function is called by:
 16235 ;;		_SYSTEM_Initialize
 16236 ;; This function uses a non-reentrant model
 16237 ;;
 16238                           
 16239  0A8D                     _TMR4_Initialize:	
 16240                           ;psect for function _TMR4_Initialize
 16241                           
 16242                           
 16243                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x04;
 16244                           
 16245                           ;incstack = 0
 16246                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16247  0A8D  3004               	movlw	4
 16248  0A8E  0145               	movlb	5	; select bank5
 16249  0A8F  0096               	movwf	22	;volatile
 16250                           
 16251                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 16252  0A90  0195               	clrf	21	;volatile
 16253                           
 16254                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 16255  0A91  0197               	clrf	23	;volatile
 16256                           
 16257                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0x78;
 16258  0A92  3078               	movlw	120
 16259  0A93  0093               	movwf	19	;volatile
 16260                           
 16261                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 16262  0A94  0192               	clrf	18	;volatile
 16263                           
 16264                           ;mcc_generated_files/tmr4.c: 85:     PIR4bits.TMR4IF = 0;
 16265  0A95  014E               	movlb	14	; select bank14
 16266  0A96  1190               	bcf	16,3	;volatile
 16267                           
 16268                           ;mcc_generated_files/tmr4.c: 88:     PIE4bits.TMR4IE = 1;
 16269  0A97  159A               	bsf	26,3	;volatile
 16270                           
 16271                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 16272  0A98  309D               	movlw	low _TMR4_DefaultInterruptHandler
 16273  0A99  00F4               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 16274  0A9A  3008               	movlw	high _TMR4_DefaultInterruptHandler
 16275  0A9B  00F5               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 16276  0A9C  3189  2145         	fcall	_TMR4_SetInterruptHandler
 16277                           
 16278                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0x79;
 16279  0A9E  3079               	movlw	121
 16280  0A9F  0145               	movlb	5	; select bank5
 16281  0AA0  0094               	movwf	20	;volatile
 16282  0AA1  0008               	return
 16283  0AA2                     __end_of_TMR4_Initialize:
 16284                           
 16285                           	psect	text87
 16286  0945                     __ptext87:	
 16287 ;; *************** function _TMR4_SetInterruptHandler *****************
 16288 ;; Defined at:
 16289 ;;		line 179 in file "mcc_generated_files/tmr4.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 16292 ;;		 -> TMR4_DefaultInterruptHandler(1), 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;		None
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  1    wreg      void 
 16297 ;; Registers used:
 16298 ;;		wreg
 16299 ;; Tracked objects:
 16300 ;;		On entry : B3F/E
 16301 ;;		On exit  : B3F/0
 16302 ;;		Unchanged: B00/0
 16303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;Total ram usage:        2 bytes
 16309 ;; Hardware stack levels used: 1
 16310 ;; Hardware stack levels required when called: 4
 16311 ;; This function calls:
 16312 ;;		Nothing
 16313 ;; This function is called by:
 16314 ;;		_TMR4_Initialize
 16315 ;; This function uses a non-reentrant model
 16316 ;;
 16317                           
 16318  0945                     _TMR4_SetInterruptHandler:	
 16319                           ;psect for function _TMR4_SetInterruptHandler
 16320                           
 16321                           
 16322                           ;mcc_generated_files/tmr4.c: 180:     TMR4_InterruptHandler = InterruptHandler;
 16323                           
 16324                           ;incstack = 0
 16325                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 16326  0945  0875               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 16327  0946  0140               	movlb	0	; select bank0
 16328  0947  00E5               	movwf	_TMR4_InterruptHandler+1
 16329  0948  0874               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 16330  0949  00E4               	movwf	_TMR4_InterruptHandler
 16331  094A  0008               	return
 16332  094B                     __end_of_TMR4_SetInterruptHandler:
 16333                           
 16334                           	psect	text88
 16335  0AB7                     __ptext88:	
 16336 ;; *************** function _TMR2_Initialize *****************
 16337 ;; Defined at:
 16338 ;;		line 65 in file "mcc_generated_files/tmr2.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;		None
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;		None
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  1    wreg      void 
 16345 ;; Registers used:
 16346 ;;		wreg, status,2, status,0, pclath, cstack
 16347 ;; Tracked objects:
 16348 ;;		On entry : B3F/12
 16349 ;;		On exit  : B3F/5
 16350 ;;		Unchanged: B00/0
 16351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;Total ram usage:        0 bytes
 16357 ;; Hardware stack levels used: 1
 16358 ;; Hardware stack levels required when called: 5
 16359 ;; This function calls:
 16360 ;;		_TMR2_SetInterruptHandler
 16361 ;; This function is called by:
 16362 ;;		_SYSTEM_Initialize
 16363 ;; This function uses a non-reentrant model
 16364 ;;
 16365                           
 16366  0AB7                     _TMR2_Initialize:	
 16367                           ;psect for function _TMR2_Initialize
 16368                           
 16369                           
 16370                           ;mcc_generated_files/tmr2.c: 70:     T2CLKCON = 0x04;
 16371                           
 16372                           ;incstack = 0
 16373                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16374  0AB7  3004               	movlw	4
 16375  0AB8  0145               	movlb	5	; select bank5
 16376  0AB9  0090               	movwf	16	;volatile
 16377                           
 16378                           ;mcc_generated_files/tmr2.c: 73:     T2HLT = 0x11;
 16379  0ABA  3011               	movlw	17
 16380  0ABB  008F               	movwf	15	;volatile
 16381                           
 16382                           ;mcc_generated_files/tmr2.c: 76:     T2RST = 0x02;
 16383  0ABC  3002               	movlw	2
 16384  0ABD  0091               	movwf	17	;volatile
 16385                           
 16386                           ;mcc_generated_files/tmr2.c: 79:     T2PR = 0x2F;
 16387  0ABE  302F               	movlw	47
 16388  0ABF  008D               	movwf	13	;volatile
 16389                           
 16390                           ;mcc_generated_files/tmr2.c: 82:     T2TMR = 0x00;
 16391  0AC0  018C               	clrf	12	;volatile
 16392                           
 16393                           ;mcc_generated_files/tmr2.c: 85:     PIR4bits.TMR2IF = 0;
 16394  0AC1  014E               	movlb	14	; select bank14
 16395  0AC2  1090               	bcf	16,1	;volatile
 16396                           
 16397                           ;mcc_generated_files/tmr2.c: 88:     PIE4bits.TMR2IE = 1;
 16398  0AC3  149A               	bsf	26,1	;volatile
 16399                           
 16400                           ;mcc_generated_files/tmr2.c: 91:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 16401  0AC4  309B               	movlw	low _TMR2_DefaultInterruptHandler
 16402  0AC5  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 16403  0AC6  3008               	movlw	high _TMR2_DefaultInterruptHandler
 16404  0AC7  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 16405  0AC8  3189  213F         	fcall	_TMR2_SetInterruptHandler
 16406                           
 16407                           ;mcc_generated_files/tmr2.c: 94:     T2CON = 0x60;
 16408  0ACA  3060               	movlw	96
 16409  0ACB  0145               	movlb	5	; select bank5
 16410  0ACC  008E               	movwf	14	;volatile
 16411  0ACD  0008               	return
 16412  0ACE                     __end_of_TMR2_Initialize:
 16413                           
 16414                           	psect	text89
 16415  093F                     __ptext89:	
 16416 ;; *************** function _TMR2_SetInterruptHandler *****************
 16417 ;; Defined at:
 16418 ;;		line 179 in file "mcc_generated_files/tmr2.c"
 16419 ;; Parameters:    Size  Location     Type
 16420 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 16421 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 16422 ;; Auto vars:     Size  Location     Type
 16423 ;;		None
 16424 ;; Return value:  Size  Location     Type
 16425 ;;                  1    wreg      void 
 16426 ;; Registers used:
 16427 ;;		wreg
 16428 ;; Tracked objects:
 16429 ;;		On entry : B3F/E
 16430 ;;		On exit  : B3F/0
 16431 ;;		Unchanged: B00/0
 16432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;Total ram usage:        2 bytes
 16438 ;; Hardware stack levels used: 1
 16439 ;; Hardware stack levels required when called: 4
 16440 ;; This function calls:
 16441 ;;		Nothing
 16442 ;; This function is called by:
 16443 ;;		_TMR2_Initialize
 16444 ;; This function uses a non-reentrant model
 16445 ;;
 16446                           
 16447  093F                     _TMR2_SetInterruptHandler:	
 16448                           ;psect for function _TMR2_SetInterruptHandler
 16449                           
 16450                           
 16451                           ;mcc_generated_files/tmr2.c: 180:     TMR2_InterruptHandler = InterruptHandler;
 16452                           
 16453                           ;incstack = 0
 16454                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 16455  093F  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 16456  0940  0140               	movlb	0	; select bank0
 16457  0941  00E7               	movwf	_TMR2_InterruptHandler+1
 16458  0942  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 16459  0943  00E6               	movwf	_TMR2_InterruptHandler
 16460  0944  0008               	return
 16461  0945                     __end_of_TMR2_SetInterruptHandler:
 16462                           
 16463                           	psect	text90
 16464  0ACE                     __ptext90:	
 16465 ;; *************** function _TMR0_Initialize *****************
 16466 ;; Defined at:
 16467 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;		None
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  1    wreg      void 
 16474 ;; Registers used:
 16475 ;;		wreg, status,2, status,0, pclath, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : B3F/5
 16478 ;;		On exit  : B3F/B
 16479 ;;		Unchanged: B00/0
 16480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;Total ram usage:        0 bytes
 16486 ;; Hardware stack levels used: 1
 16487 ;; Hardware stack levels required when called: 5
 16488 ;; This function calls:
 16489 ;;		_TMR0_SetInterruptHandler
 16490 ;; This function is called by:
 16491 ;;		_SYSTEM_Initialize
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495  0ACE                     _TMR0_Initialize:	
 16496                           ;psect for function _TMR0_Initialize
 16497                           
 16498                           
 16499                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x48;
 16500                           
 16501                           ;incstack = 0
 16502                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16503  0ACE  3048               	movlw	72
 16504  0ACF  014B               	movlb	11	; select bank11
 16505  0AD0  009F               	movwf	31	;volatile
 16506                           
 16507                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFF;
 16508  0AD1  30FF               	movlw	255
 16509  0AD2  009D               	movwf	29	;volatile
 16510                           
 16511                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xCD;
 16512  0AD3  30CD               	movlw	205
 16513  0AD4  009C               	movwf	28	;volatile
 16514                           
 16515                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 16516  0AD5  081D               	movf	29,w	;volatile
 16517  0AD6  00F7               	movwf	_timer0ReloadVal16bit+1	;volatile
 16518  0AD7  081C               	movf	28,w	;volatile
 16519  0AD8  00F6               	movwf	_timer0ReloadVal16bit	;volatile
 16520                           
 16521                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
 16522  0AD9  014E               	movlb	14	; select bank14
 16523  0ADA  128C               	bcf	12,5	;volatile
 16524                           
 16525                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
 16526  0ADB  1696               	bsf	22,5	;volatile
 16527                           
 16528                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 16529  0ADC  30AC               	movlw	low _TMR0_DefaultInterruptHandler
 16530  0ADD  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16531  0ADE  3008               	movlw	high _TMR0_DefaultInterruptHandler
 16532  0ADF  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16533  0AE0  3189  2139         	fcall	_TMR0_SetInterruptHandler
 16534                           
 16535                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
 16536  0AE2  3090               	movlw	144
 16537  0AE3  014B               	movlb	11	; select bank11
 16538  0AE4  009E               	movwf	30	;volatile
 16539  0AE5  0008               	return
 16540  0AE6                     __end_of_TMR0_Initialize:
 16541                           
 16542                           	psect	text91
 16543  0939                     __ptext91:	
 16544 ;; *************** function _TMR0_SetInterruptHandler *****************
 16545 ;; Defined at:
 16546 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 16547 ;; Parameters:    Size  Location     Type
 16548 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
 16549 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;		None
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  1    wreg      void 
 16554 ;; Registers used:
 16555 ;;		wreg
 16556 ;; Tracked objects:
 16557 ;;		On entry : B3F/E
 16558 ;;		On exit  : B3F/0
 16559 ;;		Unchanged: B00/0
 16560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;Total ram usage:        2 bytes
 16566 ;; Hardware stack levels used: 1
 16567 ;; Hardware stack levels required when called: 4
 16568 ;; This function calls:
 16569 ;;		Nothing
 16570 ;; This function is called by:
 16571 ;;		_TMR0_Initialize
 16572 ;; This function uses a non-reentrant model
 16573 ;;
 16574                           
 16575  0939                     _TMR0_SetInterruptHandler:	
 16576                           ;psect for function _TMR0_SetInterruptHandler
 16577                           
 16578                           
 16579                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
 16580                           
 16581                           ;incstack = 0
 16582                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16583  0939  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16584  093A  0140               	movlb	0	; select bank0
 16585  093B  00E3               	movwf	_TMR0_InterruptHandler+1
 16586  093C  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16587  093D  00E2               	movwf	_TMR0_InterruptHandler
 16588  093E  0008               	return
 16589  093F                     __end_of_TMR0_SetInterruptHandler:
 16590                           
 16591                           	psect	text92
 16592  0A34                     __ptext92:	
 16593 ;; *************** function _PMD_Initialize *****************
 16594 ;; Defined at:
 16595 ;;		line 80 in file "mcc_generated_files/mcc.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;		None
 16598 ;; Auto vars:     Size  Location     Type
 16599 ;;		None
 16600 ;; Return value:  Size  Location     Type
 16601 ;;                  1    wreg      void 
 16602 ;; Registers used:
 16603 ;;		wreg, status,2
 16604 ;; Tracked objects:
 16605 ;;		On entry : B3F/0
 16606 ;;		On exit  : B3F/F
 16607 ;;		Unchanged: B00/0
 16608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16613 ;;Total ram usage:        0 bytes
 16614 ;; Hardware stack levels used: 1
 16615 ;; Hardware stack levels required when called: 4
 16616 ;; This function calls:
 16617 ;;		Nothing
 16618 ;; This function is called by:
 16619 ;;		_SYSTEM_Initialize
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623  0A34                     _PMD_Initialize:	
 16624                           ;psect for function _PMD_Initialize
 16625                           
 16626                           
 16627                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x47;
 16628                           
 16629                           ;incstack = 0
 16630                           ; Regs used in _PMD_Initialize: [wreg+status,2]
 16631  0A34  3047               	movlw	71
 16632  0A35  014F               	movlb	15	; select bank15
 16633  0A36  0096               	movwf	22	;volatile
 16634                           
 16635                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x6A;
 16636  0A37  306A               	movlw	106
 16637  0A38  0097               	movwf	23	;volatile
 16638                           
 16639                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x80;
 16640  0A39  3080               	movlw	128
 16641  0A3A  0098               	movwf	24	;volatile
 16642                           
 16643                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x25;
 16644  0A3B  3025               	movlw	37
 16645  0A3C  0099               	movwf	25	;volatile
 16646                           
 16647                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x6F;
 16648  0A3D  306F               	movlw	111
 16649  0A3E  009A               	movwf	26	;volatile
 16650                           
 16651                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x60;
 16652  0A3F  3060               	movlw	96
 16653  0A40  009B               	movwf	27	;volatile
 16654                           
 16655                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 16656  0A41  019C               	clrf	28	;volatile
 16657                           
 16658                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x3F;
 16659  0A42  303F               	movlw	63
 16660  0A43  009D               	movwf	29	;volatile
 16661  0A44  0008               	return
 16662  0A45                     __end_of_PMD_Initialize:
 16663                           
 16664                           	psect	text93
 16665  0C6C                     __ptext93:	
 16666 ;; *************** function _PIN_MANAGER_Initialize *****************
 16667 ;; Defined at:
 16668 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;		None
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;		None
 16673 ;; Return value:  Size  Location     Type
 16674 ;;                  1    wreg      void 
 16675 ;; Registers used:
 16676 ;;		wreg, status,2
 16677 ;; Tracked objects:
 16678 ;;		On entry : B3F/3
 16679 ;;		On exit  : B3F/3D
 16680 ;;		Unchanged: B00/0
 16681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;Total ram usage:        0 bytes
 16687 ;; Hardware stack levels used: 1
 16688 ;; Hardware stack levels required when called: 4
 16689 ;; This function calls:
 16690 ;;		Nothing
 16691 ;; This function is called by:
 16692 ;;		_SYSTEM_Initialize
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696  0C6C                     _PIN_MANAGER_Initialize:	
 16697                           ;psect for function _PIN_MANAGER_Initialize
 16698                           
 16699                           
 16700                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 16701                           
 16702                           ;incstack = 0
 16703                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16704  0C6C  0140               	movlb	0	; select bank0
 16705  0C6D  0198               	clrf	24	;volatile
 16706                           
 16707                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
 16708  0C6E  019A               	clrf	26	;volatile
 16709                           
 16710                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0C;
 16711  0C6F  300C               	movlw	12
 16712  0C70  0092               	movwf	18	;volatile
 16713                           
 16714                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x27;
 16715  0C71  3027               	movlw	39
 16716  0C72  0094               	movwf	20	;volatile
 16717                           
 16718                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x04;
 16719  0C73  3004               	movlw	4
 16720  0C74  017E               	movlb	62	; select bank62
 16721  0C75  00CE               	movwf	78	;volatile
 16722                           
 16723                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x04;
 16724  0C76  3004               	movlw	4
 16725  0C77  00B8               	movwf	56	;volatile
 16726                           
 16727                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
 16728  0C78  01B9               	clrf	57	;volatile
 16729                           
 16730                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
 16731  0C79  01CF               	clrf	79	;volatile
 16732                           
 16733                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
 16734  0C7A  01BA               	clrf	58	;volatile
 16735                           
 16736                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
 16737  0C7B  01D0               	clrf	80	;volatile
 16738                           
 16739                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
 16740  0C7C  3037               	movlw	55
 16741  0C7D  00BB               	movwf	59	;volatile
 16742                           
 16743                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
 16744  0C7E  303F               	movlw	63
 16745  0C7F  00D1               	movwf	81	;volatile
 16746                           
 16747                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
 16748  0C80  303F               	movlw	63
 16749  0C81  00BC               	movwf	60	;volatile
 16750                           
 16751                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
 16752  0C82  303F               	movlw	63
 16753  0C83  00D2               	movwf	82	;volatile
 16754                           
 16755                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x13;
 16756  0C84  3013               	movlw	19
 16757  0C85  00A0               	movwf	32	;volatile
 16758                           
 16759                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
 16760  0C86  3010               	movlw	16
 16761  0C87  017D               	movlb	61	; select bank61
 16762  0C88  00C5               	movwf	69	;volatile
 16763                           
 16764                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x14;
 16765  0C89  3014               	movlw	20
 16766  0C8A  017E               	movlb	62	; select bank62
 16767  0C8B  00A1               	movwf	33	;volatile
 16768                           
 16769                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0F;
 16770  0C8C  300F               	movlw	15
 16771  0C8D  00A4               	movwf	36	;volatile
 16772                           
 16773                           ;mcc_generated_files/pin_manager.c: 110:     SSP1DATPPS = 0x11;
 16774  0C8E  3011               	movlw	17
 16775  0C8F  017D               	movlb	61	; select bank61
 16776  0C90  00C6               	movwf	70	;volatile
 16777                           
 16778                           ;mcc_generated_files/pin_manager.c: 111:     RX1DTPPS = 0x15;
 16779  0C91  3015               	movlw	21
 16780  0C92  00CB               	movwf	75	;volatile
 16781  0C93  0008               	return
 16782  0C94                     __end_of_PIN_MANAGER_Initialize:
 16783                           
 16784                           	psect	text94
 16785  0982                     __ptext94:	
 16786 ;; *************** function _OSCILLATOR_Initialize *****************
 16787 ;; Defined at:
 16788 ;;		line 64 in file "mcc_generated_files/mcc.c"
 16789 ;; Parameters:    Size  Location     Type
 16790 ;;		None
 16791 ;; Auto vars:     Size  Location     Type
 16792 ;;		None
 16793 ;; Return value:  Size  Location     Type
 16794 ;;                  1    wreg      void 
 16795 ;; Registers used:
 16796 ;;		wreg, status,2
 16797 ;; Tracked objects:
 16798 ;;		On entry : B3F/3D
 16799 ;;		On exit  : B3F/11
 16800 ;;		Unchanged: B00/0
 16801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16806 ;;Total ram usage:        0 bytes
 16807 ;; Hardware stack levels used: 1
 16808 ;; Hardware stack levels required when called: 4
 16809 ;; This function calls:
 16810 ;;		Nothing
 16811 ;; This function is called by:
 16812 ;;		_SYSTEM_Initialize
 16813 ;; This function uses a non-reentrant model
 16814 ;;
 16815                           
 16816  0982                     _OSCILLATOR_Initialize:	
 16817                           ;psect for function _OSCILLATOR_Initialize
 16818                           
 16819                           
 16820                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x60;
 16821                           
 16822                           ;incstack = 0
 16823                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16824  0982  3060               	movlw	96
 16825  0983  0151               	movlb	17	; select bank17
 16826  0984  008D               	movwf	13	;volatile
 16827                           
 16828                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 16829  0985  018F               	clrf	15	;volatile
 16830                           
 16831                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 16832  0986  0191               	clrf	17	;volatile
 16833                           
 16834                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x00;
 16835  0987  0193               	clrf	19	;volatile
 16836                           
 16837                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 16838  0988  0192               	clrf	18	;volatile
 16839                           
 16840                           ;mcc_generated_files/mcc.c: 77:     CPUDOZE = 0x80;
 16841  0989  3080               	movlw	128
 16842  098A  008C               	movwf	12	;volatile
 16843  098B  0008               	return
 16844  098C                     __end_of_OSCILLATOR_Initialize:
 16845                           
 16846                           	psect	text95
 16847  0978                     __ptext95:	
 16848 ;; *************** function _I2C1_Initialize *****************
 16849 ;; Defined at:
 16850 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 16851 ;; Parameters:    Size  Location     Type
 16852 ;;		None
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;		None
 16855 ;; Return value:  Size  Location     Type
 16856 ;;                  1    wreg      void 
 16857 ;; Registers used:
 16858 ;;		wreg, status,2
 16859 ;; Tracked objects:
 16860 ;;		On entry : B3F/F
 16861 ;;		On exit  : B3F/3
 16862 ;;		Unchanged: B00/0
 16863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16868 ;;Total ram usage:        0 bytes
 16869 ;; Hardware stack levels used: 1
 16870 ;; Hardware stack levels required when called: 4
 16871 ;; This function calls:
 16872 ;;		Nothing
 16873 ;; This function is called by:
 16874 ;;		_SYSTEM_Initialize
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878  0978                     _I2C1_Initialize:	
 16879                           ;psect for function _I2C1_Initialize
 16880                           
 16881                           
 16882                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 16883                           
 16884                           ;incstack = 0
 16885                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16886  0978  3080               	movlw	128
 16887  0979  0143               	movlb	3	; select bank3
 16888  097A  008F               	movwf	15	;volatile
 16889                           
 16890                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x28;
 16891  097B  3028               	movlw	40
 16892  097C  0090               	movwf	16	;volatile
 16893                           
 16894                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16895  097D  0191               	clrf	17	;volatile
 16896                           
 16897                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x04;
 16898  097E  3004               	movlw	4
 16899  097F  008D               	movwf	13	;volatile
 16900                           
 16901                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16902  0980  1290               	bcf	16,5	;volatile
 16903  0981  0008               	return
 16904  0982                     __end_of_I2C1_Initialize:
 16905                           
 16906                           	psect	text96
 16907  0D6E                     __ptext96:	
 16908 ;; *************** function _EUSART1_Initialize *****************
 16909 ;; Defined at:
 16910 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 16911 ;; Parameters:    Size  Location     Type
 16912 ;;		None
 16913 ;; Auto vars:     Size  Location     Type
 16914 ;;		None
 16915 ;; Return value:  Size  Location     Type
 16916 ;;                  1    wreg      void 
 16917 ;; Registers used:
 16918 ;;		wreg, status,2, status,0, pclath, cstack
 16919 ;; Tracked objects:
 16920 ;;		On entry : 3F/B
 16921 ;;		On exit  : 3F/E
 16922 ;;		Unchanged: 0/0
 16923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16928 ;;Total ram usage:        0 bytes
 16929 ;; Hardware stack levels used: 1
 16930 ;; Hardware stack levels required when called: 5
 16931 ;; This function calls:
 16932 ;;		_EUSART1_SetErrorHandler
 16933 ;;		_EUSART1_SetFramingErrorHandler
 16934 ;;		_EUSART1_SetOverrunErrorHandler
 16935 ;;		_EUSART1_SetRxInterruptHandler
 16936 ;; This function is called by:
 16937 ;;		_SYSTEM_Initialize
 16938 ;; This function uses a non-reentrant model
 16939 ;;
 16940                           
 16941  0D6E                     _EUSART1_Initialize:	
 16942                           ;psect for function _EUSART1_Initialize
 16943                           
 16944                           
 16945                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 16946                           
 16947                           ;incstack = 0
 16948                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16949  0D6E  014E               	movlb	14	; select bank14
 16950  0D6F  1299               	bcf	25,5	;volatile
 16951                           
 16952                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 16953  0D70  3045               	movlw	low _EUSART1_Receive_ISR
 16954  0D71  00F4               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16955  0D72  300C               	movlw	high _EUSART1_Receive_ISR
 16956  0D73  00F5               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16957  0D74  3189  2133  318D   	fcall	_EUSART1_SetRxInterruptHandler
 16958                           
 16959                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x0A;
 16960  0D77  300A               	movlw	10
 16961  0D78  0142               	movlb	2	; select bank2
 16962  0D79  009F               	movwf	31	;volatile
 16963                           
 16964                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 16965  0D7A  3090               	movlw	144
 16966  0D7B  009D               	movwf	29	;volatile
 16967                           
 16968                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x24;
 16969  0D7C  3024               	movlw	36
 16970  0D7D  009E               	movwf	30	;volatile
 16971                           
 16972                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x19;
 16973  0D7E  3019               	movlw	25
 16974  0D7F  009B               	movwf	27	;volatile
 16975                           
 16976                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 16977  0D80  019C               	clrf	28	;volatile
 16978                           
 16979                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 16980  0D81  3000               	movlw	0
 16981  0D82  00F4               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 16982  0D83  3000               	movlw	0
 16983  0D84  00F5               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 16984  0D85  3189  212D  318D   	fcall	_EUSART1_SetFramingErrorHandler
 16985                           
 16986                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 16987  0D88  30D0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 16988  0D89  00F4               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 16989  0D8A  3008               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 16990  0D8B  00F5               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 16991  0D8C  3189  210D  318D   	fcall	_EUSART1_SetOverrunErrorHandler
 16992                           
 16993                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 16994  0D8F  30A9               	movlw	low _EUSART1_DefaultErrorHandler
 16995  0D90  00F4               	movwf	EUSART1_SetErrorHandler@interruptHandler
 16996  0D91  3008               	movlw	high _EUSART1_DefaultErrorHandler
 16997  0D92  00F5               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 16998  0D93  3189  2108         	fcall	_EUSART1_SetErrorHandler
 16999                           
 17000                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 17001  0D95  0140               	movlb	0	; select bank0
 17002  0D96  01EA               	clrf	_eusart1RxLastError	;volatile
 17003                           
 17004                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 17005  0D97  01F9               	clrf	_eusart1RxHead	;volatile
 17006                           
 17007                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 17008  0D98  01F8               	clrf	_eusart1RxTail	;volatile
 17009                           
 17010                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 17011  0D99  01EC               	clrf	_eusart1RxCount	;volatile
 17012                           
 17013                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 17014  0D9A  014E               	movlb	14	; select bank14
 17015  0D9B  1699               	bsf	25,5	;volatile
 17016  0D9C  0008               	return
 17017  0D9D                     __end_of_EUSART1_Initialize:
 17018                           
 17019                           	psect	text97
 17020  0933                     __ptext97:	
 17021 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17022 ;; Defined at:
 17023 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 17024 ;; Parameters:    Size  Location     Type
 17025 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 17026 ;;		 -> EUSART1_Receive_ISR(1), 
 17027 ;; Auto vars:     Size  Location     Type
 17028 ;;		None
 17029 ;; Return value:  Size  Location     Type
 17030 ;;                  1    wreg      void 
 17031 ;; Registers used:
 17032 ;;		wreg
 17033 ;; Tracked objects:
 17034 ;;		On entry : 3F/E
 17035 ;;		On exit  : 3F/0
 17036 ;;		Unchanged: 0/0
 17037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;Total ram usage:        2 bytes
 17043 ;; Hardware stack levels used: 1
 17044 ;; Hardware stack levels required when called: 4
 17045 ;; This function calls:
 17046 ;;		Nothing
 17047 ;; This function is called by:
 17048 ;;		_EUSART1_Initialize
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052  0933                     _EUSART1_SetRxInterruptHandler:	
 17053                           ;psect for function _EUSART1_SetRxInterruptHandler
 17054                           
 17055                           
 17056                           ;mcc_generated_files/eusart1.c: 243:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17057                           
 17058                           ;incstack = 0
 17059                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17060  0933  0875               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17061  0934  0140               	movlb	0	; select bank0
 17062  0935  00E9               	movwf	_EUSART1_RxDefaultInterruptHandler+1
 17063  0936  0874               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17064  0937  00E8               	movwf	_EUSART1_RxDefaultInterruptHandler
 17065  0938  0008               	return
 17066  0939                     __end_of_EUSART1_SetRxInterruptHandler:
 17067                           
 17068                           	psect	text98
 17069  090D                     __ptext98:	
 17070 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17071 ;; Defined at:
 17072 ;;		line 233 in file "mcc_generated_files/eusart1.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 17075 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;		None
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  1    wreg      void 
 17080 ;; Registers used:
 17081 ;;		wreg
 17082 ;; Tracked objects:
 17083 ;;		On entry : 3F/1
 17084 ;;		On exit  : 3F/1
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;Total ram usage:        2 bytes
 17092 ;; Hardware stack levels used: 1
 17093 ;; Hardware stack levels required when called: 4
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_EUSART1_Initialize
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101  090D                     _EUSART1_SetOverrunErrorHandler:	
 17102                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17103                           
 17104                           
 17105                           ;mcc_generated_files/eusart1.c: 234:     EUSART1_OverrunErrorHandler = interruptHandler;
 17106                           
 17107                           ;incstack = 0
 17108                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 17109  090D  0875               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 17110  090E  00ED               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
 17111  090F  0874               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 17112  0910  00EC               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
 17113  0911  0008               	return
 17114  0912                     __end_of_EUSART1_SetOverrunErrorHandler:
 17115                           
 17116                           	psect	text99
 17117  092D                     __ptext99:	
 17118 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17119 ;; Defined at:
 17120 ;;		line 229 in file "mcc_generated_files/eusart1.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 17123 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;		None
 17126 ;; Return value:  Size  Location     Type
 17127 ;;                  1    wreg      void 
 17128 ;; Registers used:
 17129 ;;		wreg
 17130 ;; Tracked objects:
 17131 ;;		On entry : 3F/2
 17132 ;;		On exit  : 3F/1
 17133 ;;		Unchanged: 0/0
 17134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17139 ;;Total ram usage:        2 bytes
 17140 ;; Hardware stack levels used: 1
 17141 ;; Hardware stack levels required when called: 4
 17142 ;; This function calls:
 17143 ;;		Nothing
 17144 ;; This function is called by:
 17145 ;;		_EUSART1_Initialize
 17146 ;; This function uses a non-reentrant model
 17147 ;;
 17148                           
 17149  092D                     _EUSART1_SetFramingErrorHandler:	
 17150                           ;psect for function _EUSART1_SetFramingErrorHandler
 17151                           
 17152                           
 17153                           ;mcc_generated_files/eusart1.c: 230:     EUSART1_FramingErrorHandler = interruptHandler;
 17154                           
 17155                           ;incstack = 0
 17156                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 17157  092D  0875               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 17158  092E  0141               	movlb	1	; select bank1
 17159  092F  00EF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
 17160  0930  0874               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 17161  0931  00EE               	movwf	_EUSART1_FramingErrorHandler^(0+128)
 17162  0932  0008               	return
 17163  0933                     __end_of_EUSART1_SetFramingErrorHandler:
 17164                           
 17165                           	psect	text100
 17166  0908                     __ptext100:	
 17167 ;; *************** function _EUSART1_SetErrorHandler *****************
 17168 ;; Defined at:
 17169 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 17170 ;; Parameters:    Size  Location     Type
 17171 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
 17172 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17173 ;; Auto vars:     Size  Location     Type
 17174 ;;		None
 17175 ;; Return value:  Size  Location     Type
 17176 ;;                  1    wreg      void 
 17177 ;; Registers used:
 17178 ;;		wreg
 17179 ;; Tracked objects:
 17180 ;;		On entry : 3F/1
 17181 ;;		On exit  : 3F/1
 17182 ;;		Unchanged: 0/0
 17183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17188 ;;Total ram usage:        2 bytes
 17189 ;; Hardware stack levels used: 1
 17190 ;; Hardware stack levels required when called: 4
 17191 ;; This function calls:
 17192 ;;		Nothing
 17193 ;; This function is called by:
 17194 ;;		_EUSART1_Initialize
 17195 ;; This function uses a non-reentrant model
 17196 ;;
 17197                           
 17198  0908                     _EUSART1_SetErrorHandler:	
 17199                           ;psect for function _EUSART1_SetErrorHandler
 17200                           
 17201                           
 17202                           ;mcc_generated_files/eusart1.c: 238:     EUSART1_ErrorHandler = interruptHandler;
 17203                           
 17204                           ;incstack = 0
 17205                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 17206  0908  0875               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 17207  0909  00EB               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
 17208  090A  0874               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 17209  090B  00EA               	movwf	_EUSART1_ErrorHandler^(0+128)
 17210  090C  0008               	return
 17211  090D                     __end_of_EUSART1_SetErrorHandler:
 17212                           
 17213                           	psect	text101
 17214  0927                     __ptext101:	
 17215 ;; *************** function _DAC1_Initialize *****************
 17216 ;; Defined at:
 17217 ;;		line 58 in file "mcc_generated_files/dac1.c"
 17218 ;; Parameters:    Size  Location     Type
 17219 ;;		None
 17220 ;; Auto vars:     Size  Location     Type
 17221 ;;		None
 17222 ;; Return value:  Size  Location     Type
 17223 ;;                  1    wreg      void 
 17224 ;; Registers used:
 17225 ;;		wreg
 17226 ;; Tracked objects:
 17227 ;;		On entry : B3F/5
 17228 ;;		On exit  : B3F/12
 17229 ;;		Unchanged: B00/0
 17230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17235 ;;Total ram usage:        0 bytes
 17236 ;; Hardware stack levels used: 1
 17237 ;; Hardware stack levels required when called: 4
 17238 ;; This function calls:
 17239 ;;		Nothing
 17240 ;; This function is called by:
 17241 ;;		_SYSTEM_Initialize
 17242 ;; This function uses a non-reentrant model
 17243 ;;
 17244                           
 17245  0927                     _DAC1_Initialize:	
 17246                           ;psect for function _DAC1_Initialize
 17247                           
 17248                           
 17249                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0x80;
 17250                           
 17251                           ;incstack = 0
 17252                           ; Regs used in _DAC1_Initialize: [wreg]
 17253  0927  3080               	movlw	128
 17254  0928  0152               	movlb	18	; select bank18
 17255  0929  008E               	movwf	14	;volatile
 17256                           
 17257                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x18;
 17258  092A  3018               	movlw	24
 17259  092B  008F               	movwf	15	;volatile
 17260  092C  0008               	return
 17261  092D                     __end_of_DAC1_Initialize:
 17262                           
 17263                           	psect	text102
 17264  09F5                     __ptext102:	
 17265 ;; *************** function _CMP1_Initialize *****************
 17266 ;; Defined at:
 17267 ;;		line 61 in file "mcc_generated_files/cmp1.c"
 17268 ;; Parameters:    Size  Location     Type
 17269 ;;		None
 17270 ;; Auto vars:     Size  Location     Type
 17271 ;;		None
 17272 ;; Return value:  Size  Location     Type
 17273 ;;                  1    wreg      void 
 17274 ;; Registers used:
 17275 ;;		wreg
 17276 ;; Tracked objects:
 17277 ;;		On entry : B3F/11
 17278 ;;		On exit  : B3F/E
 17279 ;;		Unchanged: B00/0
 17280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17285 ;;Total ram usage:        0 bytes
 17286 ;; Hardware stack levels used: 1
 17287 ;; Hardware stack levels required when called: 4
 17288 ;; This function calls:
 17289 ;;		Nothing
 17290 ;; This function is called by:
 17291 ;;		_SYSTEM_Initialize
 17292 ;; This function uses a non-reentrant model
 17293 ;;
 17294                           
 17295  09F5                     _CMP1_Initialize:	
 17296                           ;psect for function _CMP1_Initialize
 17297                           
 17298                           
 17299                           ;mcc_generated_files/cmp1.c: 68:     PIE2bits.C1IE = 0;
 17300                           
 17301                           ;incstack = 0
 17302                           ; Regs used in _CMP1_Initialize: [wreg]
 17303  09F5  014E               	movlb	14	; select bank14
 17304  09F6  1018               	bcf	24,0	;volatile
 17305                           
 17306                           ;mcc_generated_files/cmp1.c: 71:     CM1CON0 = 0x80;
 17307  09F7  3080               	movlw	128
 17308  09F8  0153               	movlb	19	; select bank19
 17309  09F9  0090               	movwf	16	;volatile
 17310                           
 17311                           ;mcc_generated_files/cmp1.c: 74:     CM1CON1 = 0x03;
 17312  09FA  3003               	movlw	3
 17313  09FB  0091               	movwf	17	;volatile
 17314                           
 17315                           ;mcc_generated_files/cmp1.c: 77:     CM1NCH = 0x02;
 17316  09FC  3002               	movlw	2
 17317  09FD  0092               	movwf	18	;volatile
 17318                           
 17319                           ;mcc_generated_files/cmp1.c: 80:     CM1PCH = 0x05;
 17320  09FE  3005               	movlw	5
 17321  09FF  0093               	movwf	19	;volatile
 17322                           
 17323                           ;mcc_generated_files/cmp1.c: 83:     PIR2bits.C1IF = 0;
 17324  0A00  014E               	movlb	14	; select bank14
 17325  0A01  100E               	bcf	14,0	;volatile
 17326                           
 17327                           ;mcc_generated_files/cmp1.c: 86:     PIE2bits.C1IE = 1;
 17328  0A02  1418               	bsf	24,0	;volatile
 17329  0A03  0008               	return
 17330  0A04                     __end_of_CMP1_Initialize:
 17331                           
 17332                           	psect	intentry
 17333  0004                     __pintentry:	
 17334 ;; *************** function _INTERRUPT_InterruptManager *****************
 17335 ;; Defined at:
 17336 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;		None
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;		None
 17341 ;; Return value:  Size  Location     Type
 17342 ;;                  1    wreg      void 
 17343 ;; Registers used:
 17344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17345 ;; Tracked objects:
 17346 ;;		On entry : 0/0
 17347 ;;		On exit  : 0/0
 17348 ;;		Unchanged: 0/0
 17349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17354 ;;Total ram usage:        0 bytes
 17355 ;; Hardware stack levels used: 1
 17356 ;; Hardware stack levels required when called: 3
 17357 ;; This function calls:
 17358 ;;		Absolute function
 17359 ;;		_CMP1_ISR
 17360 ;;		_EUSART1_Receive_ISR
 17361 ;;		_TMR0_ISR
 17362 ;;		_TMR2_ISR
 17363 ;;		_TMR4_ISR
 17364 ;; This function is called by:
 17365 ;;		Interrupt level 1
 17366 ;; This function uses a non-reentrant model
 17367 ;;
 17368                           
 17369  0004                     _INTERRUPT_InterruptManager:
 17370                           
 17371                           ;incstack = 0
 17372  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17373                           
 17374                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17375  0005  3180               	pagesel	$
 17376                           
 17377                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17378  0006  014E               	movlb	14	; select bank14
 17379  0007  1A96               	btfsc	22,5	;volatile
 17380  0008  1E8C               	btfss	12,5	;volatile
 17381  0009  280E               	goto	i1l711
 17382                           
 17383                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17384  000A  318A  2223  3180   	fcall	_TMR0_ISR
 17385                           
 17386                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17387  000D  282E               	goto	i1l723
 17388  000E                     i1l711:	
 17389                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17390                           
 17391  000E  1F0B               	btfss	11,6	;volatile
 17392  000F  282E               	goto	i1l723
 17393                           
 17394                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 17395  0010  1818               	btfsc	24,0	;volatile
 17396  0011  1C0E               	btfss	14,0	;volatile
 17397  0012  2817               	goto	i1l714
 17398                           
 17399                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CMP1_ISR();
 17400  0013  3189  21E7  3180   	fcall	_CMP1_ISR
 17401                           
 17402                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17403  0016  282E               	goto	i1l723
 17404  0017                     i1l714:	
 17405                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR4IE == 1 && PI
      +                          R4bits.TMR4IF == 1)
 17406                           
 17407  0017  199A               	btfsc	26,3	;volatile
 17408  0018  1D90               	btfss	16,3	;volatile
 17409  0019  281E               	goto	i1l716
 17410                           
 17411                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
 17412  001A  3189  21B7  3180   	fcall	_TMR4_ISR
 17413                           
 17414                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17415  001D  282E               	goto	i1l723
 17416  001E                     i1l716:	
 17417                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 17418                           
 17419  001E  189A               	btfsc	26,1	;volatile
 17420  001F  1C90               	btfss	16,1	;volatile
 17421  0020  2825               	goto	i1l718
 17422                           
 17423                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR2_ISR();
 17424  0021  3189  21AB  3180   	fcall	_TMR2_ISR
 17425                           
 17426                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17427  0024  282E               	goto	i1l723
 17428  0025                     i1l718:	
 17429                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17430                           
 17431  0025  1A99               	btfsc	25,5	;volatile
 17432  0026  1E8F               	btfss	15,5	;volatile
 17433  0027  282E               	goto	i1l723
 17434                           
 17435                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 17436  0028  0140               	movlb	0	; select bank0
 17437  0029  0869               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
 17438  002A  008A               	movwf	10
 17439  002B  0868               	movf	_EUSART1_RxDefaultInterruptHandler,w
 17440  002C  000A               	callw
 17441  002D  3180               	pagesel	$
 17442  002E                     i1l723:	
 17443                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17444                           
 17445  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17446  002F  0009               	retfie
 17447  0030                     __end_of_INTERRUPT_InterruptManager:
 17448                           
 17449                           	psect	text104
 17450  09B7                     __ptext104:	
 17451 ;; *************** function _TMR4_ISR *****************
 17452 ;; Defined at:
 17453 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 17454 ;; Parameters:    Size  Location     Type
 17455 ;;		None
 17456 ;; Auto vars:     Size  Location     Type
 17457 ;;		None
 17458 ;; Return value:  Size  Location     Type
 17459 ;;                  1    wreg      void 
 17460 ;; Registers used:
 17461 ;;		wreg, status,2, status,0, pclath, cstack
 17462 ;; Tracked objects:
 17463 ;;		On entry : 3F/E
 17464 ;;		On exit  : 0/0
 17465 ;;		Unchanged: 0/0
 17466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17471 ;;Total ram usage:        0 bytes
 17472 ;; Hardware stack levels used: 1
 17473 ;; Hardware stack levels required when called: 1
 17474 ;; This function calls:
 17475 ;;		Absolute function
 17476 ;;		_TMR4_DefaultInterruptHandler
 17477 ;; This function is called by:
 17478 ;;		_INTERRUPT_InterruptManager
 17479 ;; This function uses a non-reentrant model
 17480 ;;
 17481                           
 17482  09B7                     _TMR4_ISR:	
 17483                           ;psect for function _TMR4_ISR
 17484                           
 17485                           
 17486                           ;mcc_generated_files/tmr4.c: 170:     PIR4bits.TMR4IF = 0;
 17487                           
 17488                           ;incstack = 0
 17489                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 17490  09B7  1190               	bcf	16,3	;volatile
 17491                           
 17492                           ;mcc_generated_files/tmr4.c: 172:     if(TMR4_InterruptHandler)
 17493  09B8  0140               	movlb	0	; select bank0
 17494  09B9  0864               	movf	_TMR4_InterruptHandler,w
 17495  09BA  0465               	iorwf	_TMR4_InterruptHandler+1,w
 17496  09BB  1903               	btfsc	3,2
 17497  09BC  0008               	return
 17498                           
 17499                           ;mcc_generated_files/tmr4.c: 173:     {;mcc_generated_files/tmr4.c: 174:         TMR4_In
      +                          terruptHandler();
 17500  09BD  0865               	movf	_TMR4_InterruptHandler+1,w
 17501  09BE  008A               	movwf	10
 17502  09BF  0864               	movf	_TMR4_InterruptHandler,w
 17503  09C0  000A               	callw
 17504  09C1  3189               	pagesel	$
 17505  09C2  0008               	return
 17506  09C3                     __end_of_TMR4_ISR:
 17507                           
 17508                           	psect	text105
 17509  089D                     __ptext105:	
 17510 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 17511 ;; Defined at:
 17512 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 17513 ;; Parameters:    Size  Location     Type
 17514 ;;		None
 17515 ;; Auto vars:     Size  Location     Type
 17516 ;;		None
 17517 ;; Return value:  Size  Location     Type
 17518 ;;                  1    wreg      void 
 17519 ;; Registers used:
 17520 ;;		None
 17521 ;; Tracked objects:
 17522 ;;		On entry : 3F/0
 17523 ;;		On exit  : 3F/0
 17524 ;;		Unchanged: 0/0
 17525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17530 ;;Total ram usage:        0 bytes
 17531 ;; Hardware stack levels used: 1
 17532 ;; This function calls:
 17533 ;;		Nothing
 17534 ;; This function is called by:
 17535 ;;		_TMR4_Initialize
 17536 ;;		_TMR4_ISR
 17537 ;; This function uses a non-reentrant model
 17538 ;;
 17539                           
 17540  089D                     _TMR4_DefaultInterruptHandler:	
 17541                           ;psect for function _TMR4_DefaultInterruptHandler
 17542                           
 17543                           
 17544                           ;incstack = 0
 17545                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 17546                           ;mcc_generated_files/tmr4.c: 186:     do { LATAbits.LATA5 = 1; } while(0);
 17547  089D  1698               	bsf	24,5	;volatile
 17548  089E  0008               	return
 17549  089F                     __end_of_TMR4_DefaultInterruptHandler:
 17550                           
 17551                           	psect	text106
 17552  09AB                     __ptext106:	
 17553 ;; *************** function _TMR2_ISR *****************
 17554 ;; Defined at:
 17555 ;;		line 166 in file "mcc_generated_files/tmr2.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;		None
 17558 ;; Auto vars:     Size  Location     Type
 17559 ;;		None
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      void 
 17562 ;; Registers used:
 17563 ;;		wreg, status,2, status,0, pclath, cstack
 17564 ;; Tracked objects:
 17565 ;;		On entry : 3F/E
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17573 ;;Total ram usage:        0 bytes
 17574 ;; Hardware stack levels used: 1
 17575 ;; Hardware stack levels required when called: 1
 17576 ;; This function calls:
 17577 ;;		Absolute function
 17578 ;;		_TMR2_DefaultInterruptHandler
 17579 ;; This function is called by:
 17580 ;;		_INTERRUPT_InterruptManager
 17581 ;; This function uses a non-reentrant model
 17582 ;;
 17583                           
 17584  09AB                     _TMR2_ISR:	
 17585                           ;psect for function _TMR2_ISR
 17586                           
 17587                           
 17588                           ;mcc_generated_files/tmr2.c: 170:     PIR4bits.TMR2IF = 0;
 17589                           
 17590                           ;incstack = 0
 17591                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 17592  09AB  1090               	bcf	16,1	;volatile
 17593                           
 17594                           ;mcc_generated_files/tmr2.c: 172:     if(TMR2_InterruptHandler)
 17595  09AC  0140               	movlb	0	; select bank0
 17596  09AD  0866               	movf	_TMR2_InterruptHandler,w
 17597  09AE  0467               	iorwf	_TMR2_InterruptHandler+1,w
 17598  09AF  1903               	btfsc	3,2
 17599  09B0  0008               	return
 17600                           
 17601                           ;mcc_generated_files/tmr2.c: 173:     {;mcc_generated_files/tmr2.c: 174:         TMR2_In
      +                          terruptHandler();
 17602  09B1  0867               	movf	_TMR2_InterruptHandler+1,w
 17603  09B2  008A               	movwf	10
 17604  09B3  0866               	movf	_TMR2_InterruptHandler,w
 17605  09B4  000A               	callw
 17606  09B5  3189               	pagesel	$
 17607  09B6  0008               	return
 17608  09B7                     __end_of_TMR2_ISR:
 17609                           
 17610                           	psect	text107
 17611  089B                     __ptext107:	
 17612 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 17613 ;; Defined at:
 17614 ;;		line 183 in file "mcc_generated_files/tmr2.c"
 17615 ;; Parameters:    Size  Location     Type
 17616 ;;		None
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;		None
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  1    wreg      void 
 17621 ;; Registers used:
 17622 ;;		None
 17623 ;; Tracked objects:
 17624 ;;		On entry : 3F/0
 17625 ;;		On exit  : 3F/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17632 ;;Total ram usage:        0 bytes
 17633 ;; Hardware stack levels used: 1
 17634 ;; This function calls:
 17635 ;;		Nothing
 17636 ;; This function is called by:
 17637 ;;		_TMR2_Initialize
 17638 ;;		_TMR2_ISR
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642  089B                     _TMR2_DefaultInterruptHandler:	
 17643                           ;psect for function _TMR2_DefaultInterruptHandler
 17644                           
 17645                           
 17646                           ;incstack = 0
 17647                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 17648                           ;mcc_generated_files/tmr2.c: 186:     do { LATAbits.LATA5 = 0; } while(0);
 17649  089B  1298               	bcf	24,5	;volatile
 17650  089C  0008               	return
 17651  089D                     __end_of_TMR2_DefaultInterruptHandler:
 17652                           
 17653                           	psect	text108
 17654  0A23                     __ptext108:	
 17655 ;; *************** function _TMR0_ISR *****************
 17656 ;; Defined at:
 17657 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 17658 ;; Parameters:    Size  Location     Type
 17659 ;;		None
 17660 ;; Auto vars:     Size  Location     Type
 17661 ;;		None
 17662 ;; Return value:  Size  Location     Type
 17663 ;;                  1    wreg      void 
 17664 ;; Registers used:
 17665 ;;		wreg, status,2, status,0, pclath, cstack
 17666 ;; Tracked objects:
 17667 ;;		On entry : 3F/E
 17668 ;;		On exit  : 0/0
 17669 ;;		Unchanged: 0/0
 17670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17675 ;;Total ram usage:        0 bytes
 17676 ;; Hardware stack levels used: 1
 17677 ;; Hardware stack levels required when called: 1
 17678 ;; This function calls:
 17679 ;;		Absolute function
 17680 ;;		_TMR0_DefaultInterruptHandler
 17681 ;; This function is called by:
 17682 ;;		_INTERRUPT_InterruptManager
 17683 ;; This function uses a non-reentrant model
 17684 ;;
 17685                           
 17686  0A23                     _TMR0_ISR:	
 17687                           ;psect for function _TMR0_ISR
 17688                           
 17689                           
 17690                           ;mcc_generated_files/tmr0.c: 137:    PIR0bits.TMR0IF = 0;
 17691                           
 17692                           ;incstack = 0
 17693                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17694  0A23  128C               	bcf	12,5	;volatile
 17695                           
 17696                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
 17697  0A24  0877               	movf	_timer0ReloadVal16bit+1,w	;volatile
 17698  0A25  014B               	movlb	11	; select bank11
 17699  0A26  009D               	movwf	29	;volatile
 17700                           
 17701                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 17702  0A27  0876               	movf	_timer0ReloadVal16bit,w	;volatile
 17703  0A28  009C               	movwf	28	;volatile
 17704                           
 17705                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
 17706  0A29  0140               	movlb	0	; select bank0
 17707  0A2A  0862               	movf	_TMR0_InterruptHandler,w
 17708  0A2B  0463               	iorwf	_TMR0_InterruptHandler+1,w
 17709  0A2C  1903               	btfsc	3,2
 17710  0A2D  0008               	return
 17711                           
 17712                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
 17713  0A2E  0863               	movf	_TMR0_InterruptHandler+1,w
 17714  0A2F  008A               	movwf	10
 17715  0A30  0862               	movf	_TMR0_InterruptHandler,w
 17716  0A31  000A               	callw
 17717  0A32  318A               	pagesel	$
 17718  0A33  0008               	return
 17719  0A34                     __end_of_TMR0_ISR:
 17720                           
 17721                           	psect	text109
 17722  08AC                     __ptext109:	
 17723 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17724 ;; Defined at:
 17725 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;		None
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;		None
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  1    wreg      void 
 17732 ;; Registers used:
 17733 ;;		None
 17734 ;; Tracked objects:
 17735 ;;		On entry : 3F/0
 17736 ;;		On exit  : 3F/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17743 ;;Total ram usage:        0 bytes
 17744 ;; Hardware stack levels used: 1
 17745 ;; This function calls:
 17746 ;;		Nothing
 17747 ;; This function is called by:
 17748 ;;		_TMR0_Initialize
 17749 ;;		_TMR0_ISR
 17750 ;; This function uses a non-reentrant model
 17751 ;;
 17752                           
 17753  08AC                     _TMR0_DefaultInterruptHandler:	
 17754                           ;psect for function _TMR0_DefaultInterruptHandler
 17755                           
 17756                           
 17757                           ;mcc_generated_files/tmr0.c: 158:     measureTime = 1;
 17758                           
 17759                           ;incstack = 0
 17760                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17761  08AC  01E1               	clrf	_measureTime
 17762  08AD  0AE1               	incf	_measureTime,f
 17763  08AE  0008               	return
 17764  08AF                     __end_of_TMR0_DefaultInterruptHandler:
 17765                           
 17766                           	psect	text110
 17767  0C45                     __ptext110:	
 17768 ;; *************** function _EUSART1_Receive_ISR *****************
 17769 ;; Defined at:
 17770 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;		None
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;		None
 17775 ;; Return value:  Size  Location     Type
 17776 ;;                  1    wreg      void 
 17777 ;; Registers used:
 17778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17779 ;; Tracked objects:
 17780 ;;		On entry : 3F/0
 17781 ;;		On exit  : 0/0
 17782 ;;		Unchanged: 0/0
 17783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17788 ;;Total ram usage:        0 bytes
 17789 ;; Hardware stack levels used: 1
 17790 ;; Hardware stack levels required when called: 2
 17791 ;; This function calls:
 17792 ;;		Absolute function
 17793 ;;		_EUSART1_DefaultErrorHandler
 17794 ;;		_EUSART1_DefaultOverrunErrorHandler
 17795 ;;		_EUSART1_RxDataHandler
 17796 ;; This function is called by:
 17797 ;;		_EUSART1_Initialize
 17798 ;;		_INTERRUPT_InterruptManager
 17799 ;; This function uses a non-reentrant model
 17800 ;;
 17801                           
 17802  0C45                     _EUSART1_Receive_ISR:	
 17803                           ;psect for function _EUSART1_Receive_ISR
 17804                           
 17805                           
 17806                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 17807                           
 17808                           ;incstack = 0
 17809                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17810  0C45  0879               	movf	_eusart1RxHead,w	;volatile
 17811  0C46  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+768)))& (0+255)
 17812  0C47  0086               	movwf	6
 17813  0C48  3003               	movlw	3	; select bank6/7
 17814  0C49  0087               	movwf	7
 17815  0C4A  0181               	clrf	1
 17816                           
 17817                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 17818  0C4B  0142               	movlb	2	; select bank2
 17819  0C4C  1C9D               	btfss	29,1	;volatile
 17820  0C4D  2C5A               	goto	i1l4231
 17821                           
 17822                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 17823  0C4E  0879               	movf	_eusart1RxHead,w	;volatile
 17824  0C4F  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+768)))& (0+255)
 17825  0C50  0086               	movwf	6
 17826  0C51  3003               	movlw	3	; select bank6/7
 17827  0C52  0087               	movwf	7
 17828  0C53  1501               	bsf	1,2
 17829                           
 17830                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 17831  0C54  0141               	movlb	1	; select bank1
 17832  0C55  086D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 17833  0C56  008A               	movwf	10
 17834  0C57  086C               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 17835  0C58  000A               	callw
 17836  0C59  318C               	pagesel	$
 17837  0C5A                     i1l4231:
 17838                           
 17839                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 17840  0C5A  0879               	movf	_eusart1RxHead,w	;volatile
 17841  0C5B  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+768)))& (0+255)
 17842  0C5C  0086               	movwf	6
 17843  0C5D  3003               	movlw	3	; select bank6/7
 17844  0C5E  0087               	movwf	7
 17845  0C5F  0801               	movf	1,w
 17846  0C60  1903               	btfsc	3,2
 17847  0C61  2C69               	goto	i1l4235
 17848                           
 17849                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 17850  0C62  0141               	movlb	1	; select bank1
 17851  0C63  086B               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 17852  0C64  008A               	movwf	10
 17853  0C65  086A               	movf	_EUSART1_ErrorHandler^(0+128),w
 17854  0C66  000A               	callw
 17855  0C67  318C               	pagesel	$
 17856                           
 17857                           ;mcc_generated_files/eusart1.c: 188:     } else {
 17858  0C68  0008               	return
 17859  0C69                     i1l4235:
 17860                           
 17861                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 17862  0C69  318E  2630         	fcall	_EUSART1_RxDataHandler
 17863  0C6B  0008               	return
 17864  0C6C                     __end_of_EUSART1_Receive_ISR:
 17865                           
 17866                           	psect	text111
 17867  08D0                     __ptext111:	
 17868 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 17869 ;; Defined at:
 17870 ;;		line 217 in file "mcc_generated_files/eusart1.c"
 17871 ;; Parameters:    Size  Location     Type
 17872 ;;		None
 17873 ;; Auto vars:     Size  Location     Type
 17874 ;;		None
 17875 ;; Return value:  Size  Location     Type
 17876 ;;                  1    wreg      void 
 17877 ;; Registers used:
 17878 ;;		None
 17879 ;; Tracked objects:
 17880 ;;		On entry : 3F/1
 17881 ;;		On exit  : 3F/2
 17882 ;;		Unchanged: 0/0
 17883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17888 ;;Total ram usage:        0 bytes
 17889 ;; Hardware stack levels used: 1
 17890 ;; This function calls:
 17891 ;;		Nothing
 17892 ;; This function is called by:
 17893 ;;		_EUSART1_Initialize
 17894 ;;		_EUSART1_Receive_ISR
 17895 ;; This function uses a non-reentrant model
 17896 ;;
 17897                           
 17898  08D0                     _EUSART1_DefaultOverrunErrorHandler:	
 17899                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 17900                           
 17901                           
 17902                           ;mcc_generated_files/eusart1.c: 220:     RC1STAbits.CREN = 0;
 17903                           
 17904                           ;incstack = 0
 17905                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 17906  08D0  0142               	movlb	2	; select bank2
 17907  08D1  121D               	bcf	29,4	;volatile
 17908                           
 17909                           ;mcc_generated_files/eusart1.c: 221:     RC1STAbits.CREN = 1;
 17910  08D2  161D               	bsf	29,4	;volatile
 17911  08D3  0008               	return
 17912  08D4                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 17913                           
 17914                           	psect	text112
 17915  08A9                     __ptext112:	
 17916 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 17917 ;; Defined at:
 17918 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 17919 ;; Parameters:    Size  Location     Type
 17920 ;;		None
 17921 ;; Auto vars:     Size  Location     Type
 17922 ;;		None
 17923 ;; Return value:  Size  Location     Type
 17924 ;;                  1    wreg      void 
 17925 ;; Registers used:
 17926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17927 ;; Tracked objects:
 17928 ;;		On entry : 3F/1
 17929 ;;		On exit  : 3D/0
 17930 ;;		Unchanged: 0/0
 17931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17936 ;;Total ram usage:        0 bytes
 17937 ;; Hardware stack levels used: 1
 17938 ;; Hardware stack levels required when called: 1
 17939 ;; This function calls:
 17940 ;;		_EUSART1_RxDataHandler
 17941 ;; This function is called by:
 17942 ;;		_EUSART1_Initialize
 17943 ;;		_EUSART1_Receive_ISR
 17944 ;; This function uses a non-reentrant model
 17945 ;;
 17946                           
 17947  08A9                     _EUSART1_DefaultErrorHandler:	
 17948                           ;psect for function _EUSART1_DefaultErrorHandler
 17949                           
 17950                           
 17951                           ;mcc_generated_files/eusart1.c: 226:     EUSART1_RxDataHandler();
 17952                           
 17953                           ;incstack = 0
 17954                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17955  08A9  318E  2630         	fcall	_EUSART1_RxDataHandler
 17956  08AB  0008               	return
 17957  08AC                     __end_of_EUSART1_DefaultErrorHandler:
 17958                           
 17959                           	psect	text113
 17960  0E30                     __ptext113:	
 17961 ;; *************** function _EUSART1_RxDataHandler *****************
 17962 ;; Defined at:
 17963 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;		None
 17966 ;; Auto vars:     Size  Location     Type
 17967 ;;  t               2    2[COMMON] int 
 17968 ;; Return value:  Size  Location     Type
 17969 ;;                  1    wreg      void 
 17970 ;; Registers used:
 17971 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17972 ;; Tracked objects:
 17973 ;;		On entry : 0/2
 17974 ;;		On exit  : 3D/0
 17975 ;;		Unchanged: 0/0
 17976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17981 ;;Total ram usage:        4 bytes
 17982 ;; Hardware stack levels used: 1
 17983 ;; This function calls:
 17984 ;;		Nothing
 17985 ;; This function is called by:
 17986 ;;		_EUSART1_Receive_ISR
 17987 ;;		_EUSART1_DefaultErrorHandler
 17988 ;; This function uses a non-reentrant model
 17989 ;;
 17990                           
 17991  0E30                     _EUSART1_RxDataHandler:	
 17992                           ;psect for function _EUSART1_RxDataHandler
 17993                           
 17994                           
 17995                           ;mcc_generated_files/eusart1.c: 197:     int t;;mcc_generated_files/eusart1.c: 198:     
      +                          eusart1RxBuffer[eusart1RxHead] = RC1REG;
 17996                           
 17997                           ;incstack = 0
 17998                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17999  0E30  0142               	movlb	2	; select bank2
 18000  0E31  0819               	movf	25,w	;volatile
 18001  0E32  00F0               	movwf	??_EUSART1_RxDataHandler
 18002  0E33  0879               	movf	_eusart1RxHead,w
 18003  0E34  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 18004  0E35  0086               	movwf	6
 18005  0E36  3002               	movlw	2	; select bank5/6
 18006  0E37  0087               	movwf	7
 18007  0E38  0870               	movf	??_EUSART1_RxDataHandler,w
 18008  0E39  0081               	movwf	1
 18009                           
 18010                           ;mcc_generated_files/eusart1.c: 199:     if(eusart1RxBuffer[eusart1RxHead])
 18011  0E3A  0879               	movf	_eusart1RxHead,w
 18012  0E3B  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 18013  0E3C  0086               	movwf	6
 18014  0E3D  3002               	movlw	2	; select bank5/6
 18015  0E3E  0087               	movwf	7
 18016  0E3F  0801               	movf	1,w
 18017  0E40  1903               	btfsc	3,2
 18018  0E41  0008               	return
 18019                           
 18020                           ;mcc_generated_files/eusart1.c: 200:     {;mcc_generated_files/eusart1.c: 201:         i
      +                          f(eusart1RxBuffer[eusart1RxHead] == 0x0A)
 18021  0E42  0879               	movf	_eusart1RxHead,w
 18022  0E43  3EA0               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 18023  0E44  0086               	movwf	6
 18024  0E45  3002               	movlw	2	; select bank5/6
 18025  0E46  0087               	movwf	7
 18026  0E47  300A               	movlw	10
 18027  0E48  0601               	xorwf	1,w
 18028  0E49  1D03               	btfss	3,2
 18029  0E4A  2E50               	goto	i1l3837
 18030                           
 18031                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1PacketFinish++;
 18032  0E4B  3001               	movlw	1
 18033  0E4C  00F0               	movwf	??_EUSART1_RxDataHandler
 18034  0E4D  0870               	movf	??_EUSART1_RxDataHandler,w
 18035  0E4E  0140               	movlb	0	; select bank0
 18036  0E4F  07EB               	addwf	_eusart1PacketFinish,f	;volatile
 18037  0E50                     i1l3837:
 18038                           
 18039                           ;mcc_generated_files/eusart1.c: 205:         t=eusart1RxHead;
 18040  0E50  0879               	movf	_eusart1RxHead,w	;volatile
 18041  0E51  00F0               	movwf	??_EUSART1_RxDataHandler
 18042  0E52  01F1               	clrf	??_EUSART1_RxDataHandler+1
 18043  0E53  0870               	movf	??_EUSART1_RxDataHandler,w
 18044  0E54  00F2               	movwf	EUSART1_RxDataHandler@t
 18045  0E55  0871               	movf	??_EUSART1_RxDataHandler+1,w
 18046  0E56  00F3               	movwf	EUSART1_RxDataHandler@t+1
 18047                           
 18048                           ;mcc_generated_files/eusart1.c: 206:         eusart1RxHead = (eusart1RxHead + 1)% 64;
 18049  0E57  0879               	movf	_eusart1RxHead,w	;volatile
 18050  0E58  3E01               	addlw	1
 18051  0E59  393F               	andlw	63
 18052  0E5A  00F0               	movwf	??_EUSART1_RxDataHandler
 18053  0E5B  0870               	movf	??_EUSART1_RxDataHandler,w
 18054  0E5C  00F9               	movwf	_eusart1RxHead	;volatile
 18055                           
 18056                           ;mcc_generated_files/eusart1.c: 207:         if(eusart1RxHead == eusart1RxTail)
 18057  0E5D  0879               	movf	_eusart1RxHead,w	;volatile
 18058  0E5E  0678               	xorwf	_eusart1RxTail,w	;volatile
 18059  0E5F  1D03               	skipz
 18060  0E60  0008               	return
 18061                           
 18062                           ;mcc_generated_files/eusart1.c: 208:         {;mcc_generated_files/eusart1.c: 209:      
      +                                 eusart1RxHead = t;
 18063  0E61  0872               	movf	EUSART1_RxDataHandler@t,w
 18064  0E62  00F0               	movwf	??_EUSART1_RxDataHandler
 18065  0E63  0870               	movf	??_EUSART1_RxDataHandler,w
 18066  0E64  00F9               	movwf	_eusart1RxHead	;volatile
 18067  0E65  0008               	return
 18068  0E66                     __end_of_EUSART1_RxDataHandler:
 18069                           
 18070                           	psect	text114
 18071  09E7                     __ptext114:	
 18072 ;; *************** function _CMP1_ISR *****************
 18073 ;; Defined at:
 18074 ;;		line 94 in file "mcc_generated_files/cmp1.c"
 18075 ;; Parameters:    Size  Location     Type
 18076 ;;		None
 18077 ;; Auto vars:     Size  Location     Type
 18078 ;;		None
 18079 ;; Return value:  Size  Location     Type
 18080 ;;                  1    wreg      void 
 18081 ;; Registers used:
 18082 ;;		wreg, status,2, status,0, pclath, cstack
 18083 ;; Tracked objects:
 18084 ;;		On entry : 3F/E
 18085 ;;		On exit  : 3F/0
 18086 ;;		Unchanged: 0/0
 18087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18092 ;;Total ram usage:        0 bytes
 18093 ;; Hardware stack levels used: 1
 18094 ;; Hardware stack levels required when called: 1
 18095 ;; This function calls:
 18096 ;;		_CMP1_GetOutputStatus
 18097 ;; This function is called by:
 18098 ;;		_INTERRUPT_InterruptManager
 18099 ;; This function uses a non-reentrant model
 18100 ;;
 18101                           
 18102  09E7                     _CMP1_ISR:	
 18103                           ;psect for function _CMP1_ISR
 18104                           
 18105                           
 18106                           ;mcc_generated_files/cmp1.c: 97:     PIR2bits.C1IF = 0;
 18107                           
 18108                           ;incstack = 0
 18109                           ; Regs used in _CMP1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18110  09E7  100E               	bcf	14,0	;volatile
 18111                           
 18112                           ;mcc_generated_files/cmp1.c: 98:     if(CMP1_GetOutputStatus())
 18113  09E8  3189  2121  3189   	fcall	_CMP1_GetOutputStatus
 18114  09EB  3A00               	xorlw	0
 18115  09EC  1903               	skipnz
 18116  09ED  29F2               	goto	i1l4253
 18117                           
 18118                           ;mcc_generated_files/cmp1.c: 99:     {;mcc_generated_files/cmp1.c: 100:         status.b
      +                          eacon = 1;
 18119  09EE  0140               	movlb	0	; select bank0
 18120  09EF  01DE               	clrf	_status+4
 18121  09F0  0ADE               	incf	_status+4,f
 18122                           
 18123                           ;mcc_generated_files/cmp1.c: 101:     }else
 18124  09F1  0008               	return
 18125  09F2                     i1l4253:
 18126                           
 18127                           ;mcc_generated_files/cmp1.c: 102:     {;mcc_generated_files/cmp1.c: 103:         status.
      +                          beacon = 0;
 18128  09F2  0140               	movlb	0	; select bank0
 18129  09F3  01DE               	clrf	_status+4
 18130  09F4  0008               	return
 18131  09F5                     __end_of_CMP1_ISR:
 18132                           
 18133                           	psect	text115
 18134  0921                     __ptext115:	
 18135 ;; *************** function _CMP1_GetOutputStatus *****************
 18136 ;; Defined at:
 18137 ;;		line 89 in file "mcc_generated_files/cmp1.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;		None
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;		None
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  1    wreg      _Bool 
 18144 ;; Registers used:
 18145 ;;		wreg, status,2, status,0
 18146 ;; Tracked objects:
 18147 ;;		On entry : 3F/E
 18148 ;;		On exit  : 3F/13
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18155 ;;Total ram usage:        0 bytes
 18156 ;; Hardware stack levels used: 1
 18157 ;; This function calls:
 18158 ;;		Nothing
 18159 ;; This function is called by:
 18160 ;;		_CMP1_ISR
 18161 ;; This function uses a non-reentrant model
 18162 ;;
 18163                           
 18164  0921                     _CMP1_GetOutputStatus:	
 18165                           ;psect for function _CMP1_GetOutputStatus
 18166                           
 18167                           
 18168                           ;mcc_generated_files/cmp1.c: 91:  return (CM1CON0bits.C1OUT);
 18169                           
 18170                           ;incstack = 0
 18171                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
 18172  0921  0153               	movlb	19	; select bank19
 18173  0922  0E10               	swapf	16,w	;volatile
 18174  0923  0C89               	rrf	9,f
 18175  0924  0C89               	rrf	9,f
 18176  0925  3901               	andlw	1
 18177  0926  0008               	return
 18178  0927                     __end_of_CMP1_GetOutputStatus:
 18179  007E                     btemp	set	126	;btemp
 18180  007E                     int$flags	set	126
 18181  007E                     wtemp0	set	126
 18182                           
 18183                           	psect	idloc
 18184                           
 18185                           ;Config register IDLOC0 @ 0x8000
 18186                           ;	unspecified, using default values
 18187  8000                     	org	32768
 18188  8000  3FFF               	dw	16383
 18189                           
 18190                           ;Config register IDLOC1 @ 0x8001
 18191                           ;	unspecified, using default values
 18192  8001                     	org	32769
 18193  8001  3FFF               	dw	16383
 18194                           
 18195                           ;Config register IDLOC2 @ 0x8002
 18196                           ;	unspecified, using default values
 18197  8002                     	org	32770
 18198  8002  3FFF               	dw	16383
 18199                           
 18200                           ;Config register IDLOC3 @ 0x8003
 18201                           ;	unspecified, using default values
 18202  8003                     	org	32771
 18203  8003  3FFF               	dw	16383
 18204                           
 18205                           	psect	config
 18206                           
 18207                           ;Config register CONFIG1 @ 0x8007
 18208                           ;	External Oscillator mode selection bits
 18209                           ;	FEXTOSC = OFF, Oscillator not enabled
 18210                           ;	Power-up default value for COSC bits
 18211                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18212                           ;	Clock Out Enable bit
 18213                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18214                           ;	Clock Switch Enable bit
 18215                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18216                           ;	Fail-Safe Clock Monitor Enable bit
 18217                           ;	FCMEN = ON, FSCM timer enabled
 18218  8007                     	org	32775
 18219  8007  3FEC               	dw	16364
 18220                           
 18221                           ;Config register CONFIG2 @ 0x8008
 18222                           ;	Master Clear Enable bit
 18223                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18224                           ;	Power-up Timer Enable bit
 18225                           ;	PWRTS = OFF, PWRT disabled
 18226                           ;	Low-Power BOR enable bit
 18227                           ;	LPBOREN = OFF, ULPBOR disabled
 18228                           ;	Brown-out reset enable bits
 18229                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18230                           ;	Brown-out Reset Voltage Selection
 18231                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 18232                           ;	Zero-cross detect disable
 18233                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 18234                           ;	Peripheral Pin Select one-way control
 18235                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18236                           ;	Stack Overflow/Underflow Reset Enable bit
 18237                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18238  8008                     	org	32776
 18239  8008  3FFF               	dw	16383
 18240                           
 18241                           ;Config register CONFIG3 @ 0x8009
 18242                           ;	WDT Period Select bits
 18243                           ;	WDTCPS = WDTCPS_10, Divider ratio 1:32768
 18244                           ;	WDT operating mode
 18245                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
 18246                           ;	WDT Window Select bits
 18247                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18248                           ;	WDT input clock selector
 18249                           ;	WDTCCS = SC, Software Control
 18250  8009                     	org	32777
 18251  8009  3FEA               	dw	16362
 18252                           
 18253                           ;Config register CONFIG4 @ 0x800A
 18254                           ;	Boot Block Size Selection bits
 18255                           ;	BBSIZE = BB512, 512 words boot block size
 18256                           ;	Boot Block Enable bit
 18257                           ;	BBEN = OFF, Boot Block disabled
 18258                           ;	SAF Enable bit
 18259                           ;	SAFEN = OFF, SAF disabled
 18260                           ;	Application Block Write Protection bit
 18261                           ;	WRTAPP = OFF, Application Block not write protected
 18262                           ;	Boot Block Write Protection bit
 18263                           ;	WRTB = OFF, Boot Block not write protected
 18264                           ;	Configuration Register Write Protection bit
 18265                           ;	WRTC = OFF, Configuration Register not write protected
 18266                           ;	Data EEPROM write protection bit
 18267                           ;	WRTD = OFF, Data EEPROM NOT write protected
 18268                           ;	Storage Area Flash Write Protection bit
 18269                           ;	WRTSAF = OFF, SAF not write protected
 18270                           ;	Low Voltage Programming Enable bit
 18271                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18272  800A                     	org	32778
 18273  800A  3FFF               	dw	16383
 18274                           
 18275                           ;Config register CONFIG5 @ 0x800B
 18276                           ;	UserNVM Program memory code protection bit
 18277                           ;	CP = OFF, UserNVM code protection disabled
 18278  800B                     	org	32779
 18279  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        218
    BSS         170
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     51      77
    BANK1            80     11      80
    BANK2            80      0      59
    BANK3            80      0      59
    BANK4            80      0      59
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3450$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$3455	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_DO_TX$3450	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$3449	const PTR FTN()enum E10718 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    processCommand@data	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    processCommand@sensor	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    getHis@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMed@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMin@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMax@data	PTR struct . size(2) Largest target is 59
		 -> cons.sensor_data(BANK4[46]), cons(BANK4[59]), battery.sensor_data(BANK2[46]), battery(BANK2[59]), 
		 -> panel.sensor_data(BANK3[46]), panel(BANK3[59]), 

    getMetrics@device	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    getINA220Data@device	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    writeINA220@pTxbuffer	PTR unsigned char  size(1) Largest target is 3
		 -> writeINA220@Txbuffer(BANK0[3]), 

    readINA220@pTxbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> readINA220@regadd(BANK0[1]), 

    readINA220@pRxbuffer	PTR unsigned char  size(1) Largest target is 2
		 -> readINA220@buff(BANK0[2]), 

    stringToInt16@string	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    int16ToString@data	PTR unsigned char  size(1) Largest target is 8
		 -> sendSensorData@packet(BANK0[8]), 

    stringlen@str	PTR const unsigned char  size(1) Largest target is 11
		 -> packet.value(COMMON[6]), sendSensorData@packet(BANK0[8]), main@packet(BANK1[11]), 

    stringCompare@buf	PTR const unsigned char  size(2) Largest target is 8
		 -> cons.sensor_info.address(BANK4[3]), cons.sensor_info(BANK4[8]), battery.sensor_info.address(BANK2[3]), battery.sensor_info(BANK2[8]), 
		 -> panel.sensor_info.address(BANK3[3]), panel.sensor_info(BANK3[8]), 

    stringCompare@str	PTR const unsigned char  size(1) Largest target is 11
		 -> main@packet.address(COMMON[3]), main@packet(BANK1[11]), 

    sendSensorInfo@sensor_info	PTR struct . size(2) Largest target is 59
		 -> cons(BANK4[59]), battery(BANK2[59]), panel(BANK3[59]), 

    receiveData@data	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    sendPacket@str	PTR const unsigned char  size(1) Largest target is 8
		 -> sendSensorData@packet(BANK0[8]), sendSensorInfo@packet(BANK0[7]), 

    initRxBuffer@buf	PTR unsigned char  size(1) Largest target is 11
		 -> main@packet(BANK1[11]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), readINA220@buff(BANK0[2]), I2C1_ReadDataBlock@reg(COMMON[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), readINA220@buff(BANK0[2]), I2C1_ReadDataBlock@reg(COMMON[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), readINA220@buff(BANK0[2]), I2C1_ReadDataBlock@reg(COMMON[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S571$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E10718[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 2
		 -> readINA220@buff(BANK0[2]), 

    I2C1_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 3
		 -> writeINA220@Txbuffer(BANK0[3]), readINA220@regadd(BANK0[1]), 


Critical Paths under _main in COMMON

    _receiveData->_EUSART1_Read
    _processCommand->_getMax
    _processCommand->_getMin
    _processCommand->_sendSensorInfo
    _stringToInt16->___wmul
    _I2C1_WriteNBytes->_I2C1_Close
    _I2C1_WriteNBytes->_I2C1_SetBuffer
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_ReadNBytes->_I2C1_Close
    _I2C1_ReadNBytes->_I2C1_SetBuffer
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _wr2RegCompleteHandler->_I2C1_SetBuffer
    _wr1RegCompleteHandler->_I2C1_SetBuffer
    _rdBlkRegCompleteHandler->_I2C1_SetBuffer
    _rd2RegCompleteHandler->_I2C1_SetBuffer
    _rd1RegCompleteHandler->_I2C1_SetBuffer
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _sendPacket->_EUSART1_Write
    _sendPacket->_EUSART1_is_tx_ready
    _sendPacket->_stringlen
    _int16ToString->___lwmod
    _getMetrics->_getMax
    _getMetrics->_getMin
    _getMed->___aldiv
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_processCommand
    _processCommand->_getINA220Data
    _stringToInt16->___wmul
    _sendSensorInfo->_sendPacket
    _getINA220Data->_readINA220
    _writeINA220->_I2C1_WriteNBytes
    _readINA220->_I2C1_ReadNBytes
    _readINA220->_I2C1_WriteNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_MasterRead->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _getHis->_sendSensorData
    _sendSensorData->_int16ToString
    _sendPacket->_stringlen
    _int16ToString->___lwdiv
    _getMetrics->_getMed
    _getMed->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  552870
                                             48 BANK0      3     3      0
                                              0 BANK1     11    11      0
                  _SYSTEM_Initialize
                         _TMR2_Start
                          _TMR2_Stop
                         _TMR4_Start
                          _TMR4_Stop
                    _TxDeviceDisable
                      _getINA220Data
                         _getMetrics
                       _initRxBuffer
                     _processCommand
                        _receiveData
                      _stringCompare
 ---------------------------------------------------------------------------------
 (1) _stringCompare                                        8     4      4     844
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _receiveData                                          6     5      1     427
                                              0 BANK0      6     5      1
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         2     2      0      37
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _processCommand                                       8     5      3  281265
                                             40 BANK0      8     5      3
                        _TMR0_Reload
                             _getHis
                      _getINA220Data
                             _getMax
                             _getMed
                             _getMin
                     _sendSensorData
                     _sendSensorInfo
                      _stringToInt16
                          _stringlen
 ---------------------------------------------------------------------------------
 (2) _stringToInt16                                        9     7      2    2446
                                              4 BANK0      9     7      2
                             ___wmul
                          _stringlen (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1666
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _sendSensorInfo                                      12    10      2     697
                                              5 COMMON     1     1      0
                                             13 BANK0     11     9      2
                         _sendPacket
 ---------------------------------------------------------------------------------
 (2) _getINA220Data                                        8     6      2  266509
                                             32 BANK0      8     6      2
                         _readINA220
                        _writeINA220
 ---------------------------------------------------------------------------------
 (3) _writeINA220                                          9     6      3   89674
                                             21 BANK0      9     6      3
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _readINA220                                          11     9      2  175950
                                             21 BANK0     11     9      2
                    _I2C1_ReadNBytes
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteNBytes                                     4     1      3   88756
                                             17 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     1      3    1939
                                              3 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0   84785
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_ReadNBytes                                      4     1      3   86637
                                             17 BANK0      4     1      3
                         _I2C1_Close
                    _I2C1_MasterRead
                          _I2C1_Open
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            3     3      0      68
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterRead                                      0     0      0   84785
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 3     3      0   84785
                                             14 BANK0      3     3      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0   84717
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       3     3      0   84717
                                             11 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     3     3      0   21156
                                              8 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           3     3      0   21187
                                              8 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           3     3      0   21156
                                              8 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 3     3      0   21156
                                              8 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    4164
                                              7 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    4164
                                              7 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4195
                                              7 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    4164
                                              7 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    4164
                                              7 BANK0      1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _I2C1_SetDataCompleteCallback                        4     1      3    2659
                                              3 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     5     2      3     997
                                              4 COMMON     2     2      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     2      2    1474
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     305
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           2     2      0      37
                                              4 COMMON     2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getHis                                               6     4      2    4091
                                             32 BANK0      6     4      2
                     _sendSensorData
 ---------------------------------------------------------------------------------
 (2) _sendSensorData                                      12    10      2    3810
                                             20 BANK0     12    10      2
                      _int16ToString
                         _sendPacket
                          _stringlen
 ---------------------------------------------------------------------------------
 (2) _stringlen                                            3     3      0     280
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _sendPacket                                          11     7      4     422
                                              2 BANK0     11     7      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                    _TxDeviceDisable
                     _TxDeviceEnable
                          _stringlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _TxDeviceEnable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TxDeviceDisable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_tx_ready                                  1     1      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _int16ToString                                       13    10      3    1787
                                              7 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initRxBuffer                                        11     7      4     256
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _getMetrics                                           2     0      2    2330
                                             30 BANK0      2     0      2
                             _getMax
                             _getMed
                             _getMin
 ---------------------------------------------------------------------------------
 (2) _getMin                                              11     9      2     485
                                              4 COMMON     2     0      2
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) _getMed                                              16    14      2    1054
                                             14 BANK0     16    14      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _getMax                                              11     9      2     485
                                              4 COMMON     2     0      2
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     847
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     484
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          0     0      0      46
                   Absolute function *
                           _CMP1_ISR
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0      46
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0      23
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               4     4      0      23
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (14) _CMP1_ISR                                            0     0      0       0
               _CMP1_GetOutputStatus
 ---------------------------------------------------------------------------------
 (15) _CMP1_GetOutputStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR2_Start
   _TMR2_Stop
   _TMR4_Start
   _TMR4_Stop
   _TxDeviceDisable
   _getINA220Data
     _readINA220
       _I2C1_ReadNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterRead
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetBuffer
       _I2C1_WriteNBytes
         _I2C1_Close
         _I2C1_MasterWrite
           _I2C1_MasterOperation
         _I2C1_Open
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
     _writeINA220
       _I2C1_WriteNBytes
   _getMetrics
     _getMax
     _getMed
       ___aldiv
     _getMin
   _initRxBuffer
   _processCommand
     _TMR0_Reload
     _getHis
       _sendSensorData
         _int16ToString
           ___lwdiv
           ___lwmod
         _sendPacket
           _EUSART1_Write
           _EUSART1_is_tx_done
           _EUSART1_is_tx_ready
           _TxDeviceDisable
           _TxDeviceEnable
           _stringlen (ARG)
         _stringlen
     _getINA220Data
     _getMax
     _getMed
     _getMin
     _sendSensorData
     _sendSensorInfo
       _sendPacket
     _stringToInt16
       ___wmul
       _stringlen (ARG)
     _stringlen
   _receiveData
     _EUSART1_Read
   _stringCompare

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CMP1_ISR *
     _CMP1_GetOutputStatus
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
   _TMR4_ISR *
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     1D8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      B      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3B      10       73.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      3B      12       73.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      3B      14       73.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      40      16       80.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      40      18       80.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1D8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 19 14:42:58 2025

              __end_of_TMR2_SetInterruptHandler 0945                             readINA220@pRxbuffer 0039  
                           readINA220@pTxbuffer 003A                               ??_CMP1_Initialize 0074  
                           ___wmul@multiplicand 0022                                 _DAC1_Initialize 0927  
                                           l513 076B                                             l196 098F  
                                           l447 0ED4                                             l529 07A3  
                                           l670 08FC                           ?_I2C1_MasterOperation 0070  
                               _TMR2_Initialize 0AB7                                             wreg 0009  
                        ?_I2C1_MasterSendTxData 0070                            _I2C1_DO_RX_NACK_STOP 08F4  
                          receiveData@charCount 0025                       ?_I2C1_MasterEnableRestart 0070  
                               initRxBuffer@buf 0028                            I2C1_SetBuffer@buffer 0021  
                                   _status_prev 0053                                            l1050 0220  
                                          l1052 0258                         ??_rd2RegCompleteHandler 0076  
                                          l1301 0206                                            l1061 02CC  
                                          l1053 0276                                            l1063 02DF  
                                          l1056 02D1                                            l1068 02DA  
                                          l1245 03F0                                            l1246 044A  
                                          l1177 0482                                            l1453 0B6D  
                                          l1518 0501                                            l1295 0182  
                                          l5031 0E22                                            l5023 0E04  
                                          l5103 072B                                            l5025 0E10  
                                          l5105 0733                                            l5201 0B67  
                                          l5035 0E2B                                            l5123 0493  
                                          l5115 047A                                            l5053 0D04  
                                          l5141 04C3                                            l5231 0522  
                                          l5223 0512                                            l5047 0CEC  
                                          l5135 04B4                                            l5071 0BF4  
                                          l5063 0BDA                                            l5241 0550  
                                          l5233 0530                                            l5049 0CF8  
                                          l5057 0D0D                                            l5129 0495  
                                          l5161 0AF2                                            l5081 0B44  
                                          l5091 070F                                            l5155 0AEA  
                                          l4603 0C11                                            l5075 0B32  
                                          l5245 055B                                            l5501 0681  
                                          l5095 071B                                            l5249 0569  
                                          l5521 0610                                            l5097 06E8  
                                          l4801 07AB                                            l5515 05E9  
                                          l5099 0721                                            l5427 0FD4  
                                          l5611 0105                                            l5603 0091  
                                          l5541 0D35                                            l4821 0DA3  
                                          l5445 0584                                            l5621 016E  
                                          l5613 0130                                            l5605 0098  
                                          l5277 0AA2                                            l5701 02CD  
                                          l5535 0D1C                                            l4751 0740  
                                          l5631 0198                                            l5607 009F  
                                          l5711 02ED                                            l5481 06D7  
                                          l5473 0696                                            l5561 0C97  
                                          l4817 0DA0                                            l4833 0DAA  
                                          l4761 0746                                            l4921 0BCC  
                                          l5457 0589                                            l5633 01A7  
                                          l5625 0180                                            l5609 00DA  
                                          l5705 02DB                                            l4827 0DA7  
                                          l4755 0743                                            l4747 073D  
                                          l4923 0BD1                                            l5459 05C3  
                                          l5635 01B6                                            l5619 015C  
                                          l5731 034A                                            l5723 0322  
                                          l5715 02F5                                            l5477 06CF  
                                          l5493 0640                                            l4861 0D4C  
                                          l5629 0185                                            l5573 0C39  
                                          l5565 0C21                                            l5717 02FA  
                                          l4791 07A5                                            l4927 0BD6  
                                          l5639 01D8                                            l5727 0331  
                                          l5497 0679                                            l4769 0784  
                                          l4857 0D49                                            l4795 07A8  
                                          l4867 0D4F                                            l4883 0CCE  
                                          l5595 07D2                                            l5691 0294  
                                          l4893 0996                                            l5597 07FC  
                                          l5589 07EF                                            l4983 0B16  
                                          l5881 07BE                                            l5697 02C3  
                                          l5883 075D                                            l5875 0190  
                                          l5885 0DBD                                            l5877 01E0  
                                          l4999 09A9                                            l5879 0D65  
                                          _LATA 0018                                            u3110 0FCE  
                                          u3015 0525                                            _LATC 001A  
                                          u3035 0531                                            u3045 0545  
                                          u3205 0662                                            u3125 0FF1  
                                          u3055 0551                                            u3320 0211  
                                          _T2PR 028D                                            u3315 07DC  
                                          u3175 06B8                                            _T4PR 0293  
                                          u3275 0CAE                                            u2715 0CEF  
                                          u2645 0E07                                            u3445 0306  
                                          u2735 0CFE                                            u3455 031D  
                                          u2665 0E11                                            u2745 0D05  
                                          u2905 04EE                                            u2825 06FF  
                                          u3465 032C                                            u2930 0DD6  
                                          u2675 0E1B                                            u3475 0345  
                                          _PMD0 0796                                            u2685 0E23  
                                          u3485 035E                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            u3497 0369  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u2955 0B6E                                            _PMD7 079D  
                                          u2885 04AE                                            u2965 0B73  
                                          _WPUA 1F39                                            _WPUC 1F4F  
                       ??_wr2RegCompleteHandler 0076                                ??_I2C1_MasterFsm 002B  
                                 _EUSART1_Write 098C                       ??_I2C1_CallbackReturnStop 0076  
                                          _cons 0220                                            _main 0207  
                                 ?_EUSART1_Read 0070                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                          start 0030                                ??_I2C1_SetBuffer 0020  
                              __end_of_CMP1_ISR 09F5                      ??_TMR4_SetInterruptHandler 0076  
                                   _writeINA220 0B80                       sendSensorData@sensor_data 0034  
                              initRxBuffer@size 0020                   I2C1_CallbackReturnStop@funPtr 0027  
                       __end_of_TMR0_Initialize 0AE6                  ??_TMR0_DefaultInterruptHandler 0070  
                             stringToInt16@sign 0027                   __end_of_OSCILLATOR_Initialize 098C  
                             ??_I2C1_ReadNBytes 0076                           _eusart1RxStatusBuffer 0320  
                               __end_of___aldiv 0572                               __end_of_I2C1_Open 0ED7  
                                         ?_main 0070                                           _T2CON 028E  
                        I2C1_ReadNBytes@address 0034                                           _T4CON 0294  
                                         _T2HLT 028F                                           _T4HLT 0295  
                               __end_of___lwdiv 0E30                                           _T2TMR 028C  
                                         _T2RST 0291                                 __end_of___lwmod 0D12  
                                         _T4TMR 0292                                           i1l711 000E  
                                         i1l714 0017                                           _T4RST 0297  
                                         i1l723 002E                                           i1l716 001E  
                                         i1l718 0025                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                _TxDeviceEnable 08A3                                           _TRISA 0012  
                                         _TRISC 0014                          ??_I2C1_MasterGetRxData 0074  
                         ?_I2C1_DO_RX_NACK_STOP 0070                                 _TMR4_Initialize 0A8D  
                     ?_TMR0_SetInterruptHandler 0074                               ??_I2C1_MasterRead 0076  
                    ??_I2C1_CallbackReturnReset 0076                               ??_I2C1_MasterOpen 0074  
                             ??_I2C1_MasterStop 0074                               ??_I2C1_Initialize 0074  
                              __end_of_TMR0_ISR 0A34                                __end_of_TMR2_ISR 09B7  
                              __end_of_TMR4_ISR 09C3                                     ?_TMR2_Start 0070  
                                         _panel 01A0                                     ?_TMR4_Start 0070  
                                ?_EUSART1_Write 0070                                           pclath 000A  
                                ??_EUSART1_Read 0074                                           status 0003  
                                         wtemp0 007E                                    ??_I2C1_DO_RX 0028  
                                  ??_I2C1_DO_TX 0028                                    ?_receiveData 0020  
            _EUSART1_DefaultFramingErrorHandler 0000                          ??_I2C1_DO_ADDRESS_NACK 0028  
                                  ??_I2C1_Close 0074                             sendPacket@byteCount 0022  
                  __end_of_CMP1_GetOutputStatus 0927                                   _fsmStateTable 1000  
                               __initialization 0032                      __end_of_EUSART1_Initialize 0D9D  
                                  __end_of_main 0364                         __end_of_DAC1_Initialize 092D  
                       __end_of_TMR2_Initialize 0ACE                     ?_INTERRUPT_InterruptManager 0070  
                        __end_of_TxDeviceEnable 08A5                          ??_I2C1_MasterOperation 002E  
                      _TMR2_SetInterruptHandler 093F                                          ??_main 0050  
                                 ?_initRxBuffer 0020                                  _sendSensorData 0DCC  
                                _sendSensorInfo 0FC4                              __end_of_I2C1_DO_RX 07CD  
                            __end_of_I2C1_DO_TX 0786                              __end_of_I2C1_Close 0B18  
                      __end_of_I2C1_WriteNBytes 0BFB                                          _CM1NCH 0992  
                                        _CM1PCH 0993                                          _ANSELA 1F38  
                                        _ANSELC 1F4E                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RC0PPS 1F20                                          _RC1PPS 1F21  
                                        _RC1STA 011D                                          _RC4PPS 1F24  
                                        _ODCONA 1F3A                                          _ODCONC 1F50  
                                        i1l4231 0C5A                                          i1l4235 0C69  
                                        i1l4253 09F2                                          i1l3837 0E50  
                                        _INLVLA 1F3C                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                               ?_I2C1_MasterClose 0070  
                               _TxDeviceDisable 08B5                         ??_I2C1_MasterDisableIrq 0074  
                             ?_I2C1_MasterStart 0070                               ?_I2C1_MasterWrite 0070  
                      ?_I2C1_MasterWaitForEvent 0070                              ??_I2C1_MasterClose 0074  
                              _I2C1_DO_TX_EMPTY 0D9D                              ??_I2C1_MasterStart 0074  
                              ??_processCommand 004B                           processCommand@command 004F  
                            ??_I2C1_MasterWrite 0076                                    ?_TMR0_Reload 0070  
                                     ??___aldiv 0074                                          ___wmul 0B65  
                             __end_of_TMR2_Stop 08A3                               __end_of_TMR4_Stop 08B5  
                                        _getMed 05D7                                          _getHis 0D12  
                                        _getMax 068C                                          _getMin 0636  
                                     ??___lwdiv 0074                                       ??___lwmod 0074  
                      ?_EUSART1_SetErrorHandler 0074                          __end_of_sendSensorData 0DFC  
                              ?_TMR0_Initialize 0070                         __end_of_TMR4_Initialize 0AA2  
                        __end_of_sendSensorInfo 1000                                  ??_initRxBuffer 0024  
              ??_EUSART1_SetOverrunErrorHandler 0076                 ?_EUSART1_SetOverrunErrorHandler 0074  
                               ?_TxDeviceEnable 0070                                          _status 005A  
                      ??_I2C1_DO_SEND_ADR_WRITE 0075                               ?_I2C1_SetCallback 0020  
                        ??_I2C1_DO_RX_NACK_STOP 0074            __end_of_TMR4_DefaultInterruptHandler 089F  
                  _TMR4_DefaultInterruptHandler 089D                           _I2C1_DO_SEND_ADR_READ 0970  
                                _PMD_Initialize 0A34                   ?_I2C1_SetDataCompleteCallback 0023  
                            ??_I2C1_SetCallback 0074                           __end_of_int16ToString 04F1  
                                     ?_CMP1_ISR 0070                                 ??_EUSART1_Write 0074  
      TMR0_SetInterruptHandler@InterruptHandler 0074        TMR4_SetInterruptHandler@InterruptHandler 0074  
      TMR2_SetInterruptHandler@InterruptHandler 0074                               readINA220@address 0035  
                               _eusart1RxBuffer 02A0                         _I2C1_DO_RX_NACK_RESTART 08F8  
                           I2C1_WriteNBytes@len 0032                               _SYSTEM_Initialize 0B9D  
                I2C1_SetDataCompleteCallback@cb 0023                         __end_of__initialization 008A  
                               _CMP1_Initialize 09F5                 I2C1_MasterOperation@returnValue 0030  
                            ?_SYSTEM_Initialize 0070                                   ??_I2C1_Poller 0076  
                 __end_of_EUSART1_RxDataHandler 0E66                         _rdBlkRegCompleteHandler 0B18  
                                 _stringCompare 07CD                                  __pcstackCOMMON 0070  
                                  __pidataBANK0 0A04                                    __pidataBANK1 0B4B  
                                  __pidataBANK2 0F4D                                    __pidataBANK3 0F12  
                                  __pidataBANK4 0ED7                             ??_SYSTEM_Initialize 0076  
              __end_of_I2C1_MasterEnableRestart 08C4                                ?_DAC1_Initialize 0070  
                                     ?_TMR0_ISR 0070                                   _stringToInt16 0572  
                                     ?_TMR2_ISR 0070                            sendSensorData@F11032 00D0  
                                     ?_TMR4_ISR 0070                                 ?_sendSensorData 0034  
                           getINA220Data@device 0040                                ?_TMR2_Initialize 0070  
                               ?_sendSensorInfo 002D                          __end_of_PMD_Initialize 0A45  
                  ??_I2C1_DO_SEND_RESTART_WRITE 0074                         ??_I2C1_MasterSendTxData 0074  
                          __end_of_EUSART1_Read 0AB7                     __end_of_EUSART1_Receive_ISR 0C6C  
                 ?_TMR4_DefaultInterruptHandler 0070                           __end_of_I2C1_DO_RESET 0921  
                          _CMP1_GetOutputStatus 0921                                      ??_CMP1_ISR 0070  
                       __end_of_TxDeviceDisable 08B8                       __end_of_SYSTEM_Initialize 0BBB  
                                 _eusart1RxHead 0079                                   _eusart1RxTail 0078  
                                    __pbssBANK0 006A                                      __pbssBANK1 00A0  
                                    __pbssBANK5 02A0                                      __pbssBANK6 0320  
               __end_of_I2C1_MasterWaitForEvent 0900                 ??_EUSART1_SetRxInterruptHandler 0076  
                 __end_of_rd2RegCompleteHandler 0A7B                            I2C1_Open@returnValue 0021  
                                    __pnvCOMMON 0076                            writeINA220@pTxbuffer 003A  
                          sendSensorData@packet 0038                   __end_of_wr2RegCompleteHandler 0A57  
                         _TMR4_InterruptHandler 0064                           _rd1RegCompleteHandler 0A57  
                               _I2C1_ReadNBytes 0B31                               _I2C1_DO_SEND_STOP 08EC  
                                ?_stringCompare 0020                           stringToInt16@multiple 0028  
                         _wr1RegCompleteHandler 0A7B                 __end_of_EUSART1_SetErrorHandler 090D  
                           stringToInt16@result 002A                                    ?_writeINA220 0035  
                                    __pmaintext 0207                        rd1RegCompleteHandler@ptr 0027  
                           stringToInt16@string 002C                             stringToInt16@strlen 0024  
                                   sendPacket@i 002A                                  ?_stringToInt16 0024  
              __end_of_TMR0_SetInterruptHandler 093F                              ?_I2C1_DO_SEND_STOP 0070  
                                       ?___wmul 0020                                      ??_TMR0_ISR 0070  
                                    ??_TMR2_ISR 0070                                      ??_TMR4_ISR 0070  
                               _I2C1_MasterRead 0900                                         ?_getMed 002E  
                                       ?_getHis 0040                                         ?_getMax 0074  
                                       ?_getMin 0074                                 _I2C1_MasterOpen 09CF  
                                    __pintentry 0004                                 _I2C1_MasterStop 08C4  
                               _I2C1_Initialize 0978                                         _CM1CON0 0990  
                                       _CM1CON1 0991                             __end_of_I2C1_Poller 09A0  
                                 sendPacket@str 002C                                      _getMetrics 0E66  
                              ?_TMR4_Initialize 0070                       sendSensorInfo@sensor_info 002D  
                               ?_PMD_Initialize 0070                          ?_I2C1_DO_SEND_ADR_READ 0070  
                           ??_I2C1_DO_SEND_STOP 0074          __end_of_EUSART1_SetFramingErrorHandler 0933  
                _EUSART1_SetFramingErrorHandler 092D                                  int16ToString@i 002E  
                                       _CPUDOZE 088C                    ?_EUSART1_DefaultErrorHandler 0070  
                             _I2C1_MasterIsNack 0951                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Open 0E9C  
                     ??_I2C1_DO_RX_NACK_RESTART 0074                           ?_CMP1_GetOutputStatus 0070  
                                       _OSCTUNE 0892                               _I2C1_MasterSetIrq 08CD  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                                  ??_TMR2_Start 0074                              ?_I2C1_MasterIsNack 0070  
                    ?_I2C1_DO_SEND_RESTART_READ 0070                         __end_of_CMP1_Initialize 0A04  
                                  ??_TMR4_Start 0074                  ??_I2C1_SetDataCompleteCallback 0026  
                            ?_I2C1_MasterSetIrq 0070                                         _BuffReg 00BD  
                                    _readINA220 0F88                            __end_of_initRxBuffer 0CBC  
                           ??_I2C1_MasterIsNack 0074                       __end_of_I2C1_DO_SEND_STOP 08F0  
                     ??_rdBlkRegCompleteHandler 0076                              I2C1_SetCallback@cb 0020  
                           int16ToString@flag_0 002B                             ??_I2C1_MasterSetIrq 0074  
                    ??_TMR2_SetInterruptHandler 0076                             int16ToString@result 002C  
                                       ___aldiv 04F1                                         ___lwdiv 0DFC  
                                       ___lwmod 0CE6                              __end_of_TMR2_Start 08A1  
                    __end_of_EUSART1_is_tx_done 08D8                                   ?_I2C1_DO_IDLE 0070  
                            __end_of_TMR4_Start 08B2                                         _battery 0120  
                                 ?_I2C1_DO_RCEN 0070                             _EUSART1_is_tx_ready 09A0  
                                       __ptext1 07CD                                         __ptext2 0C1F  
                                       __ptext3 0AA2                                         __ptext4 008E  
                                       __ptext5 0572                                         __ptext6 0B65  
                                       __ptext7 0FC4                                         __ptext8 0364  
                                       __ptext9 0B80                        _I2C1_MasterEnableRestart 08C1  
                     __end_of_I2C1_MasterIsNack 0957                                   _getINA220Data 0364  
                  ?_I2C1_SetAddressNackCallback 0023                           _OSCILLATOR_Initialize 0982  
                                     _T2CONbits 028E                       __end_of_I2C1_MasterSetIrq 08D0  
                      __end_of_I2C1_DO_TX_EMPTY 0DCC                                ___aldiv@dividend 0024  
                                     _T4CONbits 0294                              _EUSART1_Initialize 0D6E  
                      ??_PIN_MANAGER_Initialize 0074                        wr1RegCompleteHandler@ptr 0027  
                                    ?_I2C1_Open 0070                                         getMed@i 003C  
                                       getHis@i 0044                       ?_TMR4_SetInterruptHandler 0074  
                                       getMax@i 0027                                         getMin@i 0027  
                                  stringlen@idx 0021                                    stringlen@str 0020  
                 ??_EUSART1_DefaultErrorHandler 0074                                stringCompare@buf 0020  
                              stringCompare@idx 0024                                stringCompare@str 0026  
                      ?_I2C1_CallbackReturnStop 0027                               ?_I2C1_WriteNBytes 0031  
                          sendSensorInfo@F11027 00D8                                ?_TxDeviceDisable 0070  
                                       clrloop0 095E                                      _sendPacket 06E2  
             __end_of_I2C1_DO_SEND_RESTART_READ 08E4                            end_of_initialization 008A  
                    __end_of_I2C1_MasterSendAck 08E0                         __end_of_I2C1_ReadNBytes 0B4B  
                           _I2C1_MasterClearIrq 08B8                  ??_TMR4_DefaultInterruptHandler 0070  
                           ?_EUSART1_Initialize 0070                              ??_I2C1_WriteNBytes 0076  
                          ?_EUSART1_is_tx_ready 0070                                         init_ram 0963  
                    __end_of_I2C1_MasterStartRx 08CA                     _EUSART1_OverrunErrorHandler 00EC  
                        ?_rd1RegCompleteHandler 0027                                         initloop 0964  
                                 readINA220@ret 003E                          _I2C1_DO_SEND_ADR_WRITE 0969  
                                    getMed@data 002E                                      getMed@buff 0038  
                               ??_stringCompare 0074                                      getHis@data 0040  
                  __end_of_I2C1_DO_SEND_RESTART 08EC                         __end_of_I2C1_MasterRead 0904  
                       __end_of_I2C1_MasterOpen 09DB                          ?_wr1RegCompleteHandler 0027  
                       __end_of_I2C1_MasterStop 08C7                         __end_of_I2C1_Initialize 0982  
         __end_of_EUSART1_SetRxInterruptHandler 0939                   _EUSART1_SetRxInterruptHandler 0933  
                                    getMax@data 0074                                     _I2C1_Poller 0996  
                               ??_stringToInt16 0026                       ?_I2C1_CallbackReturnReset 0027  
                 __end_of_I2C1_MasterDisableIrq 08A7                                      getMin@data 0074  
                                   _I2C1_Status 00A0                                 receiveData@data 0023  
                              ___aldiv@quotient 002A                                ??_TxDeviceEnable 0074  
                           _I2C1_MasterSendNack 08D8                                      main@F11064 00C5  
           __end_of_I2C1_SetAddressNackCallback 09E7                     _I2C1_SetAddressNackCallback 09DB  
                          ?_I2C1_MasterClearIrq 0070                                  ??_I2C1_DO_IDLE 0074  
                          ??_EUSART1_Initialize 0076                                  ??_I2C1_DO_RCEN 0074  
            __end_of_I2C1_DO_SEND_RESTART_WRITE 08E8                                     ?_getMetrics 003E  
                    _I2C1_DO_SEND_RESTART_WRITE 08E4                                  ?_getINA220Data 0040  
                      _TMR0_SetInterruptHandler 0939                                       _TMR2_Stop 08A1  
               __end_of_rdBlkRegCompleteHandler 0B31                            sendSensorInfo@packet 002F  
                                     _TMR4_Stop 08B2                               __end_of_stringlen 0AFF  
                          I2C1_WriteNBytes@data 0031                          ??_CMP1_GetOutputStatus 0070  
                 ??_I2C1_SetAddressNackCallback 0026                 I2C1_SetDataCompleteCallback@ptr 0025  
                I2C1_CallbackReturnReset@funPtr 0027                            ?_I2C1_MasterSendNack 0070  
                           EUSART1_Write@txData 0074                                ?_CMP1_Initialize 0070  
                         ??_EUSART1_is_tx_ready 0074                                     _CM1CON0bits 0990  
                                   ?_readINA220 0035                      rdBlkRegCompleteHandler@ptr 0027  
                                  _EUSART1_Read 0AA2                                      main@packet 00DF  
                              ??_sendSensorData 0036                                ??_sendSensorInfo 0075  
                          _timer0ReloadVal16bit 0076                           ??_I2C1_MasterClearIrq 0074  
          __end_of_TMR2_DefaultInterruptHandler 089D                    _TMR2_DefaultInterruptHandler 089B  
                                __end_of___wmul 0B80                                  _I2C1_DO_RX_ACK 08F0  
                                __end_of_getMed 0636                                  __end_of_getHis 0D40  
                                __end_of_getMax 06E2                                  __end_of_getMin 068C  
                                    ?_TMR2_Stop 0070                          ?_OSCILLATOR_Initialize 0070  
                                    ?_TMR4_Stop 0070                 __end_of_I2C1_CallbackReturnStop 08A9  
                                  receiveData@c 0024                   __end_of_I2C1_MasterSendTxData 0917  
                           start_initialization 0032                                getMetrics@device 003E  
                                   ??_I2C1_Open 0074                           ??_I2C1_MasterSendNack 0074  
                         int16ToString@dividend 0030   EUSART1_SetRxInterruptHandler@interruptHandler 0074  
                                   ?_sendPacket 0022                           __end_of_EUSART1_Write 0996  
                              ?_I2C1_ReadNBytes 0031                        I2C1_SetBuffer@bufferSize 0074  
                              ?_I2C1_MasterRead 0070                                ?_I2C1_MasterOpen 0070  
                              ?_I2C1_MasterStop 0070                                ?_I2C1_Initialize 0070  
                              ??_PMD_Initialize 0074                          __end_of_I2C1_DO_RX_ACK 08F4  
                                      ??___wmul 0074                            processCommand@sensor 0049  
                         _EUSART1_RxDataHandler 0E30                         ??_I2C1_DO_SEND_ADR_READ 0074  
                                      ??_getMed 0030                                        ??_getHis 0042  
                                      ??_getMax 0020                                        ??_getMin 0020  
                ?_EUSART1_SetRxInterruptHandler 0074                                     __pdataBANK0 0053  
                                   __pdataBANK1 00C5                                     __pdataBANK2 0120  
                                   __pdataBANK3 01A0                                     __pdataBANK4 0220  
                               ??_getINA220Data 0042                   ?_TMR2_DefaultInterruptHandler 0070  
                              I2C1_Open@address 0020                                  _eusart1RxCount 006C  
                                  _initRxBuffer 0C94                                readINA220@regadd 003D  
                                   __pbssCOMMON 0078                            _I2C1_DO_SEND_RESTART 08E8  
             _EUSART1_RxDefaultInterruptHandler 0068                                       ___latbits 0002  
                           writeINA220@Txbuffer 003B                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00DF                     ??_I2C1_DO_SEND_RESTART_READ 0074  
                           _eusart1PacketFinish 006B                            __end_of_I2C1_DO_IDLE 091C  
              ??_EUSART1_SetFramingErrorHandler 0076                 ?_EUSART1_SetFramingErrorHandler 0074  
                          __end_of_I2C1_DO_RCEN 095D                                   ??_receiveData 0021  
                 I2C1_SetAddressNackCallback@cb 0023                           _TMR0_InterruptHandler 0062  
                                     __pnvBANK0 0062                                       __pnvBANK1 00EA  
                         _rd2RegCompleteHandler 0A69                           __end_of_fsmStateTable 1020  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 0C6C  
                         _wr2RegCompleteHandler 0A45                         _EUSART1_is_tx_ready$357 0074  
                    ??_I2C1_MasterEnableRestart 0074                        rd2RegCompleteHandler@ptr 0027  
                                _I2C1_MasterFsm 0CBC                                        ?___aldiv 0020  
              __end_of_TMR4_SetInterruptHandler 094B                                 ?_I2C1_DO_RX_ACK 0070  
                                     __ptext100 0908                                       __ptext101 0927  
                                     __ptext110 0C45                                       __ptext102 09F5  
                                     __ptext111 08D0                                       __ptext112 08A9  
                                     __ptext104 09B7                                       __ptext113 0E30  
                                     __ptext105 089D                                       __ptext114 09E7  
                                     __ptext106 09AB                                       __ptext115 0921  
                                     __ptext107 089B                                       __ptext108 0A23  
                                     __ptext109 08AC                                        ?___lwdiv 0020  
                                      ?___lwmod 0020                         _I2C1_MasterWaitForEvent 08FC  
                              _I2C1_MasterClose 08BB                                        _DAC1CON0 090E  
                                      _DAC1CON1 090F                                  _I2C1_SetBuffer 0A13  
                  ??_INTERRUPT_InterruptManager 0074                                     ??_TMR2_Stop 0074  
                              _I2C1_MasterStart 08BE                                     ??_TMR4_Stop 0074  
                              _I2C1_MasterWrite 0904                                        _BAUD1CON 011F  
    __end_of_EUSART1_DefaultOverrunErrorHandler 08D4            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 08D0  
                         ?_I2C1_DO_SEND_RESTART 0070                            _EUSART1_ErrorHandler 00EA  
                             ?_I2C1_DO_TX_EMPTY 0070                              int16ToString@value 0027  
                       _EUSART1_SetErrorHandler 0908                                        _CMP1_ISR 09E7  
              __end_of_I2C1_CallbackReturnReset 0004                                   _int16ToString 0467  
                              ___lwdiv@quotient 0025                              ??_I2C1_DO_TX_EMPTY 0028  
                            _EUSART1_is_tx_done 08D4                                        _T2CLKCON 0290  
                       ??_rd1RegCompleteHandler 0076                         ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                      _T4CLKCON 0296                       I2C1_MasterSendTxData@data 0074  
                        EUSART1_RxDataHandler@t 0072                         ??_wr1RegCompleteHandler 0076  
                               ___aldiv@divisor 0020                               ??_TMR0_Initialize 0076  
                              _I2C1_SetCallback 0BFB                                 ___aldiv@counter 0028  
                                ___wmul@product 0074                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0074                                        _LATCbits 001A  
                                    _I2C1_DO_RX 0786                                      _I2C1_DO_TX 0736  
                           ?_EUSART1_is_tx_done 0070                                       clear_ram0 095D  
                                      _PIE0bits 0716                                        _PIE2bits 0718  
                                      _PIE3bits 0719                                        _PIE4bits 071A  
                                    _I2C1_Close 0AFF                                       getMed@aux 003D  
                                  ?_I2C1_Poller 0070                                       getHis@aux 0045  
                        __end_of_I2C1_MasterFsm 0CE6                    __end_of_I2C1_MasterGetRxData 08CD  
                                     getMax@aux 0028                      ??_TMR0_SetInterruptHandler 0076  
                                      _PIR0bits 070C                                        _PIR2bits 070E  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                     getMin@aux 0028                                   ??_TMR0_Reload 0074  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0070  
                            _I2C1_MasterSendAck 08DC                       _I2C1_DO_SEND_RESTART_READ 08E0  
                           __end_of_receiveData 0C45                                        _SSP1CON1 0190  
                                      _SSP1CON2 0191                                        _TMR0_ISR 0A23  
                                      _TMR2_ISR 09AB                                        _TMR4_ISR 09B7  
                        __end_of_I2C1_SetBuffer 0A23                                        _SSP1STAT 018F  
          __end_of_I2C1_SetDataCompleteCallback 09CF                    _I2C1_SetDataCompleteCallback 09C3  
                                  ??_getMetrics 0076                              _I2C1_MasterStartRx 08C7  
                   ?_I2C1_DO_SEND_RESTART_WRITE 0070                             ?_I2C1_MasterSendAck 0070  
                             ___wmul@multiplier 0020                        ?_I2C1_DO_RX_NACK_RESTART 0070  
                          ??_EUSART1_is_tx_done 0074                                   initRxBuffer@i 0029  
                           I2C1_ReadNBytes@data 0031                             ?_I2C1_MasterStartRx 0070  
                  __end_of_I2C1_DO_ADDRESS_NACK 0D6E                  ??_TMR2_DefaultInterruptHandler 0070  
                     ?_TMR2_SetInterruptHandler 0074                        wr2RegCompleteHandler@ptr 0027  
                                ?_int16ToString 0027                                       _stringlen 0AE6  
                __end_of_I2C1_DO_SEND_ADR_WRITE 0970                                   _I2C1_DO_RESET 091C  
                            receiveData@maxdata 0020                           I2C1_Close@returnValue 0075  
                      ?_rdBlkRegCompleteHandler 0027                               ??_DAC1_Initialize 0074  
                           I2C1_SetCallback@idx 0075                             I2C1_SetCallback@ptr 0022  
                          ??_I2C1_MasterSendAck 0074                               ??_TMR2_Initialize 0076  
                                  ??_readINA220 0037                           EUSART1_Read@readValue 0075  
                          int16ToString@divisor 0032                          ?_rd2RegCompleteHandler 0027  
                            __end_of_getMetrics 0E9C                    __end_of_I2C1_MasterOperation 0BD9  
                        ?_wr2RegCompleteHandler 0027                            ??_I2C1_MasterStartRx 0074  
                         __end_of_stringCompare 0800                                 ?_I2C1_MasterFsm 0070  
                         __end_of_stringToInt16 05D7                       ??_I2C1_MasterWaitForEvent 0074  
                                   _measureTime 0061                           _I2C1_MasterDisableIrq 08A5  
                       ??_OSCILLATOR_Initialize 0074                                 ?_I2C1_SetBuffer 0074  
                             sendSensorInfo@idx 0036                              writeINA220@address 0037  
                           __end_of_TMR0_Reload 0951                               getINA220Data@buff 0046  
                      _TMR4_SetInterruptHandler 0945                                  _processCommand 008E  
                        ??_I2C1_DO_SEND_RESTART 0074                       ??_EUSART1_SetErrorHandler 0076  
           __end_of_EUSART1_DefaultErrorHandler 08AC                     _EUSART1_DefaultErrorHandler 08A9  
                            __end_of_readINA220 0FC4                     __end_of_EUSART1_is_tx_ready 09AB  
                               ___lwdiv@divisor 0020                                  ?_I2C1_DO_RESET 0070  
                                    ?_stringlen 0070                                 ___lwdiv@counter 0024  
                            writeINA220@regdata 0035                                        __ptext10 0F88  
                                      __ptext11 0BD9                                        __ptext20 08FC  
                                      __ptext12 09DB                                        __ptext21 0CBC  
                                      __ptext13 0904                                        __ptext30 08E0  
                                      __ptext22 0D40                                        __ptext14 0B31  
                                      __ptext31 0957                                        __ptext23 091C  
                                      __ptext15 0E9C                                        __ptext40 0912  
                                      __ptext32 0786                                        __ptext24 08F8  
                                      __ptext16 09CF                                        __ptext41 08DC  
                                      __ptext33 0736                                        __ptext25 08F4  
                                      __ptext17 0900                                        __ptext50 0A57  
                                      __ptext42 08CA                                        __ptext34 0969  
                                      __ptext26 08F0                                        __ptext18 0BBB  
                                      __ptext51 0A45                                        __ptext43 08D8  
                                      __ptext35 0970                                        __ptext27 08EC  
                                      __ptext19 0996                                        __ptext60 08BB  
                                      __ptext52 09C3                                        __ptext44 08C7  
                                      __ptext36 0917                                        __ptext28 08E8  
                                      __ptext61 08B8                                        __ptext53 0BFB  
                                      __ptext45 0002                                        __ptext37 0D9D  
                                      __ptext29 08E4                                        __ptext70 098C  
                                      __ptext62 0D12                                        __ptext54 0A13  
                                      __ptext46 08A7                                        __ptext38 08CD  
                                      __ptext71 0467                                        __ptext63 0DCC  
                                      __ptext55 08C4                                        __ptext47 0B18  
                                      __ptext39 0951                                        __ptext80 068C  
                                      __ptext72 0CE6                                        __ptext64 0AE6  
                                      __ptext56 08C1                                        __ptext48 0A7B  
                                      __ptext81 08B2                                        __ptext73 0DFC  
                                      __ptext65 06E2                                        __ptext57 08BE  
                                      __ptext49 0A69                                        __ptext90 0ACE  
                                      __ptext82 08AF                                        __ptext74 094B  
                                      __ptext66 08A3                                        __ptext58 0AFF  
                                      __ptext91 0939                                        __ptext83 08A1  
                                      __ptext75 0C94                                        __ptext67 08B5  
                                      __ptext59 08A5                                        __ptext92 0A34  
                                      __ptext84 089F                                        __ptext76 0E66  
                                      __ptext68 09A0                                        __ptext93 0C6C  
                                      __ptext85 0B9D                                        __ptext77 0636  
                                      __ptext69 08D4                                        __ptext94 0982  
                                      __ptext86 0A8D                                        __ptext78 05D7  
                                      __ptext95 0978                                        __ptext87 0945  
                                      __ptext79 04F1                                        __ptext96 0D6E  
                                      __ptext88 0AB7                                        __ptext97 0933  
                                      __ptext89 093F                                        __ptext98 090D  
                                      __ptext99 092D                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                    ??_sendPacket 0026  
                             int16ToString@data 0029                        _I2C1_CallbackReturnReset 0002  
                             ??_TMR4_Initialize 0076                                     ?_I2C1_DO_RX 0070  
                                   ?_I2C1_DO_TX 0070                                     _receiveData 0C1F  
          __end_of_TMR0_DefaultInterruptHandler 08AF                    _TMR0_DefaultInterruptHandler 08AC  
                   __end_of_I2C1_MasterClearIrq 08BB                    __end_of_I2C1_DO_RX_NACK_STOP 08F8  
                                   ?_I2C1_Close 0070                                   ??_writeINA220 0038  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0074  
                       stringCompare@byte_count 0022                                        int$flags 007E  
               __end_of_I2C1_DO_RX_NACK_RESTART 08FC                        I2C1_MasterOperation@read 002F  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                        __end_of_processCommand 0207                              I2C1_ReadNBytes@len 0032  
                 __end_of_I2C1_DO_SEND_ADR_READ 0978                              __end_of_sendPacket 0736  
                   _EUSART1_FramingErrorHandler 00EE                                    _I2C1_DO_IDLE 0917  
                           _EUSART1_Receive_ISR 0C45                                    _I2C1_DO_RCEN 0957  
                   __end_of_I2C1_MasterSendNack 08DC                                 ??_int16ToString 002A  
                                    _INTCONbits 000B                              processCommand@data 0048  
                I2C1_SetAddressNackCallback@ptr 0025                            _I2C1_MasterGetRxData 08CA  
                         _I2C1_MasterSendTxData 0912                                  readINA220@buff 003B  
                                      intlevel1 0000                        __end_of_I2C1_MasterClose 08BE  
                          ?_EUSART1_Receive_ISR 0070                               writeINA220@regadd 0039  
                              ___lwmod@dividend 0022                         ?_PIN_MANAGER_Initialize 0070  
                      __end_of_I2C1_MasterStart 08C1                        __end_of_I2C1_MasterWrite 0908  
                       I2C1_WriteNBytes@address 0034          __end_of_EUSART1_SetOverrunErrorHandler 0912  
                _EUSART1_SetOverrunErrorHandler 090D                                ??_I2C1_DO_RX_ACK 0074  
                       _I2C1_CallbackReturnStop 08A7                   ?_TMR0_DefaultInterruptHandler 0070  
                          _I2C1_DO_ADDRESS_NACK 0D40                          ?_I2C1_MasterDisableIrq 0070  
                              _I2C1_WriteNBytes 0BD9                                     _TMR0_Reload 094B  
EUSART1_SetFramingErrorHandler@interruptHandler 0074                               ??_TxDeviceDisable 0074  
                               ?_processCommand 0048                             __end_of_writeINA220 0B9D  
                            _eusart1RxLastError 006A                           __end_of_getINA220Data 0467  
                                 __pstringtext1 1000                        __end_of_I2C1_SetCallback 0C1F  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ??_I2C1_DO_RESET 0074                                 ___lwmod@divisor 0020  
                          _I2C1_MasterOperation 0BBB                                 _TMR0_Initialize 0ACE  
                               ___lwmod@counter 0075                                    ___aldiv@sign 0029  
                         ?_I2C1_MasterGetRxData 0070                                     ??_stringlen 0074  
                                    _TX1STAbits 011E                                      _TMR2_Start 089F  
                                    _TMR4_Start 08AF                           ??_EUSART1_Receive_ISR 0074  
                __end_of_PIN_MANAGER_Initialize 0C94                   __end_of_rd1RegCompleteHandler 0A69  
                 __end_of_wr1RegCompleteHandler 0A8D                           _TMR2_InterruptHandler 0066  
                       ??_EUSART1_RxDataHandler 0070                           ?_I2C1_DO_ADDRESS_NACK 0070  
